Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.llm.LLMCollector", "reference/generated/torchrl.collectors.llm.RayLLMCollector", "reference/generated/torchrl.collectors.llm.vLLMUpdater", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.llm.ContentBase", "reference/generated/torchrl.data.llm.History", "reference/generated/torchrl.data.llm.TopKRewardSelector", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.llm.ChatEnv", "reference/generated/torchrl.envs.llm.DatasetChatEnv", "reference/generated/torchrl.envs.llm.GSM8KEnv", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion", "reference/generated/torchrl.envs.llm.GSM8KRewardParser", "reference/generated/torchrl.envs.llm.IFEvalEnv", "reference/generated/torchrl.envs.llm.IFEvalScoreData", "reference/generated/torchrl.envs.llm.IfEvalScorer", "reference/generated/torchrl.envs.llm.LLMEnv", "reference/generated/torchrl.envs.llm.LLMHashingEnv", "reference/generated/torchrl.envs.llm.MLGymWrapper", "reference/generated/torchrl.envs.llm.make_gsm8k_env", "reference/generated/torchrl.envs.llm.make_mlgym", "reference/generated/torchrl.envs.llm.transforms.AddThinkingPrompt", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.KLComputation", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter", "reference/generated/torchrl.envs.llm.transforms.RetrieveKL", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform", "reference/generated/torchrl.envs.llm.transforms.Tokenizer", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LLMMaskedCategorical", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.llm.ChatHistory", "reference/generated/torchrl.modules.llm.LLMOnDevice", "reference/generated/torchrl.modules.llm.LLMWrapperBase", "reference/generated/torchrl.modules.llm.LogProbs", "reference/generated/torchrl.modules.llm.Masks", "reference/generated/torchrl.modules.llm.Text", "reference/generated/torchrl.modules.llm.Tokens", "reference/generated/torchrl.modules.llm.TransformersWrapper", "reference/generated/torchrl.modules.llm.make_vllm_worker", "reference/generated/torchrl.modules.llm.stateless_init_process_group", "reference/generated/torchrl.modules.llm.vLLMWorker", "reference/generated/torchrl.modules.llm.vLLMWrapper", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.llm.GRPOLoss", "reference/generated/torchrl.objectives.llm.GRPOLossOutput", "reference/generated/torchrl.objectives.llm.MCAdvantage", "reference/generated/torchrl.objectives.llm.SFTLoss", "reference/generated/torchrl.objectives.llm.SFTLossOutput", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/llms", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/llm_browser", "tutorials/llm_wrappers", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.llm.LLMCollector.rst", "reference/generated/torchrl.collectors.llm.RayLLMCollector.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdater.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.llm.ContentBase.rst", "reference/generated/torchrl.data.llm.History.rst", "reference/generated/torchrl.data.llm.TopKRewardSelector.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.llm.ChatEnv.rst", "reference/generated/torchrl.envs.llm.DatasetChatEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion.rst", "reference/generated/torchrl.envs.llm.GSM8KRewardParser.rst", "reference/generated/torchrl.envs.llm.IFEvalEnv.rst", "reference/generated/torchrl.envs.llm.IFEvalScoreData.rst", "reference/generated/torchrl.envs.llm.IfEvalScorer.rst", "reference/generated/torchrl.envs.llm.LLMEnv.rst", "reference/generated/torchrl.envs.llm.LLMHashingEnv.rst", "reference/generated/torchrl.envs.llm.MLGymWrapper.rst", "reference/generated/torchrl.envs.llm.make_gsm8k_env.rst", "reference/generated/torchrl.envs.llm.make_mlgym.rst", "reference/generated/torchrl.envs.llm.transforms.AddThinkingPrompt.rst", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform.rst", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.KLComputation.rst", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform.rst", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion.rst", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveKL.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb.rst", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform.rst", "reference/generated/torchrl.envs.llm.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor.rst", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LLMMaskedCategorical.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.llm.ChatHistory.rst", "reference/generated/torchrl.modules.llm.LLMOnDevice.rst", "reference/generated/torchrl.modules.llm.LLMWrapperBase.rst", "reference/generated/torchrl.modules.llm.LogProbs.rst", "reference/generated/torchrl.modules.llm.Masks.rst", "reference/generated/torchrl.modules.llm.Text.rst", "reference/generated/torchrl.modules.llm.Tokens.rst", "reference/generated/torchrl.modules.llm.TransformersWrapper.rst", "reference/generated/torchrl.modules.llm.make_vllm_worker.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group.rst", "reference/generated/torchrl.modules.llm.vLLMWorker.rst", "reference/generated/torchrl.modules.llm.vLLMWrapper.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.llm.GRPOLoss.rst", "reference/generated/torchrl.objectives.llm.GRPOLossOutput.rst", "reference/generated/torchrl.objectives.llm.MCAdvantage.rst", "reference/generated/torchrl.objectives.llm.SFTLoss.rst", "reference/generated/torchrl.objectives.llm.SFTLossOutput.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/llms.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/llm_browser.rst", "tutorials/llm_wrappers.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiProcessedWeightUpdater", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "DistributedWeightUpdater", "RPCDataCollector", "RPCWeightUpdater", "RayCollector", "submitit_delayed_launcher", "LLMCollector", "RayLLMCollector", "vLLMUpdater", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "MinariExperienceReplay", "get_dataloader", "ContentBase", "History", "TopKRewardSelector", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "ChatEnv", "DatasetChatEnv", "GSM8KEnv", "GSM8KPrepareQuestion", "GSM8KRewardParser", "IFEvalEnv", "IFEvalScoreData", "IfEvalScorer", "LLMEnv", "LLMHashingEnv", "MLGymWrapper", "make_gsm8k_env", "make_mlgym", "AddThinkingPrompt", "BrowserTransform", "DataLoadingPrimer", "KLComputation", "KLRewardTransform", "MCPToolTransform", "PolicyVersion", "PythonInterpreter", "RetrieveKL", "RetrieveLogProb", "TemplateTransform", "Tokenizer", "as_nested_tensor", "as_padded_tensor", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalPolicySwitch", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LLMMaskedCategorical", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "ChatHistory", "LLMOnDevice", "LLMWrapperBase", "LogProbs", "Masks", "Text", "Tokens", "TransformersWrapper", "make_vllm_worker", "stateless_init_process_group", "vLLMWorker", "vLLMWrapper", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "GRPOLoss", "GRPOLossOutput", "MCAdvantage", "SFTLoss", "SFTLossOutput", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "LLM Interface", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "TorchRL LLM: Building Tool-Enabled Environments", "LLM Wrappers in TorchRL", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 113, 115, 116, 118, 120, 121, 122, 124, 126, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 149, 150, 156, 157, 159, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 227, 233, 235, 236, 239, 243, 248, 249, 253, 254, 255, 256, 258, 267, 268, 269, 270, 271, 273, 274, 275, 278, 281, 282, 283, 285, 288, 292, 293, 295, 296, 297, 298, 300, 305, 306, 308, 311, 313, 314, 315, 319, 320, 322, 330, 335, 336, 338, 342, 344, 345, 346, 347, 348, 349, 351, 353, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 375, 379, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 438, 440, 443, 447, 453, 454, 458, 459, 462, 469, 470, 471, 472, 475, 476, 477, 478, 482, 483, 486, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 500, 501, 503, 504], "open": [0, 5, 7, 62, 64, 71, 85, 100, 101, 106, 189, 286, 342, 345, 346, 347, 348, 351, 414, 417, 483, 494, 497, 498, 503], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "reinforc": [0, 3, 9, 154, 155, 183, 184, 225, 283, 290, 295, 296, 297, 298, 302, 330, 363, 380, 381, 383, 386, 387, 388, 390, 395, 396, 402, 403, 404, 405, 474, 476, 481, 483, 487, 488, 493, 495, 499, 502, 503], "learn": [0, 3, 7, 8, 9, 22, 56, 98, 112, 113, 138, 154, 155, 159, 162, 171, 183, 184, 190, 225, 283, 290, 295, 296, 297, 298, 302, 316, 323, 329, 330, 363, 380, 381, 382, 383, 386, 387, 388, 390, 394, 395, 396, 400, 401, 402, 403, 404, 405, 413, 474, 476, 478, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 499, 501, 502, 503, 504], "rl": [0, 1, 2, 3, 5, 8, 10, 15, 16, 18, 21, 29, 95, 147, 156, 183, 225, 267, 323, 349, 353, 357, 366, 374, 380, 382, 397, 398, 400, 402, 413, 449, 473, 475, 476, 477, 478, 479, 482, 483, 484, 490, 493, 497, 498, 500, 501, 504], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 22, 23, 25, 65, 81, 135, 136, 137, 146, 157, 181, 190, 474, 475, 477, 478, 480, 482, 483, 484, 486, 487, 488, 490, 497, 498, 499, 504], "pytorch": [0, 1, 2, 3, 29, 32, 98, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 188, 191, 192, 193, 225, 270, 271, 290, 306, 311, 322, 323, 458, 473, 475, 477, 479, 482, 484, 485, 489, 493, 497, 498, 499, 503, 504], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 18, 22, 23, 25, 29, 36, 43, 48, 56, 66, 67, 73, 78, 81, 102, 132, 135, 138, 142, 146, 150, 153, 154, 155, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 225, 246, 274, 282, 283, 285, 290, 310, 311, 329, 344, 349, 353, 370, 413, 415, 416, 447, 448, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 106, 107, 112, 113, 115, 119, 120, 121, 126, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 217, 218, 219, 221, 222, 224, 225, 228, 229, 231, 233, 235, 236, 237, 240, 243, 247, 248, 249, 253, 254, 258, 261, 265, 266, 267, 268, 272, 273, 274, 275, 276, 278, 280, 282, 283, 285, 286, 289, 291, 292, 293, 295, 305, 306, 308, 309, 310, 311, 313, 315, 316, 317, 319, 320, 321, 323, 330, 339, 341, 342, 344, 345, 346, 347, 348, 349, 353, 357, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 438, 440, 447, 448, 453, 470, 471, 472, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 95, 102, 115, 132, 133, 134, 135, 138, 141, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 243, 244, 245, 249, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 281, 282, 283, 285, 370, 398, 405, 413, 415, 416, 472, 476, 483, 484, 486, 487, 497, 498, 499, 501], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 115, 118, 119, 120, 121, 122, 124, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 243, 244, 245, 246, 249, 251, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 328, 329, 330, 331, 332, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 396, 397, 398, 400, 401, 402, 403, 405, 406, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 438, 439, 440, 449, 455, 458, 461, 462, 466, 468, 469, 472, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "pypi": [0, 2, 503], "see": [0, 1, 2, 3, 6, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 107, 113, 115, 120, 121, 132, 135, 138, 142, 145, 147, 149, 150, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 229, 231, 247, 253, 268, 271, 273, 274, 275, 278, 280, 282, 283, 284, 285, 290, 291, 292, 293, 306, 308, 309, 311, 313, 314, 320, 321, 322, 329, 331, 339, 340, 344, 349, 353, 356, 358, 360, 366, 369, 370, 382, 383, 394, 398, 400, 405, 413, 415, 416, 440, 447, 455, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 497, 498, 499, 501, 503, 504], "more": [0, 1, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 112, 113, 115, 126, 132, 135, 138, 141, 142, 143, 145, 146, 149, 150, 154, 155, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 271, 274, 278, 283, 284, 285, 286, 287, 288, 291, 302, 310, 311, 314, 322, 344, 349, 353, 357, 362, 363, 369, 370, 374, 380, 390, 398, 400, 413, 415, 416, 420, 425, 433, 447, 454, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500, 503, 504], "about": [0, 3, 5, 7, 9, 22, 23, 25, 26, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 81, 83, 86, 87, 88, 89, 90, 98, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 196, 204, 344, 349, 353, 477, 478, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 497, 498, 499, 501, 503, 504], "instruct": [0, 6, 7, 10, 28, 97, 101, 147, 185, 190, 235, 237, 476, 478, 482, 483, 484, 485, 494, 497, 498, 501], "dedic": [0, 1, 2, 3, 22, 23, 25, 27, 51, 70, 79, 80, 115, 162, 171, 358, 359, 360, 476, 477, 482, 487, 489, 490, 492, 496, 498], "section": [0, 2, 3, 4, 33, 138, 306, 311, 483, 486, 487, 492, 497, 498], "below": [0, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 86, 99, 102, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 231, 247, 253, 268, 273, 274, 275, 278, 280, 285, 292, 293, 306, 309, 311, 314, 320, 339, 344, 349, 353, 366, 369, 382, 400, 413, 415, 416, 455, 482, 483, 484, 485, 486, 487, 497, 499], "pip": [0, 10, 486, 487, 488, 489, 490, 491, 492, 494, 498, 503, 504], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 48, 49, 51, 52, 54, 56, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 84, 85, 92, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 109, 112, 113, 114, 115, 118, 120, 121, 129, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 222, 224, 225, 226, 227, 228, 232, 233, 236, 240, 243, 248, 249, 251, 253, 254, 257, 258, 261, 262, 267, 268, 269, 272, 273, 275, 277, 278, 280, 281, 282, 283, 285, 286, 292, 293, 299, 300, 302, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 341, 342, 344, 345, 346, 347, 348, 349, 353, 357, 361, 363, 365, 366, 367, 368, 370, 373, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 444, 449, 455, 462, 468, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 490, 491, 495, 496, 497, 498, 499, 500, 501, 503, 504], "python": [0, 1, 3, 5, 6, 7, 10, 15, 16, 27, 29, 30, 63, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 115, 158, 174, 175, 183, 203, 215, 306, 307, 308, 311, 312, 313, 317, 318, 476, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "first": [0, 1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 106, 108, 113, 120, 121, 126, 128, 132, 135, 138, 141, 142, 143, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 221, 222, 225, 226, 230, 231, 240, 247, 249, 253, 254, 270, 271, 275, 278, 283, 286, 293, 300, 306, 308, 310, 311, 313, 314, 317, 318, 320, 322, 325, 357, 361, 362, 363, 366, 367, 369, 370, 382, 392, 397, 398, 400, 413, 416, 439, 440, 457, 476, 477, 481, 482, 483, 484, 485, 486, 487, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "low": [0, 3, 37, 40, 67, 78, 83, 86, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 196, 210, 218, 228, 235, 243, 246, 268, 276, 337, 338, 339, 361, 363, 366, 370, 373, 482, 483, 484, 486, 497, 498, 499, 503], "high": [0, 3, 9, 37, 40, 62, 64, 71, 79, 85, 86, 100, 101, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 190, 191, 192, 193, 196, 210, 218, 228, 235, 243, 246, 248, 268, 276, 337, 338, 339, 342, 345, 346, 347, 348, 361, 363, 366, 370, 373, 414, 417, 420, 425, 433, 482, 483, 484, 495, 497, 498, 499, 501, 503], "level": [0, 2, 3, 4, 28, 40, 41, 49, 63, 68, 70, 75, 115, 141, 143, 199, 205, 225, 266, 274, 308, 310, 313, 397, 482, 483, 486, 490, 503], "abstract": [0, 1, 3, 8, 20, 82, 83, 95, 96, 130, 138, 250, 315, 424, 450, 459, 479, 484, 486, 499, 503], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 126, 128, 132, 135, 138, 139, 141, 142, 143, 149, 150, 153, 154, 155, 156, 159, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 217, 218, 220, 221, 222, 224, 225, 228, 229, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 248, 251, 253, 258, 261, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 285, 287, 289, 290, 298, 300, 305, 306, 307, 308, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 323, 326, 331, 334, 342, 344, 345, 346, 347, 348, 349, 352, 353, 356, 361, 362, 365, 366, 367, 369, 370, 371, 372, 373, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 438, 447, 448, 455, 458, 468, 472, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "intend": [0, 7, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 224, 235, 341, 398, 477, 503], "effici": [0, 1, 2, 4, 8, 17, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 306, 310, 323, 383, 476, 477, 482, 483, 484, 485, 486, 489, 490, 492, 496, 497, 498, 500, 501, 503], "modular": [0, 95, 200, 372, 476, 486, 501, 503], "document": [0, 2, 5, 7, 11, 22, 23, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 147, 150, 160, 161, 162, 163, 166, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 285, 310, 344, 349, 353, 413, 415, 416, 473, 476, 483, 485, 486, 487, 490, 493, 503], "properli": [0, 1, 3, 29, 86, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 204, 205, 216, 231, 308, 313, 420, 476, 484, 491, 497, 498, 499, 503], "test": [0, 3, 5, 29, 132, 133, 134, 135, 138, 142, 148, 149, 150, 154, 155, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 196, 198, 273, 278, 310, 453, 468, 484, 485, 486, 500, 503], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 113, 115, 118, 120, 121, 122, 126, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 148, 149, 150, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 216, 217, 218, 221, 222, 224, 225, 229, 230, 231, 233, 236, 237, 238, 243, 246, 247, 249, 251, 253, 258, 260, 261, 262, 265, 266, 267, 268, 270, 273, 274, 275, 278, 280, 281, 282, 283, 285, 287, 288, 289, 290, 295, 296, 297, 298, 299, 302, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 323, 327, 329, 330, 332, 333, 334, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 438, 440, 442, 445, 446, 447, 448, 449, 454, 468, 470, 471, 474, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 497, 498, 499, 500, 501, 503, 504], "code": [0, 3, 5, 7, 8, 15, 16, 67, 73, 132, 135, 138, 142, 147, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 200, 203, 253, 275, 278, 288, 306, 307, 311, 312, 366, 370, 372, 476, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504], "aim": [0, 2, 3, 7, 51, 74, 75, 253, 278, 280, 314, 461, 475, 477, 478, 482, 483, 503], "support": [0, 1, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 31, 43, 62, 64, 66, 71, 78, 85, 99, 100, 101, 106, 108, 122, 124, 128, 129, 131, 132, 133, 134, 135, 141, 143, 148, 157, 159, 162, 164, 168, 181, 189, 191, 197, 200, 207, 222, 225, 237, 243, 249, 268, 269, 272, 276, 283, 302, 327, 329, 338, 341, 342, 344, 345, 346, 347, 348, 349, 350, 353, 362, 363, 366, 369, 372, 390, 398, 413, 414, 416, 417, 420, 421, 422, 423, 445, 474, 477, 479, 484, 485, 487, 488, 494, 495, 498, 499, 501, 503], "research": [0, 7, 9, 154, 155, 288, 495, 503], "most": [0, 1, 2, 3, 7, 8, 15, 16, 56, 58, 112, 113, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 235, 281, 482, 484, 486, 487, 488, 489, 490, 491, 492, 499, 503, 504], "written": [0, 1, 2, 3, 29, 30, 45, 62, 63, 64, 66, 68, 69, 70, 71, 76, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 104, 106, 113, 115, 120, 121, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 189, 190, 191, 192, 193, 196, 216, 217, 218, 225, 237, 240, 245, 246, 261, 266, 269, 270, 275, 281, 285, 286, 291, 330, 342, 345, 346, 347, 348, 357, 366, 369, 370, 374, 380, 382, 397, 400, 402, 413, 414, 417, 419, 438, 439, 440, 476, 477, 478, 479, 482, 485, 486, 488, 496, 499, 503], "highli": [0, 2, 382, 400, 487, 503, 504], "wai": [0, 1, 2, 3, 4, 95, 98, 115, 126, 146, 184, 185, 188, 204, 225, 253, 256, 273, 274, 280, 281, 308, 311, 313, 400, 420, 421, 422, 423, 476, 477, 482, 483, 484, 486, 487, 489, 490, 496, 497, 498, 499, 500, 501, 503, 504], "easili": [0, 1, 2, 3, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 476, 478, 482, 483, 484, 487, 488, 489, 492, 497, 498, 503, 504], "swap": [0, 1, 3, 141, 281, 484, 486, 500, 503], "compon": [0, 1, 2, 3, 63, 67, 68, 69, 70, 79, 80, 95, 96, 97, 98, 106, 107, 108, 109, 115, 122, 124, 128, 184, 302, 332, 362, 363, 368, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 416, 418, 454, 458, 476, 482, 483, 484, 485, 486, 488, 489, 492, 494, 496, 497, 498, 499, 500, 503], "transform": [0, 1, 4, 8, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 43, 51, 56, 63, 65, 68, 69, 70, 72, 79, 80, 81, 95, 96, 97, 98, 101, 102, 103, 104, 111, 115, 124, 129, 132, 135, 138, 139, 142, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 291, 294, 295, 299, 302, 303, 308, 313, 328, 331, 332, 338, 340, 342, 345, 346, 347, 348, 349, 353, 361, 364, 365, 373, 376, 377, 379, 386, 399, 415, 416, 438, 440, 455, 472, 474, 481, 483, 485, 486, 488, 490, 491, 492, 493, 494, 500, 502], "them": [0, 2, 3, 7, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 36, 40, 41, 43, 48, 49, 63, 65, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 95, 96, 97, 98, 115, 126, 131, 132, 135, 138, 139, 142, 146, 150, 153, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 207, 233, 236, 243, 246, 268, 272, 275, 276, 282, 283, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 340, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 381, 383, 389, 396, 397, 401, 403, 405, 406, 421, 422, 423, 440, 476, 482, 483, 485, 486, 487, 488, 490, 491, 495, 496, 497, 498, 499, 500, 501, 503, 504], "write": [0, 2, 3, 8, 15, 16, 18, 21, 29, 32, 51, 56, 62, 63, 64, 65, 68, 69, 70, 71, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 102, 113, 115, 120, 124, 131, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 251, 252, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 279, 281, 282, 285, 342, 345, 346, 347, 348, 357, 369, 370, 372, 374, 383, 384, 385, 387, 388, 389, 396, 401, 403, 405, 406, 414, 415, 417, 419, 424, 440, 476, 477, 479, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504], "new": [0, 1, 2, 3, 4, 8, 15, 16, 18, 21, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 112, 113, 115, 119, 132, 135, 138, 142, 150, 157, 162, 163, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 222, 261, 265, 274, 275, 282, 283, 285, 300, 306, 308, 313, 330, 342, 344, 345, 346, 347, 348, 349, 353, 369, 370, 375, 380, 381, 382, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 414, 415, 416, 417, 418, 447, 476, 478, 482, 484, 487, 489, 495, 497, 498, 499, 503, 504], "ones": [0, 2, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 102, 120, 121, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 167, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 226, 229, 230, 233, 234, 236, 249, 253, 258, 265, 268, 274, 275, 278, 280, 283, 285, 290, 310, 317, 318, 329, 341, 344, 349, 353, 369, 380, 381, 382, 383, 384, 396, 397, 400, 401, 403, 405, 406, 413, 415, 416, 426, 476, 482, 484, 486, 495, 497, 498, 499, 501, 503, 504], "littl": [0, 1, 3, 81, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 275, 290, 380, 382, 397, 400, 402, 484, 485, 486, 490, 501, 503, 504], "effort": [0, 3, 499, 501, 503], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 115, 118, 119, 120, 121, 122, 124, 126, 128, 129, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 159, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 249, 252, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 438, 439, 447, 448, 449, 451, 453, 455, 458, 460, 461, 462, 468, 472, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "repo": [0, 6, 97, 225, 269, 278, 475, 498, 503], "attempt": [0, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 120, 121, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 285, 290, 344, 349, 353, 370, 385, 388, 396, 413, 415, 416, 418, 478, 489, 503], "align": [0, 306, 311, 503], "exist": [0, 1, 2, 3, 4, 22, 27, 29, 30, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 100, 101, 102, 106, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 226, 234, 273, 274, 275, 285, 286, 300, 342, 344, 345, 346, 347, 348, 349, 353, 370, 383, 403, 413, 414, 415, 416, 417, 462, 472, 497, 498, 503, 504], "ecosystem": [0, 486, 490, 503], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 100, 101, 102, 106, 108, 112, 113, 115, 118, 120, 126, 128, 132, 135, 138, 139, 142, 146, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 225, 247, 266, 267, 268, 269, 270, 272, 273, 274, 275, 285, 287, 306, 308, 311, 313, 319, 321, 338, 342, 344, 345, 346, 347, 348, 349, 353, 363, 365, 370, 380, 383, 397, 398, 400, 402, 413, 414, 415, 416, 417, 420, 440, 476, 478, 482, 483, 484, 485, 486, 487, 490, 491, 494, 496, 497, 498, 499, 500, 501, 503, 504], "dataset": [0, 47, 51, 62, 63, 64, 65, 70, 71, 72, 77, 79, 80, 84, 85, 95, 96, 97, 98, 99, 100, 101, 105, 113, 115, 118, 120, 121, 159, 183, 184, 185, 188, 189, 190, 191, 194, 282, 342, 345, 346, 347, 348, 414, 417, 440, 474, 476, 482, 483, 487, 500, 501, 503, 504], "pillar": [0, 503], "environ": [0, 2, 5, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 68, 73, 74, 75, 83, 85, 86, 87, 88, 89, 90, 102, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 218, 219, 221, 222, 224, 225, 226, 230, 231, 233, 234, 235, 236, 241, 247, 248, 249, 253, 254, 255, 258, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 281, 282, 283, 285, 286, 289, 291, 308, 313, 315, 316, 349, 353, 365, 387, 391, 415, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 448, 449, 451, 453, 461, 462, 463, 464, 468, 469, 470, 471, 472, 474, 475, 477, 478, 481, 486, 488, 489, 490, 491, 493, 500, 501, 502], "model": [0, 3, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 31, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 100, 101, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 233, 253, 268, 278, 280, 284, 285, 292, 293, 294, 299, 301, 314, 315, 316, 320, 321, 328, 331, 340, 342, 344, 345, 346, 347, 348, 349, 350, 353, 358, 359, 360, 364, 369, 375, 377, 380, 381, 382, 383, 385, 386, 387, 388, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 413, 414, 415, 416, 417, 418, 458, 463, 464, 465, 474, 475, 478, 479, 481, 484, 487, 490, 493, 495, 497, 498, 499, 501, 502, 504], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 178, 183, 184, 185, 188, 189, 190, 191, 192, 193, 195, 198, 199, 202, 204, 205, 207, 210, 217, 219, 222, 224, 225, 230, 233, 234, 236, 238, 240, 243, 245, 249, 255, 258, 265, 266, 272, 274, 275, 276, 281, 283, 285, 289, 290, 302, 305, 308, 313, 316, 319, 320, 330, 332, 341, 342, 344, 345, 346, 347, 348, 349, 351, 353, 356, 357, 362, 365, 366, 367, 369, 370, 372, 373, 374, 380, 381, 382, 383, 384, 385, 387, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 438, 440, 447, 449, 455, 458, 460, 463, 468, 470, 471, 472, 474, 477, 478, 479, 481, 485, 486, 487, 488, 489, 493, 494, 495, 499, 500, 501, 502, 504], "util": [0, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 32, 36, 43, 48, 56, 66, 67, 70, 72, 73, 78, 102, 120, 121, 132, 133, 134, 135, 138, 142, 148, 149, 150, 155, 162, 163, 164, 165, 166, 171, 172, 173, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 253, 258, 268, 280, 285, 288, 291, 292, 293, 299, 306, 308, 311, 313, 344, 349, 353, 376, 377, 378, 379, 398, 413, 415, 416, 468, 474, 480, 482, 484, 486, 488, 489, 490, 498, 499, 501, 503, 504], "e": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 106, 108, 112, 113, 126, 128, 132, 135, 138, 139, 142, 143, 150, 162, 163, 166, 171, 172, 173, 176, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 224, 226, 229, 230, 231, 232, 240, 243, 246, 247, 249, 253, 261, 268, 270, 273, 274, 275, 278, 280, 285, 286, 306, 308, 309, 311, 313, 316, 320, 332, 338, 339, 342, 344, 345, 346, 347, 348, 349, 351, 353, 356, 361, 363, 365, 366, 368, 369, 370, 380, 382, 383, 384, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 438, 449, 461, 471, 476, 477, 478, 483, 484, 486, 488, 489, 491, 495, 497, 498, 500, 501, 503, 504], "g": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 126, 132, 135, 138, 139, 142, 143, 150, 162, 163, 166, 171, 172, 173, 176, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 224, 226, 229, 230, 240, 243, 246, 249, 253, 261, 268, 270, 273, 274, 275, 278, 280, 285, 286, 306, 308, 309, 311, 312, 313, 316, 320, 338, 339, 342, 344, 345, 346, 347, 348, 349, 351, 353, 361, 366, 369, 370, 383, 403, 413, 414, 415, 416, 417, 419, 429, 430, 431, 432, 434, 435, 436, 437, 438, 471, 476, 477, 478, 483, 484, 486, 488, 491, 497, 498, 499, 500, 501, 503, 504], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 56, 63, 68, 69, 70, 72, 76, 79, 80, 95, 96, 97, 98, 102, 115, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 167, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 225, 258, 266, 274, 285, 290, 308, 313, 330, 344, 349, 353, 382, 397, 400, 413, 415, 455, 458, 460, 463, 464, 468, 470, 471, 474, 478, 479, 486, 501, 504], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 100, 101, 102, 105, 113, 115, 116, 118, 120, 121, 122, 127, 130, 131, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 225, 229, 233, 236, 243, 253, 265, 268, 273, 274, 275, 278, 280, 281, 282, 283, 285, 289, 292, 293, 306, 307, 310, 311, 312, 314, 316, 319, 320, 342, 344, 345, 346, 347, 348, 349, 353, 357, 362, 363, 366, 368, 369, 370, 374, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 444, 449, 461, 468, 469, 470, 471, 472, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 497, 498, 499, 500, 501, 503, 504], "etc": [0, 2, 3, 7, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 245, 265, 275, 285, 286, 314, 320, 338, 344, 349, 353, 413, 415, 416, 476, 478, 483, 484, 490, 501, 503, 504], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 115, 119, 122, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 217, 218, 221, 225, 230, 233, 236, 237, 245, 248, 249, 265, 266, 268, 272, 273, 274, 275, 282, 283, 285, 287, 290, 292, 293, 314, 317, 319, 320, 321, 330, 341, 344, 349, 353, 365, 371, 372, 380, 382, 397, 400, 402, 405, 409, 410, 413, 415, 416, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 449, 458, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497, 498, 499, 500, 501, 503, 504], "few": [0, 2, 8, 121, 142, 193, 440, 449, 476, 484, 485, 488, 497, 498, 501, 503, 504], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 37, 62, 64, 86, 132, 135, 138, 141, 142, 143, 144, 150, 162, 163, 166, 168, 171, 172, 173, 176, 177, 183, 184, 185, 188, 190, 191, 192, 193, 233, 236, 349, 353, 370, 374, 400, 442, 476, 477, 482, 484, 485, 494, 497, 498, 499, 503, 504], "possibl": [0, 2, 3, 4, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 107, 113, 120, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 229, 253, 268, 273, 274, 275, 278, 280, 285, 292, 293, 306, 307, 311, 312, 344, 349, 353, 369, 400, 413, 415, 416, 438, 453, 458, 476, 477, 482, 484, 485, 486, 488, 490, 491, 497, 498, 499, 501, 503, 504], "standard": [0, 2, 3, 58, 135, 249, 260, 282, 283, 287, 288, 289, 303, 316, 322, 323, 328, 361, 382, 397, 400, 405, 406, 420, 421, 422, 423, 482, 483, 487, 488, 498, 501, 503], "numpi": [0, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 243, 271, 276, 286, 458, 486, 499, 501, 503, 504], "common": [0, 2, 3, 4, 83, 132, 142, 148, 219, 237, 358, 359, 360, 364, 380, 381, 382, 383, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 468, 475, 476, 477, 478, 479, 482, 484, 488, 491, 496, 497, 498, 499, 500, 503, 504], "openai": [0, 7, 33, 141, 143, 150, 168, 192, 484, 499, 503, 504], "gym": [0, 1, 3, 4, 8, 15, 16, 18, 21, 27, 28, 29, 30, 68, 102, 132, 135, 138, 139, 141, 142, 143, 144, 146, 147, 150, 154, 155, 157, 158, 162, 163, 166, 168, 171, 172, 173, 176, 177, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 221, 225, 228, 237, 244, 245, 249, 251, 256, 258, 261, 268, 274, 281, 282, 285, 286, 415, 468, 475, 482, 483, 484, 485, 487, 491, 492, 499, 500, 501], "onli": [0, 1, 2, 3, 4, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 106, 108, 112, 113, 115, 120, 121, 128, 132, 135, 136, 137, 138, 141, 142, 143, 144, 146, 149, 150, 157, 158, 162, 163, 164, 165, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 221, 225, 226, 228, 229, 230, 231, 233, 235, 236, 240, 243, 247, 249, 253, 254, 258, 265, 266, 267, 268, 269, 273, 274, 275, 278, 280, 282, 283, 285, 286, 290, 310, 311, 313, 317, 319, 320, 344, 349, 353, 357, 361, 362, 366, 367, 369, 370, 371, 372, 380, 382, 383, 384, 388, 389, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 413, 415, 416, 420, 421, 422, 423, 424, 440, 447, 462, 476, 478, 479, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 494, 496, 497, 498, 499, 501, 503, 504], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 253, 254, 256, 257, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 332, 333, 334, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 353, 357, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 442, 445, 447, 449, 451, 452, 453, 454, 455, 456, 458, 462, 468, 470, 471, 472, 476, 477, 485, 487, 490, 497, 498, 499, 501, 503], "On": [0, 3, 7, 22, 23, 25, 27, 40, 307, 312, 476, 477, 483, 497, 498], "end": [0, 2, 3, 15, 16, 21, 29, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 102, 104, 113, 115, 119, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 237, 243, 251, 266, 267, 273, 275, 285, 292, 293, 306, 307, 311, 312, 315, 344, 349, 353, 365, 383, 403, 413, 415, 416, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "come": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 51, 56, 126, 132, 135, 138, 142, 149, 150, 153, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 233, 236, 356, 357, 358, 359, 360, 366, 374, 380, 382, 397, 400, 402, 440, 482, 483, 484, 485, 489, 490, 491, 492, 497, 498, 501, 503, 504], "set": [0, 1, 2, 3, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 106, 107, 108, 109, 115, 119, 122, 128, 132, 135, 138, 140, 142, 143, 149, 150, 154, 155, 156, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 215, 217, 219, 221, 222, 225, 226, 229, 233, 236, 243, 244, 245, 246, 253, 258, 266, 267, 268, 269, 273, 274, 275, 278, 280, 282, 283, 285, 286, 306, 308, 310, 311, 313, 315, 317, 319, 320, 327, 329, 330, 338, 342, 344, 345, 346, 347, 348, 349, 353, 356, 361, 369, 370, 382, 383, 389, 394, 397, 398, 400, 403, 413, 414, 415, 416, 417, 420, 424, 440, 448, 449, 453, 455, 464, 472, 475, 476, 477, 478, 480, 482, 483, 484, 485, 486, 488, 489, 490, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "re": [0, 2, 3, 8, 13, 22, 23, 25, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 102, 115, 119, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 240, 285, 313, 317, 318, 321, 344, 349, 353, 366, 370, 413, 415, 416, 447, 476, 479, 482, 484, 485, 487, 489, 494, 496, 497, 499, 503, 504], "usabl": [0, 479, 485, 503], "function": [0, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 100, 101, 102, 106, 107, 108, 109, 115, 122, 124, 128, 132, 135, 138, 139, 142, 143, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216, 217, 221, 222, 233, 236, 243, 245, 272, 273, 275, 276, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 317, 318, 319, 320, 321, 324, 325, 326, 328, 330, 333, 334, 336, 339, 341, 342, 344, 345, 346, 347, 348, 349, 353, 358, 359, 360, 361, 363, 365, 366, 368, 369, 370, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 458, 468, 474, 477, 482, 485, 486, 487, 488, 491, 494, 496, 499, 501, 504], "cost": [0, 2, 39, 107, 109, 380, 382, 397, 400, 402, 478, 482, 483, 486, 497, 498, 499, 501], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 113, 115, 116, 118, 120, 121, 124, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 148, 149, 150, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 168, 171, 172, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 289, 290, 293, 294, 295, 296, 297, 298, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 326, 328, 331, 333, 334, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 357, 358, 359, 360, 361, 365, 366, 368, 369, 370, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 444, 448, 458, 461, 463, 468, 469, 470, 471, 472, 474, 476, 477, 479, 482, 483, 484, 486, 488, 489, 491, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 43, 48, 56, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 81, 84, 85, 95, 100, 101, 102, 108, 112, 113, 116, 120, 128, 132, 135, 138, 139, 142, 146, 150, 153, 157, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 224, 225, 233, 236, 243, 268, 271, 273, 274, 282, 283, 285, 308, 313, 319, 320, 330, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 363, 368, 382, 400, 413, 414, 415, 416, 417, 474, 476, 479, 482, 483, 485, 486, 487, 494, 495, 497, 498, 499, 500, 501, 503, 504], "good": [0, 1, 4, 9, 112, 113, 162, 202, 476, 482, 484, 485, 486, 488, 498, 503, 504], "runtim": [0, 2, 3, 32, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 499], "perform": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 101, 102, 132, 135, 136, 137, 138, 141, 142, 143, 144, 149, 150, 162, 163, 166, 168, 171, 172, 173, 176, 177, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 233, 236, 243, 248, 270, 273, 275, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 321, 324, 325, 328, 329, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 382, 383, 392, 400, 403, 413, 415, 416, 453, 458, 476, 478, 482, 483, 484, 485, 486, 487, 490, 492, 495, 496, 497, 498, 499, 504], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 20, 22, 23, 25, 36, 43, 48, 56, 63, 66, 67, 68, 70, 72, 73, 78, 79, 80, 95, 97, 98, 102, 104, 113, 115, 120, 121, 124, 131, 132, 133, 134, 135, 138, 141, 142, 143, 148, 149, 150, 153, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 231, 266, 268, 282, 285, 291, 308, 313, 330, 344, 349, 353, 358, 359, 360, 370, 383, 389, 394, 398, 405, 413, 415, 416, 440, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 497, 498, 499, 500, 501, 503, 504], "read": [0, 2, 3, 7, 32, 40, 41, 45, 49, 63, 65, 68, 69, 70, 72, 75, 76, 79, 80, 95, 96, 97, 98, 102, 106, 107, 108, 109, 112, 115, 122, 124, 128, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 251, 252, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 277, 278, 279, 281, 282, 285, 291, 326, 357, 358, 359, 360, 362, 365, 366, 369, 370, 372, 374, 375, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 415, 416, 418, 420, 421, 422, 423, 424, 440, 453, 458, 476, 477, 482, 483, 484, 486, 487, 488, 496, 497, 498, 499, 500, 503, 504], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 17, 27, 32, 183, 197, 476, 479, 482, 487, 490, 494, 496, 500, 504], "beyond": [0, 51, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 486], "api": [0, 1, 2, 3, 5, 32, 40, 41, 43, 49, 51, 66, 75, 78, 83, 135, 138, 164, 165, 168, 193, 195, 253, 280, 282, 283, 290, 344, 349, 353, 413, 416, 477, 478, 479, 486, 487, 488, 489, 490, 491, 495, 497, 498, 499, 501, 503, 504], "check": [0, 2, 3, 4, 5, 6, 7, 9, 15, 16, 18, 21, 22, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 91, 93, 102, 103, 104, 111, 120, 132, 135, 138, 139, 141, 142, 143, 150, 156, 162, 163, 166, 171, 172, 173, 178, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 226, 231, 239, 245, 254, 268, 271, 275, 285, 286, 300, 344, 349, 352, 353, 357, 362, 363, 366, 367, 368, 369, 370, 383, 394, 405, 413, 415, 416, 440, 473, 476, 477, 478, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 503, 504], "paper": [0, 133, 134, 136, 137, 144, 148, 149, 154, 155, 157, 158, 168, 176, 177, 253, 278, 280, 293, 306, 331, 340, 387, 395, 405, 482, 484, 497, 498], "releas": [0, 4, 7, 10, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416], "sync": [0, 1, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 132, 202, 460, 468, 476, 479, 482], "so": [0, 1, 2, 3, 4, 6, 7, 10, 11, 36, 40, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 115, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 268, 273, 282, 285, 290, 342, 344, 345, 346, 347, 348, 349, 353, 371, 372, 413, 414, 415, 416, 417, 420, 440, 476, 482, 484, 485, 489, 492, 497, 498, 499, 504], "make": [0, 1, 2, 3, 4, 7, 11, 36, 40, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 78, 83, 85, 95, 97, 100, 101, 102, 115, 118, 122, 124, 131, 132, 135, 138, 142, 143, 146, 147, 149, 150, 152, 158, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 218, 231, 238, 246, 249, 253, 254, 258, 262, 266, 270, 274, 278, 285, 288, 291, 306, 307, 308, 311, 312, 313, 319, 320, 322, 342, 344, 345, 346, 347, 348, 349, 353, 362, 370, 380, 382, 397, 400, 402, 413, 414, 415, 416, 417, 420, 421, 422, 423, 438, 455, 464, 472, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "sure": [0, 1, 3, 4, 7, 43, 102, 122, 135, 142, 146, 186, 187, 188, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 231, 258, 274, 285, 362, 415, 472, 477, 482, 484, 485, 486, 489, 497, 498, 499, 501, 503, 504], "alwai": [0, 2, 3, 15, 16, 25, 29, 36, 37, 43, 48, 56, 66, 67, 73, 78, 83, 86, 95, 99, 102, 103, 104, 111, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 245, 248, 270, 282, 283, 285, 310, 344, 349, 352, 353, 390, 398, 413, 415, 416, 477, 478, 483, 484, 485, 486, 497, 498, 499, 501], "enjoi": [0, 2, 3, 490], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 157, 160, 161, 164, 165, 455, 484, 497, 498, 499, 503], "featur": [0, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 36, 43, 58, 60, 66, 78, 83, 84, 98, 113, 120, 121, 132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 222, 225, 240, 243, 245, 251, 268, 269, 277, 282, 288, 292, 293, 303, 304, 306, 307, 308, 311, 312, 313, 314, 319, 322, 323, 344, 349, 353, 370, 377, 380, 382, 397, 400, 402, 413, 416, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 472, 476, 477, 478, 482, 483, 484, 485, 486, 488, 489, 490, 492, 495, 499, 501, 503, 504], "recent": [0, 7, 200, 281, 283, 286, 504], "version": [0, 1, 2, 3, 6, 14, 17, 19, 20, 24, 26, 29, 30, 31, 35, 36, 38, 41, 43, 44, 48, 49, 50, 53, 55, 56, 59, 61, 62, 64, 66, 67, 72, 73, 78, 87, 88, 89, 90, 102, 120, 132, 135, 138, 141, 142, 143, 144, 150, 157, 158, 162, 163, 164, 166, 168, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 225, 272, 281, 282, 283, 285, 286, 288, 308, 313, 321, 327, 344, 349, 353, 360, 380, 382, 397, 398, 400, 402, 403, 413, 415, 416, 420, 423, 474, 475, 477, 478, 482, 484, 485, 486, 487, 489, 492, 497, 498, 499, 500, 504], "although": [0, 1, 3, 8, 27, 36, 43, 48, 66, 67, 73, 78, 86, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 478, 479, 482, 483, 490, 501], "core": [0, 2, 3, 8, 29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 112, 113, 115, 183, 479, 485, 488, 503], "guarante": [0, 2, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 106, 107, 108, 109, 122, 124, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 282, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 370, 413, 414, 415, 416, 417, 490], "backward": [0, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 283, 285, 306, 307, 311, 312, 329, 344, 349, 353, 370, 380, 381, 383, 384, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 415, 416, 482, 484, 485, 486, 489, 490, 492, 497, 498, 499], "compat": [0, 2, 3, 7, 15, 16, 18, 32, 36, 43, 48, 56, 66, 67, 73, 78, 97, 102, 107, 109, 115, 118, 120, 121, 122, 126, 132, 135, 138, 142, 144, 150, 159, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 266, 278, 282, 283, 285, 286, 306, 307, 308, 311, 312, 313, 344, 349, 353, 367, 380, 381, 383, 384, 385, 387, 388, 389, 396, 398, 400, 401, 402, 403, 405, 406, 409, 413, 415, 416, 420, 476, 482, 485, 494, 501], "2": [0, 1, 2, 3, 8, 9, 10, 15, 16, 18, 27, 28, 29, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 101, 102, 106, 108, 112, 113, 115, 120, 121, 126, 128, 132, 133, 134, 135, 138, 139, 142, 148, 149, 150, 153, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 217, 221, 222, 224, 226, 229, 230, 231, 233, 234, 235, 236, 245, 246, 249, 251, 253, 255, 258, 261, 265, 266, 267, 268, 273, 274, 275, 278, 280, 282, 283, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 328, 329, 330, 338, 341, 344, 349, 350, 353, 361, 362, 363, 365, 369, 373, 374, 380, 381, 382, 383, 384, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 415, 416, 419, 420, 421, 422, 423, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 449, 476, 477, 478, 481, 482, 483, 484, 485, 486, 488, 489, 496, 497, 498, 499, 501, 502, 503, 504], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 21, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 112, 113, 115, 120, 121, 128, 132, 133, 134, 135, 138, 141, 142, 144, 145, 148, 149, 150, 156, 157, 158, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 326, 329, 330, 333, 334, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 352, 353, 357, 361, 363, 368, 369, 370, 372, 373, 376, 377, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 449, 456, 468, 472, 476, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 20, 25, 26, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 97, 98, 101, 107, 142, 162, 171, 191, 193, 246, 253, 256, 280, 344, 349, 353, 383, 386, 398, 413, 416, 478, 479, 482, 483, 484, 485, 488, 490, 501, 503, 504], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 115, 118, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 301, 302, 305, 308, 313, 315, 316, 319, 320, 330, 331, 332, 340, 341, 342, 344, 345, 346, 347, 348, 349, 353, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 438, 439, 449, 453, 454, 455, 457, 458, 474, 476, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 504], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 106, 185, 197, 203, 245, 255, 273, 274, 283, 344, 349, 353, 358, 359, 360, 369, 388, 396, 405, 474, 482, 497, 499, 503], "willing": 0, "contribut": [0, 2, 317], "cd": [0, 7], "path": [0, 3, 6, 7, 36, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 115, 123, 129, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 174, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 253, 280, 285, 316, 342, 344, 345, 346, 347, 348, 349, 353, 413, 414, 415, 416, 417, 442, 447, 458, 479, 483, 486, 492, 497], "root": [0, 2, 3, 40, 41, 49, 51, 63, 68, 70, 75, 85, 95, 96, 97, 98, 103, 104, 111, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 225, 247, 269, 270, 308, 309, 313, 338, 339, 420, 478, 485, 487, 497, 498, 499, 501, 504], "http": [0, 2, 5, 6, 7, 10, 15, 16, 22, 23, 25, 33, 63, 81, 95, 98, 112, 113, 133, 134, 136, 137, 144, 146, 148, 149, 154, 155, 157, 158, 159, 160, 161, 164, 165, 168, 174, 175, 176, 177, 190, 225, 253, 278, 288, 294, 295, 296, 297, 298, 299, 302, 303, 304, 311, 316, 317, 318, 323, 324, 325, 329, 330, 331, 333, 334, 340, 363, 380, 381, 383, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 420, 425, 433, 473, 493, 494, 500, 503], "github": [0, 2, 5, 6, 7, 10, 22, 23, 25, 33, 95, 98, 133, 134, 136, 137, 141, 144, 148, 149, 154, 155, 157, 158, 160, 161, 164, 165, 168, 174, 175, 176, 177, 222, 225, 278, 288, 488, 492, 494, 497, 498, 503], "com": [0, 2, 5, 6, 7, 10, 22, 23, 25, 33, 133, 134, 136, 137, 144, 146, 148, 149, 154, 155, 157, 158, 160, 161, 164, 165, 168, 174, 175, 176, 177, 225, 288, 494, 503], "setup": [0, 1, 7, 133, 134, 146, 148, 149, 174, 204, 205, 416], "py": [0, 3, 33, 141, 143, 215, 225, 300, 310, 331, 340, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "develop": [0, 3, 4, 7, 51, 146, 349, 353, 476, 482, 495, 503], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 119, 120, 122, 126, 127, 128, 129, 130, 132, 135, 138, 140, 142, 144, 145, 147, 150, 162, 163, 166, 167, 168, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 216, 218, 220, 221, 222, 224, 225, 228, 230, 231, 235, 241, 245, 247, 253, 254, 256, 263, 268, 270, 273, 274, 275, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 302, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317, 318, 320, 321, 323, 329, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 361, 362, 363, 365, 366, 367, 370, 372, 373, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 409, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 438, 441, 442, 445, 447, 448, 451, 458, 460, 468, 474, 476, 478, 481, 482, 484, 486, 488, 489, 490, 493, 494, 499, 502, 504], "seri": [0, 2, 3, 7, 8, 60, 105, 116, 126, 127, 130, 131, 171, 248, 274, 440, 477, 478, 482, 483, 484, 491, 492, 497, 498, 501, 504], "quick": [0, 95, 486], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 97, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 224, 243, 246, 269, 274, 285, 288, 400, 415, 475, 477, 478, 482, 483, 484, 485, 488, 492, 494, 495, 497, 498, 499, 501, 503, 504], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 113, 115, 116, 118, 119, 120, 121, 126, 128, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 149, 150, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 216, 217, 218, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 243, 245, 246, 247, 248, 249, 253, 254, 257, 258, 261, 262, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 280, 282, 283, 285, 286, 291, 292, 293, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 330, 341, 342, 344, 345, 346, 347, 348, 349, 353, 357, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 434, 435, 436, 437, 438, 444, 447, 448, 454, 455, 458, 460, 462, 468, 472, 475, 476, 478, 482, 483, 484, 485, 486, 487, 489, 491, 492, 494, 496, 497, 498, 499, 501, 503, 504], "hurri": [0, 487], "last": [0, 1, 2, 3, 4, 15, 16, 18, 21, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 97, 119, 120, 121, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 157, 158, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 196, 204, 210, 218, 221, 224, 229, 230, 240, 247, 249, 254, 267, 269, 271, 281, 286, 287, 292, 293, 305, 306, 308, 311, 313, 314, 317, 318, 324, 335, 338, 341, 361, 365, 370, 383, 420, 422, 423, 476, 483, 484, 485, 486, 487, 488, 494, 497, 498, 499, 500, 501, 503, 504], "item": [0, 2, 3, 8, 15, 30, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 107, 113, 115, 119, 126, 218, 239, 274, 283, 317, 318, 384, 385, 387, 416, 449, 476, 478, 479, 482, 484, 485, 489, 490, 494, 497, 498, 499, 501], "navig": [0, 197, 494, 498], "previou": [0, 3, 4, 10, 56, 63, 68, 69, 70, 72, 79, 80, 95, 96, 97, 98, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 217, 240, 268, 285, 306, 311, 334, 361, 476, 484, 485, 486, 487, 488, 492, 499, 504], "whenev": [0, 1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 70, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 102, 112, 113, 120, 121, 136, 137, 141, 143, 144, 154, 155, 168, 176, 177, 184, 185, 186, 187, 188, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 240, 244, 274, 275, 281, 285, 344, 349, 353, 398, 413, 415, 416, 420, 421, 422, 423, 438, 460, 477, 491, 494, 501], "want": [0, 1, 2, 3, 6, 7, 8, 18, 29, 43, 66, 78, 121, 184, 185, 188, 198, 225, 249, 329, 344, 349, 353, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 477, 482, 483, 484, 485, 486, 487, 489, 490, 491, 497, 498, 499, 500, 501, 503, 504], "ted": [0, 45, 57, 76, 77, 95, 97, 98, 103, 104, 111, 474, 481, 493, 502], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 29, 30, 36, 40, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 83, 85, 95, 96, 97, 98, 100, 101, 102, 115, 120, 121, 126, 132, 133, 134, 135, 138, 142, 146, 148, 149, 150, 154, 155, 157, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 229, 230, 243, 247, 253, 266, 268, 271, 272, 273, 274, 275, 278, 280, 282, 283, 285, 287, 290, 292, 293, 300, 305, 308, 313, 318, 319, 320, 323, 329, 331, 338, 340, 342, 344, 345, 346, 347, 348, 349, 353, 358, 360, 363, 365, 366, 369, 370, 373, 381, 382, 383, 388, 394, 396, 397, 398, 400, 403, 405, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 438, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "modul": [0, 1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 43, 48, 56, 66, 67, 72, 73, 78, 102, 126, 132, 133, 134, 135, 138, 142, 150, 153, 156, 159, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 224, 229, 235, 237, 243, 245, 253, 254, 267, 268, 273, 274, 275, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 411, 413, 415, 416, 418, 420, 421, 422, 423, 424, 438, 458, 465, 468, 474, 478, 479, 481, 483, 484, 487, 489, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 502], "optim": [0, 1, 2, 8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 102, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 289, 310, 316, 322, 323, 329, 338, 344, 349, 353, 381, 383, 398, 399, 400, 403, 410, 413, 415, 416, 453, 454, 458, 468, 476, 478, 479, 481, 484, 485, 486, 487, 488, 490, 493, 495, 497, 498, 499, 502], "collect": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 51, 56, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 119, 132, 135, 138, 142, 150, 162, 163, 166, 168, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 198, 202, 222, 225, 240, 249, 253, 280, 330, 365, 381, 384, 387, 389, 401, 403, 405, 406, 440, 449, 455, 458, 460, 461, 462, 468, 476, 479, 481, 482, 485, 486, 487, 488, 489, 492, 493, 497, 498, 499, 500, 501, 502, 503, 504], "storag": [0, 1, 8, 15, 16, 18, 21, 29, 36, 43, 45, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 82, 85, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 121, 123, 124, 125, 126, 128, 129, 132, 135, 138, 140, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 224, 225, 233, 236, 258, 285, 342, 344, 345, 346, 347, 348, 349, 353, 382, 397, 400, 413, 414, 415, 416, 417, 474, 476, 479, 481, 483, 484, 485, 486, 487, 489, 492, 493, 497, 498, 500, 502], "log": [0, 3, 4, 8, 11, 72, 199, 200, 204, 205, 300, 301, 302, 310, 317, 318, 326, 338, 339, 344, 349, 353, 362, 363, 366, 370, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 406, 413, 416, 418, 447, 451, 452, 453, 458, 468, 476, 477, 478, 479, 481, 482, 483, 484, 487, 488, 492, 493, 497, 498, 499, 502, 503], "your": [0, 1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 146, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 283, 285, 344, 349, 353, 370, 382, 400, 413, 415, 416, 448, 472, 474, 475, 477, 478, 481, 483, 484, 485, 487, 488, 489, 490, 491, 493, 495, 497, 498, 501, 502, 503], "own": [0, 1, 15, 16, 21, 27, 28, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 440, 474, 478, 481, 483, 484, 487, 493, 497, 498, 499, 502], "train": [0, 1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 31, 33, 36, 39, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 95, 99, 100, 101, 102, 112, 113, 132, 135, 138, 142, 147, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 233, 241, 253, 267, 272, 275, 278, 280, 285, 287, 288, 290, 295, 297, 305, 310, 330, 342, 344, 345, 346, 347, 348, 349, 351, 353, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 458, 460, 468, 474, 476, 477, 479, 481, 483, 487, 490, 491, 493, 500, 501, 502, 503, 504], "loop": [0, 1, 8, 18, 29, 62, 64, 71, 85, 100, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 287, 305, 329, 330, 342, 345, 346, 347, 348, 381, 383, 389, 396, 400, 401, 403, 405, 406, 414, 417, 420, 421, 422, 423, 458, 476, 478, 479, 481, 482, 483, 487, 489, 490, 491, 493, 496, 501, 502, 503], "ppo": [0, 1, 4, 8, 366, 370, 382, 397, 400, 413, 474, 477, 481, 482, 483, 486, 488, 489, 493, 497, 502], "pendulum": [0, 3, 15, 16, 18, 21, 27, 28, 29, 30, 68, 102, 126, 132, 135, 136, 137, 138, 139, 141, 142, 143, 150, 157, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 228, 229, 231, 238, 244, 245, 249, 256, 258, 262, 263, 266, 268, 269, 270, 273, 274, 275, 276, 282, 283, 285, 291, 308, 313, 415, 468, 477, 481, 483, 484, 487, 488, 489, 493, 502, 503, 504], "introduct": [0, 478, 481, 487, 493, 497, 498, 502, 504], "multi": [0, 1, 7, 9, 15, 16, 21, 36, 43, 48, 56, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 102, 103, 104, 111, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 246, 275, 285, 306, 308, 311, 313, 314, 319, 320, 321, 344, 349, 353, 365, 370, 413, 415, 416, 418, 420, 421, 422, 423, 474, 476, 481, 482, 483, 484, 485, 487, 488, 493, 499, 502, 503], "agent": [0, 9, 69, 74, 75, 147, 153, 154, 155, 160, 161, 164, 165, 169, 170, 174, 175, 176, 177, 179, 197, 246, 265, 266, 267, 317, 318, 319, 320, 321, 323, 331, 340, 382, 397, 400, 418, 474, 481, 487, 493, 499, 502], "env": [0, 1, 2, 5, 6, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 30, 36, 40, 43, 45, 48, 51, 56, 66, 67, 68, 72, 73, 76, 78, 85, 95, 96, 97, 98, 101, 102, 115, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 291, 308, 313, 315, 316, 342, 344, 345, 346, 347, 348, 349, 353, 365, 369, 398, 413, 415, 416, 438, 439, 440, 448, 462, 463, 464, 468, 470, 471, 472, 474, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 500, 501, 502], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 120, 121, 126, 128, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 299, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 326, 328, 329, 330, 331, 332, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 433, 438, 440, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 466, 468, 472, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 504], "pretrain": [0, 481, 493, 502], "recurr": [0, 2, 224, 306, 307, 308, 311, 313, 334, 356, 420, 481, 483, 488, 493, 501, 502], "dqn": [0, 2, 95, 218, 237, 293, 302, 362, 363, 380, 381, 383, 384, 385, 387, 389, 390, 391, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 413, 416, 418, 465, 474, 477, 481, 486, 488, 489, 492, 493, 502], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 56, 68, 76, 102, 132, 133, 134, 135, 138, 142, 150, 156, 162, 163, 166, 167, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 230, 235, 245, 247, 267, 270, 274, 285, 287, 290, 291, 302, 305, 308, 313, 319, 320, 323, 330, 332, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 373, 380, 381, 382, 383, 384, 388, 389, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 415, 416, 453, 460, 463, 464, 468, 470, 471, 474, 477, 479, 481, 483, 487, 489, 490, 493, 495, 500, 501, 502, 503, 504], "replai": [0, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 56, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 102, 112, 113, 114, 115, 116, 117, 119, 121, 122, 124, 126, 127, 131, 224, 225, 235, 254, 258, 268, 274, 285, 383, 384, 385, 387, 388, 389, 396, 401, 403, 405, 406, 415, 455, 458, 466, 468, 474, 476, 478, 479, 481, 486, 493, 499, 500, 502], "buffer": [0, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 131, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 224, 225, 229, 234, 235, 243, 253, 254, 258, 268, 273, 274, 275, 278, 280, 285, 287, 330, 342, 344, 345, 346, 347, 348, 349, 353, 361, 369, 372, 382, 383, 384, 385, 387, 388, 389, 396, 397, 400, 401, 403, 405, 406, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 455, 458, 466, 468, 474, 476, 478, 479, 481, 486, 491, 493, 499, 500, 502, 504], "export": [0, 6, 7, 481, 493, 502], "llm": [0, 2, 29, 30, 31, 72, 84, 99, 100, 101, 102, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 310, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 413, 414, 415, 416, 417, 474, 481, 493, 502], "build": [0, 1, 2, 3, 7, 32, 36, 40, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 83, 95, 96, 97, 98, 102, 115, 132, 133, 134, 135, 138, 142, 143, 144, 148, 149, 150, 154, 155, 157, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 258, 282, 283, 285, 289, 316, 344, 349, 353, 364, 366, 370, 413, 415, 416, 458, 465, 466, 467, 476, 477, 478, 479, 481, 484, 485, 486, 488, 489, 490, 491, 493, 497, 498, 499, 500, 502, 503, 504], "tool": [0, 1, 2, 3, 5, 101, 183, 197, 201, 203, 476, 477, 478, 481, 485, 487, 493, 497, 499, 501, 502, 504], "enabl": [0, 2, 7, 8, 97, 106, 108, 119, 128, 183, 197, 222, 308, 313, 330, 344, 349, 353, 365, 438, 440, 453, 476, 481, 484, 487, 493, 497, 498, 499, 501, 502], "competit": [0, 3, 154, 155, 481, 493, 498, 502], "ddpg": [0, 295, 296, 297, 298, 384, 395, 404, 474, 477, 481, 483, 489, 493, 498, 502], "task": [0, 2, 3, 9, 72, 74, 75, 84, 132, 135, 136, 137, 138, 142, 145, 150, 154, 155, 162, 163, 164, 165, 166, 168, 171, 172, 173, 176, 177, 183, 184, 185, 188, 190, 191, 192, 193, 195, 253, 266, 275, 278, 280, 388, 396, 474, 481, 482, 483, 484, 485, 487, 488, 493, 494, 497, 498, 499, 502, 504], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 160, 161, 162, 163, 166, 171, 172, 173, 176, 183, 184, 185, 188, 191, 192, 193, 198, 213, 247, 268, 283, 299, 308, 313, 361, 380, 382, 398, 400, 402, 413, 416, 440, 458, 474, 478, 479, 481, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 497, 498, 501, 502, 503], "object": [0, 2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 36, 40, 43, 48, 56, 58, 62, 64, 66, 67, 71, 73, 78, 83, 84, 85, 100, 101, 102, 106, 107, 108, 109, 115, 118, 122, 124, 128, 131, 132, 135, 138, 142, 148, 150, 162, 163, 166, 167, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 233, 236, 237, 243, 246, 249, 253, 273, 274, 275, 278, 282, 283, 285, 308, 313, 316, 319, 320, 331, 338, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 366, 369, 370, 371, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 462, 463, 464, 467, 468, 472, 474, 477, 479, 481, 483, 484, 485, 486, 490, 492, 493, 495, 497, 498, 499, 501, 502, 504], "loss": [0, 3, 8, 64, 237, 310, 317, 329, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 413, 416, 418, 419, 420, 454, 458, 465, 468, 476, 478, 479, 481, 486, 487, 489, 490, 491, 493, 499, 501, 502], "trainer": [0, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 416, 418, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 481, 482, 493, 502], "exampl": [0, 1, 2, 4, 9, 10, 15, 16, 18, 21, 22, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 84, 85, 86, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 112, 113, 115, 120, 121, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 326, 328, 329, 330, 331, 332, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 377, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 407, 408, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 426, 438, 440, 448, 449, 450, 451, 452, 454, 455, 456, 457, 460, 468, 474, 477, 478, 479, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 504], "packag": [0, 6, 7, 10, 215, 474, 475, 494, 504], "batch": [0, 2, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 32, 40, 56, 58, 60, 63, 65, 68, 69, 70, 72, 79, 80, 81, 83, 95, 96, 97, 98, 99, 102, 106, 107, 108, 109, 113, 114, 115, 119, 120, 121, 126, 128, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 156, 157, 159, 160, 161, 162, 163, 166, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 222, 225, 229, 231, 240, 247, 249, 251, 254, 258, 265, 268, 270, 274, 275, 277, 281, 282, 283, 285, 288, 300, 306, 307, 308, 310, 311, 312, 313, 317, 318, 319, 320, 321, 322, 326, 330, 331, 337, 341, 349, 353, 356, 365, 369, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 449, 452, 455, 456, 457, 458, 460, 470, 471, 472, 474, 476, 477, 478, 479, 483, 484, 485, 486, 487, 490, 492, 494, 496, 497, 498, 500, 503, 504], "size": [0, 2, 15, 16, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 119, 120, 121, 122, 128, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 218, 222, 224, 225, 226, 229, 232, 233, 236, 237, 238, 240, 243, 246, 247, 251, 253, 255, 256, 258, 262, 264, 265, 266, 268, 270, 271, 274, 275, 276, 277, 280, 282, 285, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 340, 341, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 374, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 440, 449, 455, 474, 476, 477, 478, 483, 484, 485, 486, 487, 488, 490, 494, 497, 498, 499, 504], "copi": [0, 2, 3, 14, 17, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 106, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 221, 225, 243, 256, 267, 273, 274, 275, 282, 283, 285, 286, 308, 313, 321, 342, 344, 345, 346, 347, 348, 349, 353, 361, 383, 398, 403, 413, 414, 415, 416, 417, 420, 438, 474, 476, 478, 482, 483, 485, 487, 497, 501, 503], "weight": [0, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 63, 66, 67, 72, 73, 78, 102, 112, 113, 115, 118, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 243, 246, 253, 268, 273, 274, 275, 278, 280, 285, 306, 307, 308, 311, 312, 313, 319, 321, 323, 344, 349, 352, 353, 369, 380, 381, 382, 383, 389, 392, 400, 403, 405, 413, 415, 416, 460, 467, 474, 476, 477, 479, 482, 483, 484, 496, 499, 501, 503], "synchron": [0, 3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 62, 64, 71, 85, 100, 101, 157, 189, 342, 345, 346, 347, 348, 414, 417, 470, 471, 474, 476, 483, 484, 497], "distribut": [0, 2, 3, 4, 9, 10, 14, 17, 20, 22, 23, 24, 25, 26, 27, 28, 31, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 135, 164, 165, 202, 245, 249, 283, 287, 289, 300, 301, 302, 303, 309, 310, 316, 317, 318, 326, 327, 328, 329, 333, 334, 337, 338, 339, 344, 349, 351, 353, 361, 362, 363, 366, 370, 371, 380, 381, 382, 383, 388, 389, 390, 396, 397, 400, 401, 402, 403, 405, 406, 413, 474, 476, 478, 479, 483, 484, 486, 488, 490, 497, 498, 499, 503, 504], "interoper": [0, 15, 16, 474], "run": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 43, 48, 56, 66, 67, 68, 73, 78, 95, 102, 113, 120, 121, 132, 133, 134, 135, 136, 137, 138, 141, 142, 148, 149, 150, 156, 157, 158, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 243, 248, 249, 265, 273, 274, 275, 282, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 370, 371, 372, 373, 376, 383, 389, 403, 413, 415, 416, 440, 447, 453, 470, 471, 472, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 488, 489, 490, 491, 492, 494, 497, 498, 499, 503], "asynchron": [0, 3, 9, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 342, 344, 345, 346, 347, 348, 349, 353, 369, 380, 413, 414, 415, 416, 417, 470, 474, 482, 483, 484], "singl": [0, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 40, 41, 43, 46, 48, 49, 51, 54, 56, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 85, 95, 96, 97, 98, 100, 101, 102, 107, 115, 121, 126, 132, 135, 138, 141, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 225, 226, 246, 253, 258, 268, 273, 275, 280, 285, 292, 293, 306, 307, 308, 311, 312, 313, 314, 320, 342, 344, 345, 346, 347, 348, 349, 353, 368, 372, 381, 382, 383, 385, 387, 389, 390, 396, 397, 400, 401, 403, 405, 406, 410, 413, 414, 415, 416, 417, 420, 421, 422, 423, 429, 430, 431, 432, 434, 435, 436, 437, 438, 472, 474, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 496, 497, 498, 499, 500, 501, 503], "node": [0, 2, 20, 22, 23, 25, 27, 28, 40, 41, 49, 51, 62, 64, 71, 75, 85, 100, 101, 150, 189, 192, 273, 342, 345, 346, 347, 348, 351, 414, 417, 474, 490, 503], "helper": [0, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 482, 483, 485, 497, 499], "compos": [0, 3, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 114, 115, 116, 117, 126, 127, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 230, 231, 243, 257, 273, 274, 275, 282, 285, 344, 349, 353, 364, 365, 383, 392, 403, 413, 415, 416, 440, 474, 482, 483, 484, 485, 486, 490, 494, 496, 498, 500, 501, 503, 504], "episod": [0, 3, 51, 95, 96, 97, 98, 113, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 221, 258, 261, 267, 289, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 474, 483, 487, 492, 497, 498, 501], "format": [0, 1, 3, 36, 43, 45, 48, 54, 55, 56, 57, 60, 61, 66, 67, 73, 76, 77, 78, 85, 95, 96, 97, 98, 101, 102, 103, 104, 111, 118, 126, 132, 135, 138, 142, 150, 162, 163, 164, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416, 440, 474, 476, 482, 483, 486, 487, 489, 491, 494, 503, 504], "tensorspec": [0, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 86, 87, 88, 89, 90, 91, 92, 93, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 167, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 218, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 240, 242, 244, 245, 246, 247, 249, 251, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 287, 305, 330, 334, 357, 361, 362, 363, 366, 367, 368, 369, 370, 371, 373, 381, 383, 385, 388, 389, 401, 403, 405, 406, 415, 418, 474, 499], "tree": [0, 1, 51, 62, 64, 71, 100, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 225, 342, 345, 346, 347, 348, 414, 417, 474, 497, 501], "forest": [0, 51, 85, 474], "larg": [0, 3, 4, 39, 62, 64, 71, 85, 100, 101, 112, 113, 120, 121, 189, 233, 236, 278, 310, 342, 345, 346, 347, 348, 380, 382, 397, 400, 402, 413, 414, 417, 474, 483, 484, 495, 497, 498, 501], "languag": [0, 33, 72, 191, 474, 476, 495], "human": [0, 33, 98, 184, 474, 499], "feedback": [0, 184, 474, 476, 492, 503], "rlhf": [0, 184, 245, 413, 474, 476, 477], "spec": [0, 1, 2, 15, 16, 18, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 102, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 156, 157, 158, 160, 161, 162, 163, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 216, 217, 218, 219, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 249, 251, 253, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 287, 302, 305, 308, 313, 330, 332, 334, 342, 345, 346, 347, 348, 357, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 415, 418, 474, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 492, 494, 496, 497, 498, 503], "lock": [0, 40, 41, 49, 62, 64, 71, 75, 85, 100, 101, 132, 135, 138, 142, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 222, 231, 268, 282, 283, 342, 345, 346, 347, 348, 414, 417, 474, 478, 499], "method": [0, 1, 2, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 115, 120, 121, 122, 123, 124, 126, 128, 132, 135, 138, 141, 142, 143, 144, 149, 150, 162, 163, 166, 167, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 244, 245, 247, 249, 252, 253, 254, 255, 256, 257, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 300, 305, 308, 313, 319, 320, 321, 342, 344, 345, 346, 347, 348, 349, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 377, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 394, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 424, 438, 439, 469, 474, 476, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 497, 499, 501, 504], "partial": [0, 2, 15, 16, 18, 21, 29, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 224, 225, 267, 268, 269, 366, 458, 474, 485], "step": [0, 1, 4, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 56, 72, 85, 95, 102, 103, 104, 111, 113, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 148, 149, 150, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 240, 241, 244, 245, 247, 249, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 281, 282, 285, 287, 288, 289, 303, 305, 306, 308, 311, 313, 315, 316, 329, 330, 365, 366, 370, 380, 391, 400, 415, 419, 420, 421, 422, 423, 426, 427, 428, 439, 442, 449, 453, 458, 474, 476, 479, 483, 485, 486, 488, 489, 491, 492, 495, 496, 499, 500, 503], "reset": [0, 1, 2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 115, 121, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 220, 221, 222, 225, 237, 240, 244, 248, 253, 261, 266, 267, 268, 269, 270, 273, 274, 275, 278, 281, 282, 285, 286, 291, 306, 308, 313, 321, 330, 344, 349, 353, 355, 365, 398, 413, 415, 416, 439, 474, 476, 478, 482, 483, 484, 485, 487, 490, 494, 496, 497, 498, 503], "vector": [0, 1, 8, 34, 60, 133, 134, 143, 148, 149, 153, 164, 165, 168, 176, 177, 235, 281, 283, 295, 297, 306, 307, 311, 312, 314, 420, 423, 433, 434, 435, 436, 437, 474, 477, 478, 482, 483, 485, 496, 497, 498, 499, 500, 504], "async": [0, 15, 16, 18, 21, 22, 23, 25, 27, 29, 68, 132, 166, 172, 281, 474, 476], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 73, 78, 85, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 278, 285, 319, 320, 344, 349, 353, 373, 379, 390, 400, 407, 413, 415, 416, 472, 474, 477, 482, 483, 484, 485, 488, 489, 491, 494, 497, 498], "nativ": [0, 1, 7, 9, 98, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 440, 474, 476, 485, 501], "auto": [0, 31, 108, 128, 138, 143, 220, 221, 275, 281, 330, 381, 383, 389, 399, 401, 403, 405, 406, 474, 476, 478, 497, 498], "dynam": [0, 2, 7, 15, 16, 18, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 210, 285, 388, 396, 474, 476, 484, 487, 499], "mask": [0, 1, 4, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 101, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 204, 205, 219, 254, 285, 290, 291, 302, 305, 310, 317, 318, 332, 344, 349, 353, 361, 362, 363, 367, 368, 389, 403, 413, 416, 455, 474, 483, 485, 486, 495, 504], "action": [0, 2, 8, 9, 15, 16, 18, 21, 27, 29, 30, 45, 51, 60, 68, 72, 76, 78, 85, 95, 96, 97, 98, 102, 112, 113, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 218, 219, 222, 228, 229, 230, 233, 234, 235, 236, 237, 238, 240, 241, 243, 245, 247, 248, 249, 251, 255, 256, 258, 262, 266, 268, 272, 274, 275, 276, 277, 281, 285, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 305, 308, 313, 314, 315, 316, 317, 318, 319, 328, 330, 331, 332, 334, 337, 338, 340, 344, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 370, 373, 374, 380, 381, 382, 383, 384, 385, 387, 388, 389, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 468, 472, 474, 476, 477, 479, 482, 483, 484, 486, 487, 488, 489, 494, 495, 496, 497, 498, 500, 503, 504], "record": [0, 2, 11, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 218, 245, 285, 344, 349, 353, 400, 413, 415, 416, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 453, 468, 474, 483, 484, 488, 492, 497], "domain": [0, 2, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 197, 210, 235, 243, 268, 276, 357, 362, 363, 366, 367, 368, 369, 370, 371, 372, 377, 474, 484, 489, 494, 497, 498, 499, 503, 504], "interfac": [0, 1, 3, 132, 145, 159, 314, 322, 344, 349, 353, 474, 477, 478, 482, 484, 486, 491, 494, 495, 499, 501], "structur": [0, 1, 3, 7, 51, 58, 62, 63, 64, 70, 71, 72, 79, 80, 83, 84, 85, 100, 101, 107, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 190, 191, 192, 193, 198, 204, 205, 217, 233, 236, 268, 319, 330, 342, 344, 345, 346, 347, 348, 349, 353, 380, 389, 400, 403, 414, 417, 420, 421, 422, 423, 424, 474, 478, 482, 484, 485, 487, 490, 497, 498, 499, 500], "actor": [0, 3, 4, 27, 29, 30, 31, 68, 167, 204, 245, 289, 294, 295, 297, 302, 303, 305, 316, 328, 330, 332, 350, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 413, 416, 418, 474, 478, 483, 485, 487, 489, 492, 497, 500, 503], "explor": [0, 1, 284, 287, 290, 305, 323, 330, 357, 362, 363, 366, 367, 368, 369, 370, 380, 398, 453, 463, 464, 468, 474, 476, 484, 485, 486, 487, 489, 490, 492, 497, 498, 499], "valu": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 112, 113, 115, 120, 121, 126, 132, 135, 138, 142, 143, 150, 153, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 215, 216, 217, 218, 221, 223, 225, 226, 228, 231, 233, 234, 235, 236, 237, 243, 248, 249, 253, 254, 257, 258, 259, 261, 263, 265, 268, 269, 273, 274, 275, 280, 281, 282, 283, 285, 286, 287, 288, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 309, 310, 313, 314, 316, 317, 318, 319, 320, 322, 323, 326, 330, 331, 332, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 448, 449, 451, 452, 453, 454, 455, 458, 468, 474, 479, 483, 486, 489, 490, 491, 496, 497, 498, 499, 501, 503, 504], "gener": [0, 1, 2, 3, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 72, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 115, 117, 119, 132, 135, 138, 139, 142, 150, 154, 155, 156, 159, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 219, 222, 229, 231, 233, 234, 238, 243, 245, 247, 249, 255, 256, 261, 262, 266, 268, 272, 274, 276, 281, 283, 285, 290, 291, 300, 308, 313, 317, 318, 326, 344, 349, 353, 357, 366, 370, 374, 375, 394, 401, 408, 413, 415, 416, 420, 425, 433, 443, 458, 474, 476, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "hook": [0, 2, 14, 17, 19, 20, 24, 26, 31, 36, 43, 45, 48, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 95, 96, 97, 98, 102, 115, 129, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 332, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 413, 415, 416, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 474], "planner": [0, 289, 316, 474], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 115, 116, 119, 120, 121, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 243, 245, 246, 249, 251, 253, 255, 256, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 271, 274, 275, 276, 278, 280, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 377, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 449, 456, 457, 468, 474, 476, 477, 479, 482, 483, 484, 485, 486, 488, 489, 490, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "vmap": [0, 306, 307, 311, 312, 321, 341, 369, 372, 381, 383, 389, 396, 398, 401, 403, 405, 406, 413, 416, 420, 421, 422, 423, 474, 477], "random": [0, 1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 72, 74, 75, 83, 86, 87, 88, 89, 90, 114, 126, 132, 135, 138, 142, 150, 156, 162, 163, 166, 167, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 198, 218, 235, 248, 249, 268, 275, 291, 305, 306, 308, 311, 366, 369, 370, 377, 381, 398, 401, 413, 416, 453, 462, 474, 477, 482, 483, 484, 486, 487, 488, 490, 499, 500, 501, 503, 504], "sac": [0, 389, 401, 403, 474], "redq": [0, 401, 474], "crossq": [0, 383, 474], "iql": [0, 388, 396, 474, 482, 497, 498], "cql": [0, 381, 387, 474], "gail": [0, 394, 474], "dt": [0, 163, 330, 474, 499], "td3": [0, 405, 406, 474], "bc": [0, 5, 405, 474], "a2c": [0, 380, 474], "dreamer": [0, 211, 212, 303, 391, 392, 393, 474, 477], "checkpoint": [0, 70, 104, 106, 110, 122, 123, 125, 129, 474, 501], "builder": [0, 190, 194, 474, 483, 504], "logger": [0, 3, 11, 438, 440, 442, 443, 444, 445, 446, 447, 452, 458, 468, 472, 474, 483, 497], "_util": [0, 3, 162, 286, 474, 486, 492], "implement_for": [0, 3, 474], "set_auto_unwrap_transformed_env": [0, 12, 275, 474], "auto_unwrap_transformed_env": [0, 448, 474], "thing": [0, 1, 3, 7, 8, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 274, 319, 320, 389, 403, 475, 484, 485, 486, 487, 488, 489, 490, 491, 497, 498, 501, 504], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 36, 40, 41, 43, 48, 49, 56, 63, 66, 67, 70, 73, 75, 78, 79, 80, 102, 106, 108, 120, 121, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 235, 282, 285, 300, 317, 319, 320, 337, 344, 349, 353, 381, 383, 396, 401, 403, 405, 406, 413, 415, 416, 420, 422, 423, 475, 476, 478, 482, 487, 488, 489, 499, 501], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 119, 120, 121, 122, 124, 128, 132, 133, 134, 135, 138, 139, 141, 142, 143, 149, 150, 153, 154, 155, 157, 159, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 216, 219, 221, 224, 225, 229, 230, 233, 235, 236, 245, 246, 248, 249, 253, 254, 261, 268, 270, 273, 274, 275, 278, 280, 281, 282, 283, 285, 286, 288, 289, 300, 302, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 329, 332, 338, 344, 349, 353, 365, 366, 369, 370, 372, 376, 381, 382, 383, 385, 389, 390, 396, 397, 398, 400, 401, 403, 405, 406, 407, 413, 415, 416, 418, 419, 420, 421, 422, 423, 438, 439, 440, 442, 445, 447, 455, 472, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 488, 490, 491, 497, 498, 499, 500, 501, 503, 504], "debug": [0, 6, 8, 51, 72, 85, 95, 96, 97, 98, 202, 270, 475, 504], "work": [0, 1, 2, 3, 4, 8, 24, 26, 36, 43, 48, 56, 66, 67, 70, 73, 78, 95, 96, 97, 98, 102, 106, 112, 113, 118, 120, 121, 124, 131, 132, 135, 138, 141, 142, 143, 146, 150, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 216, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 283, 285, 286, 292, 293, 314, 344, 349, 353, 363, 368, 373, 382, 397, 400, 413, 415, 416, 458, 475, 476, 477, 482, 483, 484, 485, 487, 490, 495, 496, 497, 498, 499, 500, 501, 503, 504], "habitat": [0, 3, 144, 475, 500], "lab": [0, 3, 136, 137, 144, 147, 475], "mujoco": [0, 6, 8, 168, 475, 482, 484, 485], "error": [0, 1, 3, 7, 10, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 71, 73, 74, 78, 85, 100, 101, 102, 106, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 174, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 254, 273, 285, 286, 342, 344, 345, 346, 347, 348, 349, 353, 398, 413, 414, 415, 416, 417, 475, 476, 478, 482, 484, 497, 498, 504], "solut": [0, 2, 3, 6, 7, 9, 27, 120, 475, 477, 479, 486, 503], "resourc": [0, 1, 13, 22, 23, 25, 27, 144, 197, 475, 476, 482, 484, 486, 497, 498], "issu": [0, 2, 3, 4, 5, 8, 68, 95, 98, 104, 106, 108, 112, 113, 120, 128, 132, 135, 138, 141, 142, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 225, 254, 269, 357, 362, 363, 366, 367, 368, 369, 370, 382, 400, 475, 476, 495, 503], "customis": [0, 475, 483, 491], "video": [0, 4, 9, 100, 440, 442, 445, 447, 453, 472, 474, 475, 492, 497, 498], "render": [0, 3, 8, 149, 176, 438, 440, 453, 475, 482, 483, 484, 486, 487, 491], "index": [0, 3, 7, 8, 10, 18, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 105, 106, 107, 108, 112, 113, 115, 116, 118, 120, 124, 126, 127, 128, 130, 131, 132, 135, 138, 142, 150, 154, 155, 160, 161, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 189, 191, 192, 193, 204, 216, 220, 225, 229, 235, 275, 310, 317, 318, 342, 345, 346, 347, 348, 365, 414, 417, 474, 487, 494, 496, 497, 498, 501, 503], "search": [0, 2, 40, 41, 49, 75, 85, 159, 217, 483], "page": [0, 7, 33, 197, 447, 489, 494], "import": [1, 2, 3, 4, 6, 10, 11, 15, 16, 18, 21, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 112, 113, 115, 120, 121, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 215, 216, 217, 218, 219, 221, 222, 224, 225, 228, 230, 231, 237, 238, 243, 244, 245, 246, 249, 251, 253, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 273, 274, 276, 280, 282, 283, 285, 286, 289, 291, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 308, 311, 312, 313, 314, 316, 319, 320, 321, 330, 331, 332, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 438, 440, 451, 453, 468, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497, 498, 499, 500, 501, 503, 504], "syncdatacollector": [1, 2, 3, 15, 16, 19, 21, 22, 23, 25, 27, 29, 30, 45, 56, 76, 222, 225, 258, 290, 308, 313, 468, 471, 474, 482, 483, 484, 485, 486, 490, 492, 497, 498, 501], "currentmodul": 1, "somewhat": [1, 2, 198, 478, 488, 504], "equival": [1, 3, 27, 30, 31, 34, 35, 36, 39, 40, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 132, 133, 134, 135, 138, 141, 142, 143, 144, 147, 148, 149, 150, 157, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 234, 237, 268, 270, 275, 285, 302, 311, 314, 332, 342, 344, 345, 346, 347, 348, 349, 353, 362, 363, 367, 368, 400, 413, 414, 415, 416, 417, 455, 490, 503, 504], "dataload": [1, 29, 99, 119, 121, 183, 184, 185, 188, 191, 198, 483, 490, 501], "except": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 239, 258, 267, 268, 269, 273, 275, 285, 287, 305, 306, 308, 311, 313, 326, 330, 342, 344, 345, 346, 347, 348, 349, 353, 380, 383, 398, 400, 403, 413, 414, 415, 416, 417, 440, 476, 477, 482, 483, 487, 495, 497, 501, 503, 504], "1": [1, 2, 3, 4, 8, 10, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 112, 113, 115, 120, 121, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 241, 243, 245, 246, 247, 249, 251, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 280, 282, 283, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 326, 328, 329, 330, 331, 333, 334, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 392, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 428, 429, 430, 434, 435, 437, 438, 440, 449, 453, 455, 456, 468, 472, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 496, 497, 498, 499, 500, 501, 502, 503, 504], "thei": [1, 2, 3, 4, 8, 9, 15, 16, 18, 20, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 113, 115, 132, 135, 138, 141, 142, 143, 150, 153, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 224, 239, 245, 253, 262, 270, 274, 275, 280, 285, 313, 342, 344, 345, 346, 347, 348, 349, 353, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 455, 458, 476, 477, 478, 479, 482, 483, 484, 485, 486, 489, 496, 497, 498, 499, 500, 501, 503, 504], "over": [1, 2, 3, 4, 8, 15, 16, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 101, 102, 112, 113, 115, 119, 120, 121, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 218, 235, 249, 261, 269, 283, 285, 317, 326, 329, 338, 341, 344, 349, 353, 372, 390, 392, 398, 413, 415, 416, 420, 426, 438, 461, 476, 477, 479, 482, 483, 484, 486, 487, 488, 489, 490, 497, 498, 499, 504], "non": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 30, 34, 36, 37, 38, 40, 41, 43, 48, 49, 50, 56, 58, 59, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 107, 109, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 222, 223, 225, 229, 240, 253, 265, 268, 274, 275, 276, 277, 278, 280, 283, 285, 291, 306, 308, 311, 313, 319, 342, 344, 345, 346, 347, 348, 349, 353, 369, 370, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 476, 477, 482, 485, 486, 497, 498, 499, 501, 504], "static": [1, 40, 41, 43, 49, 66, 72, 75, 78, 84, 113, 120, 121, 144, 163, 187, 193, 282, 286, 344, 349, 353, 396, 413, 416, 487, 499, 501], "like": [1, 2, 3, 4, 7, 11, 24, 27, 36, 40, 41, 43, 48, 49, 51, 56, 58, 63, 66, 67, 70, 73, 75, 78, 79, 80, 84, 102, 109, 115, 121, 132, 135, 138, 139, 142, 144, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 237, 268, 271, 285, 306, 311, 320, 344, 349, 353, 364, 370, 380, 382, 397, 400, 401, 402, 413, 415, 416, 477, 478, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 497, 498, 499, 500, 501, 503, 504], "being": [1, 2, 3, 7, 8, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 36, 43, 48, 56, 66, 67, 73, 74, 78, 99, 102, 107, 109, 112, 113, 126, 129, 132, 135, 138, 141, 142, 143, 144, 149, 150, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 224, 233, 235, 236, 243, 248, 256, 268, 273, 274, 275, 285, 305, 308, 313, 330, 344, 349, 353, 382, 383, 397, 398, 400, 403, 413, 415, 416, 440, 455, 460, 470, 471, 472, 476, 477, 478, 482, 483, 484, 485, 490, 497, 498, 499, 501], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 48, 56, 62, 64, 66, 67, 70, 71, 73, 78, 85, 86, 98, 99, 100, 101, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 220, 225, 229, 240, 243, 253, 261, 265, 268, 273, 274, 275, 276, 277, 278, 280, 285, 314, 341, 342, 344, 345, 346, 347, 348, 349, 353, 369, 370, 371, 383, 403, 413, 414, 415, 416, 417, 440, 479, 484, 487, 491, 501, 503, 504], "two": [1, 2, 3, 4, 8, 10, 36, 43, 48, 51, 52, 53, 54, 55, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 85, 102, 115, 119, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 230, 249, 253, 273, 280, 285, 298, 306, 308, 311, 313, 319, 320, 335, 338, 344, 349, 353, 370, 397, 405, 409, 413, 415, 416, 453, 458, 476, 478, 482, 483, 484, 485, 486, 487, 488, 490, 491, 495, 496, 497, 498, 499, 501, 503, 504], "main": [1, 2, 3, 5, 15, 16, 20, 25, 28, 32, 68, 139, 183, 225, 230, 370, 458, 476, 477, 478, 482, 483, 494, 495, 496, 503, 504], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 112, 113, 115, 118, 119, 120, 121, 124, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 164, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 237, 238, 239, 241, 243, 244, 245, 247, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 305, 306, 308, 311, 313, 314, 317, 318, 319, 320, 322, 330, 341, 342, 344, 345, 346, 347, 348, 349, 350, 353, 357, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 374, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 408, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 428, 438, 439, 440, 445, 447, 451, 458, 461, 468, 469, 472, 482, 483, 484, 485, 486, 487, 488, 490, 497, 498, 499, 501, 503, 504], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 101, 102, 107, 109, 115, 118, 119, 120, 121, 122, 124, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 223, 224, 228, 233, 234, 236, 245, 246, 249, 251, 253, 261, 263, 271, 272, 273, 274, 275, 277, 278, 280, 282, 285, 291, 292, 293, 295, 301, 304, 308, 313, 314, 317, 318, 324, 332, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 363, 365, 367, 368, 370, 372, 373, 374, 381, 383, 396, 398, 401, 403, 405, 406, 412, 413, 415, 416, 420, 423, 438, 439, 453, 455, 470, 471, 476, 478, 482, 484, 487, 488, 489, 490, 494, 495, 496, 497, 499, 500, 501, 503, 504], "constructor": [1, 2, 3, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 68, 70, 79, 80, 84, 112, 126, 132, 135, 138, 142, 150, 157, 162, 163, 166, 171, 172, 173, 176, 183, 184, 185, 188, 190, 191, 192, 193, 204, 205, 221, 225, 273, 292, 293, 314, 344, 349, 353, 356, 366, 370, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 420, 421, 422, 423, 424, 469, 472, 476, 477, 482, 483, 484, 487, 490, 497, 498, 501, 503], "iter": [1, 2, 3, 16, 18, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 109, 115, 119, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 238, 249, 262, 285, 286, 288, 290, 291, 292, 293, 314, 319, 320, 336, 344, 349, 353, 357, 362, 366, 367, 369, 371, 372, 374, 398, 412, 413, 415, 416, 453, 457, 458, 476, 478, 479, 482, 484, 485, 490, 492, 497, 498, 499], "execut": [1, 2, 3, 6, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 106, 107, 109, 115, 120, 121, 132, 133, 134, 135, 138, 139, 142, 143, 144, 146, 148, 149, 150, 156, 157, 162, 163, 166, 168, 171, 172, 173, 174, 183, 184, 185, 188, 191, 192, 193, 201, 203, 219, 230, 231, 247, 270, 275, 305, 306, 308, 311, 313, 321, 350, 356, 365, 371, 372, 398, 405, 413, 415, 416, 462, 472, 476, 477, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 497, 498, 501, 502, 503, 504], "queri": [1, 2, 3, 15, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 107, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 253, 278, 282, 285, 342, 344, 345, 346, 347, 348, 349, 353, 372, 413, 414, 415, 416, 417, 476, 478, 482, 489, 494, 499, 503], "defin": [1, 2, 3, 15, 16, 18, 20, 21, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 254, 267, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 319, 321, 324, 325, 328, 329, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 377, 385, 387, 398, 413, 415, 416, 420, 421, 422, 423, 424, 439, 469, 476, 477, 482, 483, 485, 489, 492, 499, 501, 504], "number": [1, 2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 115, 118, 120, 121, 128, 132, 133, 134, 135, 138, 141, 142, 143, 148, 149, 150, 156, 157, 158, 159, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 235, 237, 238, 239, 241, 244, 245, 248, 249, 252, 254, 255, 256, 258, 260, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 281, 282, 285, 287, 288, 289, 292, 293, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 324, 325, 330, 331, 333, 334, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 357, 361, 365, 366, 369, 370, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 445, 447, 449, 451, 453, 458, 460, 461, 462, 470, 471, 472, 476, 477, 478, 482, 483, 484, 485, 487, 488, 490, 492, 497, 498, 499, 500, 501, 504], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 43, 44, 48, 51, 52, 53, 56, 66, 67, 73, 78, 84, 85, 102, 119, 121, 126, 132, 135, 138, 142, 143, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 285, 290, 306, 308, 313, 314, 322, 323, 344, 349, 353, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 421, 422, 423, 455, 476, 482, 484, 485, 486, 490, 491, 497, 498, 499, 501, 504], "deliv": [1, 2, 3, 18, 198, 482, 483, 487, 490, 503], "stack": [1, 2, 3, 7, 8, 15, 16, 18, 22, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 75, 78, 83, 85, 86, 87, 88, 89, 90, 93, 100, 101, 107, 112, 115, 132, 135, 138, 141, 142, 143, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 198, 204, 205, 208, 209, 225, 230, 247, 282, 306, 308, 311, 312, 313, 342, 345, 346, 347, 348, 365, 371, 372, 381, 383, 396, 401, 403, 405, 406, 414, 417, 420, 439, 449, 474, 476, 483, 486, 487, 494, 495, 496, 497, 499, 503], "user": [1, 2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 95, 97, 101, 102, 113, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 174, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 226, 243, 267, 273, 275, 285, 299, 344, 349, 353, 383, 400, 403, 405, 413, 415, 416, 440, 469, 476, 478, 479, 482, 483, 487, 489, 490, 495, 499, 503, 504], "reach": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 72, 119, 132, 135, 138, 142, 149, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 247, 266, 287, 305, 330, 482, 484, 492, 494, 497, 498, 503, 504], "done": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 74, 75, 76, 78, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 111, 113, 115, 120, 121, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 219, 221, 222, 225, 233, 234, 236, 237, 238, 243, 247, 248, 249, 251, 255, 256, 258, 260, 262, 265, 266, 268, 269, 272, 273, 274, 275, 276, 282, 285, 289, 306, 308, 313, 316, 338, 365, 380, 381, 382, 383, 384, 385, 387, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 476, 477, 478, 482, 484, 485, 486, 487, 489, 490, 492, 495, 496, 497, 498, 499, 501, 503, 504], "state": [1, 2, 3, 4, 15, 16, 18, 19, 20, 21, 29, 30, 36, 43, 45, 48, 51, 56, 63, 66, 67, 68, 69, 70, 72, 73, 76, 78, 79, 80, 85, 95, 96, 97, 98, 102, 103, 104, 111, 115, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 148, 149, 150, 156, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 221, 224, 225, 226, 228, 229, 231, 234, 237, 240, 243, 247, 249, 256, 266, 267, 272, 273, 274, 275, 276, 277, 282, 283, 285, 289, 294, 299, 303, 306, 307, 308, 311, 312, 313, 314, 316, 321, 324, 328, 331, 333, 334, 340, 344, 349, 353, 358, 365, 369, 375, 380, 382, 383, 387, 389, 397, 398, 400, 401, 402, 403, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 458, 472, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 497, 498, 499, 504], "after": [1, 2, 3, 8, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 45, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 95, 100, 101, 102, 108, 115, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 157, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 287, 288, 305, 306, 308, 313, 322, 342, 344, 345, 346, 347, 348, 349, 353, 362, 367, 383, 392, 403, 405, 413, 414, 415, 416, 417, 420, 476, 483, 484, 485, 486, 487, 488, 490, 492, 494, 497, 498, 499, 500, 501, 504], "predefin": [1, 196, 440, 483, 485, 490, 501, 503], "becaus": [1, 2, 3, 4, 7, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 95, 100, 101, 102, 107, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 237, 245, 266, 281, 285, 298, 320, 342, 344, 345, 346, 347, 348, 349, 353, 357, 362, 363, 365, 366, 367, 368, 369, 370, 380, 400, 413, 414, 415, 416, 417, 420, 477, 482, 483, 485, 486, 488, 489, 490, 494, 496, 497, 498, 499, 501, 504], "potenti": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 190, 191, 192, 193, 499, 501], "comput": [1, 3, 4, 8, 15, 17, 18, 27, 29, 36, 39, 43, 48, 56, 66, 67, 72, 73, 78, 102, 112, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 249, 263, 275, 279, 283, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326, 328, 330, 333, 334, 336, 338, 339, 341, 344, 349, 353, 358, 361, 363, 365, 366, 368, 370, 373, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 462, 476, 478, 482, 484, 485, 486, 487, 488, 494, 495, 496, 497, 498, 500, 501], "heavi": [1, 8, 95, 501], "crucial": [1, 2, 3, 287, 305, 330, 388, 396, 398, 413, 476, 482, 483, 484, 485, 487, 489, 491, 497, 498, 499, 503, 504], "configur": [1, 8, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 28, 29, 72, 135, 184, 245, 294, 299, 328, 344, 382, 398, 400, 413, 416, 477, 482, 483, 484, 489, 495, 497, 498, 499], "hyperparamet": [1, 118, 285, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 482, 491, 499, 501], "appropri": [1, 3, 4, 7, 101, 105, 116, 126, 127, 130, 131, 150, 162, 171, 192, 193, 237, 469, 472, 476, 482, 491, 501], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 122, 124, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 472, 476, 477, 478, 482, 485, 486, 488, 492, 497, 498, 499, 500, 503], "take": [1, 2, 3, 8, 20, 32, 36, 43, 48, 51, 66, 67, 72, 73, 78, 123, 129, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 190, 191, 192, 193, 196, 228, 230, 266, 269, 270, 274, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 319, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 352, 353, 361, 363, 364, 365, 366, 368, 370, 373, 376, 379, 400, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 449, 460, 476, 477, 479, 482, 483, 484, 486, 487, 488, 489, 497, 498, 499, 501, 504], "consider": [1, 2, 3, 8, 141, 143, 274, 310, 476, 483, 497, 498, 501], "whether": [1, 2, 3, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 106, 108, 115, 116, 128, 132, 135, 138, 142, 149, 150, 154, 155, 156, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 221, 230, 231, 233, 236, 267, 273, 275, 282, 283, 285, 292, 293, 308, 310, 313, 314, 344, 349, 350, 353, 365, 370, 374, 380, 381, 382, 383, 384, 385, 387, 389, 390, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 448, 472, 476, 482, 483, 484, 486, 487, 497, 498, 499, 503, 504], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 109, 113, 115, 120, 121, 122, 126, 129, 132, 135, 136, 137, 138, 141, 142, 143, 144, 149, 150, 153, 156, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 221, 222, 225, 228, 229, 230, 233, 234, 237, 238, 240, 245, 246, 247, 249, 254, 255, 256, 258, 261, 262, 266, 267, 269, 272, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 319, 320, 321, 324, 325, 328, 330, 333, 334, 336, 341, 342, 344, 345, 346, 347, 348, 349, 353, 361, 363, 365, 366, 368, 369, 370, 373, 376, 380, 382, 383, 389, 395, 397, 398, 400, 401, 402, 403, 404, 405, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 440, 442, 448, 453, 454, 455, 458, 468, 470, 471, 472, 476, 477, 478, 479, 482, 483, 484, 485, 486, 488, 490, 491, 494, 496, 497, 498, 499, 500, 501, 503, 504], "occur": [1, 8, 16, 43, 66, 74, 75, 78, 85, 95, 132, 135, 138, 142, 144, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 217, 226, 238, 249, 254, 281, 288, 344, 349, 353, 357, 362, 363, 366, 367, 368, 369, 370, 392, 413, 416, 476, 486, 501, 504], "serial": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 95, 96, 97, 98, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 282, 283, 285, 344, 349, 353, 413, 415, 416, 476], "parallel": [1, 3, 8, 31, 132, 135, 138, 141, 142, 143, 150, 162, 163, 164, 165, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 275, 281, 308, 313, 350, 380, 469, 470, 471, 472, 476, 483, 484, 497, 498, 503], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 64, 71, 83, 84, 85, 99, 100, 101, 102, 139, 157, 162, 171, 186, 187, 189, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 274, 282, 283, 285, 342, 345, 346, 347, 348, 350, 351, 352, 414, 415, 417, 470, 471, 472, 482, 483, 484, 503, 504], "multisyncdatacollector": [1, 16, 22, 23, 25, 27, 30, 290, 471, 474, 484, 490, 503], "split": [1, 15, 16, 18, 21, 22, 23, 25, 27, 40, 41, 47, 49, 62, 64, 75, 84, 95, 96, 97, 98, 99, 113, 120, 121, 153, 164, 165, 184, 306, 311, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 416, 418, 477, 479, 484, 488, 501, 503], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 67, 70, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 101, 113, 120, 121, 133, 134, 136, 137, 141, 143, 144, 146, 148, 149, 157, 158, 162, 168, 173, 273, 282, 283, 285, 308, 313, 319, 329, 330, 398, 413, 415, 416, 460, 474, 476, 477, 478, 482, 487, 491, 497, 498, 499], "aggreg": [1, 3, 36, 66, 95, 113, 126, 164, 165, 190, 217, 246, 283, 292, 293, 295, 296, 372, 476, 478, 498], "result": [1, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 36, 37, 43, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 85, 86, 95, 96, 97, 98, 100, 101, 102, 113, 115, 119, 120, 121, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 287, 290, 305, 306, 308, 311, 313, 314, 319, 332, 338, 342, 344, 345, 346, 347, 348, 349, 353, 361, 363, 368, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 460, 476, 478, 483, 485, 487, 488, 491, 492, 495, 499, 500, 503, 504], "final": [1, 2, 3, 4, 27, 51, 62, 64, 71, 72, 85, 100, 101, 185, 188, 189, 190, 196, 268, 281, 287, 305, 306, 308, 311, 313, 319, 330, 342, 345, 346, 347, 348, 364, 371, 414, 417, 420, 453, 477, 482, 483, 484, 486, 491, 492, 494, 497, 498, 499, 504], "multiasyncdatacollector": [1, 15, 21, 22, 23, 25, 27, 30, 290, 470, 474, 482, 483, 484, 490, 503], "sever": [1, 2, 3, 8, 36, 43, 48, 52, 56, 66, 67, 73, 78, 84, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 226, 228, 246, 275, 285, 344, 349, 353, 400, 413, 415, 416, 476, 482, 484, 486, 491, 492, 501, 504], "gather": [1, 3, 22, 25, 27, 51, 84, 99, 106, 108, 113, 120, 128, 204, 247, 254, 318, 321, 326, 344, 349, 353, 398, 413, 416, 419, 462, 475, 483, 484, 485, 490, 497, 498, 499, 501, 503, 504], "continu": [1, 2, 3, 9, 37, 40, 51, 86, 87, 88, 101, 121, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 210, 218, 243, 268, 276, 295, 296, 297, 298, 329, 330, 372, 377, 381, 404, 420, 425, 433, 477, 482, 484, 488, 497, 498, 501], "concomitantli": [1, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 191, 192, 193], "network": [1, 4, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 292, 293, 295, 296, 297, 298, 301, 303, 304, 311, 314, 319, 320, 321, 323, 324, 325, 327, 329, 331, 333, 334, 335, 340, 344, 349, 353, 358, 359, 360, 361, 369, 373, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 411, 413, 415, 416, 418, 420, 421, 422, 423, 424, 467, 468, 477, 478, 479, 486, 489, 492, 496, 499, 504], "impli": [1, 85, 504], "mai": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 97, 100, 101, 102, 104, 107, 112, 113, 120, 132, 135, 138, 141, 142, 143, 144, 150, 162, 163, 166, 168, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 245, 249, 262, 273, 275, 277, 282, 283, 285, 288, 308, 313, 314, 319, 342, 344, 345, 346, 347, 348, 349, 353, 370, 382, 389, 397, 400, 403, 413, 414, 415, 416, 417, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 497, 498, 499, 500, 501, 504], "slightli": [1, 32, 95, 478, 485, 486, 497, 499, 500, 501, 504], "lag": [1, 482, 483, 484], "therefor": [1, 2, 3, 7, 63, 70, 79, 80, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 196, 258, 400, 415, 418, 486, 489, 497, 504], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 225, 413, 476], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 34, 36, 43, 45, 47, 48, 51, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 113, 115, 120, 121, 126, 128, 129, 132, 135, 138, 142, 150, 153, 156, 159, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 216, 217, 218, 219, 222, 225, 230, 237, 245, 253, 258, 261, 266, 267, 268, 269, 270, 274, 275, 277, 280, 281, 285, 287, 305, 306, 307, 308, 310, 311, 312, 313, 317, 318, 319, 327, 329, 330, 342, 344, 345, 346, 347, 348, 349, 353, 361, 366, 369, 370, 379, 380, 381, 382, 383, 388, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 476, 478, 479, 482, 483, 484, 486, 487, 494, 496, 497, 498, 499, 501, 504], "off": [1, 2, 4, 309, 339, 362, 403, 438, 453, 463, 477, 479, 482, 483, 484, 488, 489, 497, 498, 500, 503, 504], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 16, 18, 21, 22, 23, 25, 27, 30, 34, 35, 36, 37, 38, 39, 43, 44, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 101, 102, 106, 108, 113, 115, 120, 128, 132, 135, 138, 141, 142, 143, 147, 149, 150, 162, 163, 164, 165, 166, 171, 172, 173, 174, 176, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 233, 236, 240, 249, 267, 274, 275, 281, 285, 302, 306, 308, 310, 311, 313, 317, 320, 322, 344, 349, 353, 358, 360, 361, 363, 367, 380, 388, 390, 396, 400, 413, 415, 416, 453, 476, 477, 478, 479, 482, 483, 484, 485, 487, 488, 490, 491, 494, 497, 498, 499, 500, 501, 504], "remot": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 162, 171, 204, 283, 504], "rollout": [1, 2, 3, 11, 15, 16, 18, 21, 27, 29, 30, 32, 51, 72, 78, 85, 126, 132, 133, 134, 135, 138, 142, 144, 145, 148, 149, 150, 154, 155, 156, 157, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 177, 178, 183, 184, 185, 188, 191, 192, 193, 198, 218, 219, 221, 222, 225, 228, 230, 231, 233, 236, 237, 238, 243, 245, 246, 251, 255, 256, 261, 262, 263, 266, 267, 269, 270, 273, 276, 282, 283, 285, 289, 290, 291, 308, 313, 316, 330, 365, 380, 438, 440, 462, 477, 482, 484, 485, 488, 489, 490, 491, 492, 500, 501, 503], "necessari": [1, 4, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 95, 98, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 262, 401, 420, 421, 422, 423, 424, 478, 482, 484, 488, 489, 490, 494, 495], "synchronis": [1, 139, 497, 498], "either": [1, 2, 5, 28, 34, 36, 43, 48, 56, 63, 66, 67, 68, 70, 72, 73, 78, 85, 99, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 247, 266, 267, 283, 285, 344, 349, 350, 353, 375, 398, 405, 406, 413, 415, 416, 444, 476, 479, 482, 483, 485, 497, 500, 501, 503, 504], "update_policy_weights_": [1, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 30, 202, 476, 482, 498, 503], "update_at_each_batch": [1, 15, 16, 21], "true": [1, 2, 3, 4, 8, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 121, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 217, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 235, 238, 240, 243, 244, 245, 246, 247, 248, 249, 253, 254, 256, 257, 260, 261, 262, 265, 266, 268, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 285, 286, 287, 288, 289, 292, 293, 295, 296, 297, 298, 304, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 329, 330, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 353, 356, 357, 358, 359, 360, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 420, 421, 422, 423, 426, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 447, 448, 451, 452, 453, 455, 458, 472, 476, 477, 478, 479, 482, 483, 484, 485, 486, 488, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "second": [1, 2, 3, 8, 15, 16, 18, 21, 29, 32, 51, 52, 53, 54, 55, 95, 126, 162, 197, 201, 222, 270, 306, 308, 311, 313, 363, 382, 397, 400, 403, 440, 442, 445, 447, 457, 482, 484, 490, 497, 498, 499, 501, 503, 504], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 112, 120, 121, 128, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 216, 218, 222, 229, 233, 234, 236, 237, 238, 243, 245, 246, 251, 252, 253, 255, 256, 258, 262, 265, 266, 268, 271, 274, 275, 276, 278, 280, 282, 285, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 311, 312, 313, 314, 316, 319, 320, 322, 323, 328, 330, 331, 332, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 374, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 438, 455, 460, 466, 476, 477, 482, 483, 484, 485, 486, 497, 498, 499, 500, 503], "oper": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 107, 113, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 240, 245, 270, 272, 276, 283, 285, 301, 302, 307, 310, 312, 342, 344, 345, 346, 347, 348, 349, 353, 358, 359, 360, 362, 363, 364, 369, 375, 380, 382, 384, 385, 390, 397, 400, 402, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 458, 474, 476, 478, 479, 482, 483, 484, 485, 486, 487, 488, 496, 497, 498, 499, 504], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 40, 43, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 81, 83, 84, 85, 86, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 111, 113, 115, 120, 121, 128, 132, 135, 137, 138, 139, 141, 142, 143, 147, 150, 156, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 217, 249, 268, 275, 282, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 319, 320, 321, 324, 325, 328, 330, 333, 334, 336, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 381, 383, 385, 388, 389, 396, 398, 401, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 438, 440, 444, 448, 453, 462, 463, 464, 468, 470, 471, 476, 477, 478, 479, 482, 484, 485, 486, 487, 488, 494, 499, 501, 504], "cpu": [1, 2, 3, 8, 10, 15, 16, 18, 21, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 112, 115, 120, 128, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 218, 222, 229, 233, 234, 236, 237, 238, 243, 246, 251, 253, 255, 256, 258, 262, 265, 266, 268, 274, 275, 276, 278, 280, 285, 289, 291, 301, 306, 307, 308, 311, 312, 313, 316, 322, 323, 330, 331, 332, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 374, 377, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 438, 477, 482, 483, 484, 485, 497, 498, 499, 500, 503], "slower": [1, 497], "than": [1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 66, 85, 95, 97, 102, 113, 120, 121, 124, 126, 132, 135, 138, 142, 146, 150, 160, 161, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 230, 246, 247, 256, 283, 287, 298, 308, 310, 311, 313, 314, 341, 357, 362, 369, 370, 374, 398, 413, 415, 416, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 475, 476, 477, 478, 482, 483, 484, 486, 487, 489, 497, 498, 499, 501, 503, 504], "one": [1, 2, 3, 4, 5, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 95, 100, 101, 102, 103, 104, 105, 106, 111, 112, 113, 115, 116, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 222, 225, 228, 230, 231, 233, 234, 235, 236, 243, 246, 248, 249, 253, 258, 261, 264, 265, 267, 268, 269, 274, 275, 277, 280, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 320, 321, 324, 325, 326, 327, 328, 330, 332, 333, 334, 336, 341, 342, 344, 345, 346, 347, 348, 349, 353, 357, 361, 362, 363, 365, 366, 367, 368, 369, 370, 373, 374, 376, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 427, 428, 440, 442, 451, 453, 454, 458, 462, 472, 475, 476, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 499, 500, 501, 504], "cuda": [1, 2, 3, 7, 15, 16, 18, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 132, 133, 134, 135, 138, 142, 144, 145, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 245, 252, 253, 268, 274, 275, 278, 280, 285, 306, 307, 311, 312, 344, 349, 353, 369, 413, 415, 416, 450, 482, 483, 484, 485, 497, 498, 500, 504], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 54, 66, 70, 79, 80, 81, 85, 101, 108, 115, 116, 128, 132, 133, 134, 148, 149, 162, 171, 173, 190, 191, 198, 226, 228, 235, 244, 247, 248, 258, 261, 265, 266, 273, 282, 306, 311, 313, 319, 322, 323, 357, 362, 366, 367, 369, 370, 373, 382, 389, 397, 400, 410, 426, 472, 476, 477, 478, 479, 482, 483, 484, 487, 489, 490, 495, 497, 498, 499, 501, 503], "infer": [1, 3, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 204, 205, 225, 282, 317, 322, 350, 361, 366, 370, 387, 413, 416, 438, 476, 482, 484, 486, 490, 492, 495, 501, 503], "dispatch": [1, 3, 22, 23, 25, 27, 43, 66, 78, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 341, 344, 349, 353, 365, 413, 415, 416, 440, 482, 504], "avail": [1, 2, 3, 4, 6, 27, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 101, 113, 115, 119, 120, 121, 133, 134, 136, 137, 146, 148, 149, 154, 155, 160, 161, 162, 164, 165, 168, 174, 175, 176, 177, 195, 204, 218, 221, 224, 243, 245, 302, 332, 366, 370, 398, 413, 416, 440, 470, 471, 476, 482, 483, 484, 485, 486, 487, 488, 495, 497, 498, 499, 501, 504], "speed": [1, 2, 3, 4, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 478, 482, 483, 484, 485, 497, 498, 499, 501, 503], "avoid": [1, 2, 3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 106, 108, 120, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 225, 243, 273, 275, 282, 283, 285, 288, 338, 344, 349, 353, 357, 369, 374, 382, 383, 397, 400, 403, 413, 415, 416, 461, 476, 484, 486, 495, 498], "oom": [1, 3, 62, 64, 71, 85, 100, 101, 106, 108, 128, 189, 342, 345, 346, 347, 348, 414, 417], "choic": [1, 2, 58, 97, 162, 198, 477, 478, 482, 483, 489, 497, 498], "pass": [1, 2, 3, 4, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 36, 40, 41, 43, 48, 49, 56, 58, 63, 66, 67, 68, 70, 72, 73, 75, 78, 79, 80, 83, 84, 95, 98, 101, 102, 104, 106, 108, 113, 115, 120, 121, 126, 128, 132, 135, 138, 139, 140, 142, 143, 150, 153, 157, 162, 163, 164, 165, 166, 171, 172, 173, 176, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 225, 231, 233, 236, 246, 247, 255, 256, 273, 274, 277, 282, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 319, 320, 321, 322, 324, 325, 328, 330, 331, 333, 334, 336, 340, 341, 344, 349, 350, 353, 357, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 381, 382, 383, 396, 397, 398, 400, 401, 403, 405, 406, 413, 415, 416, 420, 421, 422, 423, 424, 438, 455, 458, 470, 471, 472, 476, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 496, 497, 498, 499, 501, 503, 504], "ie": [1, 2, 3, 22, 25, 28, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 74, 75, 78, 79, 83, 84, 86, 87, 88, 89, 90, 112, 121, 132, 135, 138, 142, 146, 150, 159, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 217, 218, 225, 240, 265, 268, 277, 282, 308, 313, 344, 349, 353, 361, 369, 413, 416, 477, 478, 483, 498], "store": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 40, 43, 46, 47, 48, 51, 56, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 78, 79, 80, 81, 84, 85, 99, 100, 101, 102, 104, 106, 107, 108, 109, 112, 113, 115, 120, 126, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 243, 270, 281, 282, 283, 285, 287, 289, 290, 316, 330, 342, 344, 345, 346, 347, 348, 349, 353, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 447, 474, 476, 479, 482, 484, 485, 488, 490, 492, 497, 498, 500, 504], "while": [1, 2, 3, 7, 8, 15, 16, 18, 21, 29, 32, 36, 43, 48, 56, 66, 67, 68, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 258, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 382, 388, 396, 397, 400, 413, 415, 416, 476, 477, 478, 482, 484, 485, 488, 490, 491, 497, 498, 499, 500, 501, 503], "wait": [1, 13, 15, 16, 21, 22, 23, 24, 25, 27, 28, 68, 174, 196, 485, 499], "also": [1, 2, 3, 8, 9, 11, 15, 16, 20, 32, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 70, 71, 73, 78, 79, 80, 83, 85, 95, 98, 99, 100, 101, 102, 106, 107, 108, 113, 115, 120, 121, 126, 128, 132, 135, 138, 142, 149, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 235, 237, 238, 239, 241, 243, 244, 245, 249, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 281, 282, 285, 286, 292, 293, 306, 311, 314, 334, 342, 344, 345, 346, 347, 348, 349, 353, 365, 366, 371, 372, 373, 380, 381, 383, 384, 385, 387, 388, 389, 394, 396, 400, 403, 405, 413, 414, 415, 416, 417, 420, 427, 428, 438, 440, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 496, 497, 498, 499, 501, 503, 504], "impact": [1, 2, 3, 13, 22, 23, 25, 149, 233, 236, 288, 380, 382, 397, 400, 402, 413, 483, 485, 497, 498], "memori": [1, 3, 8, 27, 36, 39, 43, 48, 56, 62, 64, 66, 67, 68, 71, 73, 78, 84, 85, 95, 97, 98, 100, 101, 102, 104, 106, 107, 111, 132, 133, 134, 135, 138, 139, 142, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 229, 253, 268, 274, 275, 278, 280, 282, 283, 285, 300, 310, 311, 312, 342, 344, 345, 346, 347, 348, 349, 353, 369, 413, 414, 415, 416, 417, 472, 474, 476, 479, 482, 483, 485, 497, 501, 503], "manag": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 290, 308, 313, 356, 411, 412, 420, 421, 422, 423, 448, 453, 476, 477, 485, 486, 489, 494, 503], "kei": [1, 2, 7, 15, 16, 18, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 100, 101, 102, 103, 112, 113, 115, 118, 120, 121, 126, 132, 135, 138, 142, 148, 149, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 287, 289, 291, 301, 302, 305, 308, 313, 315, 316, 330, 332, 342, 344, 345, 346, 347, 348, 349, 353, 357, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 438, 440, 452, 453, 454, 456, 457, 458, 462, 476, 478, 479, 482, 484, 485, 486, 487, 489, 494, 495, 496, 497, 498, 499, 501, 503, 504], "control": [1, 3, 5, 8, 18, 32, 33, 40, 41, 42, 49, 70, 75, 79, 80, 112, 113, 115, 120, 132, 135, 136, 137, 138, 142, 149, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 201, 204, 205, 216, 235, 295, 296, 297, 298, 308, 313, 315, 316, 330, 334, 341, 343, 369, 370, 371, 380, 382, 383, 397, 398, 400, 404, 413, 416, 420, 425, 433, 438, 448, 476, 477, 479, 482, 483, 484, 485, 486, 487, 488, 489, 497, 498, 499, 501, 503], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 99, 100, 101, 102, 103, 107, 115, 118, 119, 126, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 148, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 225, 226, 230, 233, 236, 241, 243, 245, 246, 248, 249, 253, 254, 256, 266, 268, 269, 272, 273, 274, 275, 276, 278, 282, 285, 286, 301, 306, 307, 308, 309, 311, 312, 313, 317, 318, 319, 320, 321, 327, 329, 339, 342, 344, 345, 346, 347, 348, 349, 353, 358, 359, 360, 361, 365, 366, 369, 370, 371, 372, 380, 381, 382, 383, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 438, 440, 449, 454, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 496, 497, 498, 499, 500, 501, 504], "storing_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 483, 498], "dure": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 39, 40, 44, 52, 53, 54, 55, 60, 61, 63, 64, 67, 68, 69, 70, 72, 73, 79, 80, 84, 95, 96, 97, 98, 99, 104, 109, 112, 113, 115, 118, 120, 132, 135, 138, 139, 142, 149, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 195, 198, 202, 206, 207, 221, 222, 225, 228, 233, 236, 238, 240, 241, 243, 247, 251, 263, 265, 268, 270, 272, 273, 275, 276, 277, 282, 283, 285, 288, 290, 291, 308, 313, 320, 365, 382, 400, 413, 416, 420, 422, 423, 453, 458, 476, 478, 482, 483, 484, 485, 488, 489, 490, 492, 497, 498, 499, 501, 504], "heurist": [1, 4, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 287, 365, 370, 482, 486, 490, 504], "usual": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 97, 118, 126, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 273, 323, 400, 405, 413, 416, 419, 420, 421, 422, 423, 424, 439, 475, 476, 477, 478, 479, 482, 483, 484, 485, 488, 490, 491, 498, 501, 504], "same": [1, 2, 3, 4, 18, 20, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 100, 101, 102, 119, 120, 121, 124, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 148, 149, 150, 153, 157, 158, 162, 163, 164, 165, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 225, 233, 235, 236, 241, 243, 246, 247, 248, 249, 265, 273, 274, 275, 282, 285, 286, 292, 293, 307, 312, 314, 317, 318, 319, 320, 330, 338, 342, 344, 345, 346, 347, 348, 349, 353, 361, 373, 381, 383, 396, 398, 401, 403, 405, 406, 410, 413, 414, 415, 416, 417, 476, 478, 482, 483, 484, 487, 488, 490, 494, 495, 496, 497, 498, 500, 501, 504], "default": [1, 2, 3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 121, 126, 128, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 330, 332, 333, 334, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 361, 362, 363, 365, 366, 367, 368, 369, 370, 373, 374, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 468, 472, 476, 478, 479, 482, 483, 484, 485, 488, 497, 500, 501, 503, 504], "behavior": [1, 2, 3, 4, 15, 16, 27, 36, 43, 48, 56, 66, 67, 73, 78, 83, 85, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 226, 233, 236, 249, 254, 267, 275, 283, 285, 288, 308, 309, 313, 339, 344, 349, 353, 382, 388, 396, 400, 405, 413, 415, 416, 438, 448, 453, 477, 483, 485, 497, 498, 499, 501], "besid": 1, "those": [1, 2, 3, 5, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 207, 225, 230, 233, 236, 243, 249, 268, 269, 272, 276, 313, 329, 366, 370, 371, 372, 460, 470, 471, 477, 482, 483, 487, 488, 498, 499, 504], "choos": [1, 3, 11, 58, 132, 135, 153, 308, 313, 400, 474, 478, 482, 483, 484, 486, 497, 498, 501, 503], "follow": [1, 2, 3, 6, 7, 8, 11, 20, 36, 43, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 78, 83, 85, 95, 97, 98, 100, 101, 102, 113, 120, 121, 132, 133, 134, 135, 138, 141, 142, 143, 148, 149, 150, 156, 159, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 221, 225, 245, 253, 278, 282, 283, 285, 292, 293, 306, 308, 311, 313, 314, 342, 344, 345, 346, 347, 348, 349, 353, 363, 366, 367, 368, 379, 380, 381, 382, 383, 384, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 440, 458, 476, 477, 478, 479, 482, 483, 484, 485, 486, 489, 490, 496, 497, 498, 499, 501, 503, 504], "max_frames_per_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 461, 482, 484, 503], "frame": [1, 2, 11, 15, 16, 18, 21, 22, 23, 25, 27, 29, 56, 95, 225, 241, 285, 287, 305, 330, 365, 439, 440, 442, 445, 447, 451, 453, 458, 461, 462, 482, 483, 484, 485, 488, 497, 498, 501, 503, 504], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 113, 114, 115, 119, 120, 122, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 157, 158, 159, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 316, 320, 321, 322, 324, 325, 328, 330, 333, 334, 336, 341, 342, 344, 345, 346, 347, 348, 349, 353, 361, 363, 365, 368, 369, 370, 372, 373, 376, 381, 382, 383, 389, 396, 397, 398, 400, 401, 403, 405, 406, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 438, 439, 442, 453, 476, 478, 479, 483, 484, 485, 486, 487, 488, 490, 491, 497, 498, 499, 501, 503, 504], "frames_per_batch": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 45, 56, 68, 76, 222, 225, 258, 308, 313, 461, 482, 483, 484, 485, 486, 490, 492, 497, 498, 501, 503], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 36, 40, 41, 43, 47, 48, 49, 51, 52, 54, 56, 57, 66, 67, 70, 72, 73, 75, 77, 78, 79, 85, 95, 97, 101, 102, 112, 113, 115, 118, 120, 121, 123, 126, 132, 135, 138, 139, 142, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 244, 246, 247, 253, 258, 261, 266, 267, 268, 269, 273, 274, 280, 282, 283, 285, 286, 287, 302, 305, 306, 307, 308, 311, 313, 319, 320, 324, 331, 332, 340, 344, 349, 353, 356, 362, 363, 368, 370, 372, 382, 397, 400, 413, 415, 416, 420, 426, 429, 430, 431, 432, 434, 435, 436, 437, 440, 453, 455, 470, 471, 476, 478, 482, 483, 484, 485, 488, 489, 490, 492, 497, 498, 499, 500, 501, 503, 504], "init_random_fram": [1, 15, 16, 18, 21, 22, 23, 25, 27, 461, 482, 483, 486, 492], "rand_step": [1, 2, 3, 45, 76, 132, 135, 136, 137, 138, 139, 141, 142, 143, 150, 151, 152, 156, 157, 158, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 244, 268, 282, 499, 503, 504], "reset_at_each_it": [1, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 482], "split_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 97, 98, 482, 483, 484], "trajectori": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 43, 46, 47, 56, 57, 77, 79, 85, 95, 97, 98, 112, 113, 120, 121, 126, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 254, 266, 273, 285, 289, 313, 316, 330, 400, 415, 420, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 449, 474, 478, 482, 483, 484, 485, 487, 490, 492, 499, 503, 504], "pad": [1, 2, 3, 32, 65, 81, 97, 98, 101, 198, 199, 200, 204, 205, 207, 209, 225, 272, 292, 293, 295, 296, 313, 317, 318, 319, 344, 345, 346, 348, 349, 353, 413, 455, 495], "along": [1, 2, 3, 15, 16, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 100, 101, 102, 108, 113, 115, 120, 121, 126, 128, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 224, 225, 226, 247, 249, 251, 254, 261, 265, 271, 285, 313, 314, 317, 318, 323, 342, 344, 345, 346, 347, 348, 349, 353, 362, 366, 369, 370, 383, 398, 405, 413, 414, 415, 416, 417, 482, 483, 485, 487, 489, 497, 498, 499, 501, 503], "point": [1, 2, 3, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 102, 105, 112, 113, 116, 126, 127, 130, 131, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 285, 315, 344, 349, 353, 369, 379, 390, 413, 415, 416, 458, 475, 483, 484, 496, 497, 498, 499, 501, 503, 504], "boolean": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 113, 120, 121, 142, 193, 217, 221, 230, 254, 266, 310, 317, 318, 330, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 476, 479, 485], "repres": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 40, 41, 45, 49, 51, 58, 75, 76, 78, 79, 85, 98, 107, 132, 135, 136, 137, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 241, 254, 270, 282, 285, 302, 317, 318, 332, 338, 349, 362, 363, 367, 368, 409, 420, 455, 476, 477, 482, 484, 485, 486, 487, 488, 489, 497, 498], "valid": [1, 2, 3, 32, 62, 64, 65, 84, 85, 99, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 179, 183, 184, 185, 188, 191, 192, 193, 221, 254, 273, 275, 285, 287, 292, 293, 310, 314, 317, 318, 330, 382, 389, 397, 400, 403, 413, 420, 421, 422, 423, 455, 476, 479, 486, 504], "exploration_typ": [1, 15, 16, 18, 21, 22, 23, 25, 27, 453, 474, 477, 482, 483], "strategi": [1, 2, 3, 18, 101, 118, 153, 199, 218, 305, 318, 326, 353, 413, 476, 477, 479, 482, 483, 486, 488, 497, 498, 501, 503], "reset_when_don": [1, 15, 16, 18, 21], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 92, 100, 101, 102, 108, 112, 113, 115, 120, 121, 132, 135, 138, 142, 149, 150, 156, 162, 163, 164, 165, 166, 171, 172, 173, 176, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 224, 225, 231, 237, 245, 266, 267, 268, 273, 275, 281, 282, 283, 285, 286, 287, 292, 293, 308, 313, 317, 318, 319, 320, 329, 342, 343, 344, 345, 346, 347, 348, 349, 353, 362, 366, 367, 370, 373, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 406, 413, 414, 415, 416, 417, 418, 440, 458, 468, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 497, 498, 499, 500, 501, 503, 504], "organ": [1, 2, 494, 499, 501], "within": [1, 2, 3, 15, 16, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 107, 112, 113, 121, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 283, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 342, 344, 345, 346, 347, 348, 349, 353, 356, 361, 363, 365, 368, 370, 373, 376, 377, 385, 390, 405, 413, 414, 415, 416, 417, 418, 420, 438, 440, 477, 478, 483, 486, 487, 488, 489, 490, 491, 492, 497, 499, 503], "differ": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 102, 112, 115, 118, 132, 133, 134, 135, 138, 139, 142, 148, 149, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 225, 230, 234, 235, 246, 249, 256, 265, 273, 275, 277, 285, 286, 302, 306, 307, 311, 312, 314, 316, 319, 320, 321, 332, 344, 349, 353, 370, 396, 398, 400, 409, 413, 415, 416, 420, 421, 422, 426, 427, 428, 453, 458, 460, 470, 471, 476, 477, 478, 479, 482, 483, 484, 486, 487, 489, 491, 495, 496, 497, 498, 499, 500, 501, 503, 504], "how": [1, 2, 3, 11, 20, 22, 23, 25, 33, 36, 43, 48, 56, 63, 66, 67, 73, 78, 79, 102, 112, 113, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 246, 285, 321, 344, 349, 353, 366, 380, 382, 395, 397, 398, 400, 413, 415, 416, 440, 442, 458, 475, 476, 477, 482, 483, 484, 485, 486, 487, 488, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "tabl": [1, 36, 477, 483, 488], "summar": [1, 3, 499], "what": [1, 3, 8, 11, 42, 43, 63, 83, 95, 113, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 204, 205, 216, 237, 268, 273, 367, 383, 394, 398, 405, 413, 416, 475, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 497, 498, 499, 500, 501, 503, 504], "expect": [1, 2, 3, 4, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 102, 113, 119, 120, 132, 135, 138, 142, 150, 156, 159, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 240, 242, 244, 245, 246, 247, 249, 251, 253, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 306, 307, 308, 311, 312, 313, 319, 320, 330, 344, 349, 353, 363, 369, 372, 380, 381, 382, 383, 384, 385, 387, 388, 389, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 410, 413, 415, 416, 418, 420, 462, 475, 477, 478, 479, 482, 484, 485, 487, 488, 489, 490, 494, 495, 497, 498, 499, 501, 504], "n": [1, 2, 3, 6, 7, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 112, 113, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 235, 240, 277, 285, 306, 307, 311, 316, 327, 329, 330, 344, 349, 353, 365, 370, 380, 381, 389, 398, 413, 415, 416, 419, 455, 476, 479, 483, 485, 486, 495, 501, 503, 504], "b": [1, 2, 3, 7, 8, 29, 32, 40, 41, 43, 49, 62, 64, 66, 70, 71, 72, 73, 75, 78, 79, 80, 85, 100, 101, 106, 107, 126, 135, 189, 201, 243, 276, 306, 307, 310, 311, 312, 319, 320, 322, 323, 331, 340, 342, 344, 345, 346, 347, 348, 349, 353, 373, 413, 414, 416, 417, 420, 421, 422, 423, 424, 426, 440, 483, 494, 501], "cat_result": [1, 15, 16], "na": [1, 185, 188, 203], "t": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 112, 113, 115, 119, 120, 121, 126, 132, 135, 138, 139, 141, 142, 150, 157, 158, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 243, 244, 245, 252, 253, 254, 255, 256, 257, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 280, 281, 282, 285, 286, 306, 308, 310, 311, 313, 317, 330, 342, 344, 345, 346, 347, 348, 349, 353, 362, 369, 380, 400, 404, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 426, 440, 447, 458, 460, 472, 475, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 496, 497, 498, 499, 500, 501, 503, 504], "p": [1, 2, 4, 112, 113, 115, 118, 139, 169, 170, 290, 291], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 36, 43, 48, 56, 66, 67, 73, 78, 95, 97, 98, 102, 121, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 233, 234, 236, 244, 253, 258, 262, 267, 268, 271, 273, 274, 275, 278, 280, 281, 283, 285, 286, 306, 309, 311, 314, 319, 334, 338, 339, 344, 349, 353, 369, 370, 372, 379, 380, 381, 383, 384, 385, 387, 388, 389, 396, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 460, 470, 471, 472, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 497, 498, 499, 500, 501, 504], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 74, 75, 79, 83, 85, 86, 87, 88, 89, 90, 95, 98, 100, 101, 103, 104, 111, 115, 126, 132, 135, 138, 141, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 189, 191, 192, 193, 204, 233, 234, 236, 244, 249, 268, 271, 275, 276, 286, 310, 313, 314, 320, 321, 342, 345, 346, 347, 348, 366, 369, 370, 372, 373, 379, 380, 381, 383, 384, 385, 387, 388, 389, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 420, 421, 422, 423, 440, 449, 460, 470, 471, 472, 474, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 490, 491, 495, 497, 498, 499, 501, 503, 504], "dimens": [1, 3, 15, 16, 18, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 70, 71, 72, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 100, 101, 106, 107, 108, 113, 120, 121, 126, 128, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 189, 190, 191, 192, 193, 198, 209, 210, 218, 224, 225, 226, 240, 247, 249, 251, 254, 261, 264, 265, 268, 271, 277, 282, 283, 292, 293, 294, 299, 300, 308, 311, 313, 314, 317, 318, 319, 322, 323, 328, 331, 335, 336, 337, 338, 341, 342, 345, 346, 347, 348, 349, 353, 362, 365, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 472, 474, 476, 478, 482, 483, 484, 485, 487, 494, 497, 498, 499, 501], "time": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 85, 95, 96, 97, 98, 101, 102, 103, 106, 115, 126, 132, 133, 134, 135, 138, 139, 142, 148, 149, 150, 153, 159, 162, 163, 164, 165, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 216, 224, 225, 226, 247, 254, 261, 268, 269, 270, 273, 275, 282, 285, 291, 303, 306, 311, 313, 330, 344, 349, 353, 356, 365, 370, 381, 382, 383, 389, 392, 396, 397, 398, 400, 401, 403, 405, 406, 413, 415, 416, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 458, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 497, 498, 499, 501, 503, 504], "adapt": [1, 33, 219, 247, 266, 282, 288, 397, 476, 482, 486, 499], "equal": [1, 15, 16, 21, 36, 85, 95, 102, 113, 120, 121, 135, 157, 160, 161, 162, 171, 191, 248, 249, 292, 293, 306, 308, 311, 313, 314, 317, 318, 320, 382, 400, 404, 409, 413, 449, 470, 471, 482, 484, 500], "introduc": [1, 2, 112, 113, 162, 171, 306, 308, 311, 313, 330, 482, 497], "some": [1, 2, 3, 4, 7, 8, 9, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 70, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 97, 102, 106, 108, 115, 126, 128, 132, 133, 134, 135, 138, 141, 142, 143, 148, 149, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 253, 268, 275, 278, 285, 295, 308, 336, 344, 349, 353, 370, 371, 372, 413, 415, 416, 440, 449, 461, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 497, 498, 499, 501, 503, 504], "confus": [1, 34, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 285, 344, 349, 353, 413, 415, 416], "other": [1, 2, 3, 4, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 100, 101, 102, 106, 107, 108, 109, 115, 118, 119, 120, 121, 122, 124, 128, 132, 135, 138, 141, 142, 143, 147, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 228, 230, 234, 235, 255, 262, 268, 271, 278, 282, 283, 285, 290, 305, 306, 308, 313, 323, 342, 344, 345, 346, 347, 348, 349, 353, 356, 361, 363, 368, 370, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 414, 415, 416, 417, 418, 420, 438, 455, 470, 471, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 497, 498, 499, 500, 503, 504], "better": [1, 3, 8, 9, 15, 16, 32, 149, 183, 184, 185, 188, 190, 200, 308, 313, 353, 478, 484, 487, 499, 503], "consist": [1, 2, 3, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 245, 281, 285, 290, 293, 314, 344, 349, 353, 413, 415, 416, 476, 482, 483, 484, 495, 499, 500, 504], "interact": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 194, 197, 275, 366, 370, 476, 482, 484, 486, 487, 488, 490, 497, 498, 499, 504], "keep": [1, 2, 3, 4, 7, 8, 16, 63, 70, 79, 80, 102, 115, 119, 126, 135, 162, 171, 202, 216, 249, 253, 280, 282, 283, 285, 330, 365, 382, 400, 413, 415, 440, 451, 458, 482, 483, 484, 485, 490, 491, 492, 498, 499, 501, 504], "separ": [1, 2, 4, 8, 15, 16, 18, 21, 22, 25, 27, 29, 32, 40, 41, 49, 70, 75, 79, 80, 95, 196, 225, 253, 280, 381, 384, 387, 389, 401, 403, 405, 406, 420, 476, 478, 482, 483, 488, 489, 497, 498, 501, 504], "interchang": [1, 319, 320, 484, 487, 491, 495, 500, 501], "between": [1, 2, 3, 4, 5, 15, 16, 17, 18, 21, 24, 27, 29, 30, 31, 33, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 85, 100, 101, 102, 108, 112, 113, 115, 116, 119, 120, 121, 128, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 235, 248, 259, 270, 273, 275, 282, 283, 285, 292, 293, 301, 306, 308, 313, 314, 319, 320, 342, 344, 345, 346, 347, 348, 349, 351, 353, 363, 366, 370, 380, 382, 383, 384, 387, 388, 389, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 420, 453, 458, 476, 478, 482, 483, 485, 486, 490, 494, 495, 497, 498, 499, 501, 504], "wherea": [1, 2, 28, 29, 36, 43, 48, 56, 58, 66, 67, 73, 78, 102, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 157, 158, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 235, 273, 275, 285, 344, 349, 353, 383, 398, 403, 413, 415, 416, 479, 491], "correspond": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 243, 253, 268, 273, 275, 280, 282, 283, 285, 290, 305, 308, 311, 313, 317, 318, 330, 342, 344, 345, 346, 347, 348, 349, 353, 366, 370, 383, 385, 388, 389, 403, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 476, 477, 482, 483, 484, 486, 487, 489, 490, 491, 497, 498, 499, 500], "sub": [1, 2, 3, 15, 16, 21, 22, 23, 25, 27, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 95, 102, 120, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 254, 273, 274, 283, 285, 344, 349, 353, 371, 372, 413, 415, 416, 449, 458, 476, 477, 478, 482, 483, 484, 490, 496, 503, 504], "doesn": [1, 4, 36, 43, 48, 56, 66, 67, 73, 78, 102, 126, 132, 135, 138, 142, 150, 157, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 233, 236, 285, 286, 310, 344, 349, 353, 413, 415, 416, 486, 487], "understood": [1, 482], "serv": [1, 3, 22, 25, 27, 144, 476, 501, 503, 504], "basi": [1, 126, 319, 501, 503], "we": [1, 2, 3, 5, 7, 9, 11, 30, 31, 32, 33, 36, 40, 43, 48, 51, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 95, 97, 102, 106, 119, 121, 126, 132, 133, 134, 135, 138, 139, 142, 146, 148, 149, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 230, 245, 253, 256, 262, 273, 278, 281, 282, 283, 285, 286, 289, 313, 317, 319, 320, 321, 344, 349, 353, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 440, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497, 498, 499, 500, 501, 503, 504], "anoth": [1, 2, 3, 8, 14, 17, 19, 20, 24, 26, 31, 51, 78, 83, 101, 107, 113, 120, 132, 135, 138, 141, 142, 143, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 205, 222, 231, 233, 234, 236, 268, 274, 314, 366, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 416, 418, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 478, 482, 484, 485, 486, 488, 489, 496, 497, 498, 499, 504], "wise": [1, 247], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 102, 107, 112, 113, 120, 121, 132, 135, 138, 142, 146, 150, 157, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 225, 229, 230, 243, 253, 265, 268, 273, 274, 275, 278, 280, 283, 285, 290, 308, 310, 313, 314, 321, 341, 344, 349, 353, 369, 370, 371, 372, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 438, 440, 442, 476, 477, 479, 482, 483, 484, 485, 487, 488, 489, 491, 494, 495, 497, 498, 499, 501, 503, 504], "op": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 44, 52, 53, 54, 55, 58, 59, 60, 61, 83, 86, 87, 88, 89, 90, 248, 281, 287, 290, 305, 440, 460], "sinc": [1, 2, 3, 4, 5, 7, 11, 29, 30, 31, 32, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 95, 102, 112, 113, 121, 126, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 168, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 231, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 319, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 362, 363, 365, 367, 368, 373, 376, 413, 415, 416, 438, 440, 476, 478, 482, 483, 484, 485, 487, 488, 489, 494, 497, 499, 500, 501, 503, 504], "goal": [1, 3, 4, 95, 96, 97, 98, 150, 192, 267, 476, 482, 483, 484, 485, 494, 498, 499], "policy_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 483], "explicitli": [1, 2, 3, 4, 39, 84, 103, 104, 111, 115, 221, 329, 366, 448, 478, 483, 485, 490, 497, 498, 501], "do": [1, 2, 3, 4, 7, 58, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 190, 191, 192, 193, 201, 203, 204, 205, 216, 218, 230, 254, 268, 273, 281, 282, 308, 313, 320, 322, 359, 370, 398, 413, 416, 420, 440, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 498, 499, 501, 503, 504], "deepcopi": [1, 321, 398, 413, 416, 497], "place": [1, 2, 3, 19, 33, 36, 40, 42, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 106, 108, 115, 118, 120, 128, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 221, 229, 237, 253, 268, 274, 275, 278, 280, 281, 282, 285, 321, 342, 344, 345, 346, 347, 348, 349, 353, 361, 365, 369, 413, 414, 415, 416, 417, 420, 455, 460, 461, 476, 478, 483, 484, 488, 491, 497, 498, 499, 501], "instanti": [1, 2, 3, 15, 16, 27, 29, 30, 62, 63, 64, 68, 69, 70, 71, 79, 80, 83, 85, 95, 96, 97, 98, 100, 101, 112, 113, 115, 146, 149, 189, 193, 221, 243, 268, 320, 342, 345, 346, 347, 348, 414, 417, 420, 421, 422, 423, 424, 438, 482, 483, 488, 489, 491, 497, 498, 499, 501, 504], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 100, 101, 102, 115, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 149, 150, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 216, 218, 224, 225, 228, 229, 233, 234, 236, 239, 245, 248, 249, 253, 261, 263, 265, 268, 269, 274, 275, 278, 280, 282, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 319, 320, 321, 324, 325, 328, 330, 333, 334, 336, 341, 342, 344, 345, 346, 347, 348, 349, 353, 356, 361, 363, 365, 368, 369, 370, 372, 373, 376, 377, 380, 381, 382, 383, 392, 396, 398, 400, 401, 402, 403, 405, 406, 410, 413, 414, 415, 416, 417, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 454, 458, 461, 470, 471, 472, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 501, 503, 504], "graph": [1, 3, 4, 8, 43, 66, 78, 133, 134, 148, 149, 200, 344, 349, 353, 411, 412, 413, 416, 482, 486, 499], "reli": [1, 2, 3, 11, 32, 67, 73, 268, 306, 307, 308, 311, 312, 313, 351, 380, 400, 420, 478, 482, 484, 486, 488, 490, 499, 504], "third": [1, 249, 270, 363, 497, 498], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 49, 62, 64, 71, 75, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417, 476, 482, 483, 484, 485, 486, 489, 490, 495, 497, 498, 499, 503, 504], "limit": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 200, 204, 205, 225, 245, 380, 382, 397, 398, 400, 402, 413, 416, 476, 478, 482, 483, 485, 497, 498, 499], "chart": 1, "show": [1, 2, 11, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 285, 320, 344, 349, 353, 413, 415, 416, 440, 482, 484, 485, 486, 494, 497, 498, 499, 501, 503], "decis": [1, 2, 3, 294, 299, 328, 361, 386, 399, 477, 485, 487, 488, 497, 498, 501, 504], "multiprocess": [1, 2, 3, 14, 15, 16, 22, 23, 25, 70, 79, 80, 95, 107, 109, 115, 132, 139, 140, 162, 166, 171, 282, 283, 482, 483, 484, 485, 490, 497, 498, 499, 500, 504], "ensur": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 36, 43, 48, 56, 63, 66, 67, 73, 78, 79, 85, 102, 112, 113, 119, 132, 135, 138, 142, 147, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 225, 253, 266, 275, 278, 282, 283, 285, 308, 313, 344, 349, 353, 362, 382, 397, 400, 413, 415, 416, 476, 477, 483, 484, 499, 501], "flexibl": [1, 3, 9, 157, 183, 407, 476, 478, 479, 482, 486, 495, 501, 504], "extens": [1, 2, 63, 70, 79, 80, 121, 290, 476, 479, 501], "mechan": [1, 4, 14, 17, 19, 24, 26, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 285, 344, 349, 353, 413, 415, 416, 476, 483, 489, 499], "accommod": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 487, 488], "variou": [1, 2, 3, 14, 135, 274, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 407, 413, 416, 418, 440, 470, 471, 476, 482, 483, 484, 486, 487, 488, 489, 491, 497, 498, 501, 504], "deploy": [1, 486], "scenario": [1, 2, 19, 24, 26, 154, 155, 162, 176, 177, 230, 273, 413, 438, 476, 482, 488, 497, 498, 499], "facilit": [1, 2, 3, 7, 252, 253, 268, 278, 280, 358, 359, 360, 477, 482, 485, 488, 499], "weightupdaterbas": [1, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "These": [1, 2, 7, 51, 72, 129, 176, 253, 280, 283, 416, 476, 477, 478, 482, 484, 497, 498, 499, 501, 504], "base": [1, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 51, 63, 70, 73, 79, 80, 84, 112, 113, 117, 123, 126, 127, 129, 130, 132, 133, 134, 135, 138, 142, 146, 148, 149, 150, 156, 157, 158, 162, 163, 166, 171, 172, 173, 176, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 199, 200, 202, 204, 207, 208, 209, 216, 230, 234, 258, 272, 274, 278, 279, 308, 313, 319, 321, 344, 349, 353, 358, 364, 380, 381, 383, 384, 385, 387, 388, 389, 391, 396, 400, 401, 402, 403, 405, 406, 447, 458, 477, 478, 479, 482, 483, 485, 487, 488, 489, 491, 494, 495, 497, 498, 499, 501, 504], "implement": [1, 2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 82, 83, 86, 87, 88, 89, 90, 102, 110, 112, 122, 123, 132, 135, 138, 142, 150, 156, 157, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 233, 234, 238, 241, 245, 247, 255, 256, 262, 266, 272, 274, 275, 276, 282, 283, 285, 286, 290, 292, 306, 307, 308, 309, 311, 312, 313, 337, 338, 339, 344, 349, 353, 380, 381, 383, 386, 387, 388, 394, 396, 398, 399, 400, 402, 403, 405, 413, 415, 416, 438, 449, 463, 476, 477, 479, 482, 483, 484, 485, 486, 497, 498, 499, 503], "logic": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 497], "allow": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 36, 40, 41, 43, 48, 49, 56, 58, 60, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 85, 95, 100, 101, 102, 107, 113, 115, 118, 120, 121, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 221, 222, 256, 283, 285, 286, 310, 314, 342, 344, 345, 346, 347, 348, 349, 353, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 407, 409, 413, 414, 415, 416, 417, 418, 476, 477, 479, 482, 484, 485, 486, 487, 488, 489, 495, 497, 498, 499, 501, 503, 504], "tailor": [1, 191, 476, 503], "need": [1, 2, 3, 4, 7, 8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 73, 78, 83, 102, 122, 126, 132, 135, 138, 142, 146, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 228, 230, 231, 240, 246, 253, 256, 269, 273, 274, 275, 280, 282, 283, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 321, 322, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 366, 367, 368, 369, 373, 376, 379, 389, 402, 403, 413, 415, 416, 419, 424, 440, 458, 472, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 497, 498, 499, 501, 503, 504], "handl": [1, 2, 3, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 31, 36, 43, 48, 56, 58, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 281, 282, 283, 285, 313, 314, 344, 349, 350, 353, 380, 398, 400, 413, 415, 416, 458, 470, 471, 476, 482, 483, 484, 485, 487, 489, 494, 498, 501], "well": [1, 2, 3, 8, 27, 32, 36, 43, 48, 56, 63, 65, 66, 67, 70, 73, 78, 79, 80, 83, 102, 113, 118, 122, 129, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 274, 275, 285, 286, 290, 295, 311, 333, 334, 344, 349, 353, 370, 398, 400, 405, 413, 415, 416, 420, 424, 476, 477, 482, 483, 485, 486, 487, 488, 489, 491, 500, 501, 503, 504], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 476], "everi": [1, 3, 8, 15, 16, 17, 18, 21, 29, 30, 36, 40, 41, 43, 48, 49, 56, 58, 60, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 85, 95, 96, 97, 98, 102, 115, 122, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 266, 267, 282, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 319, 320, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 382, 397, 398, 400, 413, 415, 416, 458, 479, 482, 483, 484, 485, 487, 488, 497, 498, 499], "even": [1, 2, 3, 4, 8, 11, 16, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 106, 107, 108, 109, 113, 120, 122, 124, 128, 132, 135, 138, 139, 142, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 217, 221, 482, 484, 487, 494, 497, 498, 499, 504], "simplest": [1, 43, 66, 78, 126, 344, 349, 353, 373, 413, 416, 482, 484, 485, 488, 497, 498, 501, 504], "vanillaweightupdat": 1, "dict": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 104, 113, 115, 120, 121, 132, 135, 138, 139, 140, 141, 142, 143, 150, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 245, 268, 273, 275, 281, 282, 283, 285, 286, 292, 293, 294, 295, 296, 297, 298, 299, 304, 314, 328, 342, 344, 345, 346, 347, 348, 349, 353, 366, 370, 383, 403, 405, 413, 414, 415, 416, 417, 440, 444, 445, 453, 458, 463, 464, 470, 471, 472, 477, 482, 483, 484, 501, 503, 504], "assum": [1, 2, 3, 6, 14, 15, 16, 17, 18, 24, 26, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 97, 98, 103, 104, 111, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 210, 224, 227, 232, 240, 253, 254, 261, 268, 275, 278, 280, 291, 308, 313, 341, 356, 373, 385, 389, 390, 403, 415, 418, 429, 430, 431, 432, 434, 435, 436, 437, 440, 482, 484, 496, 499], "divers": [1, 4, 162, 171], "abl": [1, 3, 51, 132, 153, 164, 165, 166, 172, 308, 313, 476, 482, 484, 485, 488, 496, 497, 498, 499, 501], "leav": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 70, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 189, 191, 192, 193, 217, 262, 342, 345, 346, 347, 348, 414, 417, 478, 482, 490, 501], "untouch": [1, 95, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 233, 234, 238, 245, 247, 255, 256, 262, 266, 272, 274, 276, 283, 285, 415], "particularli": [1, 2, 3, 202, 310, 486, 503, 504], "benefici": [1, 2, 310], "involv": [1, 141, 143, 144, 154, 155, 168, 222, 225, 273, 308, 313, 476, 487, 489], "complex": [1, 2, 3, 14, 17, 19, 20, 24, 26, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416, 476, 482, 483, 487, 488], "architectur": [1, 4, 200, 299, 489, 497, 498, 503], "special": [1, 3, 87, 89, 193, 474, 476, 482, 485, 486, 504], "hardwar": [1, 3, 486], "By": [1, 2, 3, 14, 17, 18, 19, 20, 24, 26, 40, 41, 49, 60, 75, 102, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 154, 155, 162, 163, 164, 165, 166, 168, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 247, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 341, 370, 398, 413, 415, 416, 448, 453, 472, 476, 478, 482, 485, 497, 500, 501, 504], "retriev": [1, 3, 14, 17, 20, 24, 26, 51, 62, 63, 64, 66, 68, 69, 70, 71, 79, 80, 85, 95, 96, 97, 98, 100, 101, 115, 118, 120, 121, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 198, 199, 200, 204, 205, 216, 226, 234, 237, 249, 289, 292, 316, 342, 345, 346, 347, 348, 365, 366, 370, 373, 377, 380, 381, 382, 383, 385, 397, 400, 401, 403, 405, 406, 413, 414, 417, 418, 420, 421, 422, 423, 472, 479, 483, 484, 488, 499, 504], "appli": [1, 2, 3, 4, 14, 17, 18, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 248, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 281, 282, 285, 290, 306, 311, 321, 338, 344, 349, 353, 362, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 397, 399, 400, 401, 402, 403, 405, 406, 413, 415, 416, 420, 438, 454, 476, 479, 482, 483, 484, 490, 494, 497, 499, 503, 504], "seamless": [1, 2, 314, 476, 495], "integr": [1, 2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 298, 308, 313, 316, 344, 349, 353, 369, 413, 415, 416, 477, 487, 488, 490, 494, 497, 498, 499, 500], "infrastructur": [1, 3, 497, 498], "transit": [1, 36, 43, 48, 56, 66, 67, 73, 78, 97, 102, 113, 121, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 288, 290, 344, 349, 353, 375, 413, 415, 416, 482, 485, 487, 488, 490, 497, 499, 501], "sampl": [1, 4, 8, 9, 30, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 106, 107, 108, 112, 113, 114, 115, 118, 119, 120, 121, 124, 126, 128, 132, 135, 138, 142, 150, 156, 159, 162, 163, 166, 171, 172, 173, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 281, 282, 283, 285, 287, 289, 300, 305, 309, 310, 316, 317, 318, 326, 328, 329, 330, 333, 338, 339, 344, 349, 353, 354, 357, 362, 363, 364, 366, 367, 368, 369, 370, 380, 381, 382, 383, 384, 385, 387, 397, 399, 400, 405, 406, 413, 415, 449, 455, 458, 461, 474, 477, 478, 482, 483, 484, 485, 486, 487, 488, 490, 492, 497, 498, 500, 503, 504], "attent": [1, 2, 8, 191, 225, 344, 349, 353, 413, 476, 482, 485, 495, 504], "given": [1, 2, 3, 15, 16, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 102, 113, 115, 120, 121, 132, 135, 138, 142, 150, 156, 160, 161, 162, 163, 166, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 229, 235, 243, 249, 253, 268, 272, 274, 275, 276, 278, 280, 282, 283, 285, 287, 289, 291, 302, 303, 305, 306, 308, 310, 311, 313, 316, 321, 332, 336, 344, 349, 353, 357, 362, 363, 365, 368, 369, 370, 371, 372, 374, 379, 384, 385, 387, 398, 413, 415, 416, 419, 420, 421, 422, 423, 424, 426, 450, 453, 468, 476, 477, 478, 479, 482, 483, 484, 487, 488, 489, 490, 491, 498, 499, 504], "built": [1, 2, 3, 5, 7, 115, 133, 134, 141, 148, 149, 159, 160, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 407, 413, 416, 418, 466, 468, 469, 472, 476, 482, 483, 484, 485, 486, 489, 491, 494, 499, 501, 504], "flatten": [1, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 126, 189, 222, 240, 342, 345, 346, 347, 348, 414, 415, 417, 420, 455, 474, 476, 485, 498], "suffici": [1, 3, 4, 482], "preprocess": [1, 2, 84, 95, 96, 97, 98, 274, 483, 486], "popul": [1, 2, 3, 15, 16, 18, 27, 29, 30, 63, 68, 69, 70, 77, 79, 80, 95, 96, 97, 98, 115, 191, 244, 268, 300, 321, 398, 413, 416, 482, 484, 485, 488, 490, 499, 501], "replaybuff": [1, 2, 3, 15, 16, 18, 21, 27, 29, 30, 45, 63, 68, 69, 76, 79, 80, 95, 96, 97, 98, 102, 106, 107, 112, 113, 114, 115, 120, 121, 130, 225, 254, 258, 285, 385, 390, 418, 466, 468, 474, 484, 486, 490, 492, 497, 498, 500, 501, 503], "lazytensorstorag": [1, 2, 15, 16, 18, 21, 29, 63, 70, 78, 79, 80, 112, 120, 121, 126, 258, 285, 484, 486, 492, 497, 498, 501], "lambda": [1, 2, 15, 16, 18, 21, 27, 28, 29, 30, 43, 51, 66, 70, 78, 85, 126, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 196, 215, 222, 230, 231, 243, 245, 268, 276, 283, 285, 286, 291, 341, 344, 349, 353, 362, 365, 366, 367, 391, 393, 394, 405, 413, 416, 420, 423, 431, 432, 436, 437, 438, 468, 476, 478, 482, 483, 486, 497, 498, 500, 501, 503, 504], "reshap": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 120, 126, 222, 308, 313, 314, 329, 438, 476, 484, 497, 498], "slice": [1, 2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 70, 74, 75, 83, 86, 87, 88, 89, 90, 95, 97, 113, 115, 120, 121, 218, 224, 225, 501], "recommend": [1, 2, 4, 7, 15, 16, 18, 21, 22, 23, 25, 27, 62, 63, 64, 70, 71, 79, 80, 85, 100, 101, 120, 126, 146, 183, 184, 185, 188, 189, 200, 225, 321, 342, 345, 346, 347, 348, 349, 351, 353, 382, 400, 414, 417, 476, 478, 490, 495, 497, 498], "achiev": [1, 2, 3, 4, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 267, 285, 291, 344, 349, 353, 366, 413, 415, 416, 455, 479, 482, 483, 484, 485, 486, 494, 497, 498, 499, 501, 503, 504], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 107, 109, 115, 126, 132, 135, 138, 139, 142, 146, 150, 162, 163, 164, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 222, 225, 230, 243, 253, 273, 274, 275, 278, 281, 282, 283, 285, 292, 293, 295, 296, 297, 298, 299, 300, 304, 308, 313, 314, 315, 319, 320, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 369, 370, 377, 383, 385, 390, 401, 403, 413, 414, 415, 416, 417, 418, 440, 455, 462, 463, 464, 468, 470, 471, 476, 477, 482, 483, 484, 485, 486, 488, 491, 494, 495, 497, 498, 499, 500, 501, 503, 504], "multidimension": [1, 2, 79, 112, 113, 501], "slicesampl": [1, 2, 95, 113, 121, 225, 501], "sampler": [1, 2, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 102, 106, 107, 108, 109, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 126, 128, 225, 254, 329, 385, 390, 418, 482, 484, 497, 498, 501], "One": [1, 2, 3, 4, 8, 34, 35, 39, 40, 41, 44, 49, 54, 55, 60, 61, 75, 84, 126, 132, 133, 134, 162, 166, 171, 172, 225, 258, 278, 287, 326, 369, 373, 404, 409, 444, 482, 483, 501, 504], "must": [1, 2, 3, 7, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 106, 107, 108, 109, 113, 115, 120, 121, 122, 123, 124, 126, 128, 132, 133, 135, 138, 139, 142, 148, 150, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 176, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 218, 221, 222, 225, 228, 230, 231, 237, 241, 243, 245, 247, 249, 251, 262, 265, 267, 268, 269, 272, 273, 275, 276, 277, 282, 285, 292, 293, 302, 308, 310, 313, 314, 317, 318, 319, 320, 332, 344, 349, 353, 357, 362, 363, 365, 366, 367, 368, 369, 370, 373, 374, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 404, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 442, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 476, 478, 482, 483, 484, 485, 488, 494, 496, 499, 501], "shape": [1, 2, 3, 15, 16, 18, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 112, 115, 120, 126, 128, 132, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 183, 184, 185, 188, 189, 190, 191, 192, 193, 196, 198, 199, 204, 205, 210, 216, 218, 222, 224, 226, 233, 236, 237, 238, 243, 245, 246, 249, 251, 255, 256, 258, 262, 265, 266, 268, 271, 276, 282, 284, 285, 289, 291, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 322, 326, 327, 328, 329, 330, 331, 332, 337, 338, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 377, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 409, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 449, 455, 458, 468, 476, 477, 478, 482, 483, 484, 485, 486, 488, 489, 492, 494, 495, 496, 497, 498, 500, 501, 503, 504], "clearli": [1, 2, 476], "practic": [1, 2, 3, 4, 5, 8, 29, 58, 95, 274, 309, 338, 339, 379, 475, 482, 483, 484, 485, 486, 489, 494, 497, 498, 500, 504], "dimension": [1, 63, 67, 70, 78, 79, 80, 191, 235, 308, 313, 420, 425, 433, 478, 498], "num_slic": [1, 2, 95, 113, 120, 121, 501], "4": [1, 2, 3, 7, 34, 36, 40, 41, 45, 49, 51, 54, 55, 56, 60, 63, 66, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 95, 96, 97, 98, 102, 106, 107, 108, 112, 113, 115, 120, 121, 128, 132, 133, 134, 135, 136, 137, 138, 142, 148, 149, 150, 151, 152, 153, 156, 158, 162, 163, 166, 169, 170, 171, 172, 173, 183, 184, 185, 188, 190, 191, 192, 193, 218, 219, 221, 222, 225, 230, 231, 237, 258, 265, 266, 267, 273, 282, 283, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 306, 307, 311, 312, 314, 316, 317, 318, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 340, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 374, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 438, 439, 476, 477, 481, 482, 483, 484, 485, 491, 497, 498, 499, 501, 502, 503, 504], "trajectory_kei": [1, 32, 120, 121], "traj_id": [1, 2, 3, 15, 16, 18, 29, 32, 45, 76, 222, 258, 490, 501], "total_fram": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 45, 56, 68, 76, 222, 225, 258, 458, 461, 468, 479, 482, 483, 484, 485, 486, 490, 492, 497, 498, 501, 503], "dim": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 70, 71, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 120, 189, 209, 225, 226, 247, 251, 264, 265, 268, 277, 282, 312, 336, 341, 342, 345, 346, 347, 348, 365, 414, 417, 472, 476, 478, 483, 484, 486, 497, 499, 501], "ndim": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 106, 108, 112, 113, 126, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 247, 285, 365], "parallelenv": [1, 2, 3, 15, 16, 18, 21, 25, 29, 30, 102, 126, 132, 135, 138, 142, 150, 157, 163, 164, 165, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 274, 283, 285, 308, 313, 415, 438, 469, 474, 482, 483, 484, 487, 496, 503, 504], "make_env": [1, 3, 162, 171, 177, 273, 282, 283, 438, 463, 464, 476, 482, 483, 503, 504], "regular": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 62, 64, 71, 85, 100, 101, 102, 112, 118, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 281, 282, 285, 288, 290, 301, 308, 313, 332, 342, 345, 346, 347, 348, 363, 367, 368, 369, 370, 390, 400, 414, 415, 416, 417, 460, 474, 479, 482, 483, 486, 487, 488, 492, 494, 501, 504], "behav": [1, 3, 144, 156, 306, 311, 326, 388, 396, 398, 413, 416, 486, 500], "accordingli": [1, 2, 3, 113, 187, 231, 247, 266, 267, 311, 367, 485], "3": [1, 2, 3, 6, 7, 10, 11, 15, 16, 18, 21, 27, 29, 30, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 106, 108, 112, 113, 115, 120, 121, 126, 128, 132, 135, 136, 137, 138, 141, 142, 143, 144, 145, 150, 153, 154, 155, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 219, 221, 222, 225, 229, 230, 231, 235, 237, 238, 243, 245, 249, 251, 253, 255, 256, 258, 261, 262, 265, 266, 267, 268, 271, 273, 274, 275, 276, 278, 280, 283, 285, 286, 288, 289, 291, 292, 293, 295, 296, 297, 299, 302, 304, 306, 307, 308, 311, 312, 313, 314, 316, 317, 319, 320, 321, 326, 329, 331, 341, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 362, 363, 366, 368, 369, 372, 373, 374, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 426, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 457, 477, 479, 481, 482, 483, 484, 485, 487, 488, 490, 491, 497, 498, 499, 501, 502, 503, 504], "isn": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 62, 64, 71, 85, 100, 101, 112, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 189, 191, 192, 193, 221, 237, 243, 342, 345, 346, 347, 348, 362, 369, 414, 417, 420, 488, 489, 491, 497, 498], "current": [1, 2, 3, 12, 14, 15, 16, 17, 24, 26, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 110, 113, 115, 121, 132, 135, 138, 142, 144, 150, 157, 160, 161, 162, 163, 166, 171, 172, 173, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 221, 222, 225, 243, 254, 267, 268, 269, 273, 274, 275, 283, 285, 303, 330, 334, 338, 342, 344, 345, 346, 347, 348, 349, 351, 353, 354, 365, 380, 382, 383, 390, 397, 400, 402, 403, 413, 414, 415, 416, 417, 420, 443, 476, 479, 482, 483, 484, 485, 489, 497, 498, 499, 501, 504], "fulli": [1, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 307, 310, 312, 344, 349, 353, 413, 415, 416, 483, 486, 489, 499, 501], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 115, 116, 119, 121, 122, 124, 126, 127, 128, 130, 131, 132, 135, 138, 139, 142, 143, 150, 157, 162, 163, 164, 165, 166, 171, 172, 173, 174, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 240, 241, 243, 244, 245, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 285, 291, 292, 293, 299, 300, 314, 323, 329, 342, 344, 345, 346, 347, 348, 349, 353, 361, 365, 369, 370, 371, 372, 380, 381, 382, 383, 384, 385, 387, 388, 389, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 420, 422, 423, 438, 440, 445, 458, 475, 476, 478, 482, 483, 484, 485, 486, 488, 489, 494, 497, 498, 499, 501, 503, 504], "consecut": [1, 3, 95, 119, 146, 313, 330, 440, 485, 487, 490, 498, 501, 504], "won": [1, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 139, 141, 142, 150, 157, 158, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 253, 280, 285, 342, 344, 345, 346, 347, 348, 349, 353, 380, 413, 414, 415, 416, 417, 458, 472, 483, 484, 487, 488], "therebi": [1, 33, 438, 478, 482, 483], "interrupt": [1, 2, 142, 193, 365, 426], "start": [1, 2, 3, 4, 5, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 33, 51, 68, 83, 84, 85, 95, 112, 113, 120, 121, 132, 135, 138, 139, 142, 147, 150, 153, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 232, 454, 481, 482, 483, 486, 493, 498, 499, 501, 502, 504], "get": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 43, 49, 51, 62, 63, 64, 66, 67, 70, 71, 73, 75, 78, 85, 95, 97, 100, 101, 102, 106, 108, 113, 120, 121, 122, 124, 126, 128, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 199, 204, 205, 219, 224, 226, 230, 233, 235, 236, 245, 249, 254, 267, 268, 271, 275, 282, 283, 305, 310, 342, 344, 345, 346, 347, 348, 349, 353, 357, 366, 367, 370, 377, 413, 414, 416, 417, 420, 421, 422, 423, 424, 440, 444, 476, 477, 478, 481, 482, 483, 484, 485, 486, 493, 495, 497, 498, 499, 501, 502, 503, 504], "rid": [1, 43, 66, 78, 344, 349, 353, 413, 416], "natur": [1, 2, 3, 13, 22, 23, 25, 183, 476, 482, 488, 489, 490, 501], "background": [1, 13, 15, 16, 21, 22, 23, 25, 30, 501], "simpli": [1, 3, 6, 62, 64, 71, 84, 85, 100, 101, 124, 126, 131, 189, 195, 238, 262, 281, 342, 345, 346, 347, 348, 398, 413, 414, 416, 417, 420, 476, 477, 478, 482, 484, 489, 494, 497, 498, 504], "replay_buff": [1, 2, 8, 15, 16, 18, 21, 27, 29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 225, 455, 468, 482, 483, 484, 490, 497, 498, 501], "rb": [1, 2, 15, 16, 18, 21, 29, 45, 63, 68, 69, 70, 76, 79, 80, 95, 96, 97, 98, 102, 107, 112, 113, 115, 120, 121, 126, 225, 258, 285, 483, 485, 486, 490, 492, 498, 500, 501, 503], "paus": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "sleep": [1, 15, 16, 18, 21, 29, 68, 139, 504], "10": [1, 2, 3, 7, 28, 32, 34, 35, 36, 39, 43, 44, 51, 52, 56, 63, 68, 69, 70, 72, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 102, 106, 107, 108, 112, 115, 120, 121, 126, 128, 132, 133, 134, 135, 138, 139, 142, 148, 149, 150, 156, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 196, 198, 199, 201, 203, 218, 219, 222, 224, 225, 230, 231, 267, 269, 270, 271, 282, 283, 285, 289, 291, 294, 295, 297, 299, 301, 305, 306, 307, 308, 310, 311, 312, 313, 316, 317, 318, 328, 330, 341, 366, 370, 373, 377, 381, 385, 387, 394, 400, 401, 402, 406, 418, 420, 421, 422, 423, 426, 440, 449, 479, 482, 483, 484, 485, 486, 487, 488, 492, 497, 499, 501, 503, 504], "i": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 45, 48, 49, 56, 63, 66, 67, 70, 73, 75, 76, 78, 80, 81, 85, 102, 106, 108, 112, 113, 120, 121, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 231, 232, 247, 253, 258, 261, 273, 275, 280, 285, 307, 308, 312, 313, 332, 344, 349, 353, 356, 363, 365, 366, 368, 369, 370, 380, 382, 383, 384, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 415, 416, 420, 421, 422, 423, 449, 461, 476, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 497, 498, 499, 501, 503, 504], "rang": [1, 2, 3, 4, 8, 63, 68, 69, 70, 72, 79, 80, 95, 96, 97, 98, 102, 106, 108, 115, 126, 132, 135, 138, 139, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 190, 191, 192, 193, 198, 258, 271, 282, 285, 286, 307, 312, 329, 352, 397, 405, 406, 478, 479, 482, 484, 485, 486, 489, 490, 492, 497, 498, 499, 501, 503], "optim_step": [1, 289, 316, 486, 492], "rest": [1, 15, 16, 21, 43, 290, 477, 484, 485, 497, 499, 503], "multithread": [1, 2, 3, 63, 70, 79, 80, 95, 97, 98, 99, 157, 158, 490, 501], "mind": [1, 3, 95, 113, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 497, 498], "gil": 1, "relat": [1, 2, 3, 4, 10, 40, 63, 162, 188, 240, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 483, 492, 499], "restrict": [1, 2, 3, 478, 483, 494, 500, 501, 504], "hand": [1, 2, 3, 7, 27, 40, 497, 498, 499], "let": [1, 2, 3, 6, 7, 11, 32, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 81, 102, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 285, 319, 320, 344, 349, 353, 362, 413, 415, 416, 453, 476, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "child": [1, 20, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 483], "fill": [1, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 95, 142, 193, 221, 268, 281, 313, 420, 485, 499, 500], "truli": [1, 281, 503], "decoupl": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 482, 489, 503], "been": [1, 2, 3, 5, 7, 8, 12, 22, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 115, 119, 132, 135, 138, 142, 146, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 245, 266, 267, 274, 275, 306, 308, 311, 313, 321, 365, 380, 398, 400, 402, 413, 416, 482, 483, 484, 485, 496, 497, 498, 499, 501, 503, 504], "shut": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 166, 172], "down": [1, 4, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 166, 172, 478, 485, 487], "async_shutdown": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 68], "mean": [1, 2, 3, 4, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 62, 64, 71, 79, 83, 85, 95, 100, 101, 107, 112, 113, 120, 121, 126, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 196, 221, 249, 273, 282, 283, 287, 288, 289, 300, 303, 306, 308, 310, 311, 313, 316, 328, 329, 337, 338, 342, 345, 346, 347, 348, 366, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 414, 416, 417, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 477, 478, 482, 483, 484, 486, 488, 497, 498, 499, 501, 504], "drastic": [1, 149, 162, 501], "load": [1, 2, 6, 7, 15, 16, 18, 21, 29, 30, 31, 36, 43, 45, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 108, 109, 115, 122, 123, 124, 128, 129, 132, 135, 137, 138, 142, 150, 162, 163, 166, 171, 172, 173, 174, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 282, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 413, 414, 415, 416, 417, 458, 472, 476, 479, 482, 484, 486, 494, 495, 501], "factor": [1, 8, 11, 33, 43, 56, 258, 285, 287, 288, 305, 309, 323, 330, 338, 339, 381, 387, 390, 391, 393, 404, 426, 482, 483, 486, 488, 492, 497, 498, 501, 504], "signific": [1, 3, 5, 8, 484, 503, 504], "understand": [1, 2, 8, 13, 22, 23, 25, 43, 476, 482, 483, 486, 487, 488, 494, 497, 498], "affect": [1, 3, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 231, 275, 283, 285, 344, 349, 353, 413, 415, 416, 420, 421, 422, 423, 497], "algorithm": [1, 2, 3, 8, 9, 13, 22, 23, 25, 156, 218, 265, 380, 400, 401, 403, 474, 478, 479, 482, 483, 484, 485, 486, 488, 489, 490, 491, 497, 498, 500, 501, 503], "legitim": [1, 478, 504], "unless": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 103, 119, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 283, 285, 290, 344, 349, 353, 380, 381, 383, 396, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 484], "benchmark": [1, 2, 3, 9, 133, 134, 142, 148, 149, 193], "backend": [1, 3, 7, 15, 16, 18, 21, 22, 23, 27, 28, 29, 85, 132, 135, 138, 141, 142, 150, 162, 163, 166, 171, 172, 173, 182, 183, 184, 185, 188, 191, 192, 193, 215, 286, 476, 479, 482, 484, 485, 486, 487, 490, 491, 495, 499], "gloo": [1, 22, 23, 28], "nccl": [1, 22, 23, 351], "mpi": [1, 22, 23], "distributeddatacollector": [1, 24, 28, 474], "rpc": [1, 25, 26, 28, 29, 30, 69], "rpcdatacollector": [1, 26, 28, 474], "launcher": [1, 22, 23, 25, 28], "rai": [1, 17, 18, 27, 29, 30, 31, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 350, 352, 476], "submitit": [1, 22, 23, 25, 28], "mode": [1, 3, 6, 13, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 132, 135, 138, 142, 147, 150, 157, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 233, 236, 267, 275, 282, 283, 285, 290, 300, 308, 309, 310, 313, 318, 326, 337, 338, 339, 344, 349, 353, 356, 366, 370, 382, 398, 400, 413, 415, 416, 438, 448, 453, 476, 477, 478, 482, 483, 497, 498, 503, 504], "find": [1, 4, 6, 7, 22, 23, 25, 63, 65, 81, 120, 121, 196, 287, 311, 330, 452, 456, 482, 483, 486, 488, 489, 494, 497, 498], "folder": [1, 2, 62, 64, 71, 85, 100, 101, 176, 189, 225, 342, 345, 346, 347, 348, 414, 417, 483], "machin": [1, 2, 7, 22, 23, 25, 56, 146, 497, 498, 503], "wonder": 1, "why": [1, 2, 3, 216, 478, 497, 499, 504], "instead": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 36, 39, 43, 48, 56, 66, 67, 68, 73, 78, 82, 85, 102, 112, 113, 132, 135, 138, 142, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 240, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 369, 373, 376, 380, 382, 383, 385, 388, 389, 390, 396, 397, 400, 401, 402, 403, 413, 415, 416, 418, 420, 424, 428, 472, 478, 486, 487, 488, 492, 499, 501, 504], "lower": [1, 2, 3, 27, 36, 37, 112, 113, 228, 282, 283, 333, 334, 373, 400, 484, 497, 499], "io": [1, 11, 95, 148, 149, 157, 160, 161, 174, 175, 311, 312, 486], "footprint": [1, 2, 501], "commun": [1, 2, 3, 24, 26, 150, 162, 166, 171, 192, 351, 475, 484, 504], "yet": [1, 133, 134, 148, 415, 500], "plai": [1, 3, 164, 165, 173, 183, 225, 483, 484, 489, 501, 504], "role": [1, 3, 101, 155, 183, 185, 188, 196, 204, 205, 349, 353, 416, 476, 483, 489, 495, 504], "opposit": [1, 497], "direct": [1, 2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 306, 311, 344, 349, 353, 398, 413, 415, 416, 483, 489, 495], "faster": [1, 2, 4, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 112, 157, 317, 420, 421, 422, 423, 485, 486, 497, 498], "share": [1, 3, 6, 8, 15, 16, 18, 21, 29, 32, 62, 64, 70, 71, 79, 80, 83, 85, 100, 101, 104, 106, 107, 108, 109, 113, 115, 116, 120, 122, 124, 128, 139, 162, 171, 189, 265, 273, 282, 283, 308, 313, 319, 320, 342, 345, 346, 347, 348, 358, 359, 360, 380, 381, 382, 383, 384, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 414, 417, 472, 474, 477, 478, 484, 486, 492, 494, 495, 496, 497, 498, 503, 504], "among": [1, 3, 58, 164, 165, 273, 389, 403, 478, 497, 498], "prohibit": [1, 3, 18, 126], "slow": [1, 3, 4, 11, 62, 64, 71, 85, 100, 101, 107, 120, 121, 189, 342, 345, 346, 347, 348, 414, 417], "compar": [1, 3, 126, 381, 383, 396, 401, 403, 405, 406, 453, 478, 482, 484, 486, 488, 489, 497, 498, 501, 504], "gpu": [1, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 106, 108, 128, 132, 135, 138, 142, 143, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 350, 353, 413, 415, 416, 482, 484, 485, 497, 498, 504], "driver": [1, 7], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 112, 113, 115, 118, 120, 121, 124, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 148, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 234, 237, 238, 239, 241, 243, 244, 245, 247, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 291, 305, 308, 313, 317, 318, 319, 320, 330, 342, 344, 345, 346, 347, 348, 349, 353, 357, 361, 362, 365, 366, 367, 369, 370, 373, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 408, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 428, 438, 440, 445, 447, 458, 469, 482, 483, 484, 486, 488, 491, 497, 498, 501, 503, 504], "mani": [1, 2, 3, 4, 70, 133, 134, 136, 137, 138, 141, 143, 144, 148, 149, 157, 158, 168, 191, 196, 198, 268, 380, 382, 389, 397, 400, 413, 476, 477, 482, 483, 484, 486, 487, 488, 490, 492, 497, 498, 499, 501, 503, 504], "eg": [1, 2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 106, 107, 108, 109, 122, 124, 128, 132, 135, 136, 137, 138, 141, 142, 143, 144, 146, 150, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 235, 266, 275, 286, 319, 342, 345, 346, 347, 348, 361, 414, 417, 440], "gymnasium": [1, 2, 3, 5, 15, 16, 18, 21, 29, 78, 132, 135, 138, 141, 142, 143, 147, 150, 151, 152, 162, 163, 166, 171, 172, 173, 182, 183, 184, 185, 188, 191, 192, 193, 215, 238, 262, 266, 281, 286, 483, 484, 486, 499, 503], "warn": [1, 3, 67, 73, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 282, 287, 305, 330, 448, 476, 483, 494, 495], "quickli": [1, 3, 483, 497, 498, 504], "becom": [1, 2, 3, 4, 27, 306, 311, 497, 498, 504], "quit": [1, 3, 11, 95, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 482, 483, 484, 486, 488, 497, 498, 504], "annoi": [1, 3], "filter": [1, 2, 3, 4, 84, 113, 120, 121, 380, 381, 383, 384, 388, 389, 396, 400, 401, 403, 487], "out": [1, 2, 3, 4, 5, 9, 14, 17, 19, 20, 24, 26, 27, 31, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 97, 100, 101, 102, 104, 113, 120, 121, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 265, 268, 285, 287, 306, 307, 311, 317, 318, 321, 322, 323, 342, 344, 345, 346, 347, 348, 349, 353, 357, 361, 362, 363, 366, 367, 368, 369, 370, 398, 411, 412, 413, 414, 415, 416, 417, 476, 478, 479, 482, 483, 484, 485, 486, 487, 488, 490, 497, 498, 499, 501, 503, 504], "still": [1, 2, 3, 9, 43, 66, 78, 85, 86, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 273, 330, 344, 349, 353, 397, 398, 413, 416, 476, 478, 482, 483, 485, 496, 499, 501, 504], "wish": [1, 3, 11, 15, 16, 21, 215, 489, 501], "displai": [1, 3, 7, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 458, 479, 482, 483, 494, 498, 499], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 121, 122, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 217, 218, 219, 221, 222, 225, 226, 229, 231, 233, 236, 237, 238, 240, 243, 244, 245, 247, 248, 249, 251, 253, 254, 255, 256, 258, 260, 261, 262, 265, 266, 268, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 330, 331, 332, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 353, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 380, 381, 382, 383, 384, 385, 387, 388, 389, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 447, 448, 451, 452, 453, 455, 456, 458, 472, 476, 477, 478, 479, 482, 483, 484, 486, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504], "central": [2, 14, 20, 24, 26, 319, 320, 321, 482, 483, 487, 497, 498, 501], "part": [2, 3, 4, 8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 85, 95, 98, 102, 113, 132, 133, 135, 138, 142, 148, 150, 160, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 224, 249, 258, 261, 285, 344, 349, 353, 374, 413, 415, 416, 449, 472, 476, 478, 482, 484, 485, 486, 492, 497, 499, 504], "wide": [2, 3, 5, 503], "give": [2, 3, 7, 79, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 382, 397, 400, 475, 478, 482, 483, 486, 497, 498, 499, 500, 503], "abil": [2, 398, 499, 501], "panel": [2, 484], "usag": [2, 3, 5, 7, 15, 16, 18, 21, 22, 23, 25, 27, 43, 66, 78, 97, 104, 126, 184, 200, 202, 222, 225, 237, 290, 308, 313, 344, 349, 353, 383, 388, 396, 403, 407, 413, 416, 477, 482, 484, 485, 488, 489, 491, 497, 498, 501], "includ": [2, 3, 4, 7, 9, 27, 36, 43, 48, 56, 58, 66, 67, 73, 78, 83, 85, 95, 96, 97, 98, 102, 103, 104, 106, 107, 108, 109, 111, 122, 124, 128, 132, 135, 138, 142, 150, 156, 160, 161, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 240, 243, 267, 273, 275, 282, 283, 285, 308, 313, 344, 349, 353, 380, 383, 398, 403, 413, 415, 416, 461, 476, 477, 479, 482, 483, 484, 485, 486, 494, 495, 497, 498, 499, 501, 504], "almost": [2, 283, 317, 318, 485], "physic": [2, 6, 7, 104, 162, 163, 168, 479, 482, 497, 498, 499], "theori": 2, "crude": 2, "made": [2, 3, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 95, 102, 106, 107, 108, 109, 122, 124, 128, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 268, 274, 285, 321, 330, 344, 349, 353, 385, 398, 413, 415, 416, 418, 482, 483, 485, 497, 498, 500, 501, 503], "liststorag": [2, 51, 63, 68, 70, 78, 79, 80, 107, 115, 501], "veri": [2, 3, 148, 149, 188, 483, 487, 490, 494, 497, 499, 501, 503, 504], "ineffici": [2, 4], "tensor": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 116, 118, 120, 121, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 235, 236, 237, 238, 240, 243, 244, 246, 249, 251, 253, 254, 255, 256, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 280, 282, 283, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 326, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 376, 378, 380, 381, 383, 384, 385, 387, 388, 389, 392, 393, 396, 398, 400, 401, 402, 403, 405, 406, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 497, 498, 499, 503, 504], "contigu": [2, 3, 8, 37, 40, 48, 86, 107, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 210, 243, 246, 268, 276, 499, 501, 503], "tensorstorag": [2, 70, 78, 95, 96, 97, 98, 106, 112, 113, 126, 129, 490, 501], "lazymemmapstorag": [2, 45, 63, 68, 69, 70, 76, 79, 80, 95, 96, 97, 98, 113, 115, 120, 121, 224, 225, 482, 483, 485, 490, 497, 500, 501], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 139, 140, 141, 142, 143, 144, 149, 150, 153, 156, 159, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 470, 471, 472, 474, 477, 478, 479, 482, 483, 484, 485, 487, 488, 489, 490, 491, 494, 497, 498, 501, 504], "citizen": 2, "pytre": [2, 63, 68, 70, 79, 80, 109, 115, 129], "tupl": [2, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 104, 109, 113, 115, 120, 124, 126, 132, 135, 136, 137, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 243, 245, 249, 285, 291, 295, 301, 302, 308, 312, 313, 314, 321, 328, 331, 332, 342, 344, 345, 346, 347, 348, 349, 353, 362, 363, 367, 368, 373, 380, 381, 382, 383, 384, 388, 389, 391, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 420, 421, 422, 423, 452, 453, 456, 465, 494, 501, 503], "dictionari": [2, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 40, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 100, 101, 102, 113, 118, 120, 121, 132, 135, 138, 141, 142, 143, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 268, 273, 275, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 366, 370, 383, 403, 405, 413, 414, 415, 416, 417, 453, 470, 471, 472, 479, 483, 484, 487, 489, 497, 499, 504], "nest": [2, 3, 32, 36, 40, 41, 43, 45, 47, 48, 49, 56, 57, 62, 64, 66, 67, 70, 71, 73, 75, 76, 77, 78, 85, 91, 100, 101, 102, 106, 107, 108, 111, 115, 128, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 225, 266, 269, 273, 274, 285, 342, 344, 345, 346, 347, 348, 349, 353, 365, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 438, 448, 479, 483, 484, 486, 498, 499, 501, 503], "construct": [2, 3, 5, 32, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 95, 102, 115, 132, 135, 138, 139, 141, 142, 150, 162, 163, 164, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 233, 236, 283, 285, 308, 313, 334, 344, 349, 353, 370, 413, 415, 416, 458, 476, 477, 483, 484, 485, 488, 497, 499, 501, 504], "ram": [2, 141, 143, 491, 501], "prealloc": [2, 3, 162, 171, 499], "ve": [2, 72, 482, 485, 492, 494], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 45, 51, 63, 66, 68, 69, 70, 76, 79, 80, 85, 95, 96, 97, 98, 102, 105, 106, 109, 112, 113, 115, 116, 120, 121, 124, 126, 127, 130, 131, 183, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 224, 258, 274, 285, 288, 398, 413, 415, 416, 455, 474, 476, 478, 479, 482, 483, 484, 485, 486, 490, 492, 497, 498, 500, 501, 503], "here": [2, 3, 4, 7, 8, 9, 10, 15, 16, 27, 126, 132, 135, 136, 137, 138, 142, 146, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 203, 225, 273, 321, 447, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 488, 490, 492, 497, 498, 499, 501, 503, 504], "add": [2, 3, 4, 6, 27, 36, 40, 41, 43, 48, 49, 51, 56, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 95, 96, 97, 98, 101, 102, 105, 107, 112, 115, 116, 126, 127, 130, 131, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 243, 245, 272, 275, 285, 308, 313, 322, 344, 349, 353, 364, 380, 413, 415, 416, 454, 476, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 497, 498, 499, 501, 503], "string": [2, 22, 23, 25, 36, 43, 48, 51, 56, 58, 65, 66, 67, 73, 78, 84, 85, 99, 102, 107, 132, 135, 138, 142, 150, 154, 160, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 243, 253, 266, 272, 280, 285, 308, 313, 344, 349, 353, 362, 365, 366, 367, 379, 413, 415, 416, 439, 457, 476, 478, 482, 484, 485, 494, 501], "element": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 51, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 78, 79, 80, 83, 85, 95, 96, 97, 98, 100, 101, 106, 107, 108, 109, 112, 113, 115, 120, 121, 126, 128, 132, 135, 138, 142, 150, 159, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 190, 191, 192, 193, 198, 218, 225, 230, 231, 254, 263, 267, 268, 283, 287, 292, 293, 306, 307, 311, 342, 345, 346, 347, 348, 356, 357, 362, 365, 369, 370, 374, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 414, 416, 417, 420, 449, 476, 478, 482, 484, 488, 490, 494, 501, 504], "30": [2, 3, 70, 78, 98, 102, 120, 121, 197, 221, 248, 333, 334, 438, 442, 445, 447, 490, 495, 498, 499, 501], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 115, 118, 120, 121, 122, 124, 126, 128, 132, 135, 138, 139, 141, 142, 150, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 240, 242, 243, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 452, 453, 454, 455, 456, 457, 458, 462, 463, 464, 465, 467, 468, 470, 471, 472, 476, 477, 479, 482, 483, 485, 486, 495, 499, 501, 503], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 120, 121, 122, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 168, 171, 172, 173, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 218, 220, 221, 222, 224, 225, 226, 227, 229, 232, 235, 240, 241, 243, 247, 248, 249, 251, 253, 254, 257, 264, 265, 266, 269, 272, 273, 275, 277, 280, 285, 287, 288, 289, 292, 293, 294, 295, 297, 299, 300, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 361, 362, 363, 365, 366, 368, 370, 380, 381, 382, 389, 391, 392, 397, 398, 399, 400, 401, 405, 406, 413, 414, 415, 416, 417, 420, 422, 423, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 442, 445, 447, 449, 450, 451, 453, 455, 458, 460, 470, 471, 472, 486, 499, 501], "entri": [2, 3, 15, 16, 21, 32, 36, 40, 41, 43, 45, 48, 49, 51, 56, 62, 64, 65, 66, 67, 71, 73, 75, 76, 78, 84, 85, 92, 97, 98, 100, 101, 102, 120, 121, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 154, 155, 162, 163, 166, 168, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 221, 225, 227, 228, 231, 232, 233, 234, 236, 237, 240, 244, 246, 247, 249, 251, 253, 256, 258, 261, 263, 265, 266, 267, 268, 270, 273, 275, 277, 280, 282, 285, 308, 310, 317, 318, 342, 344, 345, 346, 347, 348, 349, 353, 361, 362, 365, 367, 368, 381, 383, 403, 413, 414, 415, 416, 417, 420, 421, 422, 423, 477, 482, 484, 485, 487, 488, 489, 491, 497, 498, 499, 500, 501, 503, 504], "onto": [2, 8, 60, 62, 64, 71, 85, 100, 101, 189, 210, 234, 287, 330, 342, 345, 346, 347, 348, 357, 362, 363, 366, 367, 368, 369, 370, 414, 417, 420, 485, 499], "__setitem__": 2, "indic": [2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 105, 112, 113, 115, 116, 118, 119, 120, 121, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 157, 158, 162, 163, 166, 168, 171, 172, 173, 176, 177, 183, 184, 185, 188, 189, 191, 192, 193, 217, 218, 225, 226, 230, 266, 267, 268, 269, 275, 283, 285, 286, 292, 293, 310, 314, 317, 318, 320, 330, 342, 345, 346, 347, 348, 365, 367, 368, 376, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 416, 417, 418, 462, 472, 475, 476, 479, 484, 485, 486, 490, 491, 492, 499, 501, 504], "without": [2, 3, 7, 9, 14, 15, 16, 17, 18, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 95, 97, 100, 101, 102, 115, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 233, 236, 271, 274, 285, 306, 307, 311, 312, 342, 344, 345, 346, 347, 348, 349, 351, 353, 359, 360, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 468, 475, 477, 482, 483, 484, 486, 487, 488, 489, 490, 494, 495, 497, 498, 499, 501, 504], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 40, 42, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 112, 113, 115, 132, 135, 138, 142, 150, 156, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 219, 221, 222, 233, 235, 236, 243, 255, 266, 267, 273, 275, 279, 282, 283, 285, 287, 289, 290, 305, 306, 316, 321, 330, 342, 344, 345, 346, 347, 348, 349, 352, 353, 366, 367, 368, 369, 370, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 453, 458, 460, 463, 464, 467, 468, 474, 476, 479, 483, 484, 485, 486, 489, 492, 497, 498, 499, 501, 504], "length": [2, 25, 34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 72, 74, 75, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 101, 113, 120, 121, 124, 132, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 205, 218, 225, 246, 254, 282, 289, 292, 293, 295, 297, 299, 306, 310, 311, 314, 316, 319, 320, 344, 349, 353, 357, 369, 374, 415, 416, 449, 455, 476, 482, 484, 485, 490, 492, 494, 499, 501, 504], "cursor": [2, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "afterward": [2, 36, 43, 48, 66, 67, 73, 78, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 497, 504], "tell": [2, 3, 4, 7, 132, 164, 165, 273, 482, 485, 490, 497, 498], "our": [2, 3, 7, 8, 11, 22, 51, 70, 225, 230, 440, 478, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497, 498, 500, 501, 503], "far": [2, 63, 68, 69, 70, 72, 79, 80, 95, 96, 97, 98, 115, 188, 309, 338, 339, 476, 492, 499, 504], "empti": [2, 3, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 109, 115, 132, 135, 138, 142, 149, 150, 159, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 233, 236, 253, 255, 269, 275, 278, 280, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 369, 413, 414, 415, 416, 417, 444, 482, 499], "64": [2, 3, 62, 64, 71, 85, 95, 100, 101, 115, 189, 225, 257, 295, 296, 304, 308, 313, 320, 321, 331, 342, 345, 346, 347, 348, 414, 417, 418, 482, 483, 484, 485, 486, 488, 492, 496, 499, 501, 503, 504], "dtype": [2, 3, 15, 16, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 112, 113, 120, 121, 128, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 216, 217, 218, 219, 222, 223, 229, 230, 233, 234, 235, 236, 237, 238, 243, 245, 246, 249, 251, 253, 255, 256, 258, 262, 265, 266, 268, 270, 271, 274, 275, 276, 278, 280, 285, 289, 291, 301, 302, 306, 307, 308, 310, 311, 312, 313, 316, 322, 323, 330, 331, 332, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 374, 377, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 426, 476, 477, 486, 494, 495, 496, 499, 501, 503, 504], "unit8": 2, "img": 2, "randint": [2, 84, 115, 198, 271, 310, 501], "255": [2, 115, 271, 501], "uint8": [2, 3, 40, 62, 64, 71, 85, 95, 100, 101, 136, 137, 154, 155, 189, 237, 243, 251, 271, 342, 345, 346, 347, 348, 414, 417, 483, 501], "next": [2, 3, 4, 8, 15, 16, 18, 30, 32, 40, 41, 43, 45, 47, 49, 51, 56, 63, 68, 69, 70, 72, 75, 76, 78, 79, 80, 85, 95, 96, 97, 98, 99, 102, 103, 104, 111, 113, 115, 120, 121, 126, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 149, 150, 154, 155, 156, 160, 161, 162, 163, 166, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 188, 191, 192, 193, 196, 198, 199, 201, 203, 204, 210, 216, 218, 221, 222, 224, 225, 230, 231, 233, 236, 237, 238, 243, 244, 245, 246, 247, 251, 255, 256, 258, 261, 262, 266, 268, 270, 273, 276, 281, 282, 283, 285, 289, 307, 308, 312, 313, 316, 334, 365, 375, 377, 380, 381, 383, 384, 385, 387, 388, 389, 390, 396, 400, 401, 402, 403, 405, 406, 415, 416, 418, 419, 420, 421, 422, 423, 424, 440, 452, 453, 456, 476, 483, 485, 486, 488, 492, 494, 499, 500, 503, 504], "ask": [2, 3, 8, 95, 113, 120, 121, 440, 484, 485, 487, 488, 497, 498, 500, 504], "automat": [2, 3, 5, 12, 20, 37, 51, 83, 86, 101, 106, 108, 115, 121, 128, 132, 133, 134, 135, 138, 141, 142, 143, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 187, 188, 191, 192, 193, 202, 221, 233, 236, 249, 268, 281, 283, 292, 308, 313, 344, 349, 351, 353, 357, 365, 366, 370, 438, 448, 476, 477, 482, 484, 487, 488, 497, 498, 499, 501, 503], "look": [2, 3, 5, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 113, 132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 243, 253, 254, 278, 285, 290, 344, 349, 353, 366, 370, 371, 372, 413, 415, 416, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 497, 498, 499, 500, 501, 503, 504], "lead": [2, 3, 4, 8, 10, 29, 32, 40, 41, 49, 56, 63, 70, 75, 85, 97, 112, 119, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 268, 286, 309, 331, 338, 339, 356, 482, 485, 486, 497, 498, 499, 501, 503], "match": [2, 3, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 115, 124, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 240, 242, 244, 245, 246, 247, 249, 251, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 292, 293, 300, 308, 313, 314, 319, 320, 337, 344, 349, 353, 357, 361, 362, 366, 367, 369, 370, 373, 374, 381, 382, 383, 389, 397, 399, 400, 401, 403, 413, 415, 416, 455, 460, 476, 477, 478, 482, 484, 486, 496, 498, 499, 501, 504], "don": [2, 3, 4, 6, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 183, 225, 274, 317, 483, 484, 486, 490, 501, 503, 504], "throw": [2, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 342, 344, 345, 346, 347, 348, 349, 353, 413, 414, 415, 416, 417, 504], "rb_td": 2, "batch_siz": [2, 3, 8, 15, 16, 18, 29, 32, 40, 43, 45, 51, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 112, 113, 114, 115, 120, 121, 126, 128, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 216, 217, 218, 222, 224, 225, 229, 233, 236, 237, 238, 243, 251, 255, 256, 258, 262, 265, 266, 268, 274, 275, 276, 285, 289, 291, 299, 300, 301, 302, 305, 308, 313, 316, 330, 331, 332, 340, 341, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 440, 449, 455, 476, 477, 478, 482, 483, 484, 485, 490, 494, 495, 497, 498, 499, 501, 503, 504], "max": [2, 32, 60, 64, 79, 84, 99, 112, 113, 126, 149, 190, 235, 269, 330, 381, 382, 383, 389, 399, 401, 403, 413, 476, 482, 484, 485, 486, 492], "label": [2, 64, 65, 72, 84, 85, 482, 497, 501], "100": [2, 15, 16, 18, 21, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 106, 108, 115, 120, 121, 126, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 228, 230, 237, 249, 258, 263, 266, 285, 310, 317, 318, 319, 344, 349, 353, 363, 365, 413, 415, 416, 440, 450, 468, 483, 484, 486, 487, 489, 492, 496, 497, 498, 499, 501, 503, 504], "rb_pytre": 2, "randn": [2, 3, 63, 66, 68, 69, 70, 79, 80, 95, 96, 97, 98, 106, 107, 108, 113, 115, 120, 121, 128, 132, 199, 210, 224, 249, 291, 294, 295, 299, 301, 302, 306, 307, 310, 311, 312, 317, 318, 319, 326, 328, 332, 357, 358, 359, 360, 361, 362, 366, 367, 369, 372, 373, 374, 380, 381, 383, 384, 385, 387, 388, 389, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 420, 421, 422, 423, 457, 477, 486, 501, 503, 504], "c": [2, 3, 6, 7, 15, 16, 18, 21, 29, 40, 43, 62, 64, 66, 70, 71, 78, 79, 80, 85, 100, 101, 107, 189, 249, 271, 276, 310, 311, 312, 342, 344, 345, 346, 347, 348, 349, 353, 413, 414, 416, 417, 483, 501], "zero": [2, 3, 4, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 106, 108, 112, 113, 115, 120, 121, 126, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 222, 224, 226, 230, 233, 235, 236, 249, 255, 258, 265, 283, 285, 288, 289, 296, 297, 298, 304, 305, 306, 307, 308, 311, 312, 313, 317, 318, 320, 321, 330, 331, 340, 342, 344, 345, 346, 347, 348, 349, 353, 368, 370, 376, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 426, 485, 486, 495, 501, 503, 504], "assert": [2, 3, 6, 18, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 115, 126, 132, 135, 138, 142, 145, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 189, 191, 192, 193, 196, 210, 215, 218, 222, 225, 228, 233, 236, 245, 256, 263, 275, 282, 291, 320, 341, 342, 345, 346, 347, 348, 414, 416, 417, 420, 421, 422, 423, 448, 449, 457, 476, 490, 496, 501, 504], "len": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 106, 108, 115, 128, 198, 251, 292, 293, 314, 320, 416, 482, 486, 490, 492, 497, 499, 500, 501, 503], "ambigu": [2, 63, 68, 70, 115], "signatur": [2, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 51, 56, 63, 66, 67, 68, 70, 73, 78, 85, 102, 115, 124, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 222, 229, 243, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416, 478, 482, 486, 487, 499], "deal": [2, 3, 63, 68, 70, 115, 398, 413, 416, 478, 482, 484, 498, 501], "interpret": [2, 3, 63, 68, 70, 115, 476, 483], "put": [2, 63, 68, 70, 115, 142, 154, 155, 173, 176, 177, 282, 447, 472, 476, 477, 483, 484, 485, 487, 494, 497, 499], "solv": [2, 4, 7, 9, 10, 63, 68, 70, 115, 196, 475, 482, 483, 484, 490, 492, 497, 498, 499, 501], "clear": [2, 3, 11, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 115, 132, 133, 134, 135, 138, 142, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 310, 344, 349, 353, 413, 415, 416, 450, 487, 490, 495], "cut": [2, 63, 68, 70, 115], "distinct": [2, 3, 63, 68, 70, 115, 222, 225, 476, 489, 496], "view": [2, 3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 285, 302, 306, 311, 314, 344, 349, 353, 413, 415, 416, 476, 487, 499, 501, 503, 504], "through": [2, 3, 4, 5, 8, 15, 16, 18, 20, 21, 22, 25, 27, 29, 30, 40, 41, 49, 63, 67, 68, 69, 70, 73, 75, 79, 80, 85, 95, 96, 97, 98, 115, 132, 133, 134, 135, 138, 141, 142, 143, 146, 148, 149, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 197, 221, 231, 233, 236, 254, 286, 291, 314, 331, 365, 366, 370, 371, 372, 376, 379, 398, 420, 421, 422, 423, 448, 477, 478, 482, 483, 484, 487, 489, 496, 497, 498, 499, 500, 501, 504], "collate_fn": [2, 63, 68, 69, 70, 78, 79, 80, 95, 96, 97, 98, 115, 183, 184, 185, 188, 501, 503], "__init__": [2, 3, 7, 102, 138, 156, 174, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 289, 300, 302, 306, 311, 316, 350, 374, 381, 383, 384, 389, 396, 401, 403, 405, 406, 415, 479, 499, 504], "major": 2, "worri": [2, 81, 504], "though": [2, 4, 11, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 314, 484, 497, 498], "too": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 66, 72, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 248, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 309, 338, 339, 344, 349, 353, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 483, 488, 491, 499, 501, 504], "latter": [2, 22, 23, 25, 36, 43, 48, 56, 66, 67, 73, 78, 97, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 400, 413, 415, 416, 470, 471], "inv": [2, 3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 228, 235, 238, 243, 251, 258, 263, 265, 270, 274, 277, 285, 415, 499], "obvious": [2, 486], "ignor": [2, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 73, 74, 75, 78, 81, 83, 86, 87, 88, 89, 90, 102, 104, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 235, 238, 262, 271, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 318, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 413, 415, 416, 420, 494, 495, 501], "thread": [2, 3, 15, 16, 18, 21, 29, 30, 62, 64, 71, 85, 100, 101, 132, 133, 134, 148, 149, 162, 171, 172, 189, 283, 342, 345, 346, 347, 348, 414, 417], "prefetch": [2, 63, 70, 79, 80, 95, 97, 98, 99, 482, 483, 485, 501], "advis": [2, 11, 491, 504], "techniqu": [2, 8, 162, 171, 483, 486, 490, 501], "real": [2, 5, 370, 478, 485, 486, 499, 500], "life": [2, 237, 500], "adopt": [2, 3, 5, 482, 504], "throughput": [2, 9, 149, 482], "constant": [2, 11, 42, 112, 113, 225, 249, 267, 479, 482, 484, 485, 504], "throughout": [2, 3, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 416, 418, 484, 497, 504], "further": [2, 3, 5, 33, 416, 482, 484, 486, 487], "refin": [2, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 476], "coupl": [2, 382, 400, 485, 488, 489, 499, 501], "first_elt": 2, "128": [2, 95, 97, 121, 133, 134, 148, 149, 296, 299, 483, 485, 486, 492, 497, 500, 501], "wa": [2, 3, 5, 7, 40, 41, 43, 49, 51, 63, 66, 68, 69, 70, 75, 78, 79, 80, 85, 95, 96, 97, 98, 113, 115, 119, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 217, 225, 243, 275, 311, 344, 349, 353, 380, 382, 395, 397, 400, 402, 404, 413, 426, 478, 483, 484, 487, 488, 496, 497, 501, 503], "print": [2, 3, 6, 7, 15, 16, 18, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 112, 113, 115, 120, 121, 126, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 176, 177, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 215, 216, 217, 218, 221, 222, 225, 226, 230, 231, 233, 234, 235, 236, 244, 249, 255, 256, 258, 261, 266, 268, 269, 270, 271, 282, 283, 285, 292, 293, 295, 296, 297, 298, 299, 302, 304, 305, 308, 313, 314, 317, 318, 319, 320, 326, 329, 330, 332, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 370, 372, 374, 377, 398, 413, 414, 415, 416, 417, 438, 468, 476, 477, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "influenti": 2, "latenc": [2, 3], "especi": [2, 3, 7, 8, 226, 344, 349, 353], "larger": [2, 4, 78, 308, 313, 388, 396, 503], "volum": 2, "due": [2, 3, 5, 13, 22, 23, 25, 32, 382, 400, 489, 500, 501, 504], "memorymappedtensor": [2, 45, 62, 64, 76, 84, 95, 96, 97, 98, 106, 442, 490], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 115, 132, 135, 138, 142, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 232, 233, 234, 236, 261, 264, 267, 272, 276, 277, 285, 286, 289, 311, 344, 349, 351, 353, 369, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 415, 416, 447, 477, 482, 484, 485, 486, 490, 494, 497], "file": [2, 6, 7, 8, 62, 64, 71, 85, 95, 97, 98, 100, 101, 104, 176, 189, 342, 345, 346, 347, 348, 414, 417, 439, 440, 442, 458, 479, 481, 483, 497, 501, 502], "locat": [2, 7, 62, 64, 71, 84, 85, 95, 96, 97, 98, 100, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 213, 232, 237, 249, 260, 283, 309, 338, 339, 342, 345, 346, 347, 348, 414, 417, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 482, 483, 484, 491, 497, 498, 501], "improv": [2, 4, 11, 190, 241, 380, 478, 486, 497, 498, 501], "failur": [2, 4, 190, 382, 400, 413, 476], "recoveri": 2, "were": [2, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 69, 79, 80, 95, 96, 97, 98, 162, 171, 243, 382, 400, 476, 484, 497, 501], "found": [2, 3, 6, 7, 10, 15, 16, 18, 21, 27, 32, 36, 40, 41, 43, 48, 49, 51, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 95, 97, 98, 100, 101, 102, 120, 121, 132, 135, 136, 137, 138, 141, 142, 143, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 219, 225, 246, 258, 261, 269, 282, 283, 285, 305, 319, 320, 342, 344, 345, 346, 347, 348, 349, 353, 366, 370, 397, 398, 400, 413, 414, 415, 416, 417, 476, 478, 482, 483, 485, 486, 487, 489, 491, 494, 499, 501, 503], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 74, 75, 83, 86, 87, 88, 89, 90, 106, 113, 160, 161, 235, 273, 288, 311, 312, 388, 485, 486, 490, 501], "sharabl": [2, 162, 171], "collabor": 2, "rather": [2, 4, 124, 160, 161, 191, 198, 256, 283, 477, 478, 482, 483, 484, 487, 489, 497, 498, 501], "incur": [2, 133, 134, 148, 149], "transmiss": 2, "overhead": [2, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 310, 370], "content": [2, 3, 8, 18, 40, 41, 49, 62, 63, 64, 70, 71, 75, 79, 80, 85, 100, 101, 119, 120, 121, 132, 135, 138, 141, 142, 143, 150, 157, 162, 163, 166, 171, 172, 173, 183, 184, 185, 187, 188, 189, 191, 192, 193, 197, 204, 205, 255, 292, 293, 314, 319, 320, 342, 345, 346, 347, 348, 349, 353, 366, 398, 413, 414, 416, 417, 476, 484, 494, 495, 499, 503], "map": [2, 3, 8, 14, 17, 19, 24, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 111, 112, 113, 132, 135, 138, 142, 150, 153, 154, 155, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 176, 177, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 218, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 249, 251, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 281, 282, 283, 285, 302, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 362, 366, 367, 369, 370, 372, 373, 374, 375, 382, 383, 397, 400, 403, 413, 414, 415, 416, 417, 418, 420, 453, 474, 477, 478, 482, 483, 484, 485, 488, 489, 500], "writer": [2, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 105, 108, 113, 115, 116, 120, 126, 127, 128, 131, 484, 501], "tensordictroundrobinwrit": [2, 80, 115], "goe": [2, 4, 85, 164, 165, 482, 484, 497, 498, 504], "prioritizedsampl": [2, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 113, 115, 385, 390, 418, 482, 501], "access": [2, 3, 7, 8, 11, 29, 30, 36, 43, 48, 56, 63, 66, 67, 73, 78, 102, 107, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 225, 253, 274, 278, 285, 344, 349, 353, 413, 415, 416, 472, 475, 482, 487, 497, 498, 499, 501, 503], "tensordictreplaybuff": [2, 63, 68, 69, 70, 79, 95, 96, 97, 98, 112, 113, 115, 120, 121, 126, 224, 225, 455, 468, 474, 482, 483, 485, 501], "mp": [2, 22, 23, 25, 95, 96, 97, 98, 139, 282, 283], "def": [2, 3, 28, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 115, 132, 135, 138, 139, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 281, 282, 283, 285, 286, 289, 302, 306, 307, 311, 312, 316, 321, 344, 349, 353, 365, 366, 374, 381, 383, 384, 389, 396, 398, 401, 403, 405, 406, 413, 415, 416, 438, 448, 476, 478, 479, 482, 483, 486, 494, 496, 497, 498, 499, 501, 503, 504], "td": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 40, 43, 45, 51, 62, 63, 64, 66, 68, 69, 70, 71, 76, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 106, 112, 113, 115, 126, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 151, 152, 160, 161, 162, 163, 166, 167, 171, 172, 173, 174, 175, 183, 184, 185, 188, 189, 191, 192, 193, 196, 198, 216, 219, 222, 224, 226, 230, 231, 233, 234, 235, 236, 244, 245, 246, 247, 249, 258, 261, 265, 268, 271, 275, 282, 289, 291, 301, 302, 305, 315, 316, 330, 331, 332, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 366, 367, 369, 372, 374, 413, 414, 416, 417, 418, 421, 422, 423, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 449, 457, 476, 477, 478, 482, 483, 485, 498, 499, 500, 503], "__name__": [2, 3, 15, 16, 18, 21, 28, 29, 68, 139, 283, 438, 483, 503], "__main__": [2, 3, 15, 16, 18, 21, 28, 29, 68, 139, 283, 438, 503], "21": [2, 51, 85, 120, 121, 162, 164, 165, 171, 230, 481, 502], "proc": 2, "target": [2, 4, 8, 27, 33, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 267, 285, 329, 344, 349, 353, 369, 370, 380, 381, 382, 383, 384, 385, 387, 389, 390, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 461, 467, 468, 478, 479, 485, 486, 492, 497, 499], "arg": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 51, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 106, 107, 108, 109, 113, 115, 120, 121, 122, 124, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 243, 244, 245, 247, 252, 253, 254, 255, 256, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 285, 287, 289, 291, 292, 293, 300, 301, 305, 308, 313, 314, 315, 316, 330, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 447, 451, 455, 458, 472, 483, 486, 494], "join": [2, 139, 198, 474, 483, 484, 486, 497], "now": [2, 3, 7, 63, 70, 79, 80, 115, 160, 161, 162, 200, 225, 262, 320, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 496, 497, 498, 500, 501, 504], "20": [2, 51, 78, 84, 85, 120, 121, 126, 132, 135, 138, 142, 146, 150, 160, 161, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 267, 285, 304, 306, 307, 311, 312, 329, 361, 449, 485, 495, 501, 504], "_data": [2, 499], "It": [2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 107, 115, 118, 126, 131, 132, 135, 138, 142, 144, 150, 156, 157, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 219, 222, 224, 225, 237, 243, 245, 249, 254, 267, 273, 275, 281, 283, 285, 287, 295, 297, 303, 305, 319, 320, 329, 330, 331, 333, 334, 340, 341, 344, 349, 353, 363, 365, 368, 370, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 404, 406, 413, 415, 416, 418, 419, 420, 438, 447, 453, 475, 476, 477, 478, 482, 483, 485, 486, 487, 497, 498, 499, 500, 501, 503, 504], "difficult": [2, 4, 162, 491], "pai": [2, 8, 225, 482], "word": [2, 3, 11, 72, 95, 97, 98, 398, 413, 416, 482, 490, 499, 504], "1m": [2, 95, 461, 482, 484, 485], "doe": [2, 3, 19, 22, 36, 43, 48, 56, 62, 63, 64, 66, 67, 71, 73, 78, 79, 84, 85, 95, 97, 100, 101, 102, 103, 104, 111, 113, 120, 122, 124, 131, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 283, 285, 290, 299, 300, 306, 307, 308, 311, 312, 313, 322, 329, 341, 342, 344, 345, 346, 347, 348, 349, 353, 361, 371, 372, 380, 382, 390, 397, 398, 400, 413, 414, 415, 416, 417, 419, 458, 476, 478, 479, 482, 483, 484, 485, 487, 490, 497, 499, 501, 504], "howev": [2, 3, 5, 7, 36, 43, 48, 56, 66, 67, 73, 78, 102, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 243, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 281, 282, 285, 344, 349, 353, 380, 382, 383, 397, 400, 402, 403, 413, 415, 416, 476, 477, 482, 483, 485, 486, 489, 499, 501, 504], "capac": [2, 63, 70, 79, 80, 106, 108, 112, 113, 120, 128, 484, 490], "There": [2, 3, 10, 115, 185, 274, 290, 308, 313, 380, 400, 477, 478, 479, 484, 485, 486, 488, 490, 497, 498, 499, 501, 503, 504], "circumv": 2, "account": [2, 106, 108, 128, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 221, 231, 317, 318, 477, 483, 485, 501, 504], "save": [2, 3, 8, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 115, 122, 123, 124, 128, 129, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 281, 285, 342, 344, 345, 346, 347, 348, 349, 353, 413, 414, 415, 416, 417, 439, 440, 442, 447, 458, 479, 486, 490, 491, 492, 497, 498], "convent": [2, 3, 95, 97, 98, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 344, 478, 482, 485, 497, 498, 499], "overridden": [2, 3, 14, 17, 19, 20, 24, 26, 36, 43, 48, 66, 67, 73, 78, 95, 98, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 420, 422, 423, 485, 497], "dim_extend": [2, 63, 70, 79, 80], "obtain": [2, 3, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 95, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 205, 224, 253, 267, 280, 289, 291, 329, 331, 455, 482, 484, 487, 488, 489, 497, 498], "counterpart": [2, 3, 225], "desir": [2, 3, 11, 15, 16, 18, 21, 29, 36, 39, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 220, 222, 229, 231, 249, 251, 253, 254, 268, 274, 275, 278, 280, 285, 292, 293, 300, 314, 320, 344, 349, 353, 357, 362, 363, 366, 367, 368, 369, 370, 413, 415, 416, 477, 482, 486, 494, 497, 498, 499, 501], "diversifi": 2, "offer": [2, 3, 7, 132, 133, 134, 135, 138, 142, 148, 149, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 273, 438, 476, 477, 482, 483, 486, 487, 489, 490, 497, 499, 501, 504], "accomplish": [2, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 487, 494], "__especially__": 2, "offlin": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 95, 96, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 381, 387, 388, 396, 405, 415, 447, 479, 487, 500, 501], "docstr": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 487, 488], "detail": [2, 3, 5, 6, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 115, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 271, 275, 285, 290, 302, 306, 311, 321, 329, 344, 349, 353, 363, 380, 390, 398, 400, 413, 415, 416, 475, 476, 479, 483, 486, 490, 496, 501], "happi": [2, 486], "concaten": [2, 8, 15, 16, 27, 51, 52, 54, 85, 191, 225, 226, 249, 265, 311, 314, 372, 476, 482, 483, 488, 497, 498, 499, 501, 504], "schedul": [2, 4, 7, 72, 453, 484, 499], "transformedenv": [2, 3, 11, 12, 56, 102, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 222, 225, 228, 229, 231, 233, 236, 237, 238, 244, 245, 246, 248, 249, 251, 255, 256, 257, 258, 261, 262, 263, 266, 267, 268, 269, 273, 274, 282, 285, 308, 313, 365, 415, 440, 448, 476, 482, 483, 484, 485, 486, 487, 491, 492, 496, 497, 498, 499, 500, 501, 503, 504], "stepcount": [2, 51, 56, 102, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 231, 273, 274, 275, 285, 291, 415, 476, 482, 483, 484, 485, 486, 487, 492, 497, 498, 503], "gymenv": [2, 3, 5, 11, 15, 16, 18, 21, 27, 28, 29, 30, 45, 51, 56, 68, 76, 78, 102, 126, 132, 135, 138, 139, 142, 144, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 221, 222, 225, 228, 229, 230, 231, 237, 243, 244, 245, 249, 251, 256, 257, 258, 261, 263, 267, 268, 269, 270, 273, 274, 275, 276, 282, 283, 285, 291, 308, 313, 365, 415, 438, 440, 468, 474, 477, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 500, 501, 503, 504], "randompolici": [2, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 56, 225, 258, 474, 490, 501], "cartpol": [2, 3, 11, 45, 56, 76, 78, 132, 135, 136, 137, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 221, 222, 225, 230, 261, 267, 282, 285, 365, 438, 483, 485, 488, 490, 491, 492, 501, 504], "v1": [2, 3, 11, 15, 16, 18, 21, 27, 28, 29, 30, 45, 56, 68, 76, 78, 97, 98, 102, 126, 132, 135, 138, 139, 141, 142, 143, 148, 149, 150, 157, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 222, 225, 228, 230, 231, 238, 244, 245, 249, 256, 258, 261, 262, 263, 266, 267, 268, 269, 270, 273, 274, 276, 282, 283, 285, 291, 308, 313, 365, 409, 415, 429, 430, 431, 432, 434, 435, 436, 437, 438, 477, 483, 485, 487, 488, 489, 490, 491, 492, 499, 501, 503, 504], "action_spec": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 56, 102, 132, 133, 134, 135, 138, 142, 148, 149, 150, 156, 162, 163, 164, 165, 166, 167, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 222, 225, 229, 233, 234, 236, 245, 249, 255, 258, 274, 275, 276, 277, 285, 289, 302, 316, 332, 334, 357, 362, 366, 367, 381, 383, 385, 387, 401, 403, 405, 406, 415, 468, 477, 482, 483, 484, 485, 486, 488, 489, 490, 492, 496, 497, 498, 499, 500, 501, 503, 504], "8": [2, 3, 6, 7, 40, 41, 49, 56, 70, 75, 78, 95, 96, 97, 98, 112, 113, 120, 121, 132, 133, 134, 135, 136, 137, 138, 142, 150, 160, 161, 162, 163, 166, 171, 172, 173, 174, 183, 184, 185, 188, 191, 192, 193, 218, 221, 230, 231, 267, 270, 276, 283, 292, 293, 295, 296, 304, 314, 358, 359, 360, 366, 369, 372, 396, 482, 483, 499, 501, 503], "traj_kei": [2, 113, 120, 121, 501], "truncated_kei": [2, 113, 120, 121, 258, 266], "strict_length": [2, 95, 113, 120, 121, 440], "enumer": [2, 15, 16, 18, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 76, 78, 80, 83, 86, 87, 88, 89, 90, 102, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 407, 413, 415, 416, 478, 482, 483, 484, 485, 492, 497, 501, 503], "break": [2, 5, 15, 16, 18, 21, 27, 29, 36, 43, 48, 56, 66, 67, 68, 70, 73, 78, 80, 95, 98, 99, 102, 113, 120, 121, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 225, 258, 282, 283, 285, 308, 313, 338, 344, 349, 353, 413, 415, 416, 440, 483, 486, 490, 492, 501, 503], "step_count": [2, 15, 16, 18, 56, 132, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 231, 266, 285, 484, 485, 486, 487, 492], "32": [2, 28, 40, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 121, 142, 149, 169, 170, 176, 177, 193, 225, 243, 292, 293, 294, 295, 296, 298, 299, 304, 314, 319, 320, 324, 325, 328, 331, 340, 418, 438, 483, 485, 486, 488, 489, 499, 500, 501, 503, 504], "33": [2, 36, 40, 43, 48, 56, 66, 67, 73, 78, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 292, 293, 314, 344, 349, 353, 413, 415, 416], "34": [2, 292, 293, 314], "35": [2, 292, 293, 314, 495], "36": [2, 185], "37": [2, 224], "38": [2, 7, 51], "39": [2, 98, 148, 149], "40": [2, 78, 148, 149], "41": [2, 120], "11": [2, 10, 32, 51, 60, 78, 84, 85, 106, 107, 108, 112, 121, 128, 139, 218, 230, 271, 285, 289, 316], "12": [2, 7, 10, 51, 78, 106, 108, 121, 128, 148, 149, 162, 169, 170, 171, 185, 230, 283, 285, 440, 501], "13": [2, 5, 78, 120, 121, 168, 230, 281, 283, 285, 286], "14": [2, 6, 78, 95, 96, 97, 98, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 230, 249, 285, 286], "15": [2, 32, 95, 96, 97, 98, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 230, 285, 330, 361, 391, 501], "16": [2, 3, 15, 16, 21, 29, 36, 43, 48, 56, 66, 67, 73, 78, 102, 113, 121, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 285, 344, 349, 353, 413, 415, 416, 485, 501], "17": [2, 11, 120, 121, 142, 162, 193, 218, 230, 285], "could": [2, 3, 4, 6, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 370, 413, 415, 416, 476, 483, 484, 491, 497, 498, 500, 504], "sai": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 319, 344, 349, 353, 413, 415, 416, 497, 500, 504], "interleav": 2, "cannot": [2, 3, 4, 7, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 54, 60, 70, 79, 80, 108, 109, 113, 116, 120, 121, 128, 132, 135, 138, 141, 142, 143, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 233, 236, 254, 261, 273, 319, 320, 367, 380, 383, 400, 483, 484, 485, 486, 497, 498, 499], "suggest": [2, 418, 482, 498], "serialenv": [2, 3, 132, 135, 138, 142, 150, 162, 163, 166, 172, 173, 183, 184, 185, 188, 191, 192, 193, 268, 283, 285, 291, 365, 474, 503, 504], "squeez": [2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 102, 221, 222, 225, 230, 264, 267, 292, 293, 335, 336, 482, 486, 499, 501], "6": [2, 3, 7, 15, 16, 18, 21, 29, 30, 32, 51, 56, 70, 73, 78, 85, 95, 112, 113, 121, 136, 137, 142, 162, 169, 170, 185, 193, 218, 221, 230, 231, 249, 251, 267, 273, 283, 291, 292, 293, 295, 296, 297, 300, 304, 307, 314, 319, 320, 321, 324, 337, 365, 366, 374, 476, 483, 486, 503], "5": [2, 3, 15, 16, 18, 21, 29, 32, 39, 40, 41, 49, 51, 52, 53, 54, 55, 56, 60, 63, 68, 70, 73, 75, 78, 79, 80, 95, 102, 115, 120, 121, 126, 132, 135, 138, 139, 142, 148, 149, 150, 154, 155, 157, 162, 163, 166, 169, 170, 171, 172, 173, 176, 177, 183, 185, 188, 190, 191, 192, 193, 196, 201, 203, 218, 221, 222, 224, 230, 231, 246, 258, 265, 266, 267, 273, 283, 285, 288, 289, 290, 291, 292, 293, 295, 296, 301, 302, 303, 304, 306, 309, 310, 311, 314, 316, 319, 320, 324, 329, 332, 338, 339, 350, 361, 362, 365, 367, 373, 397, 400, 402, 405, 406, 438, 476, 477, 481, 482, 483, 486, 488, 492, 497, 498, 499, 501, 502, 503, 504], "7": [2, 3, 6, 10, 43, 51, 56, 60, 63, 70, 78, 79, 112, 113, 121, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 190, 191, 192, 193, 218, 221, 230, 231, 267, 270, 283, 289, 291, 292, 293, 296, 314, 316, 319, 426, 482, 501, 503], "9": [2, 3, 7, 32, 36, 51, 56, 63, 70, 78, 79, 85, 113, 121, 126, 136, 137, 153, 164, 165, 173, 218, 221, 230, 231, 267, 270, 275, 282, 283, 285, 317, 318, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 407, 413, 416, 418, 448, 478, 482, 483, 497, 498], "18": [2, 51, 120, 121, 169, 170, 176, 177, 273, 285, 320], "19": [2, 120, 121, 126, 230, 285], "independ": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 162, 171, 240, 247, 268, 277, 290, 320, 356, 380, 400, 478, 479, 482, 483, 498, 501, 503], "congruent": 2, "name": [2, 3, 6, 7, 18, 31, 36, 40, 41, 43, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 95, 99, 100, 101, 102, 132, 133, 135, 136, 138, 142, 148, 150, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 168, 171, 172, 173, 176, 177, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 217, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 235, 237, 238, 239, 241, 243, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 281, 282, 285, 286, 308, 313, 342, 344, 345, 346, 347, 348, 349, 350, 353, 362, 367, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 438, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 476, 479, 482, 483, 484, 485, 486, 489, 490, 491, 494, 497, 498, 499, 500, 504], "randomcroptensordict": [2, 482], "unlik": [2, 34, 70, 79, 80, 119, 142, 154, 155, 176, 177, 193, 288, 290, 365, 390, 400, 440, 477, 483, 486, 488, 490, 503], "stop": [2, 3, 15, 16, 18, 21, 27, 29, 72, 113, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 484, 490, 497, 498, 503, 504], "signal": [2, 3, 15, 16, 18, 21, 32, 51, 95, 97, 98, 113, 120, 121, 126, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 190, 191, 192, 193, 217, 225, 231, 237, 246, 266, 269, 478, 482, 484, 497, 498, 501, 504], "disk": [2, 3, 51, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 95, 96, 97, 98, 100, 101, 106, 115, 189, 342, 345, 346, 347, 348, 414, 417, 458, 479, 482, 483, 485, 486, 490, 491, 497, 501], "dump": [2, 3, 11, 45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 85, 95, 96, 97, 98, 100, 101, 104, 106, 107, 108, 109, 115, 122, 124, 128, 189, 342, 345, 346, 347, 348, 414, 417, 438, 439, 440, 491, 492, 497], "json": [2, 201, 494], "metadata": [2, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 95, 97, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 383, 405, 484, 487, 489, 490, 497, 498, 504], "anticip": [2, 233, 236], "compli": [2, 290, 477], "back": [2, 14, 17, 20, 24, 26, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 97, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 207, 272, 281, 321, 357, 362, 363, 366, 367, 368, 369, 370, 476, 484, 486, 497, 498, 499, 501], "exact": [2, 3, 32, 162, 311], "statu": [2, 3, 24, 138, 200], "prioriti": [2, 4, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 106, 107, 108, 109, 112, 113, 115, 122, 124, 128, 383, 384, 385, 387, 388, 389, 390, 396, 401, 403, 405, 406, 418, 479, 482, 483, 501], "heap": 2, "under": [2, 3, 4, 27, 36, 40, 41, 43, 48, 49, 51, 56, 66, 67, 72, 73, 75, 78, 95, 97, 98, 102, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 246, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 290, 344, 349, 353, 357, 362, 363, 366, 367, 368, 369, 370, 398, 413, 415, 416, 420, 421, 422, 423, 424, 440, 476, 478, 482, 483, 488, 497, 499, 504], "hood": [2, 3, 27, 95, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 290, 499], "naiv": [2, 278, 487], "just": [2, 3, 4, 85, 124, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 153, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 183, 184, 185, 188, 191, 192, 193, 217, 221, 228, 268, 286, 320, 449, 476, 479, 482, 483, 484, 485, 486, 487, 488, 490, 494, 497, 498, 499, 501, 503, 504], "public": [2, 69, 123, 253, 280], "serializ": [2, 30], "consum": [2, 119, 121, 365, 483, 484, 490, 498, 501], "much": [2, 3, 8, 15, 16, 21, 63, 79, 112, 113, 162, 171, 397, 400, 484, 486, 487, 491, 497, 498, 499, 501, 504], "duplic": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 119, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 381, 383, 385, 390, 396, 398, 401, 403, 405, 406, 413, 415, 416, 418], "observ": [2, 3, 8, 15, 16, 18, 21, 27, 29, 30, 33, 45, 51, 56, 68, 76, 78, 85, 95, 96, 97, 98, 102, 103, 104, 111, 113, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 211, 216, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 242, 243, 244, 245, 247, 249, 250, 251, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 291, 294, 295, 296, 297, 298, 299, 302, 305, 308, 313, 319, 324, 325, 328, 329, 330, 332, 333, 357, 358, 359, 360, 361, 362, 365, 366, 367, 374, 375, 380, 381, 382, 383, 384, 385, 387, 388, 389, 392, 396, 397, 400, 401, 402, 403, 405, 406, 415, 418, 420, 421, 422, 423, 424, 438, 440, 468, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 491, 492, 496, 497, 498, 499, 501, 503, 504], "plu": [2, 15, 16, 21, 72, 162, 171, 476, 499], "three": [2, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 66, 99, 183, 383, 476, 477, 479, 484, 486, 487, 488, 497, 498, 499, 501, 504], "flatstoragecheckpoint": 2, "discard": [2, 3, 84, 97, 98, 142, 216, 278, 439, 501, 504], "compress": 2, "At": [2, 270, 305, 315, 483, 484, 485, 490, 496, 499, 500], "correct": [2, 4, 62, 64, 71, 85, 100, 101, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 195, 196, 199, 225, 245, 310, 342, 345, 346, 347, 348, 413, 414, 417, 461, 484, 485, 494], "addit": [2, 3, 4, 14, 17, 24, 26, 36, 43, 48, 56, 58, 66, 67, 73, 78, 85, 97, 101, 102, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 176, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 229, 253, 268, 272, 274, 275, 278, 280, 285, 287, 306, 344, 349, 350, 353, 361, 365, 369, 379, 382, 398, 400, 413, 415, 416, 420, 438, 440, 478, 482, 483, 486, 487, 497, 498, 501], "nestedstoragecheckpoint": 2, "represent": [2, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 102, 107, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 253, 278, 280, 285, 344, 349, 353, 380, 400, 413, 415, 416, 476, 482, 499, 500, 504], "appar": [2, 3, 451], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 101, 103, 104, 111, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 210, 213, 218, 228, 235, 243, 246, 268, 276, 287, 293, 299, 302, 319, 325, 330, 332, 357, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 377, 380, 385, 387, 388, 389, 400, 405, 406, 418, 477, 478, 483, 484, 485, 486, 487, 488, 489, 497, 498, 499, 504], "assumpt": [2, 3, 83, 499, 501], "accur": [2, 7, 97, 476, 483, 499, 501], "truncat": [2, 3, 15, 16, 18, 21, 45, 47, 51, 56, 57, 65, 76, 78, 81, 84, 95, 96, 97, 98, 101, 103, 104, 111, 113, 120, 121, 132, 135, 136, 137, 138, 141, 142, 143, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 174, 176, 177, 183, 184, 185, 188, 191, 192, 193, 198, 217, 218, 237, 238, 243, 248, 255, 258, 262, 266, 268, 275, 276, 285, 308, 313, 339, 365, 420, 426, 482, 484, 487, 497, 504], "marl": [2, 153, 179, 225, 265, 269, 319, 320, 321, 389, 403, 478, 487, 497, 498], "extra": [2, 10, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 225, 282, 283, 285, 344, 349, 353, 413, 415, 416, 447, 476, 477, 484, 485, 501], "fail": [2, 7, 28, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 204, 219], "concret": [2, 482, 484, 494], "set_se": [2, 3, 15, 16, 18, 21, 27, 29, 30, 45, 51, 56, 76, 78, 132, 133, 134, 135, 138, 142, 148, 149, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 221, 230, 231, 249, 256, 261, 267, 269, 275, 285, 476, 486, 490, 492, 499, 503, 504], "manual_se": [2, 3, 34, 45, 52, 53, 63, 70, 76, 78, 79, 80, 107, 120, 121, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 219, 221, 230, 231, 235, 249, 258, 261, 267, 269, 283, 285, 305, 317, 318, 326, 329, 330, 357, 363, 370, 373, 380, 381, 383, 384, 388, 396, 403, 486, 490, 492, 497, 498, 499, 503, 504], "200": [2, 15, 16, 18, 27, 36, 43, 45, 48, 56, 66, 67, 68, 73, 76, 78, 95, 102, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 258, 285, 295, 296, 303, 333, 334, 344, 349, 353, 413, 415, 416, 438, 440, 482, 485, 486, 490, 492, 501], "22": [2, 29, 120, 121, 281], "rb_test": 2, "_storag": [2, 500, 501], "max_siz": [2, 51, 63, 70, 78, 79, 80, 95, 96, 97, 98, 106, 107, 108, 109, 120, 121, 122, 126, 128, 484, 490], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 39, 62, 64, 71, 85, 100, 101, 157, 183, 189, 230, 273, 299, 317, 318, 319, 342, 345, 346, 347, 348, 379, 383, 414, 417, 438, 476, 482, 484, 486, 497, 498], "state_dict": [2, 15, 16, 18, 21, 27, 29, 30, 31, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 282, 283, 285, 319, 320, 342, 344, 345, 346, 347, 348, 349, 353, 383, 403, 413, 414, 415, 416, 417, 472, 476, 479, 482, 483, 504], "load_state_dict": [2, 15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 282, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 383, 403, 413, 414, 415, 416, 417, 479, 482], "drawback": 2, "struggl": 2, "big": [2, 484, 490, 501, 504], "sequenti": [2, 9, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 224, 245, 285, 344, 349, 353, 356, 358, 359, 360, 366, 371, 372, 377, 380, 381, 383, 389, 396, 400, 401, 402, 403, 405, 413, 415, 416, 477, 484, 485, 488, 498, 499, 500, 503, 504], "known": [2, 3, 5, 7, 8, 78, 142, 193, 268, 427, 428, 482, 483, 487], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 288, 482, 483, 489], "essenti": [2, 3, 13, 22, 23, 25, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 416, 418, 476, 483, 487, 497, 499, 501], "purpos": [2, 3, 7, 11, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 306, 380, 382, 394, 397, 400, 402, 413, 468, 482, 484, 485, 486, 489, 491, 497, 498, 500, 504], "guid": [2, 11, 164, 165, 169, 170, 267, 475, 482, 498, 503], "explan": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 290, 344, 349, 353, 413, 415, 416], "effect": [2, 3, 18, 29, 30, 36, 40, 43, 48, 56, 63, 66, 67, 68, 70, 73, 78, 79, 80, 95, 102, 112, 113, 115, 118, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 225, 231, 275, 285, 290, 344, 349, 353, 382, 400, 413, 415, 416, 458, 476, 477, 482, 488, 497, 501, 504], "realm": [2, 488], "As": [2, 3, 4, 56, 70, 79, 80, 83, 95, 115, 132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 258, 300, 370, 420, 477, 482, 483, 484, 485, 486, 487, 489, 490, 497, 498, 499, 500, 501, 503, 504], "practition": 2, "often": [2, 3, 8, 321, 382, 395, 398, 400, 413, 416, 458, 482, 483, 487, 489, 499, 501, 504], "encount": [2, 4, 247, 365, 475, 483, 488, 499], "situat": [2, 154, 155, 191, 198], "sometim": [2, 3, 83, 485, 504], "variabl": [2, 3, 4, 7, 8, 20, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 73, 74, 75, 83, 86, 87, 88, 89, 90, 95, 98, 101, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 154, 155, 158, 159, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 188, 191, 192, 193, 198, 205, 270, 274, 283, 306, 307, 308, 311, 312, 313, 316, 344, 349, 353, 358, 359, 360, 398, 401, 448, 476, 479, 483, 495], "immedi": [2, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 419, 497, 498], "199": 2, "info": [2, 3, 15, 16, 63, 68, 69, 70, 79, 80, 85, 95, 96, 97, 98, 112, 113, 115, 118, 120, 121, 132, 135, 136, 137, 138, 141, 142, 143, 144, 150, 154, 155, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 188, 191, 192, 193, 243, 276, 278, 281, 284, 447, 476, 487, 492, 494, 497, 498, 501, 503], "glanc": [2, 487], "seem": [2, 482, 485, 487], "togeth": [2, 3, 11, 15, 16, 18, 21, 22, 23, 25, 27, 51, 66, 72, 74, 75, 107, 132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 254, 265, 274, 306, 308, 311, 313, 340, 358, 359, 360, 375, 476, 477, 483, 485, 487, 497], "less": [2, 24, 112, 113, 157, 341, 470, 471, 478, 484, 485, 501, 503], "omit": [2, 150, 192, 287, 305, 330, 454, 484, 489, 499, 501], "proper": [2, 3, 4, 6, 7, 200, 420, 421, 422, 423, 476, 483, 484, 494, 497, 498, 499, 501], "imposs": [2, 3, 70, 79, 80, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 380, 382, 397, 400, 402], "determin": [2, 3, 17, 51, 63, 79, 85, 97, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 187, 188, 191, 192, 193, 196, 253, 280, 319, 330, 344, 349, 353, 383, 413, 483, 488, 497, 498], "complic": [2, 43, 66, 78, 344, 349, 353, 413, 416, 499, 501, 504], "matter": [2, 42, 490], "inconsist": [2, 504], "miss": [2, 3, 4, 6, 7, 36, 40, 43, 48, 51, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 243, 273, 275, 281, 285, 286, 344, 349, 353, 371, 372, 380, 383, 403, 413, 415, 416, 475, 482, 485, 495], "primari": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 150, 192, 490], "elimin": [2, 3, 487], "upon": [2, 3, 8, 20, 497, 499], "canon": 2, "definit": [2, 60, 122, 319, 494], "markov": [2, 3, 487, 504], "mdp": [2, 216, 487, 499], "context": [2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 115, 121, 132, 135, 138, 139, 142, 150, 159, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 268, 277, 285, 290, 308, 313, 320, 322, 344, 349, 353, 356, 361, 411, 412, 413, 415, 416, 420, 421, 422, 423, 425, 433, 440, 448, 453, 476, 477, 478, 482, 483, 484, 485, 486, 497, 498, 499, 500, 501, 503], "condit": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 191, 196, 230, 231, 267, 282, 362, 363, 365, 367, 368, 379, 476, 478, 482, 497, 499, 501], "complet": [2, 7, 9, 24, 29, 30, 113, 119, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 190, 191, 192, 193, 197, 225, 266, 415, 475, 476, 478, 482, 484, 487, 494, 495, 496], "termin": [2, 3, 7, 15, 16, 18, 21, 29, 45, 47, 51, 56, 57, 68, 72, 76, 78, 95, 96, 97, 98, 103, 104, 111, 120, 132, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 154, 155, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 188, 191, 192, 193, 198, 217, 218, 221, 222, 237, 243, 255, 268, 276, 285, 289, 308, 313, 316, 365, 371, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 476, 482, 483, 484, 494, 497, 498, 499, 503, 504], "reward": [2, 3, 15, 16, 18, 42, 43, 45, 47, 51, 56, 57, 62, 71, 72, 76, 78, 84, 85, 95, 96, 97, 98, 99, 102, 112, 113, 126, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 218, 219, 222, 223, 228, 229, 233, 234, 236, 237, 238, 243, 245, 246, 247, 251, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 272, 274, 275, 276, 277, 279, 280, 282, 283, 285, 289, 308, 316, 361, 365, 375, 380, 381, 383, 384, 385, 387, 388, 389, 392, 396, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 451, 452, 453, 456, 472, 478, 479, 482, 483, 484, 485, 486, 487, 491, 494, 495, 497, 498, 499, 503, 504], "imit": [2, 3, 394], "inform": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 112, 113, 132, 135, 138, 139, 142, 145, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 291, 292, 293, 314, 320, 342, 344, 345, 346, 347, 348, 349, 353, 413, 414, 415, 416, 417, 477, 478, 479, 482, 483, 484, 485, 486, 487, 494, 497, 498, 499, 501, 503], "stateless": [2, 3, 30, 51, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 222, 231, 283, 351, 352, 398, 413, 416, 438, 482, 487, 499, 504], "simul": [2, 3, 5, 7, 8, 83, 133, 134, 135, 144, 148, 149, 168, 176, 177, 183, 212, 289, 316, 476, 477, 482, 484, 486, 487, 491, 495, 497, 498], "furthermor": [2, 497, 498], "certain": [2, 4, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 84, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 230, 231, 241, 266, 275, 285, 305, 307, 312, 344, 349, 353, 397, 413, 415, 416, 476, 482, 483, 484, 486, 492, 497, 498, 504], "composit": [2, 3, 34, 35, 37, 38, 39, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 92, 101, 102, 118, 124, 131, 132, 135, 138, 140, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 217, 219, 222, 233, 234, 235, 236, 238, 243, 245, 247, 255, 256, 262, 266, 268, 272, 273, 274, 276, 283, 285, 287, 289, 316, 357, 366, 370, 372, 373, 377, 380, 400, 415, 474, 476, 482, 484, 488, 494, 499], "uniform": [2, 63, 79, 112, 113, 344, 349, 353, 497], "unambigu": 2, "distinguish": [2, 3, 70, 79, 80, 154, 155, 176, 177], "happen": [2, 3, 24, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 286, 330, 483, 486, 489, 490, 491, 500, 504], "everyth": [2, 190, 483, 484, 485, 491, 492], "belong": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 95, 281, 282, 370, 482, 490, 498], "rule": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 233, 236, 285, 344, 349, 353, 370, 413, 415, 416, 477, 484], "field": [2, 3, 15, 16, 18, 21, 29, 30, 32, 36, 40, 43, 45, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 76, 78, 79, 80, 81, 83, 84, 85, 95, 96, 97, 98, 100, 101, 102, 106, 107, 108, 112, 120, 128, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 218, 222, 233, 236, 237, 238, 243, 251, 255, 256, 258, 262, 265, 266, 268, 273, 275, 276, 285, 289, 291, 301, 302, 308, 313, 316, 330, 331, 332, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 374, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 462, 475, 476, 477, 483, 495, 499], "taken": [2, 3, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 218, 257, 317, 318, 478, 482, 484, 485, 488, 497, 498, 499], "is_shar": [2, 3, 15, 16, 18, 29, 32, 40, 43, 45, 51, 62, 64, 65, 66, 71, 72, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 112, 120, 128, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 188, 189, 191, 192, 193, 198, 216, 218, 222, 233, 236, 237, 238, 243, 251, 255, 256, 258, 262, 265, 266, 268, 276, 282, 289, 291, 301, 302, 308, 313, 316, 330, 331, 332, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 372, 374, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 414, 416, 417, 418, 477, 499], "envbas": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 51, 85, 102, 132, 135, 139, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 219, 222, 233, 236, 248, 255, 256, 274, 275, 282, 285, 289, 308, 313, 315, 316, 365, 415, 453, 462, 463, 464, 468, 470, 471, 472, 474, 487], "brought": [2, 484, 485, 488], "step_mdp": [2, 3, 40, 41, 49, 75, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 308, 313, 474, 485, 487, 499, 503, 504], "count": [2, 3, 15, 16, 18, 21, 29, 51, 56, 85, 138, 139, 230, 266, 273, 283, 330, 453, 458, 461, 476, 482, 483, 484, 485, 501, 504], "trigger": [2, 7, 43, 66, 78, 191, 283, 344, 349, 353, 413, 416], "turn": [2, 22, 23, 25, 27, 30, 40, 41, 49, 62, 64, 67, 71, 73, 75, 85, 100, 101, 102, 135, 149, 162, 173, 183, 189, 230, 242, 274, 277, 281, 342, 345, 346, 347, 348, 362, 413, 414, 417, 420, 438, 453, 476, 478, 482, 483, 485, 488, 499, 500], "retain": [2, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 476], "regard": [2, 97, 302, 363, 380, 390, 400, 482, 484, 499], "expand": [2, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 106, 120, 121, 189, 222, 268, 300, 342, 345, 346, 347, 348, 369, 372, 381, 383, 396, 398, 401, 403, 405, 406, 413, 414, 416, 417, 497, 498, 499, 501, 503], "recur": [2, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 420, 421, 422, 423, 424, 488], "anyth": [2, 4, 15, 16, 18, 21, 22, 23, 25, 27, 478], "els": [2, 133, 134, 198, 222, 306, 307, 311, 312, 324, 476, 477, 479, 482, 483, 484, 485, 494, 495, 497, 498, 499, 500], "repetit": [2, 484, 487, 490], "embed": [2, 253, 278, 279, 280, 295, 331, 357, 358, 359, 360, 369, 370, 374, 500], "strictli": [2, 3, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 246, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416, 482, 484], "enforc": [2, 36, 40, 43, 48, 56, 66, 67, 73, 78, 102, 119, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 285, 344, 349, 350, 353, 371, 382, 383, 400, 403, 413, 415, 416, 499], "n_action": [2, 365, 381, 383, 385, 387, 399, 403], "rightmost": [2, 478], "n_ob": [2, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 245, 365, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 489], "estim": [2, 4, 95, 113, 120, 121, 183, 184, 185, 188, 191, 198, 237, 245, 295, 338, 358, 359, 360, 380, 381, 382, 383, 384, 385, 387, 389, 390, 391, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 413, 416, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 476, 478, 483, 484, 488, 489, 497, 498], "subsequ": [2, 36, 43, 48, 56, 66, 67, 73, 78, 95, 96, 97, 98, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 285, 344, 349, 353, 413, 415, 416, 485, 497], "proce": [2, 497], "state_valu": [2, 359, 360, 374, 382, 388, 396, 397, 400, 401, 403, 420, 421, 422, 423, 425, 427, 429, 431, 433, 434, 436, 477, 482, 498], "f": [2, 15, 16, 18, 21, 29, 102, 133, 134, 142, 148, 149, 193, 199, 203, 204, 205, 270, 286, 312, 379, 416, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 476, 482, 483, 484, 485, 492, 495, 497, 498, 499, 501, 504], "next_state_valu": [2, 405, 406, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 474], "broadcast": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 300, 389, 403, 476], "left": [2, 58, 95, 97, 102, 113, 120, 186, 187, 190, 191, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 230, 232, 233, 234, 238, 245, 247, 253, 255, 256, 262, 266, 269, 272, 274, 276, 278, 280, 283, 285, 305, 317, 319, 344, 415, 483, 484, 486, 490, 491], "would": [2, 3, 36, 43, 48, 56, 66, 67, 72, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 306, 308, 311, 313, 314, 319, 344, 349, 353, 370, 413, 415, 416, 478, 479, 483, 484, 485, 487, 489, 490, 499, 501, 503, 504], "best": [2, 5, 9, 146, 308, 313, 400, 497, 498, 501, 503], "bug": [2, 4], "worst": [2, 483], "twice": [2, 8, 121], "feasibl": 2, "mostli": [2, 3, 21, 329, 440, 478, 491, 501, 504], "eas": [2, 3, 497, 498], "flat": [2, 126, 420], "manner": [2, 142, 193, 201, 253, 278, 477, 482, 483, 484, 490, 496, 499, 501], "ted2flat": [2, 45, 474], "flat2t": [2, 474], "unflatten": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 222, 365], "deseri": [2, 3, 45], "posit": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 113, 115, 132, 135, 136, 137, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 240, 241, 243, 264, 265, 266, 269, 273, 275, 277, 285, 310, 344, 349, 353, 383, 403, 413, 415, 416, 476, 478, 484, 497, 498, 499, 501], "both": [2, 3, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 115, 132, 135, 138, 139, 141, 142, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 174, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 218, 225, 243, 256, 272, 273, 275, 285, 292, 293, 308, 312, 313, 314, 319, 320, 344, 349, 353, 358, 359, 360, 363, 368, 380, 382, 383, 384, 388, 389, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 420, 453, 476, 477, 482, 484, 486, 487, 489, 494, 495, 497, 498, 499, 500, 501, 504], "mark": [2, 3, 18, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 270, 308, 313, 420, 422, 423, 476, 490, 501], "identifi": [2, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 65, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 190, 191, 192, 193, 204, 205, 476, 494], "abov": [2, 3, 7, 36, 43, 48, 56, 66, 67, 73, 78, 86, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 274, 285, 309, 338, 339, 344, 349, 353, 379, 413, 415, 416, 476, 478, 479, 482, 484, 486, 487, 488, 497, 498, 499, 504], "output": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 85, 95, 97, 98, 101, 102, 113, 120, 121, 132, 135, 136, 137, 138, 141, 142, 143, 144, 149, 150, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 222, 223, 225, 228, 229, 231, 232, 233, 234, 236, 238, 240, 243, 245, 247, 249, 253, 255, 256, 261, 262, 265, 266, 269, 270, 272, 274, 275, 276, 278, 280, 281, 283, 285, 287, 292, 293, 294, 295, 296, 299, 301, 302, 303, 306, 307, 308, 311, 312, 313, 314, 319, 320, 327, 329, 330, 332, 341, 344, 349, 353, 357, 358, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 424, 438, 440, 449, 476, 477, 478, 482, 483, 484, 485, 486, 487, 488, 491, 494, 495, 496, 497, 498, 499, 500, 503, 504], "typic": [2, 3, 4, 8, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 29, 36, 43, 48, 56, 66, 67, 73, 78, 85, 102, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 237, 267, 285, 327, 329, 344, 349, 353, 366, 381, 383, 398, 400, 403, 413, 415, 416, 476, 477, 478, 479, 484, 486, 487, 489, 490, 495, 497, 498, 499], "adjust": [2, 11, 268, 482, 497, 498, 499], "grumodul": [2, 224, 268, 356, 377, 485], "lstmmodul": [2, 308, 356, 485, 486], "skip": [2, 3, 17, 36, 43, 48, 56, 66, 67, 73, 78, 95, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 231, 241, 243, 247, 273, 275, 285, 344, 349, 353, 366, 370, 383, 398, 403, 413, 415, 416, 420, 421, 422, 423, 439, 440, 451, 453, 476, 482, 483, 495, 499], "accumul": [2, 8, 285], "upcom": [2, 398, 413, 416, 429, 430, 431, 432, 434, 435, 436, 437, 482], "popular": [2, 3, 477, 485, 489, 498], "rainbow": 2, "multistep": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 285, 474, 483], "shift": [2, 45, 47, 56, 57, 76, 103, 104, 111, 376, 420, 421, 422, 423, 484], "approxim": [2, 498, 504], "intens": [2, 3, 8, 310], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 15, 21, 225, 299, 328, 380, 386, 399, 400, 449, 472, 484, 485, 498, 501], "2x": 2, "small": [2, 112, 113, 121, 278, 283, 288, 482, 484, 486, 497, 498, 504], "clearer": [2, 486, 488], "lazi": [2, 3, 74, 75, 92, 93, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 253, 278, 292, 319, 322, 371, 372, 482, 483, 488, 490, 496, 501, 504], "certainli": 2, "welcom": [2, 476, 487], "wrapper": [2, 3, 21, 62, 64, 71, 72, 79, 80, 85, 100, 101, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 183, 184, 185, 188, 189, 191, 192, 193, 198, 200, 281, 286, 290, 291, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 361, 365, 370, 375, 414, 417, 420, 445, 446, 447, 472, 474, 481, 484, 485, 487, 493, 494, 497, 498, 500, 502, 503, 504], "around": [2, 5, 7, 21, 79, 80, 132, 135, 138, 142, 150, 156, 162, 163, 166, 167, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 290, 329, 343, 365, 370, 420, 476, 482, 483, 494, 498, 504], "selecttransform": [2, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "excludetransform": [2, 262, 501], "promptli": 2, "virtual": [2, 3, 141], "instal": [2, 3, 5, 10, 22, 23, 25, 67, 78, 97, 132, 135, 138, 142, 147, 150, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 188, 190, 191, 192, 193, 442, 458, 475, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 497, 498, 504], "respons": [2, 3, 8, 15, 16, 18, 20, 22, 25, 27, 29, 30, 113, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 187, 188, 190, 191, 192, 193, 196, 201, 203, 342, 345, 347, 348, 349, 353, 413, 416, 458, 489, 490, 494, 495, 504], "d4rl": [2, 97], "repositori": [2, 7, 98, 176, 177, 497, 498], "wheel": [2, 484], "publish": 2, "openml": [2, 159], "scikit": [2, 159], "panda": 2, "raw": [2, 3, 4, 72, 207, 243, 272, 276, 309, 338, 339, 483, 486, 490, 499], "go": [2, 3, 7, 107, 153, 162, 231, 254, 258, 361, 426, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "modifi": [2, 3, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 84, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 225, 229, 231, 240, 243, 245, 253, 268, 274, 275, 278, 280, 283, 285, 321, 330, 344, 349, 353, 361, 369, 370, 413, 415, 416, 461, 476, 478, 482, 483, 484, 486, 487, 497, 498, 499], "fly": [2, 225, 282, 397, 476, 478, 484, 499, 501, 504], "least": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 113, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 228, 491, 504], "pre": [2, 7, 28, 36, 43, 48, 56, 66, 67, 73, 78, 84, 102, 108, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 253, 272, 278, 280, 285, 344, 349, 353, 413, 415, 416, 476, 504], "conisder": 2, "per": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 30, 102, 112, 113, 120, 126, 146, 148, 149, 162, 164, 165, 205, 228, 247, 261, 292, 293, 303, 305, 319, 320, 365, 440, 442, 445, 447, 458, 470, 471, 476, 482, 483, 484, 485, 486, 488, 489, 492, 497, 498, 501, 503], "pipelin": [2, 3, 7, 142, 193, 476, 477, 478, 484], "replac": [2, 3, 6, 7, 36, 43, 48, 56, 66, 67, 73, 78, 95, 102, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 221, 235, 237, 244, 282, 283, 285, 305, 344, 349, 353, 381, 383, 389, 396, 401, 403, 405, 406, 413, 415, 416, 420, 421, 422, 423, 477, 497, 501, 503], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 247, 258, 268, 275, 285, 287, 330, 342, 344, 345, 346, 347, 348, 349, 353, 365, 413, 414, 415, 416, 417, 456, 477, 479, 483, 484, 485, 488, 491, 499, 501, 504], "produc": [2, 3, 40, 41, 49, 51, 75, 120, 218, 221, 222, 292, 293, 314, 320, 326, 358, 360, 361, 370, 420, 440, 476, 484, 485, 486, 487, 488, 490, 501, 504], "download": [2, 7, 10, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 95, 97, 98, 146, 253, 280, 440, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "forc": [2, 3, 6, 7, 15, 16, 21, 22, 23, 25, 27, 95, 98, 163, 483, 497, 498, 499], "robosetexperiencereplai": [2, 120, 121], "fk1": 2, "v4": [2, 142, 162, 193, 218, 257, 429, 430, 431, 432, 434, 435, 436, 437, 482, 484, 500, 503], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 95, 96, 97, 98, 284], "obs_norm": 2, "norm": [2, 4, 8, 133, 134, 288, 458, 476, 482, 483, 484, 497, 498, 499], "num_work": [2, 24, 26, 62, 64, 84, 95, 96, 97, 98, 99, 157, 162, 171, 482, 483], "os": [2, 64, 84, 99, 483, 495], "cpu_count": [2, 64, 84, 99], "num_chunk": [2, 95, 96, 97, 98], "1000": [2, 4, 18, 29, 51, 70, 78, 106, 107, 112, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 282, 287, 305, 310, 329, 330, 366, 370, 395, 482, 483, 484, 485, 486, 488, 490, 492, 495, 499, 500, 501], "mp_start_method": [2, 95, 96, 97, 98, 162, 171, 273, 483, 503], "fork": [2, 5, 95, 96, 97, 98, 482, 483, 484, 485, 497, 498, 500, 503], "recreat": [2, 499], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 33, 70, 79, 80, 113, 115, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 222, 245, 416, 476, 486, 490, 500], "grain": [2, 3, 70, 79, 80, 113, 115, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 222], "nomenclatur": 2, "compact": [2, 51, 76, 103, 104, 111], "propos": [2, 225, 237, 290, 315, 395, 404, 477, 485, 501], "replaybufferensembl": [2, 95, 118, 124, 131], "primit": [2, 3, 4, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 476], "individu": [2, 4, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 84, 102, 113, 115, 126, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 283, 285, 344, 349, 353, 382, 397, 400, 413, 415, 416, 482, 498], "dummi": [2, 3, 173, 198, 438, 482, 486, 490, 504], "semant": [2, 74, 75, 141, 143, 500], "ident": [2, 3, 15, 16, 18, 56, 62, 64, 70, 71, 78, 79, 80, 85, 100, 101, 106, 115, 120, 132, 135, 138, 141, 142, 143, 150, 157, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 190, 191, 192, 193, 237, 265, 274, 283, 288, 319, 320, 342, 345, 346, 347, 348, 381, 383, 396, 401, 403, 405, 406, 414, 417, 420, 421, 422, 423, 470, 471, 483, 487, 497, 498], "another_kei": [2, 115], "renam": [2, 3, 62, 64, 71, 85, 100, 101, 115, 184, 189, 216, 256, 258, 342, 345, 346, 347, 348, 414, 417, 482], "resiz": [2, 3, 115, 225, 483, 485, 486, 487, 501, 504], "imag": [2, 3, 4, 7, 11, 100, 225, 227, 230, 232, 253, 271, 280, 314, 438, 440, 482, 483, 486, 487, 491, 498, 500, 504], "comops": 2, "totensorimag": [2, 3, 115, 225, 257, 483, 485, 486, 501, 503, 504], "renametransform": [2, 3, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225], "rb0": [2, 115], "in_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 66, 68, 78, 95, 96, 97, 98, 102, 115, 132, 133, 134, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 291, 301, 308, 313, 316, 331, 340, 341, 344, 349, 353, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 370, 372, 373, 374, 377, 380, 381, 382, 383, 384, 385, 387, 388, 389, 394, 396, 397, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 439, 440, 468, 477, 482, 483, 484, 485, 486, 488, 489, 492, 495, 496, 497, 498, 499, 500, 501, 503, 504], "pixel": [2, 3, 7, 40, 115, 135, 136, 137, 141, 143, 144, 168, 225, 227, 232, 237, 240, 242, 249, 251, 253, 257, 271, 278, 280, 295, 324, 325, 438, 440, 482, 483, 485, 486, 491, 497, 500, 501, 503, 504], "rb1": [2, 115], "out_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 66, 68, 78, 95, 96, 97, 98, 102, 115, 132, 133, 134, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 291, 301, 302, 308, 313, 316, 331, 332, 340, 341, 344, 349, 353, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 377, 380, 381, 382, 383, 388, 389, 394, 396, 397, 400, 401, 402, 403, 405, 413, 415, 416, 418, 420, 421, 422, 423, 438, 440, 453, 468, 477, 482, 483, 484, 485, 486, 488, 492, 495, 496, 497, 498, 499, 500, 501, 503, 504], "pixels33": [2, 115], "data0": [2, 107, 115], "244": [2, 115, 253, 280], "data1": [2, 107, 115, 503], "_": [2, 8, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 107, 115, 135, 139, 146, 176, 177, 198, 226, 233, 235, 236, 245, 249, 256, 271, 282, 285, 329, 357, 369, 370, 374, 379, 380, 381, 383, 384, 388, 389, 396, 400, 401, 403, 405, 406, 420, 421, 422, 423, 442, 482, 483, 484, 485, 486, 492, 497, 498, 499, 501, 503], "parent": [2, 3, 27, 36, 43, 47, 48, 56, 58, 66, 67, 73, 78, 83, 85, 96, 102, 115, 124, 131, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 222, 225, 226, 229, 230, 231, 234, 237, 240, 241, 247, 249, 253, 261, 266, 267, 268, 269, 273, 274, 277, 278, 285, 308, 313, 344, 349, 353, 358, 377, 398, 400, 413, 415, 416, 424, 438, 440, 482, 490, 499, 503, 504], "basic": [2, 3, 19, 156, 183, 476, 477, 484, 489, 490, 492, 497, 503, 504], "properti": [2, 3, 14, 17, 19, 20, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 115, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 273, 274, 275, 282, 283, 285, 300, 309, 310, 317, 318, 322, 326, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 353, 365, 380, 383, 398, 400, 402, 403, 413, 414, 415, 416, 417, 488, 490, 499, 501], "input": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 107, 109, 123, 129, 132, 135, 138, 142, 150, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 251, 252, 253, 254, 255, 256, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 288, 290, 291, 292, 293, 295, 296, 297, 298, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 314, 319, 320, 321, 322, 323, 330, 332, 333, 334, 335, 336, 338, 341, 342, 344, 345, 346, 347, 348, 349, 353, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 379, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 452, 456, 461, 468, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 494, 497, 498, 499, 503, 504], "send": [2, 3, 8, 20, 31, 166, 172, 447, 474, 503], "receiv": [2, 3, 14, 17, 19, 20, 24, 26, 31, 36, 43, 48, 56, 66, 67, 72, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 274, 275, 283, 285, 314, 344, 349, 353, 413, 415, 416, 426, 474, 476, 478, 482, 484, 489, 496, 499], "spawn": [2, 3, 4, 22, 28, 146, 157, 162, 171, 273, 483, 497, 498], "check_env_spec": [2, 3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 218, 243, 255, 276, 438, 474, 484, 497, 498, 499], "saniti": [2, 3, 7, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 484], "make_composite_from_td": [2, 83, 474, 499], "fall": [2, 4, 14, 17, 20, 24, 26, 31, 97], "categori": [2, 40, 477, 479], "bound": [2, 3, 4, 27, 36, 38, 40, 43, 48, 56, 66, 67, 73, 78, 86, 102, 132, 135, 138, 142, 150, 162, 163, 166, 167, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 228, 248, 282, 285, 287, 305, 330, 333, 334, 344, 349, 353, 357, 362, 363, 366, 367, 368, 369, 370, 373, 380, 381, 383, 384, 396, 400, 401, 403, 405, 406, 413, 415, 416, 474, 477, 482, 483, 484, 486, 497, 499, 503, 504], "unbound": [2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 74, 75, 83, 85, 87, 88, 89, 90, 100, 101, 115, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 198, 210, 219, 222, 233, 236, 255, 268, 289, 316, 342, 345, 346, 347, 348, 357, 369, 372, 374, 402, 414, 417, 474, 476, 494, 499, 501], "boundeddiscret": [2, 37, 40], "boundedcontinu": [2, 28, 37, 40, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 243, 246, 276], "unboundeddiscret": [2, 86, 163, 243, 474], "unboundedcontinu": [2, 86, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 210, 255, 268, 372, 377, 474], "implicitli": 2, "onehot": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 61, 74, 75, 83, 86, 87, 88, 89, 90, 133, 134, 141, 143, 144, 147, 148, 149, 157, 158, 160, 161, 168, 174, 175, 302, 332, 362, 367, 385, 387, 388, 389, 418, 474, 477], "multionehot": [2, 52, 53, 55, 385, 388, 389, 418, 474], "multicategor": [2, 53, 54, 55, 474], "binari": [2, 3, 7, 35, 36, 60, 174, 219, 223, 302, 332, 362, 363, 367, 368, 385, 388, 389, 418, 474, 494], "concept": [2, 3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 329, 476, 483, 494, 501], "arbitrari": [2, 3, 34, 60, 70, 132, 135, 138, 142, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 221, 478, 482, 483, 499, 501], "combin": [2, 4, 46, 67, 113, 199, 204, 205, 405, 476, 483, 486, 491, 501, 503], "nevertheless": [2, 3, 484, 487, 501], "otherwis": [2, 3, 12, 15, 16, 18, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 113, 115, 120, 121, 132, 133, 134, 135, 138, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 226, 230, 231, 235, 243, 249, 267, 268, 269, 273, 274, 275, 282, 285, 286, 288, 290, 306, 309, 311, 319, 320, 338, 339, 342, 344, 345, 346, 347, 348, 349, 353, 356, 362, 367, 370, 373, 381, 383, 392, 398, 399, 403, 413, 414, 415, 416, 417, 420, 422, 423, 453, 455, 478, 479, 482, 483, 484, 485, 494, 499, 504], "similarli": [2, 3, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 119, 124, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 247, 285, 319, 344, 349, 353, 371, 372, 388, 396, 413, 415, 416, 420, 476, 504], "possess": [2, 83, 97], "unsqueez": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 113, 210, 219, 222, 225, 226, 271, 277, 476, 482, 485, 486, 497, 498, 499], "move": [2, 4, 36, 43, 48, 56, 66, 67, 73, 78, 83, 102, 107, 109, 132, 135, 138, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 218, 229, 234, 253, 268, 274, 275, 278, 280, 282, 283, 285, 314, 344, 349, 353, 369, 413, 415, 416, 456, 482, 483, 485, 487, 504], "unbind": [2, 62, 63, 64, 70, 71, 79, 80, 85, 100, 101, 189, 247, 342, 345, 346, 347, 348, 365, 414, 416, 417, 476], "said": [2, 484], "neg": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 63, 66, 79, 83, 112, 113, 195, 225, 240, 254, 265, 277, 382, 391, 397, 400, 420, 422, 423, 478, 484, 497, 498, 499], "seen": [2, 3, 22, 23, 25, 27, 40, 41, 49, 75, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 234, 478, 482, 483, 485, 489, 497, 498, 501], "predict": [2, 3, 56, 72, 301, 303, 315, 316, 361, 375, 380, 382, 387, 390, 392, 393, 397, 400, 402, 413, 419, 482, 483, 489], "deprec": [2, 32, 35, 36, 38, 41, 43, 44, 48, 49, 50, 53, 55, 56, 59, 61, 66, 67, 73, 78, 88, 90, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 282, 285, 344, 349, 353, 380, 382, 383, 385, 388, 389, 390, 396, 397, 400, 401, 402, 403, 413, 415, 416, 418, 420, 421, 422, 423, 428, 504], "mont": [2, 183, 184, 185, 188, 191, 198, 380, 382, 397, 400, 413, 415, 476, 482], "carlo": [2, 183, 184, 185, 188, 191, 198, 380, 382, 397, 400, 413, 415, 476, 482], "mct": [2, 51], "act": [2, 3, 4, 120, 121, 164, 165, 275, 301, 320, 381, 383, 384, 396, 401, 403, 405, 406, 485, 486, 497, 498, 501, 503], "tradit": [2, 310, 489, 497], "integ": [2, 15, 16, 18, 21, 29, 30, 32, 48, 52, 54, 56, 60, 66, 67, 72, 73, 85, 113, 120, 121, 122, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 191, 192, 193, 201, 202, 218, 221, 237, 241, 249, 266, 283, 292, 293, 314, 319, 320, 383, 388, 396, 403, 478, 486, 501], "advanc": [2, 3, 27, 63, 70, 79, 80, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 476, 487, 490, 501], "rebuild": [2, 51], "initi": [2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 43, 44, 48, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 115, 126, 132, 135, 138, 142, 150, 160, 161, 162, 163, 166, 171, 172, 173, 174, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 224, 243, 249, 253, 268, 275, 278, 283, 284, 285, 286, 287, 288, 289, 305, 306, 307, 311, 312, 316, 319, 320, 321, 322, 323, 330, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 365, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 472, 476, 477, 478, 482, 483, 485, 487, 488, 490, 494, 497, 499, 504], "pair": [2, 3, 56, 62, 64, 66, 71, 78, 85, 97, 100, 101, 132, 135, 136, 137, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 258, 268, 273, 308, 342, 345, 346, 347, 348, 358, 366, 370, 398, 413, 414, 416, 417, 420, 421, 422, 423, 424, 477, 478, 482, 483, 484, 488, 489, 496, 499, 504], "term": [2, 72, 107, 199, 204, 245, 311, 312, 322, 323, 379, 380, 389, 460, 483, 484, 487, 488, 498], "pseudocod": [2, 3, 476], "next_stat": [2, 478], "associ": [2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 48, 49, 51, 56, 62, 64, 66, 67, 68, 71, 73, 75, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 274, 285, 333, 342, 344, 345, 346, 347, 348, 349, 352, 353, 413, 414, 415, 416, 417, 472, 482, 501], "sens": [2, 4, 62, 64, 71, 85, 100, 101, 189, 198, 225, 342, 345, 346, 347, 348, 414, 417, 490, 499], "hard": [2, 3, 7, 126, 136, 137, 162, 395, 476, 483, 504], "know": [2, 3, 4, 9, 63, 70, 79, 80, 141, 143, 287, 398, 401, 413, 416, 453, 482, 483, 484, 485, 486, 487, 488, 489, 490, 497, 498, 501], "next_td": [2, 199, 204], "Of": [2, 3, 7, 475, 499, 504], "cours": [2, 3, 4, 475, 499, 504], "handi": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 491], "undertaken": [2, 85, 478, 499], "link": [2, 6, 7, 138, 483, 492], "hash": [2, 48, 51, 66, 67, 73, 78, 85, 135, 150, 192], "past": [2, 4, 225, 365, 483, 501], "node_map": [2, 51], "_index": [2, 66, 78], "Then": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 188, 196, 281, 484, 496], "track": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 80, 112, 113, 119, 135, 191, 202, 261, 270, 282, 283, 285, 330, 365, 415, 445, 451, 474, 483, 485, 487, 490, 498, 499, 501], "next_data": [2, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "data_map": [2, 51], "form": [2, 15, 16, 21, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 95, 97, 98, 102, 103, 104, 111, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 283, 285, 306, 308, 311, 313, 344, 349, 353, 370, 379, 380, 382, 397, 400, 413, 415, 416, 458, 476, 477, 488], "figur": [2, 3, 85, 150, 192, 482, 484, 485, 498, 499, 504], "flowchart": 2, "o": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 312, 344, 349, 353, 413, 415, 416], "get_tre": [2, 51, 85], "vertex": [2, 85], "longer": [2, 85, 200, 286, 483, 492, 497, 498, 501], "vertic": [2, 85], "branch": [2, 51, 85], "repeat": [2, 85, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 157, 158, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 194, 198, 273, 289, 300, 476, 484, 497, 498, 499], "depth": [2, 70, 83, 132, 135, 138, 142, 150, 156, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 289, 292, 293, 295, 296, 297, 298, 303, 304, 314, 316, 319, 320, 321, 324, 325, 362, 477, 483, 487, 489, 490, 496, 497, 498, 501], "until": [2, 3, 7, 27, 29, 102, 149, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 269, 274, 285, 415, 448, 484, 485, 492, 497, 498], "anymor": [2, 62, 64, 71, 85, 100, 101, 189, 275, 342, 345, 346, 347, 348, 369, 414, 417], "remov": [2, 6, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 92, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 255, 264, 285, 342, 344, 345, 346, 347, 348, 349, 353, 398, 413, 414, 415, 416, 417, 497, 498, 503, 504], "futur": [2, 4, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 103, 104, 111, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 253, 273, 275, 280, 285, 314, 342, 344, 345, 346, 347, 348, 349, 353, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 475, 476], "full": [2, 3, 101, 102, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 199, 200, 204, 205, 290, 308, 313, 342, 345, 347, 348, 349, 353, 363, 370, 449, 476, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "utmost": 2, "post": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 73, 78, 98, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 476], "grpo": [2, 191, 198, 413, 474], "commonli": [2, 113, 120, 121, 504], "emploi": [2, 323], "scarc": 2, "address": [2, 31, 351, 476, 501], "subdomain": 2, "extern": [2, 3, 233, 236, 283, 351, 494, 497, 504], "token": [2, 29, 64, 65, 72, 81, 84, 99, 101, 102, 150, 183, 184, 185, 187, 188, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 310, 344, 349, 353, 413, 416, 494, 495], "dm": [3, 482, 504], "experi": [3, 63, 70, 79, 80, 95, 97, 98, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 442, 443, 444, 445, 446, 447, 475, 483, 484, 486, 490, 491, 497, 498, 501], "box": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 141, 143, 321, 398, 413, 416, 494], "lib": [3, 5, 6, 7, 9, 10, 15, 16, 18, 21, 27, 28, 29, 30, 68, 102, 132, 135, 138, 139, 142, 147, 150, 154, 155, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 228, 237, 244, 245, 249, 251, 256, 258, 261, 268, 274, 281, 282, 285, 415, 438, 468, 482, 483, 484, 485, 496, 498, 500, 501, 503, 504], "hope": [3, 11], "nn": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 33, 36, 42, 43, 48, 56, 66, 67, 68, 72, 73, 78, 102, 132, 133, 134, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 230, 235, 237, 245, 253, 268, 274, 275, 278, 280, 285, 289, 291, 292, 293, 295, 296, 297, 298, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 316, 318, 319, 320, 321, 330, 331, 332, 340, 344, 349, 353, 357, 358, 359, 360, 361, 362, 365, 366, 367, 369, 370, 371, 372, 374, 377, 379, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 468, 477, 478, 482, 483, 484, 485, 486, 488, 489, 492, 496, 497, 498, 499, 500, 503], "organis": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 275, 483], "attribut": [3, 4, 7, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 115, 132, 135, 138, 141, 142, 143, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 237, 247, 253, 275, 278, 282, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 370, 380, 381, 383, 384, 385, 387, 389, 390, 391, 394, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 482, 485, 499], "live": [3, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 115, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 237, 285, 344, 349, 353, 413, 415, 416], "actual": [3, 4, 7, 14, 17, 19, 20, 24, 26, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 95, 97, 98, 100, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 281, 342, 345, 346, 347, 348, 414, 417, 461, 476, 478, 482, 484, 486, 497, 498, 499], "care": [3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 440, 482, 484, 486, 497, 498, 499, 501], "parametr": [3, 323, 370, 381, 383, 388, 396, 403, 482, 484], "observation_spec": [3, 51, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 219, 222, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 240, 242, 243, 244, 245, 249, 251, 253, 255, 257, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 281, 282, 283, 285, 289, 308, 313, 316, 415, 462, 468, 482, 484, 489, 496, 497, 498, 499, 504], "state_spec": [3, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 229, 234, 249, 274, 276, 277, 285, 289, 316, 415, 499, 504], "reward_spec": [3, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 222, 223, 228, 229, 233, 234, 236, 246, 255, 259, 260, 261, 263, 265, 272, 274, 276, 277, 283, 285, 289, 316, 415, 476, 484, 494, 497, 498, 499, 504], "done_spec": [3, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 233, 234, 236, 237, 255, 265, 272, 274, 276, 285, 415, 497, 498, 499, 504], "flag": [3, 8, 43, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 187, 188, 190, 191, 192, 193, 196, 244, 330, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 477, 497, 498, 499, 500], "input_spec": [3, 85, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 222, 229, 233, 234, 235, 247, 251, 255, 256, 261, 262, 265, 266, 267, 268, 272, 274, 275, 276, 279, 285, 415, 484, 499], "full_action_spec": [3, 85, 132, 135, 138, 142, 150, 160, 161, 162, 163, 166, 171, 172, 173, 174, 175, 183, 184, 185, 188, 191, 192, 193, 218, 234, 289, 316, 497, 498], "full_state_spec": [3, 51, 85, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 218, 234, 289, 316], "output_spec": [3, 85, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 233, 234, 238, 245, 247, 255, 256, 262, 266, 272, 274, 275, 276, 283, 285, 415, 499], "full_observation_spec": [3, 85, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 191, 192, 193, 289, 316], "full_reward_spec": [3, 85, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 222, 234, 255, 497, 498], "full_done_spec": [3, 85, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 217, 222, 234, 255, 497, 498], "carri": [3, 27, 54, 84, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 268, 283, 398, 413, 416, 483, 485, 497, 498, 499, 501], "nontensor": [3, 59, 101, 188, 193, 243, 276, 474], "spec_lock": [3, 138], "modif": [3, 5, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 240, 243, 285, 344, 349, 353, 398, 413, 415, 416, 476, 478, 484, 499], "children": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 85, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "unlock": [3, 40, 41, 49, 62, 64, 71, 75, 85, 100, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 342, 345, 346, 347, 348, 414, 417], "set_spec_lock_": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "reason": [3, 4, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 253, 278, 285, 313, 344, 349, 353, 413, 415, 416, 476, 478, 482, 483, 484, 489, 490, 497, 499, 501], "easi": [3, 5, 11, 95, 132, 135, 136, 137, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 305, 330, 476, 477, 478, 482, 483, 484, 495, 498, 500, 501, 503, 504], "cach": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 74, 75, 83, 84, 86, 87, 88, 89, 90, 95, 97, 98, 99, 113, 120, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 221, 233, 236, 253, 274, 275, 280, 290, 310, 450, 476], "principl": [3, 476], "new_spec": 3, "eras": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 113, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 275], "relock": 3, "previous": [3, 4, 51, 484, 504], "importantli": [3, 366, 370], "action_s": 3, "help": [3, 4, 36, 43, 48, 56, 66, 67, 73, 78, 83, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 237, 285, 344, 349, 353, 380, 382, 397, 400, 402, 413, 415, 416, 475, 478, 482, 483, 484, 485, 494, 495, 497, 498], "With": [3, 148, 149, 153, 267, 479, 483, 494, 496, 497, 498, 501, 504], "necessarili": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 504], "present": [3, 29, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 70, 71, 73, 78, 83, 85, 95, 97, 100, 101, 102, 112, 113, 115, 119, 132, 135, 138, 141, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 217, 238, 258, 262, 268, 273, 275, 285, 293, 294, 295, 296, 297, 298, 304, 308, 311, 313, 323, 328, 330, 342, 344, 345, 346, 347, 348, 349, 353, 365, 369, 370, 371, 372, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 472, 476, 479, 482, 492, 496, 497, 498, 501, 503], "0s": [3, 95, 268, 485], "step_and_maybe_reset": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 476, 487, 494], "done_kei": [3, 32, 43, 45, 47, 51, 57, 76, 102, 103, 104, 111, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 221, 225, 237, 258, 266, 285, 415, 497, 498], "assign": [3, 4, 15, 16, 21, 31, 36, 37, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 86, 100, 101, 102, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 342, 344, 345, 346, 347, 348, 349, 351, 353, 383, 384, 385, 387, 403, 413, 414, 415, 416, 417, 484, 488, 494, 497, 498, 501], "_reset": [3, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 217, 219, 221, 222, 225, 233, 236, 244, 255, 270, 289, 316, 497], "data_": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "append": [3, 8, 11, 51, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 101, 115, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 195, 198, 204, 221, 228, 229, 247, 258, 268, 275, 281, 307, 308, 312, 313, 362, 367, 476, 482, 483, 484, 485, 486, 494, 497, 498, 499, 500, 501, 503], "seed": [3, 15, 16, 18, 21, 27, 29, 30, 70, 79, 80, 115, 132, 135, 138, 142, 150, 156, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 178, 183, 184, 185, 188, 191, 192, 193, 194, 219, 222, 233, 236, 243, 255, 275, 438, 458, 497], "determinist": [3, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 229, 253, 268, 274, 275, 278, 280, 285, 294, 303, 324, 334, 344, 349, 353, 357, 366, 369, 370, 373, 381, 382, 398, 400, 413, 415, 416, 453, 477, 482, 483, 484, 485, 486, 488, 489, 492, 497, 499, 503, 504], "preced": [3, 56, 135, 225, 485], "risk": [3, 254], "overlap": [3, 79, 126], "reproduc": [3, 67, 73, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 225, 243, 482, 484, 486, 498], "maximum": [3, 4, 13, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 56, 62, 64, 65, 72, 78, 81, 84, 85, 86, 99, 106, 107, 108, 109, 112, 113, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 235, 259, 266, 267, 269, 288, 337, 338, 339, 373, 381, 383, 388, 389, 396, 398, 399, 403, 413, 416, 440, 455, 476, 477, 482, 483, 484, 485, 488, 497, 498, 501], "max_step": [3, 11, 126, 132, 135, 138, 142, 150, 154, 155, 156, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 196, 266, 273, 285, 438, 487, 488, 489, 491, 492, 497, 498, 503, 504], "tensordictmodul": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 66, 68, 72, 78, 132, 133, 134, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 224, 230, 245, 291, 302, 308, 313, 316, 331, 332, 340, 341, 344, 349, 353, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 371, 372, 373, 375, 377, 381, 383, 384, 388, 389, 391, 392, 393, 394, 396, 398, 401, 403, 405, 406, 413, 416, 418, 419, 420, 421, 422, 423, 453, 468, 474, 482, 484, 485, 489, 492, 496, 497, 498, 499, 500, 504], "trail": [3, 58, 190, 282, 494], "treat": [3, 56, 478, 488, 489], "brief": [3, 476, 484, 487, 489, 501], "deliveri": 3, "metaclass": [3, 138, 143], "flank": [3, 478, 485], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 132, 135, 138, 141, 142, 143, 147, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 243, 273, 274, 275, 282, 285, 289, 302, 303, 316, 317, 318, 319, 320, 321, 324, 325, 333, 334, 344, 349, 353, 360, 363, 380, 383, 390, 391, 392, 393, 400, 403, 413, 415, 416, 420, 425, 433, 476, 481, 482, 484, 486, 488, 489, 490, 491, 497, 498, 501], "union": [3, 25, 36, 40, 41, 43, 48, 49, 50, 54, 55, 56, 58, 60, 61, 66, 67, 73, 74, 75, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 319, 340, 344, 349, 353, 387, 389, 401, 413, 415, 416, 469, 472], "assess": [3, 15, 16, 18, 21, 22, 23, 25, 27, 40, 41, 49, 75, 154, 155, 179, 188, 482], "split_trajectori": [3, 15, 16, 18, 21, 22, 23, 25, 27, 95, 113, 120, 121, 474], "adjac": [3, 32, 240, 365], "junction": 3, "inittrack": [3, 308, 313, 365, 482, 485], "tutori": [3, 163, 197, 473, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 504], "scratch": [3, 8, 483, 499], "mere": [3, 21, 486], "batch_lock": [3, 132, 135, 138, 140, 142, 150, 162, 166, 171, 172, 183, 184, 185, 188, 191, 192, 193, 222, 268, 275, 499], "contrast": [3, 306, 329, 395, 501], "notabl": 3, "braxenv": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 256, 474, 487], "jumanjienv": [3, 474], "straightforward": [3, 19, 476, 482, 483, 487, 488, 489, 490, 501], "merg": [3, 63, 70, 79, 80, 95, 97, 98, 499], "correctli": [3, 7, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 476], "silent": [3, 36, 43, 48, 66, 67, 73, 78, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376], "_step": [3, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 415], "temporari": [3, 482], "hold": [3, 274, 411, 412, 415, 476, 499, 501], "arm": 3, "unbatch": [3, 306, 311], "captur": [3, 287, 305, 330, 476, 486], "base_env": [3, 132, 134, 135, 138, 142, 143, 149, 150, 161, 162, 163, 166, 171, 172, 173, 175, 183, 184, 185, 188, 191, 192, 193, 218, 219, 222, 228, 230, 231, 233, 235, 236, 245, 251, 255, 257, 263, 266, 268, 269, 273, 275, 285, 440, 448, 476, 482, 483, 484, 486, 497, 500, 503, 504], "break_when_all_don": [3, 132, 135, 138, 142, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "conditionalskip": 3, "programmat": 3, "pretti": [3, 482, 487, 491, 501], "likewis": 3, "break_when_any_don": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 221, 273, 285, 291, 365, 498], "te": 3, "paragraph": 3, "deep": [3, 9, 225, 246, 295, 296, 297, 298, 301, 330, 380, 383, 395, 403, 404, 482, 497], "dive": 3, "gym3": 3, "envpool": [3, 157, 158], "simultan": [3, 25, 149, 157, 158, 162, 171, 476, 499], "advantag": [3, 8, 191, 198, 304, 380, 382, 397, 400, 402, 413, 415, 420, 421, 422, 423, 424, 425, 427, 429, 431, 433, 434, 436, 476, 478, 479, 482, 483, 484, 485, 498, 499, 504], "scale": [3, 4, 33, 97, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 190, 191, 192, 193, 225, 245, 249, 260, 267, 271, 282, 283, 288, 303, 309, 333, 334, 338, 339, 358, 359, 360, 366, 370, 372, 380, 381, 383, 396, 400, 401, 402, 403, 456, 462, 472, 477, 482, 483, 484, 485, 488, 498, 503], "varieti": [3, 11], "inherit": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 315, 319, 320, 398, 479, 484, 497, 498], "from_pixel": [3, 11, 133, 134, 136, 137, 141, 143, 144, 148, 149, 168, 225, 257, 438, 440, 482, 483, 485, 487, 491, 492, 500, 501, 503, 504], "81": [3, 120], "d": [3, 43, 63, 66, 70, 78, 79, 80, 99, 112, 113, 288, 306, 311, 344, 349, 353, 366, 370, 413, 416, 503], "privat": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 281, 499, 504], "absenc": 3, "total": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 115, 121, 126, 185, 189, 196, 230, 342, 345, 346, 347, 348, 351, 382, 397, 400, 413, 414, 417, 449, 451, 453, 458, 461, 462, 481, 482, 483, 484, 485, 489, 497, 498, 500, 501, 502, 503], "accord": [3, 15, 16, 18, 21, 22, 23, 25, 27, 51, 62, 64, 71, 72, 85, 100, 101, 115, 118, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 174, 175, 183, 184, 185, 188, 189, 191, 192, 193, 249, 260, 309, 322, 333, 338, 339, 342, 345, 346, 347, 348, 414, 417, 418, 477, 478, 488, 489, 497, 499, 501], "inner": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 235, 275, 479, 483, 484, 498, 504], "kept": [3, 24, 26, 32, 119, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 216, 235, 262, 309, 338, 339, 489, 497], "wherev": 3, "lost": [3, 8, 281], "intern": [3, 51, 82, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 283, 480], "face": [3, 5, 8, 9, 349, 476, 487, 495, 504], "NOT": [3, 103, 104, 111, 121, 254], "right": [3, 6, 7, 32, 72, 113, 120, 193, 230, 349, 353, 483, 484, 486, 498, 499, 504], "preliminari": 3, "warranti": 3, "preclud": 3, "presenc": [3, 43, 66, 78, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 344, 349, 353, 413, 416, 489], "annihil": 3, "supersed": [3, 32], "pettingzoowrapp": [3, 474], "group": [3, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 95, 102, 132, 135, 138, 142, 150, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 177, 179, 183, 184, 185, 188, 191, 192, 193, 198, 246, 265, 351, 352, 410, 476, 477, 483, 488, 490, 498, 501], "__not__": [3, 366, 381, 383, 396, 401, 403, 405, 406], "constrain": [3, 245, 308, 313, 400, 504], "li": 3, "fact": [3, 7, 8, 476, 482, 484, 487, 497, 498, 499, 500, 501, 504], "meaning": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 190], "perfectli": [3, 479, 482, 486, 499], "meaningless": 3, "val": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 184, 283, 448, 489, 503], "agent0": [3, 486], "agent1": 3, "overrid": [3, 14, 17, 19, 20, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 95, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 285, 300, 344, 349, 353, 413, 415, 416, 440, 472, 477, 494], "bool": [3, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 121, 122, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 216, 217, 218, 219, 221, 222, 225, 226, 230, 231, 233, 235, 236, 237, 238, 240, 243, 245, 247, 248, 249, 251, 253, 255, 256, 258, 260, 261, 262, 265, 266, 268, 271, 272, 273, 275, 276, 277, 278, 280, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 322, 323, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 353, 356, 357, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 426, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 447, 448, 451, 452, 453, 455, 456, 458, 472, 476, 483, 484, 486, 494, 495, 499, 503, 504], "500": [3, 482, 483], "note": [3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 217, 233, 236, 273, 282, 283, 285, 290, 306, 308, 310, 311, 313, 330, 344, 349, 353, 366, 370, 382, 390, 400, 413, 415, 416, 474, 478, 483, 486, 488, 494, 496, 497, 498, 504], "launch": [3, 15, 16, 21, 22, 23, 25, 28, 95, 162, 171], "bottleneck": [3, 8, 113, 120, 121], "great": [3, 7, 8, 486, 495, 497, 503], "speedup": [3, 8, 497, 504], "precis": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 216, 233, 236, 307, 312, 482, 484], "misspecifi": 3, "caus": [3, 7, 8, 15, 16, 18, 106, 108, 112, 113, 128, 132, 135, 138, 142, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 254, 413, 504], "breakag": 3, "rais": [3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 106, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 174, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 239, 248, 258, 267, 268, 269, 273, 275, 282, 285, 287, 305, 330, 342, 344, 345, 346, 347, 348, 349, 353, 383, 398, 403, 413, 414, 415, 416, 417, 448, 482, 484, 497, 498, 501], "mismatch": [3, 66, 382, 400, 413, 483], "subprocess": [3, 15, 16, 21, 139, 162, 171], "multithreadedenv": [3, 474], "underneath": 3, "higher": [3, 4, 112, 113, 190, 199, 205, 228, 373, 416, 482, 483, 484, 497, 501, 504], "cover": [3, 141, 143, 310, 475, 484, 487, 490, 491, 499, 503], "type": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 115, 132, 135, 138, 142, 150, 153, 156, 159, 162, 163, 164, 165, 166, 171, 172, 173, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 216, 222, 225, 229, 233, 234, 237, 238, 243, 245, 247, 253, 255, 256, 262, 266, 268, 272, 273, 274, 275, 276, 278, 280, 282, 283, 285, 287, 292, 293, 314, 319, 320, 323, 331, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 362, 366, 369, 370, 377, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 408, 410, 413, 414, 415, 416, 417, 418, 426, 438, 470, 474, 477, 482, 483, 484, 486, 490, 494, 497, 498, 499, 501, 504], "atari": [3, 4, 95, 97, 98, 225, 293, 440, 486, 491, 504], "classic": [3, 147, 156, 165, 476, 483], "benchmark_batched_env": 3, "significantli": [3, 13, 22, 23, 25, 120, 121, 225, 382, 400, 413, 478, 482, 483, 489, 498], "asyncenvpool": [3, 29, 166, 172], "pool": [3, 95, 96, 97, 98, 132, 166, 172, 269], "concurr": [3, 132, 497, 498], "contrari": [3, 478], "permit": [3, 228, 240, 265, 277, 380, 382, 397, 400, 402], "job": [3, 7, 22, 23, 25, 28, 70, 79, 80, 115, 501, 503], "famili": [3, 101], "interest": [3, 366, 370, 477, 483, 484, 487, 498, 499, 504], "prefer": [3, 15, 16, 21, 25, 32, 33, 63, 70, 79, 80, 120, 121, 132, 166, 172, 194, 254, 262, 400, 405, 455, 477, 484, 497, 498, 501, 503], "pleas": [3, 36, 43, 48, 56, 66, 67, 73, 78, 82, 98, 102, 132, 135, 138, 141, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 225, 243, 269, 273, 275, 285, 319, 320, 321, 344, 349, 353, 383, 403, 413, 415, 416, 475], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 162, 166], "threadingasyncenvpool": 3, "executor": [3, 22, 23, 25, 172], "functool": [3, 15, 16, 18, 21, 29, 132], "s0": [3, 132], "clamp": [3, 132, 370, 373, 392, 458, 478, 497, 499], "env_index": [3, 132], "async_step_send": [3, 132, 166, 172], "s0_result": [3, 132], "async_step_recv": [3, 132, 166, 172], "close": [3, 13, 15, 16, 18, 21, 22, 23, 25, 29, 68, 102, 132, 142, 157, 186, 187, 190, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 245, 274, 283, 285, 380, 382, 397, 400, 413, 415, 438, 482, 483, 487, 494, 496, 497, 499, 503], "seamlessli": [3, 183, 202, 476, 495, 499], "paradigm": [3, 21, 498], "decpodp": 3, "game": [3, 4, 5, 95, 135, 154, 155, 160, 161, 230, 293, 440, 486, 491], "thank": [3, 183, 204, 205, 416, 476, 482, 486, 487, 503], "carrier": [3, 484, 485, 487, 501], "particular": [3, 36, 43, 48, 56, 66, 67, 73, 78, 84, 85, 97, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 275, 285, 344, 349, 353, 413, 415, 416, 478, 479, 483, 485, 487, 496, 498, 501], "thu": [3, 397, 498], "vma": [3, 176, 177, 438, 497, 498], "robot": [3, 5, 7, 253, 278, 280, 486, 498], "vmasenv": [3, 438, 474, 497, 498], "balanc": [3, 112, 113, 136, 137, 482, 483], "num_env": [3, 15, 16, 21, 27, 132, 141, 145, 158, 176, 177, 184, 185, 188, 194, 438, 497, 498], "n_agent": [3, 176, 177, 319, 320, 321, 331, 340, 418, 438, 478, 497, 498], "ground_rew": 3, "pos_rew": 3, "style": [3, 63, 70, 79, 80, 95, 97, 98, 201], "vari": [3, 141, 143, 144, 164, 165, 168, 176, 254, 478, 486, 498], "creation": [3, 162, 171, 204, 205, 349, 413, 504], "info_spec": [3, 162], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 34, 35, 37, 38, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 132, 133, 134, 135, 138, 141, 142, 143, 144, 147, 148, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 188, 191, 192, 193, 217, 218, 219, 237, 255, 302, 310, 326, 329, 332, 344, 362, 363, 366, 367, 368, 385, 388, 389, 418, 474, 485], "simpl": [3, 9, 19, 20, 36, 43, 48, 56, 60, 66, 67, 73, 78, 83, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 295, 344, 349, 353, 365, 370, 385, 387, 398, 402, 413, 415, 416, 420, 476, 478, 482, 483, 484, 487, 488, 489, 495, 497, 498, 501, 504], "prefix": [3, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 270, 273, 275, 285, 342, 344, 345, 346, 347, 348, 349, 353, 366, 383, 398, 403, 413, 414, 415, 416, 417, 439, 485, 489, 494, 504], "exactli": [3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 144, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 306, 311, 326, 344, 349, 353, 383, 403, 413, 415, 416, 482, 485, 490, 497, 498], "action_kei": [3, 15, 16, 18, 21, 22, 23, 25, 27, 51, 132, 135, 138, 142, 150, 162, 163, 166, 167, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 218, 219, 235, 245, 247, 287, 289, 305, 315, 316, 330, 365, 478, 497, 498], "reward_kei": [3, 43, 45, 47, 51, 57, 76, 103, 104, 111, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 285, 289, 316, 452, 456, 497, 498], "set_kei": [3, 237, 380, 382, 383, 385, 388, 389, 390, 396, 397, 398, 400, 401, 402, 403, 413, 416, 418, 424, 482, 497, 498], "awai": [3, 484, 487, 497, 498, 503], "leaf": [3, 15, 16, 18, 20, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 75, 83, 85, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 244, 266, 268, 274, 370], "autoresettransform": 3, "invalid": [3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 179, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 317, 318, 344, 349, 353, 413, 415, 416, 495], "nan": [3, 221, 281], "auto_reset": [3, 51, 132, 135, 138, 142, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 221, 285, 499], "auto_reset_replac": [3, 221], "placehold": [3, 143, 144, 188, 237, 275, 281], "set_gym_backend": [3, 15, 16, 18, 21, 29, 132, 135, 138, 141, 142, 150, 162, 163, 166, 171, 172, 173, 182, 183, 184, 185, 188, 191, 192, 193, 221, 474, 487, 503], "autoresettinggymenv": [3, 221], "self": [3, 15, 16, 18, 21, 22, 23, 25, 27, 33, 36, 40, 41, 43, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 244, 245, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 285, 286, 287, 289, 302, 305, 308, 313, 316, 319, 320, 331, 340, 342, 344, 345, 346, 347, 348, 349, 353, 366, 369, 374, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 476, 479, 482, 494, 499, 503], "super": [3, 102, 156, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 289, 302, 316, 374, 381, 383, 384, 389, 396, 401, 403, 405, 406, 415, 482, 499, 503], "td_reset": [3, 221], "exclud": [3, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 97, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 204, 205, 216, 221, 225, 238, 331, 353, 382, 397, 400, 413, 497, 498, 501], "r": [3, 4, 51, 56, 135, 185, 188, 201, 203, 218, 219, 221, 228, 230, 231, 249, 263, 270, 273, 282, 283, 288, 291, 307, 370, 379, 400, 419, 438, 476, 483, 499, 504], "3633e": [3, 221], "02": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 221, 283, 483, 492], "4877e": [3, 221], "01": [3, 221, 249, 283, 288, 330, 376, 380, 382, 397, 400, 413], "2849e": [3, 221], "7584e": [3, 221], "6609e": [3, 221], "6166e": [3, 221], "8366e": [3, 221], "2761e": [3, 221], "5685e": [3, 221], "4102e": [3, 221], "8111e": [3, 221], "9959e": [3, 221], "0865e": [3, 221], "5644e": [3, 221], "2119e": [3, 221], "2542e": [3, 221], "03": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 221, 249, 270], "9952e": [3, 221], "4059e": [3, 221], "2094e": [3, 221], "9009e": [3, 221], "5140e": [3, 221], "3554e": [3, 221], "2920e": [3, 221], "7893e": [3, 221], "6429e": [3, 221], "3057e": [3, 221], "2867e": [3, 221], "6963e": [3, 221], "3818e": [3, 221], "2576e": [3, 221], "2679e": [3, 221], "1640e": [3, 221], "00": [3, 133, 134, 221, 481, 502], "6972e": [3, 221], "0212e": [3, 221], "5959e": [3, 221], "4637e": [3, 221], "3121e": [3, 221], "2168e": [3, 221], "5232e": [3, 221], "7704e": [3, 221], "7457e": [3, 221], "4127e": [3, 221], "1064e": [3, 221], "0854e": [3, 221], "5712e": [3, 221], "2189e": [3, 221], "5235e": [3, 221], "8289e": [3, 221], "0009e": [3, 221], "0257e": [3, 221], "8893e": [3, 221], "5872e": [3, 221], "9405e": [3, 221], "7766e": [3, 221], "0403e": [3, 221], "0626e": [3, 221], "2959e": [3, 221], "7263e": [3, 221], "2775e": [3, 221], "9564e": [3, 221], "0411e": [3, 221], "6769e": [3, 221], "6354e": [3, 221], "8698e": [3, 221], "1765e": [3, 221], "6292e": [3, 221], "5375e": [3, 221], "1820e": [3, 221], "7023e": [3, 221], "5836e": [3, 221], "9016e": [3, 221], "4826e": [3, 221], "6191e": [3, 221], "6387e": [3, 221], "8667e": [3, 221], "2056e": [3, 221], "1147e": [3, 221], "5991e": [3, 221], "0278e": [3, 221], "5219e": [3, 221], "3067e": [3, 221], "6617e": [3, 221], "3322e": [3, 221], "2629e": [3, 221], "4599e": [3, 221], "7298e": [3, 221], "5848e": [3, 221], "0148e": [3, 221], "5745e": [3, 221], "6982e": [3, 221], "7877e": [3, 221], "3527e": [3, 221], "7285e": [3, 221], "6668e": [3, 221], "0583e": [3, 221], "6956e": [3, 221], "3962e": [3, 221], "9845e": [3, 221], "5015e": [3, 221], "5903e": [3, 221], "9993e": [3, 221], "9418e": [3, 221], "0196e": [3, 221], "6557e": [3, 221], "2109e": [3, 221], "8997e": [3, 221], "1507e": [3, 221], "7363e": [3, 221], "0310e": [3, 221], "9574e": [3, 221], "8980e": [3, 221], "0090e": [3, 221], "forecast": 3, "awar": [3, 7, 102, 106, 107, 108, 109, 122, 124, 128, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 274, 285, 308, 313, 415, 483, 485], "detect": [3, 101, 187, 191, 398, 413, 416, 476, 478], "return_contigu": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 496], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 69, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 126, 132, 135, 138, 140, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 217, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 237, 238, 239, 240, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 285, 287, 289, 305, 308, 313, 315, 316, 330, 342, 344, 345, 346, 347, 348, 349, 353, 361, 363, 365, 368, 369, 370, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 458, 482, 497, 499], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 36, 37, 40, 42, 43, 48, 56, 60, 63, 66, 67, 72, 73, 78, 79, 86, 102, 112, 113, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 221, 225, 229, 233, 236, 245, 246, 249, 253, 258, 259, 260, 267, 268, 271, 274, 275, 278, 280, 283, 285, 287, 288, 290, 291, 300, 303, 306, 309, 311, 314, 317, 318, 322, 323, 329, 333, 334, 337, 339, 344, 349, 353, 369, 373, 376, 378, 379, 380, 381, 382, 383, 387, 388, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 413, 415, 416, 419, 425, 426, 427, 428, 429, 430, 431, 432, 433, 456, 476, 482, 483, 501, 504], "_set_se": [3, 219, 222, 233, 236, 255, 499], "lazystackedtensordict": [3, 29, 51, 75, 95, 107, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 496], "float32": [3, 15, 16, 18, 37, 40, 43, 45, 51, 62, 63, 64, 66, 71, 72, 76, 78, 79, 80, 83, 84, 85, 86, 95, 96, 97, 98, 100, 101, 106, 107, 108, 112, 113, 120, 128, 132, 133, 134, 135, 138, 141, 142, 143, 148, 149, 150, 156, 159, 160, 161, 162, 163, 166, 169, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 188, 189, 191, 192, 193, 210, 216, 218, 222, 233, 236, 237, 238, 243, 246, 249, 251, 255, 256, 258, 262, 265, 266, 268, 271, 276, 289, 291, 301, 302, 308, 313, 316, 330, 331, 332, 340, 342, 344, 345, 346, 347, 348, 349, 353, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 372, 374, 377, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 414, 416, 417, 418, 477, 494, 499], "exclusive_field": [3, 29, 51, 95, 107, 132, 185, 188, 198], "stack_dim": [3, 29, 51, 95, 107, 132, 185, 188, 198, 209], "dramat": 3, "carefulli": [3, 196, 497, 498, 504], "against": [3, 5, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 357, 362, 363, 366, 367, 368, 369, 370, 381, 383, 396, 401, 403, 405, 406, 413, 415, 416, 484, 497, 498], "plain": [3, 8, 381, 383, 389, 396, 401, 403, 405, 406, 421, 422, 423, 487], "expens": [3, 30, 113, 120, 121, 438, 501], "absent": [3, 40, 41, 49, 75, 78, 97, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 262, 275], "torchvis": [3, 11, 253, 280, 442, 497, 503, 504], "callabl": [3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 115, 132, 135, 138, 139, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 220, 222, 229, 230, 231, 237, 243, 268, 275, 276, 285, 286, 292, 293, 314, 321, 344, 349, 353, 370, 379, 398, 413, 415, 416, 438, 463, 464, 470, 471, 472, 483, 501], "bring": [3, 484, 487, 504], "kind": [3, 70, 83, 489, 497, 501], "consult": 3, "resize_par": 3, "revers": [3, 311], "order": [3, 11, 18, 20, 29, 30, 36, 43, 48, 56, 60, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 115, 119, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 226, 233, 236, 243, 251, 265, 273, 275, 285, 329, 344, 349, 353, 357, 362, 369, 371, 372, 374, 380, 381, 383, 384, 388, 389, 396, 400, 401, 402, 403, 405, 406, 413, 415, 416, 483, 497, 498], "chain": [3, 62, 63, 64, 70, 71, 79, 80, 85, 95, 97, 98, 100, 101, 150, 183, 189, 191, 192, 204, 229, 235, 292, 293, 342, 345, 346, 347, 348, 372, 414, 417, 476, 504], "in_keys_inv": [3, 207, 211, 228, 233, 234, 236, 243, 249, 250, 251, 255, 256, 258, 263, 272, 274, 276, 277, 482, 496, 499, 504], "append_transform": [3, 51, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 243, 244, 245, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 285, 291, 308, 313, 415, 438, 476, 482, 485, 494, 497, 499, 501, 503, 504], "doubletofloat": [3, 482, 484, 496], "float64": [3, 36, 43, 48, 56, 66, 67, 73, 78, 95, 96, 97, 98, 102, 132, 135, 136, 137, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 229, 233, 236, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "think": [3, 183, 185, 187, 188, 190, 196, 475, 476, 484, 497, 498, 504], "in_": 3, "out_": 3, "perspect": [3, 196, 302, 363, 390, 484, 486], "outer": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 275, 479, 482, 483, 504], "ob": [3, 4, 8, 32, 40, 41, 49, 51, 63, 68, 69, 70, 75, 78, 79, 80, 85, 95, 96, 97, 98, 112, 115, 120, 121, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 210, 216, 219, 221, 230, 233, 234, 236, 249, 263, 265, 271, 295, 296, 297, 298, 319, 320, 321, 367, 374, 381, 383, 384, 389, 396, 401, 403, 405, 406, 420, 421, 422, 423, 476, 483, 486, 496, 497, 499, 501, 503, 504], "obs_standard": 3, "out_keys_inv": [3, 207, 211, 228, 233, 234, 236, 243, 249, 250, 251, 255, 256, 263, 265, 272, 274, 276, 277, 499], "illustr": [3, 476, 482, 483, 488, 501], "chang": [3, 5, 7, 11, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 102, 106, 107, 108, 109, 113, 119, 120, 122, 124, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 233, 234, 236, 238, 245, 247, 255, 256, 262, 266, 272, 274, 275, 276, 282, 283, 285, 311, 344, 349, 353, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 476, 478, 482, 485, 495, 497, 498, 499, 500, 501, 504], "schemat": [3, 478], "outermost": 3, "innermost": 3, "similar": [3, 36, 43, 48, 56, 58, 62, 64, 66, 67, 70, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 279, 280, 282, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 358, 360, 366, 369, 370, 413, 414, 415, 416, 417, 476, 478, 482, 483, 484, 485, 486, 488, 489, 490, 491, 499, 501, 503, 504], "transform_action_spec": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 234, 249, 274, 276, 277, 285, 415], "spec_from_random_valu": 3, "_apply_transform": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 415, 499, 504], "rand": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 107, 115, 133, 134, 148, 149, 156, 160, 161, 167, 174, 175, 219, 222, 233, 236, 255, 265, 289, 316, 366, 380, 381, 383, 384, 385, 387, 388, 389, 396, 398, 400, 401, 403, 405, 406, 413, 416, 499, 503, 504], "approach": [3, 63, 70, 79, 80, 200, 225, 249, 288, 310, 319, 320, 351, 405, 476, 482, 484, 489, 490, 497, 504], "insid": [3, 62, 64, 71, 85, 100, 101, 162, 189, 234, 342, 345, 346, 347, 348, 414, 417, 504], "did": [3, 70, 281, 426, 483, 484, 490, 501, 504], "_inv_apply_transform": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 274, 285, 415, 499, 504], "actiondiscret": 3, "rand_act": [3, 132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 222, 275, 487], "action_discret": 3, "addonetoob": 3, "Is": [3, 274], "rewrit": [3, 274], "_call": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 415, 494, 499], "_inv_cal": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 274, 285, 415], "overwrit": [3, 274], "till": [3, 274, 281], "encapsul": [3, 274, 487, 488, 489], "forget": [3, 274, 311], "edit": [3, 196, 274, 285, 490], "top": [3, 4, 102, 126, 133, 134, 148, 149, 232, 274, 289, 316, 488], "transform_output_spec": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 233, 234, 238, 245, 247, 255, 256, 262, 266, 272, 274, 276, 283, 285, 415], "transform_input_spec": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 222, 229, 233, 234, 235, 247, 251, 255, 256, 261, 265, 266, 267, 268, 272, 274, 276, 279, 285, 415], "transform_observation_spec": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 240, 242, 244, 245, 247, 249, 251, 255, 256, 257, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 281, 282, 283, 285, 415, 499], "transform_state_spec": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 234, 249, 274, 276, 277, 285, 415], "transform_reward_spec": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 223, 228, 229, 233, 234, 238, 245, 246, 247, 255, 256, 259, 260, 261, 262, 263, 265, 266, 272, 274, 276, 277, 283, 285, 415, 476, 494], "rewardsum": [3, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 274, 285, 415, 497, 498], "undo": [3, 196], "addonetoact": 3, "subtract": [3, 199, 267], "regist": [3, 14, 17, 19, 20, 24, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 115, 132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 216, 233, 236, 237, 261, 273, 275, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 438, 440, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 479, 482, 484, 487, 501], "manipul": [3, 4, 8, 136, 137, 253, 274, 278, 476], "third_transform": 3, "unexpect": [3, 15, 16, 18, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 504], "behviour": 3, "fortun": [3, 485, 486, 487, 488, 491], "alreadi": [3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 95, 100, 101, 102, 106, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 217, 268, 285, 286, 342, 344, 345, 346, 347, 348, 349, 353, 370, 413, 414, 415, 416, 417, 420, 421, 422, 423, 482, 484, 491, 497, 498], "catfram": [3, 365, 483], "notic": [3, 126, 225, 478, 484, 492, 499], "parenthood": 3, "henc": [3, 30, 63, 217, 254, 319, 482, 484, 497, 498, 499], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 162, 171, 275, 438, 448, 499], "discret": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 132, 135, 138, 141, 142, 143, 150, 154, 155, 162, 163, 164, 165, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193, 218, 235, 243, 326, 329, 332, 387, 388, 389, 390, 477, 483, 488, 498], "might": [3, 62, 64, 65, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417, 444, 475, 482, 487, 504], "action_mask": [3, 135, 148, 149, 164, 165, 169, 170, 219, 495], "unavail": [3, 164, 165], "probabl": [3, 4, 8, 72, 112, 113, 115, 118, 199, 200, 204, 205, 290, 291, 300, 302, 305, 306, 308, 310, 311, 313, 314, 317, 318, 326, 338, 339, 344, 349, 353, 366, 370, 383, 400, 416, 476, 477, 478, 483, 486, 488, 503], "probabilistictensordictmodul": [3, 245, 370, 371, 478, 503], "tensordictsequenti": [3, 43, 66, 78, 291, 305, 308, 313, 330, 344, 349, 353, 362, 365, 371, 372, 377, 413, 416, 477, 482, 483, 485, 486, 488, 492, 496, 497, 500, 503], "maskedcategor": [3, 318, 474], "linear": [3, 15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 66, 67, 68, 73, 78, 102, 132, 133, 134, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 245, 253, 268, 274, 275, 278, 280, 285, 289, 291, 292, 293, 295, 296, 297, 298, 302, 304, 305, 314, 316, 319, 320, 322, 323, 330, 332, 333, 334, 344, 349, 353, 357, 358, 359, 360, 364, 365, 366, 367, 369, 372, 374, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 468, 477, 483, 496, 500, 503], "in_feat": 3, "out_feat": 3, "logit": [3, 64, 72, 301, 310, 317, 318, 326, 329, 344, 349, 353, 363, 366, 388, 389, 476, 477], "dist": [3, 10, 310, 317, 318, 326, 370, 478, 488], "distribution_class": [3, 245, 358, 359, 360, 361, 366, 370, 372, 380, 381, 383, 388, 389, 396, 400, 401, 402, 403, 477, 482, 484, 488, 497, 498, 503], "wrap": [3, 5, 15, 16, 18, 21, 22, 23, 25, 27, 33, 36, 42, 43, 48, 56, 66, 67, 72, 73, 78, 98, 102, 132, 133, 134, 135, 138, 142, 143, 147, 148, 149, 150, 155, 158, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 175, 177, 178, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 231, 273, 275, 285, 286, 308, 313, 341, 344, 349, 353, 358, 359, 360, 365, 367, 370, 375, 398, 413, 415, 416, 418, 476, 477, 482, 483, 484, 485, 489, 492, 494, 497, 498, 504], "actionmask": [3, 135], "your_base_env": 3, "mask_kei": [3, 32, 219, 254, 285, 344, 349, 353], "itself": [3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 285, 344, 349, 353, 398, 405, 413, 415, 416, 484, 487], "ey": 3, "report": [3, 133, 134, 148, 149, 491], "foremost": 3, "callback": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 498], "ad": [3, 4, 18, 29, 32, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 92, 95, 96, 97, 98, 102, 112, 113, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 225, 243, 261, 273, 275, 285, 288, 322, 323, 330, 344, 349, 353, 379, 380, 382, 383, 385, 390, 397, 400, 403, 413, 415, 416, 418, 483, 485, 486, 488, 494, 497, 501, 503, 504], "tensordictrecord": [3, 474], "videorecord": [3, 11, 438, 474, 484, 491, 492, 497], "csvlogger": [3, 11, 438, 440, 474, 483, 491, 492, 497], "wandblogg": [3, 474, 491], "tensorboardlogg": [3, 468, 474, 491], "tag": [3, 7, 11, 187, 188, 190, 438, 440, 442, 445, 472, 476, 491, 492, 494, 497], "mp4": [3, 438, 440, 442, 492, 497], "video_format": [3, 438, 440, 442, 492, 497], "whc": 3, "cwh": 3, "exp": [3, 379, 478], "al": [3, 15, 16, 18, 21, 29, 33, 141, 143, 237, 251, 289, 486, 504], "pong": [3, 15, 16, 18, 21, 29, 95, 158, 251, 486, 504], "v5": [3, 15, 16, 18, 21, 29, 141, 143, 158, 237, 251, 486, 504], "grow": [3, 107, 476], "tediou": [3, 487], "workspac": [3, 85, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 243], "pixelrendertransform": [3, 474, 497], "stream": 3, "alik": [3, 438], "envcreat": [3, 18, 28, 162, 171, 273, 283, 438, 468, 469, 472, 474, 482, 483, 503, 504], "render_mod": [3, 438, 499], "rgb_arrai": [3, 438, 497, 498, 499], "uncom": [3, 491], "line": [3, 7, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 95, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 483, 491, 497, 498], "comment": [3, 479, 483, 503], "pixels_record": [3, 438], "mission": [3, 201], "irrespect": [3, 369, 370], "dmcontrol": [3, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "jumanji": [3, 132, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "framework": [3, 4, 9, 28, 132, 133, 134, 135, 138, 142, 148, 149, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 306, 476, 494, 495, 503, 504], "Its": [3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 282, 285, 344, 349, 353, 369, 413, 415, 416, 424], "success": [3, 95, 96, 97, 98, 185, 187, 190, 191, 198, 225, 270, 305, 383, 405, 476, 483, 490, 492, 495, 499, 501, 503], "foundat": [3, 5, 164, 165, 476, 484, 498], "inspir": [3, 486, 499], "gone": [3, 4, 5, 365], "maintain": [3, 5, 9, 42, 58, 200, 225, 283, 476, 499], "concomittantli": 3, "problem": [3, 7, 8, 9, 18, 188, 413, 483, 484, 485, 490, 497, 498, 499, 501, 504], "decor": [3, 8, 213, 215, 286, 308, 313, 356, 398, 420, 421, 422, 423, 448, 476, 485, 503], "relev": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 72, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 420, 421, 422, 423, 424, 447, 486, 499], "gym_backend": [3, 215, 474], "env1": [3, 291, 496], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 135, 215], "env2": [3, 496], "_env": [3, 6, 141, 504], "classic_control": 3, "pendulumenv": [3, 51, 474, 499], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 152, 182, 246], "side": [3, 4, 199, 200, 204, 205, 317, 344, 504], "v0": [3, 15, 16, 40, 41, 49, 75, 132, 135, 138, 142, 144, 147, 148, 149, 150, 151, 152, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 229, 246, 275, 282, 283, 448, 468], "26": [3, 121, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 204, 205, 230], "fun": [3, 215, 286, 484, 497, 498], "reveal": 4, "curv": 4, "exploit": [4, 488], "cv": 4, "flip": [4, 149], "correspondingli": 4, "invers": [4, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 115, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 225, 233, 236, 238, 243, 249, 256, 258, 270, 272, 274, 276, 285, 378, 382, 388, 396, 400, 413, 415, 474, 499], "prescript": 4, "tune": [4, 33, 245, 416, 476, 497, 498, 500], "coeffici": [4, 33, 42, 72, 199, 204, 245, 382, 397, 400, 413, 416, 498], "bonu": [4, 190, 380, 382, 397, 400, 413, 476], "beta": [4, 63, 79, 112, 113, 388, 396, 397, 416, 482, 483, 501, 503], "reduc": [4, 6, 39, 112, 113, 126, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 225, 231, 267, 283, 288, 290, 338, 416, 474, 483, 497], "downstream": [4, 478, 482], "formul": [4, 497, 498], "rate": [4, 11, 95, 282, 283, 419, 483, 484, 497, 498], "gradient": [4, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 285, 290, 309, 318, 323, 326, 338, 339, 344, 349, 353, 370, 380, 382, 383, 384, 388, 389, 394, 396, 397, 398, 400, 401, 402, 403, 405, 406, 413, 415, 416, 419, 420, 421, 422, 423, 458, 482, 484, 497, 498, 499], "easier": [4, 67, 476, 477, 482, 503], "local": [4, 7, 10, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 69, 73, 78, 100, 102, 113, 120, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 283, 285, 319, 320, 331, 340, 344, 349, 350, 353, 413, 415, 416, 418, 445, 447, 486, 491, 492, 497, 498], "optima": 4, "product": [4, 9, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 306, 307, 311, 312, 470, 471, 495], "sum": [4, 15, 16, 27, 36, 43, 54, 60, 78, 126, 133, 134, 136, 137, 141, 143, 144, 148, 149, 157, 158, 168, 190, 224, 246, 261, 317, 318, 338, 340, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 396, 397, 399, 400, 401, 402, 403, 405, 406, 413, 416, 419, 426, 476, 478, 482, 483, 484, 485, 486, 489, 492, 497, 498, 499, 504], "stat": [4, 249, 282, 283, 462, 472, 483, 484], "w": [4, 115, 135, 160, 161, 225, 227, 232, 257, 271, 306, 330, 400, 440, 483, 501], "yield": [4, 15, 16, 18, 27, 29, 30, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 398, 413, 415, 416, 476, 482, 489], "insight": [4, 184, 486], "auxiliari": [4, 489], "credit": 4, "spars": [4, 43, 476, 485], "intermedi": [4, 15, 16, 43, 51, 66, 78, 224, 291, 308, 313, 344, 349, 353, 363, 413, 416, 482, 486, 500], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": [4, 185], "likelihood": [4, 482], "discov": 4, "score": [4, 72, 190, 327, 329, 400, 476], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 43, 63, 66, 68, 69, 70, 78, 79, 80, 85, 95, 96, 97, 98, 101, 102, 115, 135, 154, 155, 164, 165, 167, 176, 177, 183, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 289, 344, 349, 353, 362, 367, 413, 415, 416, 457, 477, 478, 482, 486, 487, 495, 497, 501], "explicit": [4, 15, 16, 18, 286, 501], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 33, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 311, 388, 396, 484, 498], "addition": [4, 300], "timestep": [4, 72, 97, 258, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 497, 498], "realli": 4, "huge": [4, 320, 485], "std": [4, 249, 282, 287, 328, 482, 504], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 481, 485, 487, 489, 490, 491, 492, 493, 496, 500, 501, 502], "unseen": 4, "extrins": 4, "wrong": [4, 113, 120, 196], "bonus": 4, "denser": 4, "prior": [4, 73, 334, 392, 498], "freshli": 4, "drop": [4, 119, 121, 216, 283, 382, 400, 413], "meant": [4, 56, 156, 191], "encourag": [4, 162, 196, 329, 482, 483, 501], "measur": [4, 102, 106, 108, 112, 128, 133, 134, 148, 149, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 382, 400, 413, 415, 484, 490], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 33, 488], "ideal": [4, 183, 230, 249, 413, 476, 495, 499], "distil": 4, "nois": [4, 284, 323, 330, 355, 401, 405, 406, 453, 472, 482, 497], "exploratori": [4, 380, 382, 397, 400, 413], "misalign": 4, "trade": [4, 488], "unavoid": 4, "bootstrap": [4, 390, 420, 421, 427, 428, 482, 485], "noisi": [4, 322, 323, 355, 477], "unstabl": [4, 112, 113, 309, 338, 339], "inher": [4, 380, 400], "stochast": [4, 245, 303, 323, 324, 334, 381, 383, 386, 388, 389, 394, 396, 399, 401, 403, 477, 484, 488, 498], "enemi": 4, "pomdp": [4, 501], "loos": [4, 370, 477, 483, 484], "nonexist": 4, "sequenc": [4, 15, 16, 18, 21, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 99, 105, 115, 116, 118, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 157, 158, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 207, 211, 223, 224, 225, 226, 227, 232, 233, 235, 236, 240, 242, 243, 246, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 276, 282, 283, 292, 293, 300, 302, 306, 310, 311, 314, 317, 318, 319, 320, 326, 332, 336, 344, 349, 353, 361, 371, 372, 386, 413, 416, 439, 440, 453, 454, 455, 457, 458, 476, 477, 482, 484, 485, 486, 496, 497, 498, 504], "lstm": [4, 268, 312, 313, 486], "rel": [4, 115, 268, 300, 337, 476, 482, 483, 497, 498, 501], "tend": 4, "stabl": [4, 9, 10, 112, 113, 159], "compens": 4, "descent": [4, 323], "minimum": [4, 86, 132, 162, 171, 259, 303, 337, 338, 339, 373, 376, 379, 381, 383, 389, 398, 399, 403, 413, 416, 449, 478, 482, 484, 492, 497, 498], "manual": [4, 11, 22, 25, 27, 51, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 142, 143, 193, 202, 482, 485, 501], "deviat": [4, 249, 282, 283, 287, 289, 303, 316, 322, 323, 328, 329, 400, 405, 406, 416, 482, 488, 498], "radic": 4, "begin": [4, 15, 16, 18, 21, 22, 23, 25, 27, 113, 120, 221, 306, 307, 311, 312, 379, 448, 478, 486, 487, 488, 489, 490, 491, 492, 494], "stabil": [4, 112, 113, 241, 290, 380, 382, 397, 400, 402, 413], "stage": [4, 482, 499], "never": [4, 15, 16, 21, 29, 37, 86, 112, 113, 270, 310, 490, 503], "prevent": [4, 34, 35, 39, 40, 41, 44, 49, 52, 53, 54, 55, 60, 61, 68, 75, 104, 112, 113, 133, 134, 282, 283, 309, 338, 339, 380, 382, 397, 400, 402, 413, 456, 476, 491, 501], "entir": [4, 15, 16, 18, 40, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 283, 319, 476, 484, 487, 499, 501], "submit": [4, 141, 222, 475, 503], "system": [4, 5, 101, 104, 183, 184, 185, 188, 190, 201, 202, 203, 204, 205, 413, 416, 476, 484, 495, 497, 498, 499], "adequ": [4, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 484, 497, 498], "infeas": 4, "allevi": [4, 477], "prune": [4, 150, 192], "fire": [4, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "illeg": 4, "chess": [4, 135, 160, 161], "grasp": 4, "wherein": 4, "cumul": [4, 43, 261, 267, 289, 426, 484], "q": [4, 9, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 295, 296, 297, 298, 301, 302, 304, 331, 332, 340, 360, 363, 367, 368, 381, 383, 384, 385, 387, 388, 389, 390, 395, 396, 401, 403, 405, 406, 418, 474, 482, 489, 494], "flow": [4, 420, 476, 482, 484, 497, 498, 499, 501], "reparameter": [4, 300, 310, 318, 326], "soft": [4, 395, 403, 404, 497], "critic": [4, 8, 190, 358, 364, 380, 382, 383, 384, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 413, 482, 489], "clip": [4, 72, 196, 228, 259, 380, 382, 397, 400, 402, 405, 406, 413, 458, 484, 498, 499], "oppos": [4, 84], "incorrect": [4, 120, 196], "thought": [4, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 476], "region": [4, 113], "squash": [4, 485, 503], "tanh": [4, 292, 293, 306, 307, 309, 311, 312, 314, 320, 337, 338, 339, 373, 484, 488, 497, 498, 499, 500], "prob": [4, 199, 200, 204, 205, 310, 317, 318, 326, 329, 344, 349, 353, 484, 495, 498], "rememb": [4, 497], "remap": 4, "origin": [4, 8, 43, 62, 64, 65, 66, 71, 72, 78, 81, 85, 100, 101, 146, 183, 189, 234, 235, 245, 253, 275, 280, 285, 306, 310, 342, 344, 345, 346, 347, 348, 349, 353, 366, 369, 370, 381, 383, 395, 396, 398, 400, 401, 403, 405, 406, 413, 414, 416, 417, 476, 482, 486, 494, 496, 499, 504], "world": [5, 156, 375, 392, 486, 491, 497, 498, 499, 504], "histor": 5, "ceas": 5, "farama": [5, 98, 151, 152, 164, 165, 484, 499], "gymwrapp": [5, 132, 135, 138, 142, 147, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 238, 262, 266, 281, 474, 484, 503], "feel": [5, 475, 492, 503], "free": [5, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 216, 233, 236, 310, 380, 392, 400, 479, 484, 492, 498, 503], "gladli": 5, "prepar": [6, 47, 183, 186, 204, 205, 416, 476, 484], "conda": [6, 7, 475], "cmake": 6, "activ": [6, 7, 9, 51, 292, 293, 299, 303, 314, 319, 320, 382, 397, 400, 477, 499, 503], "sim": 6, "bullet": 6, "headless": [6, 7, 147, 197, 494], "cluster": [6, 7, 8, 22, 27, 475], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 144], "y": [6, 7, 43, 66, 70, 78, 159, 304, 319, 341, 344, 349, 353, 413, 416, 482, 498, 501], "facebookresearch": [6, 144], "subdirectori": 6, "verbos": [6, 29, 30, 102, 190, 415, 492, 494], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "command": [6, 7, 10, 166, 172, 173, 484, 494, 497, 498, 499, 504], "readm": [6, 7, 176, 503], "md": [6, 7], "habitatenv": [6, 474], "_has_habitat": 6, "available_env": [6, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 148, 149, 150, 151, 154, 155, 159, 160, 161, 162, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 188, 191, 192, 193, 504], "startswith": [6, 291, 478, 482, 489], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 139, 398, 482], "env_nam": [6, 132, 133, 135, 136, 138, 139, 141, 142, 144, 148, 150, 151, 157, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 482, 484, 504], "llvmlite": 6, "config": [6, 7, 253, 280, 294, 299, 328, 462, 463, 464, 466, 469], "var": [6, 7, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 283, 285, 344, 349, 353, 383, 398, 403, 413, 415, 416], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 133, 134, 362, 381, 383, 389, 396, 398, 401, 403, 405, 406, 421, 422, 423], "importerror": [6, 7, 10, 495], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 36, 39, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 285, 344, 349, 353, 383, 398, 403, 413, 415, 416, 486, 501], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 97, 486], "stand": [7, 46, 136, 137, 162, 171, 496, 499], "joint": [7, 483], "contact": [7, 65, 497], "engin": [7, 168, 350, 415, 476, 494, 499], "biomechan": 7, "graphic": 7, "anim": [7, 498], "area": 7, "demand": [7, 491, 504], "fast": [7, 9, 107, 133, 134, 216, 256, 401, 482, 483, 484, 503], "articul": 7, "acquir": [7, 484], "deepmind": [7, 8, 9, 132, 135, 136, 137, 138, 142, 150, 154, 155, 160, 161, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 237, 484, 487], "whomev": 7, "licenc": 7, "incorpor": [7, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 305, 330, 405, 485, 488, 499], "relianc": 7, "obsolet": 7, "legaci": [7, 32, 199, 200, 204, 205], "pro": [7, 475], "tip": [7, 475], "glfw": [7, 482], "osmesa": 7, "egl": 7, "advic": [7, 504], "sudo": [7, 475], "apt": [7, 498], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 150, 192, 358, 359, 360, 476, 495], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 478, 482, 484, 485, 497, 498, 501], "roboti": 7, "html": [7, 15, 16, 157, 159, 160, 161, 494], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 15, 16, 21, 162, 171], "mjkei": 7, "txt": [7, 416], "mjlib_path": 7, "home": [7, 62, 64, 84, 99], "bin": [7, 302, 329, 363, 477], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 112, 113, 298, 366, 370, 482, 484, 486, 501], "nvidia": [7, 146, 486], "older": [7, 286], "hack": [7, 482], "adatp": 7, "script": [7, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 448, 468, 472, 477, 478, 479, 482, 483, 486, 491, 497, 498, 499, 501], "unnot": [7, 254], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 104, 483, 501], "troubleshoot": 7, "gl": 7, "h": [7, 115, 225, 227, 232, 257, 271, 306, 307, 308, 311, 312, 313, 316, 440, 483, 501], "eglshim": 7, "fatal": 7, "No": [7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 34, 35, 39, 44, 54, 55, 60, 61, 190], "directori": [7, 62, 64, 71, 84, 85, 95, 97, 98, 100, 101, 106, 189, 342, 345, 346, 347, 348, 414, 417, 445, 447, 476, 478, 479, 482, 488, 491, 497], "devel": 7, "ubuntu": [7, 146], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 483, 485, 496], "libstdc": 7, "glibcxx_3": 7, "29": [7, 120, 121], "compil": [7, 15, 16, 18, 32, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 102, 105, 106, 107, 108, 109, 113, 116, 120, 121, 122, 127, 128, 130, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 286, 306, 307, 311, 312, 338, 344, 349, 353, 413, 415, 416, 420], "libosmesa": 7, "libgcc": 7, "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 15, 16, 18, 21, 24, 29, 36, 39, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 248, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416, 478, 504], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 120, 133, 134], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 497, 498], "global": [7, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 102, 115, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 273, 285, 331, 340, 344, 349, 351, 353, 366, 370, 413, 415, 416, 418, 479, 482, 497, 498], "cuda_visible_devic": 7, "id": [7, 14, 17, 19, 20, 24, 26, 32, 72, 85, 113, 115, 120, 121, 132, 135, 138, 141, 142, 150, 162, 163, 166, 171, 172, 173, 174, 175, 183, 184, 185, 188, 190, 191, 192, 193, 330, 383, 401, 443, 447, 490, 501], "slurm_step_gpu": 7, "black": [7, 135, 497], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 498], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "nonetyp": [7, 14, 17, 19, 20, 24, 26, 31], "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 479], "n_training_step": 8, "datapoint": [8, 84, 501], "n_data_per_train": 8, "no_grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 245, 285, 290, 306, 307, 311, 312, 344, 349, 353, 413, 415, 416, 420, 421, 422, 423, 484, 485, 486, 498], "loss_fn": [8, 485, 489, 490, 503], "zero_grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 329, 344, 349, 353, 413, 415, 416, 479, 482, 484, 485, 486, 489, 492, 497, 498, 499], "backpropag": [8, 133, 134, 148, 149, 162, 380, 381, 382, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 416, 418, 489, 498, 499], "differenti": [8, 84, 133, 134, 245, 383, 405, 420, 421, 422, 423, 485, 488, 489, 497, 498, 499], "denomin": 8, "artifact": 8, "numer": [8, 70, 112, 113, 142, 193, 282, 309, 338, 339, 357, 362, 363, 366, 367, 368, 369, 370, 456, 484, 501, 504], "misconcept": 8, "freed": 8, "appear": [8, 11, 37, 60, 85, 86, 95, 113, 120, 121, 138, 191, 198, 478, 499, 501], "compuat": 8, "fix": [8, 42, 162, 268, 381, 383, 399, 403, 483, 492, 499, 504], "retain_graph": [8, 133, 134], "discuss": [8, 9, 490, 497, 498], "inplac": [8, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 342, 344, 345, 346, 347, 348, 349, 353, 369, 413, 414, 415, 416, 417, 482], "forward": [8, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 249, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 315, 319, 320, 321, 322, 324, 325, 328, 330, 331, 333, 334, 336, 340, 341, 344, 349, 353, 361, 363, 365, 366, 368, 369, 370, 373, 374, 376, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 420, 421, 422, 423, 424, 474, 478, 485, 499, 503], "submodul": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 268, 285, 308, 313, 344, 349, 353, 377, 398, 413, 415, 416], "param": [8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 233, 234, 238, 245, 247, 255, 256, 262, 266, 272, 274, 276, 283, 285, 300, 302, 319, 320, 321, 337, 344, 349, 353, 361, 366, 369, 372, 398, 408, 412, 413, 415, 416, 420, 421, 422, 423, 424, 482, 486, 492, 497, 498, 499, 500, 503], "grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 370, 413, 415, 416, 482, 484], "whose": [8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 331, 344, 349, 353, 369, 413, 415, 416], "fit": [8, 67, 249, 268, 286, 478, 479, 482], "brax": [8, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 256, 487, 504], "jax": [8, 133, 134, 148, 149, 286], "improperli": 8, "underli": [8, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 344, 398, 485, 487, 489, 491, 499], "tedeiou": 8, "priorit": [8, 63, 79, 112, 113, 383, 384, 385, 387, 388, 389, 396, 401, 403, 405, 406, 482, 483, 490, 503], "amount": [8, 162, 330, 420, 483, 501], "costli": [8, 499], "constitut": [8, 483, 498, 499], "profil": 8, "frequent": [8, 51, 501], "program": [8, 388, 396, 486, 504], "functorch": [8, 10], "incl": 8, "suit": [8, 137, 484, 487, 503, 504], "mujoco_instal": 8, "valueerror": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 495], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 119, 251, 271, 486, 503, 504], "idea": [9, 112, 113, 401, 476, 479, 485, 488, 497, 498], "introductori": 9, "intro": [9, 484, 485], "dai": [9, 503], "2022": [9, 10, 290, 503], "spin": [9, 136, 137], "hug": [9, 349, 476, 495], "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 488], "summari": [9, 249, 282, 283, 482, 483, 484, 485], "reddit": 9, "reagent": 9, "orient": [9, 504], "baselines3": 9, "tf": 9, "bandit": [9, 159], "tensorflow": [9, 317, 318], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 486, 492], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 503], "grade": [9, 476], "factori": [9, 15, 16, 18, 21, 22, 23, 25, 27, 68, 70, 79, 80, 81, 83, 482], "cherri": 9, "jaxrl": 9, "mbrl": [9, 156, 477], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 484, 485, 497, 498], "notebook": [10, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "24": [10, 121, 141, 157, 158, 185, 196, 329, 365, 440, 497], "pip3": [10, 482, 484, 485, 497, 498], "url": [10, 100, 144, 494], "org": [10, 15, 16, 33, 63, 98, 112, 113, 133, 134, 136, 137, 144, 148, 149, 154, 155, 157, 158, 159, 168, 176, 177, 225, 253, 278, 288, 294, 295, 296, 297, 298, 299, 302, 303, 304, 311, 316, 317, 318, 323, 324, 325, 329, 330, 331, 333, 334, 340, 363, 380, 381, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 405, 420, 425, 433, 473, 493, 500], "whl": 10, "u": [10, 306, 307, 311, 312, 499], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 225, 484, 497, 498, 499, 501], "power": [11, 483], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 262, 474], "ultim": [11, 309, 338, 339], "ffmpeg": 11, "whatev": [11, 478, 482], "fed": [11, 498, 501], "feed": [11, 253, 280, 398, 413, 416, 477, 482, 497, 498, 501], "suppos": [11, 162, 453, 479, 504], "snippet": [11, 253, 278, 482], "gave": 11, "extrem": [11, 162, 171, 380, 382, 397, 400, 402, 413], "blurri": [11, 486], "stitch": 11, "exp_nam": [11, 440, 441, 442, 445, 446, 447, 468, 483, 491, 492], "my_exp": [11, 491], "pixels_onli": [11, 136, 137, 141, 143, 144, 168, 482, 483, 491, 492, 503, 504], "my_video": [11, 491], "record_env": [11, 491, 492], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 190, 360, 400, 477], "allow_non": 12, "unwrap": [12, 237, 275, 448], "seealso": 12, "timeout": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 162, 197, 201, 203], "close_env": [13, 15, 16, 18, 21, 22, 23, 25, 29], "shutdown": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 166, 172, 222, 482, 483, 501, 503], "init_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "kwarg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 53, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 108, 109, 111, 112, 113, 115, 120, 121, 122, 124, 126, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 213, 219, 220, 222, 229, 253, 255, 264, 268, 273, 274, 275, 277, 279, 280, 282, 284, 285, 287, 289, 291, 292, 293, 295, 296, 297, 298, 301, 304, 305, 308, 309, 313, 314, 315, 316, 319, 320, 321, 326, 330, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 438, 440, 444, 445, 447, 451, 458, 463, 464, 469, 470, 471, 478, 484, 486, 498], "init": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 68, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 274, 282, 285, 319, 320, 321, 344, 349, 353, 413, 415, 416, 420, 447, 476, 483, 484], "implic": [13, 22, 23, 25], "notimplementederror": [13, 22, 23, 25, 85, 482], "subclass": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 40, 43, 48, 66, 67, 73, 78, 86, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 220, 221, 274, 281, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 369, 370, 371, 373, 376, 398, 400, 483, 485, 490, 499, 501], "policy_or_weight": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 43, 66, 78, 224, 341, 344, 349, 353, 362, 365, 367, 413, 416, 485], "worker_id": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "upload": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "transfer": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 370], "extract": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 49, 75, 113, 183, 197, 207, 221, 243, 272, 276, 364, 476, 482, 484, 503], "Will": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 113, 120, 157, 440], "_get_server_weight": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "typeerror": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "weight_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 476, 483], "overwritten": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 51, 95, 98, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 240], "localweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "remoteweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "get_server_weight": 14, "policy_weight": [14, 17, 19, 24, 26], "design": [14, 24, 26, 36, 43, 48, 56, 58, 60, 66, 67, 73, 78, 102, 118, 124, 131, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 225, 243, 254, 273, 275, 283, 285, 344, 349, 353, 361, 380, 381, 382, 383, 388, 389, 390, 391, 392, 393, 396, 397, 398, 400, 401, 402, 403, 406, 413, 415, 416, 418, 474, 482, 483, 484, 485, 487, 488, 489, 494, 495, 496, 497, 498, 499, 501, 503, 504], "date": [14, 17, 135, 224, 443], "datacollectorbas": [14, 15, 17, 19, 20, 23, 24, 26, 31, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 274, 285, 366, 370, 415, 460, 463, 464, 468, 474], "all_worker_id": [14, 17, 19, 20, 24, 26, 31], "scope": [14, 17, 19, 20, 24, 26, 31, 85, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 486, 504], "classmethod": [14, 17, 19, 20, 24, 26, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 115, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 243, 278, 286, 293, 294, 328, 342, 345, 346, 347, 348, 414, 417], "from_polici": [14, 17, 19, 20, 24, 26, 31], "increment_vers": [14, 17, 19, 20, 24, 26, 29, 30, 31, 202], "increment": [14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 30, 31, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 191, 192, 193, 202, 249, 397, 476], "post_hook": [14, 17, 19, 20, 24, 26, 31], "push_weight": [14, 17, 19, 20, 24, 26, 31], "noth": [14, 17, 19, 20, 24, 26, 31, 51, 150, 192, 482, 484], "register_collector": [14, 17, 19, 20, 24, 26, 31, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 344, 349, 353], "register_post_hook": [14, 17, 19, 20, 24, 26, 31], "create_env_fn": [15, 16, 18, 21, 22, 23, 25, 27, 139, 162, 171, 482, 503], "policy_factori": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "device_typ": [15, 18, 21, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 253, 278, 280, 292, 293, 294, 295, 296, 297, 298, 304, 314, 319, 320, 322, 323, 328, 331, 369, 455, 466], "env_devic": [15, 16, 18, 21, 22, 23, 25, 27, 483], "create_env_kwarg": [15, 16, 18, 21, 27, 139, 157, 162, 171, 273, 482, 504], "collector_class": [15, 16, 22, 23, 25, 26, 27], "postproc": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 56, 258, 483, 501], "explorationtyp": [15, 16, 18, 21, 22, 23, 25, 27, 366, 398, 453, 477, 482, 483, 484, 485, 488, 497, 503], "interactiontyp": [15, 18, 21, 22, 23, 25, 27, 180, 214, 366, 370, 453], "preemptive_threshold": [15, 16, 21], "num_thread": [15, 16, 21, 62, 64, 71, 85, 100, 101, 142, 162, 171, 189, 193, 342, 345, 346, 347, 348, 414, 417], "num_sub_thread": [15, 16, 21, 162, 171], "str": [15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 109, 112, 113, 115, 126, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 148, 150, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 217, 221, 225, 237, 243, 244, 245, 253, 257, 266, 267, 270, 272, 273, 275, 276, 278, 280, 281, 282, 285, 286, 289, 301, 302, 308, 313, 315, 316, 317, 319, 320, 321, 331, 332, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 357, 362, 363, 366, 367, 368, 369, 370, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 409, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 472, 476, 483, 484, 486, 494], "set_trunc": [15, 16, 18, 21, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "use_buff": [15, 16, 18, 162, 171], "extend_buff": [15, 16, 18], "replay_buffer_chunk": 15, "trust_polici": [15, 16, 18, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "compile_polici": [15, 16, 18], "cudagraph_polici": [15, 16, 18], "no_cuda_sync": [15, 16, 18], "datacollector": [15, 16, 18, 21, 27, 29, 30, 56, 400, 484, 490, 501], "recept": 15, "safe": [15, 16, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 113, 120, 189, 287, 330, 337, 338, 342, 345, 346, 347, 348, 357, 362, 363, 366, 367, 368, 369, 370, 372, 414, 417, 477, 503], "sota": [15, 16, 156, 241, 402, 449, 463, 476, 482, 483, 503], "guard": [15, 16], "doc": [15, 16, 81, 144, 147, 148, 149, 159, 168, 447, 478, 483, 497, 498, 501], "env_mak": [15, 16, 18, 27, 68, 132, 468, 504], "2000": [15, 16, 18, 56, 84, 145, 329, 440, 501], "50": [15, 16, 18, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 72, 74, 75, 83, 86, 87, 88, 89, 90, 95, 102, 120, 121, 154, 155, 196, 285, 485, 495, 501], "del": [15, 16, 18, 29, 482, 483, 484, 496, 497, 501, 503, 504], "int64": [15, 16, 18, 29, 32, 34, 35, 39, 44, 45, 51, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 71, 72, 76, 79, 81, 84, 85, 95, 96, 97, 98, 99, 100, 101, 112, 120, 132, 135, 138, 142, 150, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 198, 218, 222, 230, 237, 251, 258, 266, 302, 330, 332, 342, 345, 346, 347, 348, 362, 363, 366, 367, 368, 414, 417, 477, 499], "undergon": [15, 16, 18, 21, 22, 23, 25, 27, 84], "env_obs_kei": [15, 16, 18, 21, 22, 23, 25, 27], "mustn": [15, 16, 18, 21, 22, 23, 25, 27], "pickl": [15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 283, 285, 344, 349, 353, 413, 415, 416], "exclus": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 58, 70, 79, 80, 91, 92, 95, 113, 120, 121, 195, 222, 238, 240, 306, 308, 311, 313, 317, 318, 350, 362, 363, 367, 368, 404, 405, 406, 420, 421, 422, 423, 424, 447, 472, 477], "lifespan": [15, 16, 18, 21, 22, 23, 25, 29, 30, 483], "divis": [15, 16, 18, 21, 22, 23, 25, 36, 95, 113, 120, 121, 283, 288, 498], "endless": [15, 16, 18, 21, 22, 23, 25, 198, 476], "sit": [15, 16, 18, 21, 22, 23, 25, 27, 460, 483], "cast": [15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 148, 149, 150, 157, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 221, 222, 224, 225, 226, 229, 230, 231, 233, 234, 236, 237, 238, 239, 241, 244, 245, 252, 253, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 369, 382, 397, 400, 413, 414, 415, 416, 417, 497, 504], "deriv": [15, 16, 22, 23, 25, 27, 82, 300, 458], "span": [15, 16, 18, 21, 22, 23, 25, 27, 113, 120, 121], "n_step": [15, 16, 18, 21, 22, 23, 25, 27, 56, 285, 365, 483, 484, 497, 498], "mainli": [15, 16, 18, 21, 22, 23, 25, 27, 72, 183, 184, 185, 188, 447, 477, 497, 498, 499], "round": [15, 16, 18, 21, 22, 23, 25, 27, 95, 135], "closest": [15, 16, 18, 21, 22, 23, 25, 27], "boolm": [15, 16, 21], "ratio": [15, 16, 21, 72, 382, 400, 482, 484], "finish": [15, 16, 18, 21, 27, 29, 142, 193, 258, 504], "earli": [15, 16, 21, 56, 112, 113, 142, 193, 266, 503], "safeti": [15, 16, 21, 156, 162, 171, 283, 494], "harm": [15, 16, 21, 162, 171], "add_truncated_kei": [15, 16, 18, 21, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 275], "trust": [15, 16, 18, 132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 231, 313], "cudagraphmodul": [15, 16, 18, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "behaviour": [15, 16, 18, 43, 66, 78, 344, 349, 353, 413, 416, 485, 486, 503], "bypass": [15, 16, 18, 488], "isaaclab": [15, 16, 18, 143, 147], "maniskil": [15, 16, 18], "crash": [15, 16, 18, 258], "multiprocessedweightupdat": [15, 16], "ordereddict": [15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 282, 283, 285, 344, 349, 353, 383, 403, 413, 415, 416], "worker0": [15, 16, 21], "state_dict0": [15, 16, 21], "worker1": [15, 16, 21], "state_dict1": [15, 16, 21], "reset_idx": [15, 16, 21], "static_se": [15, 16, 18, 21, 27, 29, 30, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 275], "env_fn": [15, 16, 18, 21, 29, 30, 139, 470, 471], "env_fn_parallel": [15, 16, 18, 21, 29, 30], "300": [15, 16, 18, 21, 29, 30, 120, 121, 297, 298], "out_se": [15, 16, 18, 21, 29, 30, 504], "irrevers": [15, 16, 21], "pipe": [15, 16, 18, 21, 29, 162], "tqdm": [15, 16, 18, 21, 29, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 458, 482, 484, 485, 497, 498, 499], "ale_pi": [15, 16, 18, 21, 29, 486], "10000": [15, 16, 21, 27, 162, 288, 458, 485], "progress": [15, 16, 18, 21, 29, 30, 451, 452, 453, 458, 479, 483, 485, 504], "bar": [15, 16, 18, 21, 29, 106, 108, 128, 361, 451, 452, 453, 458, 479, 483], "pbar": [15, 16, 18, 21, 29, 95, 96, 97, 98, 482, 484, 485, 497, 498, 499], "100_000": [15, 16, 18, 21, 29, 486, 492], "prec_wc": [15, 16, 18, 21, 29], "wc": [15, 16, 18, 21, 29], "write_count": [15, 16, 18, 21, 29, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 102, 115], "set_descript": [15, 16, 18, 21, 29, 482, 484, 485, 497, 498, 499], "remote_collector": [17, 27], "max_interv": 17, "leverag": [17, 27, 132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 476, 482, 498, 504], "_maybe_map_weight": [17, 20, 24, 26, 31], "_sync_weights_with_work": [17, 20, 24, 26, 31], "_skip_upd": 17, "interv": [17, 218, 270, 439, 440, 450, 460, 483, 499], "raycollector": [17, 68, 474], "return_same_td": 18, "interruptor": 18, "cautious": [18, 400], "whole": [18, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 84, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 285, 344, 349, 353, 366, 383, 403, 413, 415, 416, 449, 482, 484], "_interruptor": 18, "outsid": [18, 234, 273, 478, 491, 497, 498, 499], "start_collect": 18, "stop_collect": 18, "preeptiv": 18, "chunk": [18, 29, 30, 102, 488], "policy_state_dict": [18, 29, 30], "env_state_dict": [18, 29, 30], "256": [18, 29, 99, 154, 155, 243, 299, 483, 484, 486, 497, 498], "weight_gett": 19, "vanillaweightsend": 19, "fetch": [19, 62, 64, 71, 85, 100, 101, 133, 134, 136, 137, 189, 245, 342, 345, 346, 347, 348, 414, 417, 488, 500, 501], "sender": 19, "update_weight": [19, 24, 26, 460], "piec": [20, 105, 116, 127, 130, 131, 482, 483, 484, 491, 497, 498, 499, 501], "scheme": [20, 479, 504], "_push_weight": 20, "unchang": [20, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 235, 253, 268, 274, 275, 278, 280, 285, 305, 344, 349, 353, 369, 413, 415, 416, 440, 455, 482, 501], "__call__": [20, 36, 43, 48, 56, 65, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 370, 413, 415, 416, 479], "proxi": [20, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 189, 318, 326, 342, 345, 346, 347, 348, 366, 414, 417, 478], "weakref": [20, 51, 85], "registr": [20, 483], "exporationtyp": [22, 23, 25], "collector_kwarg": [22, 23, 25, 27], "num_workers_per_collector": [22, 23, 25, 27], "slurm_kwarg": [22, 23, 25], "update_after_each_batch": [22, 23, 25, 27], "max_weight_update_interv": [22, 23, 25, 27], "tcp_port": [22, 23, 25, 28], "respect": [22, 23, 25, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 223, 229, 233, 236, 247, 253, 254, 263, 268, 274, 275, 278, 280, 285, 306, 310, 311, 319, 334, 344, 349, 353, 369, 374, 380, 382, 397, 400, 402, 413, 415, 416, 420, 422, 423, 454, 478, 484, 485, 497, 498], "subnod": [22, 23, 25, 27], "readi": [22, 25, 27, 29, 30, 183, 475, 483, 484, 486, 488, 491, 501, 503], "fashion": [22, 25, 27, 62, 64, 71, 85, 100, 101, 121, 189, 342, 345, 346, 347, 348, 414, 417], "distributed_back": [22, 23], "ucc": [22, 23], "submitit_delai": [22, 28], "former": [22, 23, 25, 32, 36, 43, 48, 63, 66, 67, 70, 73, 78, 79, 80, 97, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376, 482], "whilst": [22, 23, 25], "homonym": [22, 23, 25, 499], "visit": [22, 23, 25, 85, 188], "facebookincub": [22, 23, 25], "tcp": [22, 23, 25, 28], "port": [22, 23, 25, 28, 31, 174, 351], "10003": [22, 23, 25, 28], "distributedweightupdat": 22, "liter": [23, 85, 100, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 187, 188, 191, 192, 193, 195, 196, 198, 202, 204, 342, 345, 346, 347, 348, 349, 353, 356, 413, 416], "update_interv": 23, "frequenc": [23, 329, 482], "restart": 24, "rank": [24, 126, 289, 351, 352], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 32, 60, 95, 366, 370], "tensorpiperpcbackendopt": 25, "rpcweightupdat": 25, "collector_info": 26, "collector_rref": 26, "ray_init_config": [27, 30, 68], "remote_config": [27, 29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "num_collector": [27, 470, 471, 482, 483], "coordin": [27, 232], "autodetect": 27, "num_cpu": [27, 68], "num_gpu": [27, 68], "1024": [27, 68, 299, 501], "equat": [27, 66, 85, 142, 193, 282, 283, 330, 379, 382, 404, 413, 484, 487, 499], "exce": [27, 501], "indefinit": [27, 94], "rayreplaybuff": [27, 63, 69, 70, 79, 80, 95, 96, 97, 98, 115, 474], "enfoc": 27, "rayweightupdat": 27, "distributed_collector": [27, 68], "add_collector": 27, "local_polici": 27, "stop_remote_collector": 27, "num_job": 28, "tcpport": 28, "submitit_main_conf": 28, "slurm_cpus_per_task": 28, "slurm_gpus_per_nod": 28, "slurm_partit": 28, "timeout_min": 28, "submitit_collection_conf": 28, "delai": [28, 405, 489], "jump": [28, 487], "host": [28, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "satellit": 28, "rendezv": 28, "hang": 28, "forev": 28, "default_config": [28, 294, 299, 328, 361], "default_slurm_conf_main": 28, "default_slurm_conf": 28, "dialog_turns_per_batch": [29, 30], "yield_only_last_step": [29, 30], "yield_completed_trajectori": [29, 30], "total_dialog_turn": [29, 30, 102], "async_env": [29, 30], "flatten_data": [29, 30], "queue": [29, 166, 282, 415, 501, 503], "track_policy_vers": [29, 30, 202, 476], "policyvers": [29, 30, 476], "simplifi": [29, 63, 213, 488, 499, 501], "mediat": 29, "vllm": [29, 31, 191, 343, 350, 351, 352, 353, 476, 494], "vllmwrapper": [29, 183, 191, 344, 349, 476, 495], "mocking_class": [29, 273], "dummystrdataload": 29, "llmenv": [29, 186, 194, 198], "llm_model": 29, "gpt2": [29, 65, 72, 81, 84, 150, 192, 294, 299, 328, 349, 353], "get_token": 29, "pad_token": [29, 65, 81, 204, 205, 416], "eos_token": [29, 65, 187, 204, 205, 416], "from_dataload": [29, 183, 184, 185, 188, 191, 198], "from_text": [29, 191, 198, 416, 476], "group_repeat": [29, 183, 184, 185, 188, 191, 194, 198], "attention_mask": [29, 62, 64, 65, 71, 72, 81, 84, 99, 191, 349, 353], "text": [29, 65, 72, 81, 98, 100, 102, 150, 183, 184, 185, 187, 188, 190, 191, 192, 200, 201, 203, 204, 205, 306, 307, 311, 312, 330, 344, 349, 353, 415, 416, 476, 484, 494], "nontensorstack": [29, 51, 58, 107, 132, 135, 150, 185, 188, 192, 198, 207, 243, 272, 276], "plsgqejeyd": 29, "text_respons": [29, 185, 188, 190, 191, 193, 196, 201, 203, 416, 476, 494], "ec": 29, "tjbjz3perwhz": 29, "tokens_respons": [29, 191], "as_remot": [29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "cl": [29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 483], "quantiti": [29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "reserv": [29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 479], "alia": [29, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 102, 106, 107, 108, 109, 115, 122, 124, 128, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 401, 402, 403, 405, 406, 413, 415, 416, 418, 424], "get_policy_model": [29, 30], "rayllmcollector": [29, 476], "get_policy_vers": [29, 30], "uuid": [29, 30, 202, 443, 483, 504], "disabl": [29, 30, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 285, 309, 339, 344, 349, 353, 413, 415, 416, 438, 482, 497, 498], "is_initi": [29, 30], "policy_vers": [29, 30, 202, 476], "sync_it": 30, "lightweight": [30, 486, 491], "dialog": [30, 102], "yeild": 30, "block": [30, 99, 105, 131, 147, 188, 190, 203, 476, 477, 482, 485, 486, 489, 490, 497, 501], "idl": [30, 162], "somehwat": 30, "master_address": [31, 351], "master_port": [31, 351], "model_metadata": 31, "vllm_tp_size": 31, "master": [31, 33, 351, 497, 498], "localhost": [31, 174, 351], "Not": [31, 52, 53, 70, 133, 134, 148, 273, 308, 313, 476], "get_model_metadata": 31, "transformerswrapp": [31, 183, 204, 205, 344, 353, 416, 476, 495], "rollout_tensordict": 32, "nestedkei": [32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 66, 71, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 113, 120, 121, 132, 135, 138, 142, 150, 162, 163, 166, 167, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 200, 204, 205, 207, 211, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 282, 283, 285, 287, 291, 302, 305, 330, 332, 342, 344, 345, 346, 347, 348, 349, 353, 361, 365, 370, 385, 414, 415, 417, 418, 438, 440], "as_nest": 32, "x": [32, 43, 56, 66, 67, 70, 72, 73, 78, 121, 150, 192, 243, 245, 271, 276, 286, 288, 290, 291, 293, 302, 304, 306, 307, 308, 311, 312, 313, 314, 316, 319, 320, 341, 344, 349, 353, 362, 366, 367, 376, 379, 413, 416, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 458, 476, 482, 486, 497, 499, 501, 503], "durat": [32, 498], "meta": [32, 62, 64, 71, 83, 85, 97, 100, 101, 140, 144, 189, 342, 345, 346, 347, 348, 380, 382, 397, 400, 402, 414, 417, 476, 479, 484, 497, 498, 501], "aren": [32, 267, 485], "eventu": [32, 331, 485, 499], "recov": [32, 97, 98, 120, 121, 371, 388, 396, 496], "layout": [32, 344, 349, 353], "to_padded_tensor": 32, "nested_tensor": [32, 141, 143], "stride": [32, 36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 292, 293, 295, 296, 304, 319, 344, 349, 353, 413, 415, 416, 483, 497, 503], "jag": 32, "focu": [32, 482, 483, 484, 486, 488, 489, 490, 497], "team": [32, 497, 498, 503], "cat": [32, 51, 198, 374, 381, 383, 384, 396, 401, 403, 405, 406, 497, 501, 503], "arang": [32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 113, 120, 121, 218, 302, 317, 318, 362, 449, 477, 501], "obs_": 32, "trajectory_id": 32, "int32": [32, 36, 37, 51, 80, 86, 95, 120, 148, 149, 160, 161, 173, 210, 365], "data_split": 32, "got": [32, 490], "init_kl_coef": 33, "horizon": [33, 154, 155, 176, 177, 289, 316, 484], "kl": [33, 42, 72, 183, 199, 200, 204, 205, 245, 392, 397, 413, 416, 476], "describ": [33, 62, 64, 71, 83, 85, 100, 101, 167, 189, 226, 337, 338, 342, 345, 346, 347, 348, 385, 414, 417, 443, 478, 482, 484, 497, 498, 499, 504], "ziegler": 33, "et": [33, 289, 476], "relax": [33, 438], "penalti": [33, 72, 190, 195, 199, 394, 397], "strai": [33, 72], "greater": [33, 95, 113, 120, 121, 230, 246, 247, 308, 313, 383, 482, 483], "increas": [33, 104, 225, 269, 290, 330, 382, 400, 413, 416, 497, 498], "pull": [33, 51, 85, 184, 501], "toward": [33, 112, 113, 280], "aggress": [33, 112, 113, 416], "kl_coef": [33, 42, 72], "arxiv": [33, 63, 112, 113, 133, 134, 136, 137, 148, 149, 154, 155, 157, 158, 168, 176, 177, 225, 253, 278, 288, 294, 295, 296, 297, 298, 299, 302, 303, 304, 311, 316, 323, 324, 325, 329, 330, 331, 333, 334, 340, 363, 380, 381, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 399, 400, 403, 404, 405, 420, 425, 433, 500], "pdf": [33, 225, 294, 295, 296, 297, 298, 302, 329, 330, 363, 383, 390, 394, 401, 404, 405, 420, 425, 433], "1909": 33, "08593": 33, "lm": 33, "blob": 33, "lm_human_prefer": 33, "train_polici": 33, "kl_valu": 33, "coef": [33, 199, 200, 245], "newest": 33, "int8": [34, 138, 153, 164, 165, 223], "encod": [34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 133, 134, 138, 141, 142, 143, 144, 147, 148, 149, 157, 158, 160, 161, 168, 174, 175, 193, 218, 235, 325, 326, 329, 333, 344, 349, 353, 379, 483, 484, 485, 488, 499, 501], "null": [34, 37, 38, 40, 41, 43, 49, 50, 58, 59, 63, 74, 75, 79, 83, 86, 87, 88, 89, 90, 183, 191, 223, 243], "denot": [34, 498], "clariti": [34, 51], "assert_is_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "cardin": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 302, 332, 362, 363, 368, 484], "outcom": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 300, 317, 318, 337, 398, 413, 416, 497], "cartesian": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "clear_device_": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "is_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 504], "np": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 142, 193, 281, 373, 438, 486, 497, 499], "ndarrai": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 142, 193, 330, 373, 438, 486, 497], "ignore_devic": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "arrai": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 72, 74, 75, 83, 86, 87, 88, 89, 90, 112, 132, 135, 138, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 198, 237, 306, 307, 311, 312, 482, 497], "use_mask": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 164, 165], "erase_memoize_cach": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "memoiz": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 142, 193], "memoize_encod": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "compliant": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "singleton": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 190, 292, 293, 314, 335, 336, 474, 478, 494], "start_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "end_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "implements_for_spec": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "torch_funct": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "index_typ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 58, 59, 74, 75, 83, 86, 87, 88, 89, 90], "tensor_to_index": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "exanpl": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "one_hot": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 302, 318, 332], "categ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 366], "to_categorical_spec": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_one_hot": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_categ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_categor": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "make_neg_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "convert": [34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 132, 133, 134, 135, 138, 141, 142, 143, 144, 147, 148, 149, 150, 157, 158, 160, 161, 162, 163, 166, 168, 171, 172, 173, 174, 175, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 233, 236, 253, 268, 274, 275, 278, 280, 282, 283, 285, 342, 344, 345, 346, 347, 348, 349, 353, 369, 379, 398, 413, 414, 415, 416, 417, 476, 482, 483, 484, 499, 501], "shortcut": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 499, 504], "ndimens": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 482], "violat": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 477], "project": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 74, 75, 83, 86, 87, 88, 89, 90, 235, 287, 311, 330, 357, 362, 363, 366, 367, 368, 369, 370, 447, 477, 503, 504], "uniformli": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 112, 113, 114, 398, 413, 416, 504], "normal": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 69, 74, 75, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 249, 282, 283, 287, 288, 292, 293, 309, 314, 317, 318, 338, 339, 366, 370, 382, 383, 397, 400, 415, 416, 453, 456, 472, 476, 477, 479, 485, 488, 498, 504], "drawn": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 268, 305, 366, 370, 484, 497, 498], "set_provisional_n": [34, 35, 39, 44, 52, 53], "temporarili": [34, 35, 39, 44, 52, 53, 104, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 490, 501], "dest": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 253, 278, 280, 369], "to_numpi": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "transformed_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 275, 337, 472], "check_spec_encod": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_one_hot": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "hot": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 133, 134, 141, 143, 144, 147, 148, 149, 154, 155, 157, 158, 160, 161, 164, 165, 168, 174, 175, 176, 177, 218, 235, 302, 326, 327, 332, 362, 363, 367, 368, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 485], "categ_sampl": [34, 35, 39, 44, 54, 55, 60, 61], "onehot_sampl": [34, 35, 39, 44, 54, 55], "to_one_hot_spec": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "categoricalbox": [34, 35, 39, 44, 54, 55, 60, 61, 163], "type_check": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "update_mask": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "unmask": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 317], "ts": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "num_bit": 36, "convert_to_binari": 36, "decim": 36, "1001": 36, "bit": [36, 243, 484, 485, 487, 497, 498, 501], "heavysid": 36, "binary_to_decim": 36, "add_modul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "fn": [36, 43, 48, 56, 65, 66, 67, 73, 78, 95, 96, 97, 98, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 276, 285, 344, 349, 353, 413, 415, 416, 470, 471], "recurs": [36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 91, 92, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 398, 413, 415, 416, 486], "init_weight": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "m": [36, 43, 48, 52, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 235, 285, 291, 344, 349, 353, 370, 413, 415, 416, 476, 483, 499], "fill_": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 483, 485], "net": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 296, 298, 301, 304, 320, 344, 349, 353, 380, 381, 383, 389, 396, 400, 401, 402, 403, 413, 415, 416, 468, 483, 499, 500, 503], "in_featur": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 292, 293, 295, 296, 297, 298, 304, 314, 319, 320, 322, 323, 344, 349, 353, 358, 369, 377, 385, 387, 413, 415, 416, 486, 488, 489], "out_featur": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 156, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 289, 292, 293, 295, 296, 297, 298, 303, 304, 308, 313, 314, 316, 319, 320, 322, 323, 344, 349, 353, 358, 362, 369, 377, 385, 387, 413, 415, 416, 477, 482, 485, 486, 488, 489, 492, 503], "bia": [36, 43, 48, 56, 66, 67, 73, 78, 102, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 243, 253, 268, 273, 274, 275, 278, 280, 285, 288, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 320, 322, 323, 330, 344, 349, 353, 369, 376, 378, 379, 383, 398, 403, 413, 415, 416, 478, 482, 483, 484, 485, 498], "requires_grad": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 133, 134, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 245, 273, 275, 285, 329, 344, 349, 353, 370, 383, 403, 413, 415, 416], "bfloat16": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "datatyp": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 501], "member": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 398, 413, 415, 416, 440], "xdoctest": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 243, 253, 268, 273, 274, 275, 278, 280, 285, 344, 349, 353, 369, 383, 398, 403, 413, 415, 416], "buf": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "20l": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 398, 413, 415, 416], "1l": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 398, 413, 415, 416], "5l": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 398, 413, 415, 416], "doubl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 233, 234, 236, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 385, 390, 395, 401, 404, 413, 415, 416, 418, 482, 483, 484, 485, 504], "eval": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 282, 285, 290, 344, 349, 353, 382, 400, 413, 415, 416, 477, 482, 483, 484], "evalu": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 143, 150, 154, 155, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 230, 275, 285, 290, 300, 317, 318, 326, 339, 344, 349, 353, 401, 413, 415, 416, 463, 464, 483, 484, 492], "dropout": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 285, 290, 291, 306, 308, 311, 313, 314, 344, 349, 353, 413, 415, 416, 477, 485], "batchnorm": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 285, 288, 344, 349, 353, 413, 415, 416], "comparison": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 275, 285, 344, 349, 353, 398, 413, 415, 416, 476, 482, 483], "extra_repr": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "recip": [36, 43, 48, 65, 66, 67, 73, 78, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 311, 312, 313, 314, 321, 324, 325, 328, 330, 333, 334, 336, 341, 344, 349, 353, 361, 363, 365, 368, 373, 376], "get_buff": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "get_submodul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "qualifi": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "referenc": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "resolv": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "someth": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 153, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 475, 483, 484, 499, 504], "get_extra_st": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 283, 285, 344, 349, 353, 413, 415, 416], "set_extra_st": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 283, 285, 344, 349, 353, 413, 415, 416], "picklabl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 283, 285, 344, 349, 353, 413, 415, 416], "get_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "net_b": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "net_c": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "conv": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 292, 293, 344, 349, 353, 413, 415, 416, 483], "conv2d": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 293, 295, 296, 304, 319, 344, 349, 353, 413, 415, 416], "kernel_s": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 292, 293, 295, 296, 304, 319, 324, 344, 349, 353, 413, 415, 416, 483, 503], "diagram": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 476], "degre": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 231, 285, 344, 349, 353, 413, 415, 416], "named_modul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "half": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416, 482], "ipu": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "strict": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 342, 344, 345, 346, 347, 348, 349, 353, 383, 403, 413, 414, 415, 416, 417, 486], "descend": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416], "get_swap_module_params_on_convers": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416], "persist": [36, 43, 46, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 243, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416], "preserv": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 344, 349, 353, 369, 383, 403, 413, 415, 416], "missing_kei": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416], "unexpected_kei": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416], "namedtupl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416], "l": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 306, 311, 344, 349, 353, 413, 415, 416, 419, 484, 499], "idx": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "mtia": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "named_buff": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "remove_dupl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 398, 413, 415, 416], "prepend": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 398, 413, 415, 416, 486], "running_var": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "named_children": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "conv4": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "conv5": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "memo": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "named_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 245, 285, 344, 349, 353, 398, 413, 415, 416], "register_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "removablehandl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "favor": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 285, 344, 349, 353, 413, 415, 416, 484], "register_full_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_buff": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "running_mean": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "alongsid": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 476, 491], "num_featur": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 288, 344, 349, 353, 413, 415, 416], "register_forward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 302, 332, 344, 349, 353, 413, 415, 416], "with_kwarg": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "always_cal": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_module_forward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "regardless": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 382, 397, 400, 413, 415, 416, 476], "register_forward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "invok": [36, 43, 48, 56, 66, 67, 69, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "And": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 352, 353, 413, 415, 416, 489], "forward_pr": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_module_forward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "ordinarili": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "grad_input": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "grad_output": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "technic": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 483, 485, 486, 488], "caller": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_module_full_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_full_backward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "backward_pr": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_module_full_backward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_load_state_dict_post_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "incompatible_kei": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "thrown": [36, 43, 48, 56, 66, 67, 73, 74, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 501], "register_load_state_dict_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "local_metadata": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "error_msg": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "noqa": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 147, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "b950": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_modul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 479], "register_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_state_dict_post_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "register_state_dict_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "keep_var": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 285, 342, 344, 345, 346, 347, 348, 349, 353, 383, 403, 413, 414, 415, 416, 417], "requires_grad_": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 486], "autograd": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416], "freez": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 282, 283, 285, 344, 349, 353, 413, 415, 416], "finetun": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "gan": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "set_submodul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "share_memori": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 139, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 482], "share_memory_": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416, 503], "destin": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 224, 233, 234, 236, 243, 273, 275, 278, 282, 285, 342, 344, 345, 346, 347, 348, 349, 353, 383, 403, 413, 414, 415, 416, 417, 440], "averag": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 282, 283, 285, 330, 344, 349, 353, 383, 391, 392, 403, 413, 415, 416, 456, 476, 482, 484], "shallow": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 285, 344, 349, 353, 383, 403, 413, 415, 416, 485], "detach": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 243, 273, 275, 285, 344, 349, 353, 383, 394, 398, 403, 405, 413, 415, 416, 420, 421, 422, 423, 482], "non_block": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 342, 344, 345, 346, 347, 348, 349, 353, 369, 413, 414, 415, 416, 417, 485], "memory_format": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "channels_last": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "tri": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416, 491], "pin": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "4d": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "ignore_w": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "1913": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "3420": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "5113": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "2325": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "torch_doctest_cuda1": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "gpu1": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "1914": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "5112": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "2324": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "float16": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 307, 312, 344, 349, 353, 369, 413, 415, 416], "cdoubl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "3741": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "j": [36, 43, 48, 56, 63, 66, 67, 73, 78, 102, 112, 113, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416, 479, 489], "2382": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "5593": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "4443": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "complex128": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "6122": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "1150": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 253, 268, 274, 275, 278, 280, 285, 344, 349, 353, 369, 413, 415, 416], "to_empti": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "dst_type": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "xpu": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "set_to_non": [36, 43, 48, 56, 66, 67, 73, 78, 102, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 344, 349, 353, 413, 415, 416], "upper": [37, 118, 248], "continuousbox": [37, 40, 86, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 210, 243, 246, 268, 276], "provision": [39, 353], "descript": [40, 147, 176, 201, 221, 483, 484], "akin": 40, "unnam": 40, "compositespec": [40, 474, 494, 499, 504], "constraint": [40, 156, 338, 484, 497, 498], "data_cl": 40, "tensorclass": [40, 62, 64, 71, 85, 99, 100, 101, 106, 108, 128, 189, 342, 344, 345, 346, 347, 348, 349, 353, 414, 417, 476], "step_mdp_stat": 40, "pixels_spec": 40, "observation_vector_spec": 40, "composite_spec": 40, "observation_vector": [40, 226, 482], "_nodefault": [40, 41, 49, 75], "is_empti": [40, 41, 49, 75, 499], "include_nest": [40, 41, 49, 75], "leaves_onli": [40, 41, 49, 75], "is_leaf": [40, 41, 49, 75], "step_mdp_static_onli": [40, 41, 49, 75], "_compositespecitemsview": [40, 41, 49, 75], "_compositespeckeysview": [40, 41, 49, 75], "reflect": [40, 41, 49, 75, 143, 164, 165, 216, 243, 281, 398, 413, 416, 461, 483, 484, 485, 498], "lock_": [40, 41, 49, 75], "propag": [40, 41, 49, 75, 380, 382, 383, 384, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 420, 421, 422, 423, 484, 497, 498], "succeed": [40, 41, 49, 75, 243, 276], "pop": [40, 41, 49, 75, 204, 229], "keyerror": [40, 41, 49, 75, 184, 185, 188, 275], "selected_kei": [40, 41, 49, 75, 262, 482], "unlock_": [40, 41, 49, 75], "_compositespecvaluesview": [40, 41, 49, 75], "multipli": [42, 190, 191, 198, 290, 306, 311, 380, 381, 382, 383, 389, 397, 399, 400, 401, 403, 413, 456, 482, 497], "calcul": [42, 72, 185, 258, 306, 380, 382, 387, 397, 400, 402, 405, 413, 420], "reassign": 43, "reward2go": [43, 474], "reward_key_out": 43, "time_dim": [43, 420, 422, 423, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437], "unrol": [43, 391, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437], "discount": [43, 56, 139, 258, 285, 381, 387, 390, 391, 393, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 478, 483, 484, 497, 498], "lastrewardtotraj": 43, "last_reward_to_traj": 43, "new_tensordict": 43, "is_tdmodule_compat": [43, 66, 78, 344, 349, 353, 413, 416], "reset_out_kei": [43, 66, 78, 344, 349, 353, 413, 416], "orign": [43, 66, 78, 344, 349, 353, 413, 416], "mod": [43, 66, 78, 230, 245, 291, 308, 313, 344, 349, 353, 365, 370, 373, 413, 416, 485, 486, 492], "select_out_kei": [43, 66, 78, 344, 349, 353, 380, 381, 383, 384, 388, 389, 396, 400, 401, 403, 405, 406, 413, 416, 486], "reset_parameters_recurs": [43, 66, 78, 344, 349, 353, 398, 413, 416], "relu": [43, 66, 78, 156, 289, 299, 316, 344, 349, 353, 379], "old_param": [43, 66, 78, 344, 349, 353], "bork": [43, 66, 78, 344, 349, 353], "dork": [43, 66, 78, 344, 349, 353], "reset_paramet": [43, 66, 78, 321, 344, 349, 353], "from_modul": [43, 66, 78, 302, 344, 349, 353, 369, 372, 503], "out_keys_sourc": [43, 66, 78, 344, 349, 353, 413, 416], "rubric": [43, 66, 78, 249, 344, 349, 353, 372, 413, 416], "revert": [43, 66, 78, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 344, 349, 353, 413, 416, 488, 501], "seq": [43, 66, 78, 291, 306, 308, 311, 313, 344, 349, 353, 365, 413, 416, 485, 486, 492, 496], "z": [43, 66, 78, 307, 344, 349, 353, 413, 416], "shift_kei": [45, 47, 57, 76], "is_full_kei": [45, 47, 57, 76], "is_ful": [45, 47, 57, 76], "tempfil": [45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 106, 115, 189, 342, 345, 346, 347, 348, 414, 417, 468, 482, 483, 485, 486, 490, 497, 500, 501], "register_save_hook": [45, 63, 68, 69, 70, 76, 79, 80, 95, 96, 97, 98, 115], "temporarydirectori": [45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 115, 189, 342, 345, 346, 347, 348, 414, 417, 482, 483, 485, 486, 490, 497, 500, 501], "tmpdir": [45, 63, 68, 69, 70, 76, 79, 80, 84, 95, 96, 97, 98, 115, 482, 483, 486, 497], "rb_load": [45, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "register_load_hook": [45, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "filesystem": [46, 501], "ted2nest": [47, 474], "stackedcomposit": [49, 474], "tensordictmap": [51, 474], "observation_kei": [51, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "excluded_kei": [51, 238], "consolid": [51, 78, 92, 108], "lazili": [51, 107, 320, 499], "from_tensordict_pair": [51, 78], "querymodul": [51, 78], "get_keys_from_env": 51, "cattensor": [51, 95, 96, 97, 98, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 482, 496, 499, 504], "unsqueezetransform": [51, 225, 499, 501], "oracl": 51, "obs_kei": 51, "state_kei": [51, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "reset_st": 51, "rollout0": 51, "rollout1": 51, "rollout1b": 51, "collaps": 51, "max_length": [51, 62, 64, 65, 81, 84, 85, 99, 198, 207, 272, 486, 492], "valid_path": [51, 85], "assert_clos": 51, "subtre": [51, 85], "intersect": [51, 286], "Or": [51, 169, 170, 319], "rollout_from_path": [51, 85], "plot": [51, 85, 482, 484, 485, 497, 498, 499], "_nestedkei": [51, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "return_nod": 51, "diverg": [51, 183, 199, 200, 204, 205, 245, 366, 370, 392, 397, 413, 416, 476], "endpoint": 51, "r0": [51, 482], "123": [51, 85], "392": [51, 85], "989": [51, 85], "809": [51, 85], "847": [51, 85], "r1": 51, "235": 51, "td_root": [51, 85], "node_data": [51, 85], "node_id": [51, 85], "nontensordata": [51, 58, 95, 101, 135, 160, 161, 198, 207, 243, 272, 276, 438], "_parent": [51, 85], "0x716eeb78fbf0": 51, "0x": 51, "4341220243998689835": 51, "6745467818783115365": 51, "win": [51, 85], "to_str": [51, 85], "node_format_fn": [51, 85], "indent": [51, 85], "rollouts_data": [51, 85], "456": [51, 85], "359": [51, 85], "3094": [51, 85], "75": [51, 85, 120], "948": [51, 85], "68": [51, 85, 120], "9045": [51, 85], "rollout_data": [51, 85], "nvec": [52, 54], "remove_singleton": 52, "ax": [52, 322, 323, 497], "neither": [52, 53, 54, 55, 174, 499], "use_regist": [54, 60], "mone_hot": [54, 55], "boxlist": [54, 55], "gamma": [56, 258, 285, 316, 380, 381, 383, 384, 385, 387, 389, 390, 391, 393, 396, 398, 400, 401, 402, 403, 405, 406, 407, 408, 413, 416, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 468, 478, 482, 483, 484, 497, 498, 503], "sutton": [56, 478, 497, 498], "1988": 56, "tempor": [56, 112, 308, 313, 316, 421, 422, 427, 428], "44": [56, 120], "ahead": [56, 204, 285, 504], "bias": [56, 112, 113, 306, 307, 311, 312, 376, 478, 482], "mitig": [56, 225], "multisteptransform": [56, 474], "99": [56, 258, 282, 316, 393, 408, 419, 426, 468, 482, 483, 484, 486, 489, 492, 497, 498, 503], "nontermin": 56, "original_reward": 56, "newli": [56, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 476], "OR": 56, "row": [57, 77, 148, 149, 246], "example_data": [58, 101, 188, 191, 198], "feature_dim": 58, "conform": 58, "templat": [58, 101, 183, 184, 185, 188, 204, 205, 206, 349, 353, 441], "randomli": [58, 119, 173, 196, 219, 248, 249, 268, 305, 366, 370, 488, 497, 498, 499, 501], "unidimension": 60, "action_valu": [60, 301, 302, 332, 362, 363, 367, 368, 383, 389, 398, 413, 416, 418, 477, 485, 486, 488, 492], "keepdim": [60, 476], "chosen_action_valu": [60, 331, 332, 340, 367, 368, 418, 477, 485, 488], "priori": 60, "uniqu": [60, 85, 120, 121, 150, 154, 155, 190, 192, 225, 237, 267, 268, 269, 273, 365, 447, 476, 490, 501], "tensor_spec": [60, 167, 217, 219, 388, 389, 400, 402], "one_hot_sampl": [60, 61], "chosen_data": [62, 99], "rewarddata": [62, 99, 474], "rejected_data": [62, 99], "copy_exist": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "return_earli": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "share_non_tensor": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "memmap": [62, 64, 71, 85, 100, 101, 106, 162, 171, 189, 282, 342, 345, 346, 347, 348, 414, 417, 440, 442, 455], "dataclass": [62, 64, 71, 83, 85, 100, 101, 189, 342, 345, 346, 347, 348, 398, 414, 417], "from_dataset": [62, 64, 99], "dataset_nam": [62, 64, 72, 84, 99, 159], "550": [62, 64, 72, 84, 99, 120, 121], "root_dir": [62, 64, 84, 99], "from_disk": [62, 64, 84, 99], "carperai": [62, 64, 72, 84], "openai_summarize_comparison": [62, 64, 84], "load_from_disk": [62, 64, 84, 99], "load_dataset": [62, 64, 84, 99], "92534": 62, "input_id": [62, 64, 65, 71, 72, 81, 84, 99, 150, 191, 192], "end_scor": [62, 71, 72, 99], "sub_data": [62, 64], "from_tensordict": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "non_tensordict": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "getattr": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "load_memmap": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "load_": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "load_memmap_": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "fromkei": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "saved_td": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "td_load": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "fake": [62, 64, 71, 85, 100, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 342, 345, 346, 347, 348, 414, 417, 482, 483, 486], "_subclass": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "faketensormod": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "faketensor": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "from_flatten": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "attemptedli": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "existsok": [62, 64, 71, 85, 100, 101, 106, 189, 342, 345, 346, 347, 348, 414, 417], "mimic": [62, 64, 71, 85, 100, 101, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 189, 191, 192, 193, 342, 345, 346, 347, 348, 414, 417], "cross": [62, 64, 71, 85, 100, 101, 189, 289, 310, 342, 345, 346, 347, 348, 414, 417], "tensordictfutur": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "serialis": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "deepli": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "memmap_": [62, 64, 71, 85, 100, 101, 189, 282, 342, 345, 346, 347, 348, 414, 417], "memmap_lik": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "contentless": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "1_000_000": [62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 95, 96, 97, 98, 100, 101, 115, 120, 189, 342, 345, 346, 347, 348, 414, 417, 482, 485, 497], "alloc": [62, 64, 71, 85, 100, 101, 108, 189, 300, 317, 318, 342, 345, 346, 347, 348, 414, 417, 476, 482], "memmap_refresh_": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "refresh": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417, 492, 497, 498], "saved_path": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "setattr": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "tent": [62, 64, 71, 84, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "to_tensordict": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417, 485], "retain_non": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "discrard": [62, 64, 71, 85, 100, 101, 189, 342, 345, 346, 347, 348, 414, 417], "alpha": [63, 79, 112, 113, 292, 293, 295, 296, 297, 298, 304, 319, 381, 383, 389, 399, 401, 403, 405, 482, 501, 503], "ep": [63, 79, 112, 113, 249, 282, 283, 288, 330, 382, 404, 413, 456, 478, 482, 483, 485, 486, 489, 492], "1e": [63, 79, 112, 113, 249, 282, 283, 288, 300, 303, 337, 482, 483, 484, 498], "08": [63, 79, 112, 113], "pin_memori": [63, 70, 79, 80, 95, 97, 98, 252, 482, 503], "schaul": [63, 112, 113], "quan": [63, 112, 113], "antonogl": [63, 112, 113], "silver": [63, 112, 113], "2015": [63, 112, 113, 230], "ab": [63, 112, 113, 133, 134, 136, 137, 148, 149, 154, 155, 157, 158, 168, 176, 177, 224, 253, 278, 282, 288, 294, 299, 303, 304, 311, 316, 323, 324, 325, 331, 333, 334, 340, 380, 381, 385, 386, 387, 388, 391, 392, 393, 395, 396, 399, 400, 403, 500], "1511": [63, 112, 113, 304], "05952": [63, 112, 113], "expon": [63, 79, 112, 113], "\u03b1": [63, 79], "delta": [63, 79, 306, 311, 337, 366, 370, 474, 478, 497], "1_000": [63, 70, 79, 80, 497, 501], "mini": [63, 70, 79, 80, 95, 97, 98, 498], "decid": [63, 70, 79, 80, 497, 503], "incompat": [63, 70, 79, 80, 402, 501], "drop_last": [63, 70, 79, 80, 119, 121], "notion": [63, 70, 79, 80, 329], "caution": [63, 70, 79, 80, 119, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 504], "codebas": [63, 70, 79, 80, 499], "return_info": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 112, 113, 115, 501], "tensordictprioritizedreplaybuff": [63, 474, 503], "_weight": [63, 79, 112, 113], "update_prior": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 112, 113, 115, 455, 479, 483, 501, 503], "36278465": 63, "invert": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 378, 484], "default_remote_class_config": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "overriden": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "randomsampl": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 482, 497], "td_error": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 383, 384, 385, 387, 388, 389, 390, 396, 398, 401, 403, 405, 406, 413, 416, 418, 482, 501, 503], "update_tensordict_prior": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 482, 501, 503], "empty_write_count": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "insert_transform": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 184, 185, 188, 220, 275], "insert": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 105, 115, 116, 126, 127, 130, 131, 184, 185, 188, 204, 220, 225, 229, 265, 275, 277, 476], "__iter__": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 198], "set_sampl": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "set_storag": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "set_writ": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115], "prompt_rindex": [64, 65, 72], "promptdatatldr": 64, "116722": 64, "prompt": [65, 72, 101, 102, 183, 184, 185, 186, 188, 190, 191, 196, 198, 201, 203, 342, 345, 347, 348, 349, 353, 413, 415, 495], "return_tensordict": [65, 81], "tensodict": [65, 81], "valid_sampl": 65, "eough": 65, "toknen": 65, "meet": 65, "criterion": 65, "autotoken": [65, 81, 84, 101, 183, 184, 185, 187, 188, 195, 196, 200, 201, 203, 204, 205, 349, 353, 416, 476, 494, 495], "from_pretrain": [65, 72, 81, 150, 185, 188, 192, 196, 201, 203, 204, 205, 349, 353, 416, 476, 494, 495], "enough": [65, 501], "inde": [65, 235, 484, 486, 499], "index_kei": [66, 78], "hash_kei": 66, "_hash": 66, "hash_modul": [66, 73, 78], "siphash": [66, 67, 78, 150, 192], "hash_to_int": 66, "hashtoint": 66, "query_modul": [66, 78], "key1": [66, 78, 226, 265, 449, 457, 503], "key2": [66, 78, 226, 265, 449, 457, 503], "write_hash": 66, "n_compon": 67, "dtype_cast": 67, "as_tensor": [67, 73, 486], "init_method": 67, "emb": [67, 485], "sklearn": [67, 159], "byte": [67, 73, 102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 415], "builtin": [67, 73], "pythonhashse": [67, 73], "todo": 67, "replay_buffer_cl": 68, "optiona": 68, "transform_factori": [68, 70, 79, 80], "asyncio": [68, 132], "ray_buff": 68, "object_store_memori": 68, "600": [68, 72], "await": 68, "invoc": 69, "friendli": [69, 482], "include_info": [69, 79, 80, 95, 96, 97, 98], "storagecheckpointerbas": [70, 122], "roundrobinwrit": [70, 95, 96, 97, 98], "_pytre": [70, 501], "tree_map": [70, 501], "assert0": [70, 501], "ref_model": [72, 200, 204, 205], "reward_model": [72, 375], "max_new_token": [72, 495], "score_clip": 72, "kl_schedul": 72, "klcontrollerbas": 72, "num_step": [72, 486], "causal": 72, "sentenc": [72, 187], "frozen": [72, 245, 282, 283], "gpt2rewardmodel": 72, "get_dataload": [72, 474], "promptdata": [72, 474], "gpt2lmheadmodel": 72, "dl": [72, 198], "block_siz": [72, 99], "tensorclass_typ": [72, 99], "openai_summarize_tldr": 72, "config_class": 72, "model_path": 72, "rollout_from_model": 72, "rollout_from_data": 72, "reward_kl": [72, 245], "reward_raw": 72, "sample_log_prob": [72, 245, 358, 359, 360, 366, 370, 372, 400], "create_rollout_td": 72, "log_prob": [72, 199, 200, 204, 300, 310, 317, 318, 326, 329, 339, 344, 349, 353, 370, 383, 416, 478, 495], "log_ratio": 72, "replic": [72, 478], "rindex": 72, "eo": [72, 190], "generation_config": 72, "generationconfig": 72, "ti": [72, 429, 430, 431, 432, 434, 435, 436, 437, 483], "log_probs_gen": 72, "logprobs_of_label": 72, "hash_a": 73, "4669941682990263259": 73, "3778166555168484291": 73, "9122128731510687521": 73, "hash_b": 73, "heterogen": [74, 75, 107, 132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 319, 320, 482, 483], "220": 76, "resembl": 78, "tensormap": 78, "collat": [78, 115, 184, 185, 188], "subtyp": 78, "embedding_storag": 78, "tensor_dict_storag": 78, "new_index": 78, "key3": 78, "retrieve_valu": 78, "storage_constructor": 78, "write_fn": 78, "tensordictstorag": 78, "thumb": [78, 162, 484], "lazydynamicstorag": 78, "fixedstorag": 78, "randomprojectionhash": 78, "priority_kei": [79, 80, 96, 112, 383, 385, 388, 389, 390, 396, 398, 401, 403, 405, 406, 413, 416, 418, 501, 503], "reduct": [79, 112, 113, 126, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 397, 399, 400, 401, 402, 403, 405, 406, 413, 416], "prioritizedreplaybuff": [79, 474, 503], "min": [79, 112, 113, 126, 330, 381, 382, 383, 389, 399, 401, 403, 413, 483, 484], "median": [79, 112, 113, 126, 142, 148, 149, 193, 218, 366, 370], "huggingfac": [81, 190, 364], "co": [81, 190, 237, 499], "pad_trunc": 81, "am": 81, "me": [81, 196, 201, 494], "reassur": 81, "ok": 81, "_encode_memo_dict": 83, "primarili": [83, 254, 488], "educ": 83, "guess": 83, "knowledg": [83, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 489, 491], "tokenizer_fn": 84, "tensordicttoken": [84, 474], "pre_tokenization_hook": 84, "valid_s": 84, "tokenizer_class": 84, "tokenizer_model_nam": 84, "tokein": 84, "elementwis": 84, "vocabulari": [84, 150, 191, 192, 207, 272, 310], "loader": [84, 484], "185068": 84, "dataset_to_tensordict": 84, "data_dir": 84, "batch_dim": [84, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 472], "valid_mask_kei": 84, "batch_dimens": 84, "filder": 84, "from_dict": [84, 198], "data_memmap": 84, "ref": 85, "branching_act": 85, "prev_act": 85, "edg": [85, 486], "travers": 85, "breadth": 85, "bf": 85, "fully_expand": 85, "get_vertex_by_hash": 85, "get_vertex_by_id": 85, "is_termin": 85, "make_nod": 85, "node_observ": 85, "bag": 85, "num_children": 85, "num_vertic": 85, "count_repeat": 85, "recustruct": 85, "plotli": 85, "make_label": 85, "visual": [85, 253, 278, 280, 440, 484, 497, 499], "unsupport": 85, "selected_act": 85, "mctsforest": [85, 150, 192, 474], "key_typ": 85, "recurse_through_entri": 92, "recurse_through_stack": 92, "dataset_id": [95, 97, 98], "num_proc": 95, "slice_len": [95, 113, 120, 121, 440], "strict_len": 95, "arari": 95, "2600": 95, "million": [95, 485], "consequ": [95, 104, 311, 490], "50x10": 95, "available_dataset": [95, 96, 97, 98, 120, 121], "ataridqn": 95, "immutabledatasetwrit": [95, 96, 97, 98], "shorter": [95, 113, 120, 121], "Be": [95, 113, 120, 121], "game_nam": 95, "krull": 95, "1d": [95, 112, 113, 120, 121, 126], "cheapli": 95, "invalid_rang": 95, "999998": 95, "999999": 95, "add_count": 95, "84": [95, 120, 257, 485, 486], "valueestim": [95, 380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 408, 413, 416, 418, 474, 478, 482, 497, 498], "convolut": [95, 292, 293, 295, 296, 319, 335, 486, 488], "2657628": 95, "2657629": 95, "2657630": 95, "2657631": 95, "2657632": 95, "2657633": 95, "2657634": 95, "2657635": 95, "2657636": 95, "2657637": 95, "2657638": 95, "2657639": 95, "2657640": 95, "2657641": 95, "2657642": 95, "2657643": 95, "2657644": 95, "2657645": 95, "2657646": 95, "2657647": 95, "2657648": 95, "2657649": 95, "2657650": 95, "2657651": 95, "2657652": 95, "2657653": 95, "2657654": 95, "2657655": 95, "2657656": 95, "2657657": 95, "2657658": 95, "2657659": 95, "2657660": 95, "2657661": 95, "2657662": 95, "2657663": 95, "2657664": 95, "2657665": 95, "2657666": 95, "2657667": 95, "2657668": 95, "2657669": 95, "2657670": 95, "2657671": 95, "2657672": 95, "2657673": 95, "2657674": 95, "2657675": 95, "2657676": 95, "2657677": 95, "2657678": 95, "2657679": 95, "2657680": 95, "2657681": 95, "2657682": 95, "2657683": 95, "2657684": 95, "2657685": 95, "2657686": 95, "2657687": 95, "2657688": 95, "2657689": 95, "2657690": 95, "2657691": 95, "1995687": 95, "1995688": 95, "1995689": 95, "1995690": 95, "1995691": 95, "1995692": 95, "1995693": 95, "1995694": 95, "1995695": 95, "1995696": 95, "1995697": 95, "1995698": 95, "1995699": 95, "1995700": 95, "1995701": 95, "1995702": 95, "1995703": 95, "1995704": 95, "1995705": 95, "1995706": 95, "1995707": 95, "1995708": 95, "1995709": 95, "1995710": 95, "1995711": 95, "1995712": 95, "1995713": 95, "1995714": 95, "1995715": 95, "1995716": 95, "1995717": 95, "1995718": 95, "1995719": 95, "1995720": 95, "1995721": 95, "1995722": 95, "1995723": 95, "1995724": 95, "1995725": 95, "1995726": 95, "1995727": 95, "1995728": 95, "1995729": 95, "1995730": 95, "1995731": 95, "1995732": 95, "1995733": 95, "1995734": 95, "1995735": 95, "1995736": 95, "1995737": 95, "1995738": 95, "1995739": 95, "1995740": 95, "1995741": 95, "1995742": 95, "1995743": 95, "1995744": 95, "1995745": 95, "1995746": 95, "1995747": 95, "1995748": 95, "1995749": 95, "1995750": 95, "_max_run": 95, "dataset_asterix": 95, "asterix": 95, "dataset_pong": 95, "sample_from_al": [95, 115, 118], "buffer_id": [95, 118, 124], "hidden": [95, 162, 171, 224, 295, 303, 306, 307, 308, 311, 312, 313, 324, 325, 333, 334, 358, 359, 360, 361, 369, 372, 382, 397, 400, 477, 485, 496, 503], "data_path": [95, 96, 97, 98], "data_path_root": [95, 96, 97, 98], "delet": [95, 96, 97, 98, 226, 265, 447], "chunksiz": [95, 96, 97, 98], "max_tasks_per_child": [95, 96, 97, 98], "worker_thread": [95, 96, 97, 98], "index_with_gener": [95, 96, 97, 98], "num_fram": [95, 96, 97, 98], "unitari": [95, 96, 97, 98, 499], "minariexperiencereplai": [95, 96, 97], "1000000": [95, 96, 97, 98], "distance_from_origin": [95, 96, 97, 98], "forward_reward": [95, 96, 97, 98], "qpo": [95, 96, 97, 98], "qvel": [95, 96, 97, 98], "reward_ctrl": [95, 96, 97, 98, 142, 162, 193], "reward_forward": [95, 96, 97, 98], "reward_surv": [95, 96, 97, 98], "x_posit": [95, 96, 97, 98, 142, 162, 193], "x_veloc": [95, 96, 97, 98, 142, 162, 193], "y_posit": [95, 96, 97, 98], "y_veloc": [95, 96, 97, 98], "achieved_go": [95, 96, 97, 98], "desired_go": [95, 96, 97, 98], "27": [95, 96, 97, 98, 120, 121, 133, 134, 162, 171, 230], "_collate_id": [95, 96, 97, 98], "0x120e21dc0": [95, 96, 97, 98], "cat_tensor": [95, 96, 97, 98], "cat_next_tensor": [95, 96, 97, 98], "new_storag": [95, 96, 97, 98], "31": [95, 96, 97, 98, 120, 148, 149], "full_storag": [95, 96, 97, 98], "0x168406fc0": [95, 96, 97, 98], "from_env": 97, "use_truncated_as_don": 97, "direct_download": 97, "terminate_on_end": 97, "env_kwarg": [97, 222, 470, 471, 482], "reconstruct": [97, 120, 121, 392, 482, 504], "get_dataset": 97, "qlearning_dataset": 97, "fewer": [97, 113, 120], "unexpectedli": 97, "traj_split": 97, "observationnorm": [97, 282, 283, 472, 482, 483, 484, 485, 503], "maze2d": 97, "umaz": 97, "loc": [97, 132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 191, 192, 193, 245, 249, 260, 282, 283, 309, 338, 339, 358, 359, 360, 366, 370, 372, 380, 381, 383, 396, 400, 401, 402, 403, 462, 472, 477, 482, 483, 484, 485, 488, 498, 503], "minari": 98, "websit": [98, 494], "currenrtli": 98, "minari_data": 98, "door": 98, "torchrl_logg": [98, 492, 494], "28": [98, 120, 121, 319], "door_body_po": 98, "infinit": [99, 154, 155, 176, 177, 184, 185, 188, 198, 283, 490, 501], "pairwisedataset": [99, 474], "audio": 100, "function_cal": 100, "_wrap_td_method": 100, "wrapped_func": 100, "0x7fd446689160": 100, "mime_typ": 100, "function_nam": 100, "function_arg": 100, "contentbas": 101, "is_complet": 101, "tool_cal": 101, "tool_respons": [101, 201, 203, 476], "apply_chat_templ": [101, 183, 201, 203, 416, 476, 494], "autoprocessor": 101, "add_generation_prompt": [101, 204, 205, 416, 476], "chat_templ": [101, 206, 349, 353, 416, 476], "chat_template_nam": [101, 349, 353, 416, 476], "continue_final_messag": 101, "return_tensor": [101, 204], "return_dict": [101, 205, 476], "return_assistant_tokens_mask": [101, 204, 205, 476], "chat": [101, 183, 184, 185, 188, 197, 201, 203, 204, 205, 206, 349, 353, 416, 476, 495], "pretrainedtoken": [101, 183, 194, 349, 353], "im_start": [101, 185, 188, 201, 203, 476], "assist": [101, 183, 185, 188, 196, 200, 201, 203, 204, 205, 349, 353, 413, 416, 485, 494, 495], "preval": 101, "messag": [101, 183, 196, 476, 495], "pt": [101, 204, 442, 479], "assistant_mask": [101, 476], "qwen": [101, 185, 188, 196, 201, 203, 349, 350, 353, 416, 476, 494, 495], "dialogpt": [101, 476], "convers": [101, 133, 134, 148, 149, 183, 185, 188, 204, 205, 213, 413, 476, 478, 494, 495], "falcon": [101, 476], "deepseek": [101, 476], "chatml_format": [101, 349, 353, 416, 476], "default_spec": [101, 342, 345, 346, 347, 348], "set_list_to_stack": [101, 188, 201, 203, 204, 205, 476, 494], "foo": [101, 106, 108, 128, 361, 501, 504], "from_chat": [101, 183, 204, 205, 349, 353, 416, 476, 495], "topk_siz": 102, "prompt_kei": [102, 190, 415], "rewards_kei": [102, 415], "k": [102, 289, 291, 306, 307, 311, 312], "lazystackstorag": 102, "samplerwithoutreplac": [102, 126, 484, 498, 501], "lazy_stack": [102, 416, 476, 496], "topk": 102, "selector": [102, 494], "_td": [102, 139, 391], "25": [102, 230, 482], "wrote": 102, "top3": 102, "r3": 102, "as_padded_tensor": [102, 191, 198, 205, 344, 349, 353], "transformthatmeasuresbyt": [102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 415], "bytes_in_td": [102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 224, 225, 226, 229, 230, 231, 234, 237, 238, 239, 241, 244, 245, 252, 254, 255, 256, 258, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 281, 282, 285, 415], "transform_done_spec": [102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 234, 265, 272, 274, 276, 285, 415], "transform_env_batch_s": [102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 274, 285, 415], "transform_env_devic": [102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 229, 234, 274, 285, 415], "transform_full_done_spec": [102, 186, 187, 190, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 222, 229, 233, 234, 238, 245, 247, 255, 256, 262, 266, 272, 274, 276, 283, 285, 415], "checkpoint_fil": 104, "h5": 104, "h5_kwarg": 104, "iff": 104, "suffix": [104, 453], "h5py": 104, "create_dataset": 104, "immut": [105, 132, 135, 138, 142, 150, 162, 166, 171, 172, 183, 184, 185, 188, 191, 192, 193, 256, 275], "scratch_dir": [106, 482, 483, 485, 490, 497, 500, 501], "sent": [106, 108, 128, 282], "mistak": [106, 108, 128], "overewritten": 106, "tensorstoragecheckpoint": 106, "pathlib": [106, 458, 486], "main_ckpt_dir": 106, "rb_memmap": 106, "10_000_000": 106, "myclass": [106, 108, 128], "attach": [106, 107, 108, 109, 122, 124, 128, 483], "entiti": [106, 107, 108, 109, 122, 124, 128], "lazystacktensordict": 107, "heterougen": 107, "linearli": 107, "densifi": 107, "unlimit": [107, 109], "st": 107, "expans": [108, 398, 413, 416], "zero_": [108, 128, 210], "liststoag": 110, "max_capac": [112, 113, 482, 501], "max_priority_within_buff": [112, 113], "proport": [112, 501], "magnitud": [112, 113, 482, 497], "focus": [112, 113, 482, 489], "p_i": [112, 113], "delta_i": [112, 113], "epsilon": [112, 113, 249, 287, 305, 330, 404, 456, 483, 484, 485, 488], "frac": [112, 113, 306, 307, 311, 312, 484], "sum_j": [112, 113], "p_j": [112, 113], "w_i": [112, 113], "cdot": [112, 113, 416], "unbias": [112, 113], "anneal": [112, 113, 330, 483, 488, 497], "guidelin": [112, 113], "math": [112, 113, 404], "benefit": [112, 113, 475, 487, 495, 497, 498, 501], "data_0": 112, "data_1": 112, "smoothen": 112, "tdrb": 112, "pack": [112, 306, 311, 484, 487, 504], "nd": [112, 113], "sum_tre": [112, 113], "min_tre": [112, 113], "end_kei": [113, 120, 121], "cache_valu": [113, 120, 121], "closer": [113, 503], "readili": [113, 120, 121, 370], "conjunct": [113, 120, 121, 483], "buffer0": [113, 120], "immutablewrit": [113, 120], "buffer1": [113, 120], "other_sampl": [113, 120], "short": [113, 120, 121, 132, 133, 134, 135, 138, 142, 148, 149, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 311, 312, 483, 484, 487, 488, 498, 501], "tolist": [113, 476], "120110917137936e": 113, "06": [113, 300, 337], "storageensembl": [115, 118], "samplerensembl": 115, "writerensembl": [115, 124], "num_buffer_sampl": [115, 118], "ensembl": [115, 118, 124, 125, 131, 369, 401], "forbidden": 115, "0x13a2ef430": 115, "0x13a2f9310": 115, "interpol": [115, 257, 483, 486], "interpolationmod": 115, "bilinear": [115, 257], "0x13a2f9220": 115, "0x13a2f9f70": 115, "0x13a2d9b50": 115, "0x13a2f95b0": 115, "0x128648260": 115, "roundrobin": [116, 127], "shuffl": [119, 121, 184, 185, 188, 498], "incomplet": [119, 121, 196], "fresh": 119, "haven": [119, 500], "remain": [119, 196, 202, 224, 234, 235, 245, 267, 323, 476, 489], "draw": [119, 305], "use_gpu": [120, 121], "slicesamplerwithoutreplac": [120, 501], "acceler": [120, 121, 142, 193, 497, 498], "ep_1": [120, 121], "ep_2": [120, 121], "73": 120, "74": 120, "76": 120, "77": 120, "42": [120, 314, 329, 380, 381, 383, 384, 388, 396, 403], "43": 120, "45": 120, "67": [120, 496], "69": 120, "70": 120, "71": 120, "80": [120, 133, 134], "82": 120, "83": 120, "78": 120, "79": 120, "320": [120, 121, 136, 137], "700": [120, 121], "dataid": [120, 121], "counter": [121, 202, 230, 273, 365, 451, 479, 486], "23": [121, 230, 286], "request": [121, 222, 254], "51": 121, "__len__": 122, "rank_kei": 126, "get_insert_index": 126, "themselv": [132, 290, 483], "dens": [132, 317, 318, 476], "maybe_dens": 132, "min_get": [132, 166, 172], "maker": [132, 472, 483], "sort": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 226, 330], "another_act": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "discretebox": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "mutabl": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "action_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 484, 498], "had": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 488, 490], "all_act": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "any_don": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "_callabletransform": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 191, 192, 193], "auto_specs_": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "action_spac": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 237, 302, 332, 362, 363, 367, 368, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 485, 486, 488, 492], "check_dtyp": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193], "discrep": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 380, 382, 384, 385, 397, 400, 402, 418], "broken": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193], "rng": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 178, 183, 184, 185, 188, 191, 192, 193, 499], "done_keys_group": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "another_don": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "done_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "empty_cach": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 275], "env_batch_s": [132, 166, 172], "fake_tensordict": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 483, 486], "envnam": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "full_action_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 497, 498], "full_done_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "full_observation_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "full_reward_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "pipeline_st": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "full_state_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "input_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "is_spec_lock": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "maybe_reset": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "speak": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 231, 370, 482], "observation_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "output_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "register_gym": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 487], "entry_point": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "info_kei": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "reward_threshold": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "nondeterminist": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "max_episode_step": [132, 135, 138, 141, 142, 143, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "order_enforc": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "autoreset": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "disable_env_check": [132, 135, 138, 141, 142, 150, 157, 158, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "apply_api_compat": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "nasium": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 213], "dmcontrolenv": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 440, 474, 482, 487, 496, 504], "dmc": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "cheetah": [132, 135, 136, 137, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 440, 482], "removeemptyspec": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "threshold": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 305, 381, 382, 413, 476, 484], "learnt": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 468], "checker": [132, 135, 138, 141, 142, 150, 157, 158, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "stepapicompat": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "deem": [132, 135, 138, 142, 150, 154, 155, 162, 163, 166, 171, 172, 173, 176, 177, 183, 184, 185, 188, 191, 192, 193], "task_nam": [132, 135, 136, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "envgym": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0855": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0215": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0881": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0412": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "1101": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0080": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0254": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0424": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "veloc": [132, 135, 136, 137, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 497, 498, 499, 504], "9609e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "9776e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "04": [132, 135, 138, 142, 146, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 270, 283], "6347e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "3842e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "5338e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "3064e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0381e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "6656e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "05": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 270, 288, 499], "0204e": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0833": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0275": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0612": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0770": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "1256": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0082": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0186": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0476": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "2221": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "2256": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "5930": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "6937": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "5865": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "5479": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0187": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "6825": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "5224": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0018": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "1005": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0335": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 231], "0268": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0133": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0627": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0074": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0488": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0353": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0075": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0069": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0098": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0058": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0033": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0157": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0004": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 270], "0381": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0452": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "11355747": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "04257728": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "00408397": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "04155852": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0389733": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "01409826": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0978704": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "08808327": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "03970837": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "00535434": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "02353762": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "05116226": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "02788907": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "06848346": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "05154399": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "0371798": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "05128025": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "dydact": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "ant": [132, 133, 134, 135, 138, 142, 145, 147, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 500], "gym_env": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 503], "reset_kei": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 225, 261, 267, 268, 269, 497], "multitask": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "multiag": [132, 135, 138, 142, 150, 153, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 217, 320, 331, 340, 382, 397, 400, 418], "another_reward": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "reward_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "auto_cast_to_devic": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 498], "soon": [132, 135, 138, 142, 150, 162, 163, 164, 165, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "__sort": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "as__": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "categorical_action_encod": [132, 133, 134, 135, 138, 141, 142, 143, 144, 147, 148, 149, 150, 157, 158, 162, 163, 166, 168, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 213, 230, 486], "argmaxmodul": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "argmax": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 302, 332, 363, 368, 486, 488], "n_act": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 245, 380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 489], "ourselv": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 484, 504], "emul": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "epoch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 458, 484, 497, 498], "input_td": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "rollout_td": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "state_spec_unbatch": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "prevail": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 217, 226, 261], "next_tensordict": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216, 222, 226, 238, 239, 240, 252, 255, 256, 262, 265, 278, 282, 476], "precomput": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193], "_stepmdp": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216], "exclude_act": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 216], "minim": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 442, 476, 501], "reset_data": [132, 135, 138, 142, 150, 162, 163, 166, 171, 172, 173, 183, 184, 185, 188, 191, 192, 193, 476, 504], "googl": [133, 134, 154, 155, 160, 161, 188, 190, 288, 484, 485, 494, 497, 498], "2106": [133, 134, 386, 405], "13281": [133, 134], "cache_clear_frequ": [133, 134], "leak": [133, 134], "frame_skip": [133, 134, 136, 137, 141, 142, 143, 144, 148, 149, 151, 152, 157, 158, 168, 193, 241, 451, 453, 461, 479, 482, 483, 484, 503], "allow_done_after_reset": [133, 134, 136, 137, 138, 141, 143, 144, 147, 148, 149, 157, 158, 160, 161, 168, 174, 175], "toler": [133, 134, 136, 137, 141, 143, 144, 147, 148, 149, 157, 158, 160, 161, 168, 174, 175, 300, 337], "is_avail": [133, 134, 482, 483, 484, 485, 497, 498, 500], "87": [133, 134], "acrobot": [133, 134, 136, 137, 504], "advant": [133, 134, 148, 149], "timer": [133, 134, 142, 148, 149, 193], "timeit": [133, 134, 148, 149, 486], "310": [133, 134], "ms": [133, 134, 148, 149], "268": [133, 134], "433": [133, 134], "213": [133, 134], "8605": [133, 134], "pipelineenv": 134, "get_environ": 134, "san": 135, "fen": [135, 160, 161], "pgn": 135, "legal": [135, 219], "board": [135, 173], "include_san": 135, "algebra": [135, 499], "notat": 135, "include_fen": 135, "forsyth": 135, "edward": 135, "include_pgn": 135, "portabl": [135, 491], "include_legal_mov": 135, "include_hash": 135, "mask_act": 135, "subset": [135, 499, 500], "29275": 135, "rnbqkbnr": [135, 160, 161], "pppppppp": [135, 160, 161], "kqkq": [135, 160, 161], "legal_mov": 135, "219": 135, "5p2": 135, "ppppp1pp": 135, "event": [135, 310, 317, 318, 326, 429, 430, 431, 432, 434, 435, 436, 437, 501], "white": 135, "f4": 135, "96": 135, "kq": 135, "5n2": 135, "rnbqkb1r": 135, "nf3": 135, "na6": 135, "c4": 135, "f6": 135, "h4": 135, "rb8": 135, "na3": 135, "ra": 135, "get_legal_mov": 135, "uci": 135, "dm_control": [136, 137, 482, 496, 504], "2006": [136, 137, 230, 381, 387], "12983": [136, 137], "240": [136, 137, 503], "swingup": [136, 137, 504], "swingup_spars": [136, 137], "ball_in_cup": [136, 137], "catch": [136, 137, 486], "balance_spars": [136, 137], "three_pol": [136, 137], "two_pol": [136, 137], "finger": [136, 137], "turn_easi": [136, 137], "turn_hard": [136, 137], "fish": [136, 137], "upright": [136, 137, 483], "swim": [136, 137], "hopper": [136, 137], "hop": [136, 137], "humanoid": [136, 137, 162, 171, 496], "walk": [136, 137, 162, 171, 483, 496], "run_pure_st": [136, 137], "bring_bal": [136, 137], "bring_peg": [136, 137], "insert_bal": [136, 137], "insert_peg": [136, 137], "point_mass": [136, 137], "reacher": [136, 137], "swimmer": [136, 137], "swimmer6": [136, 137], "swimmer15": [136, 137], "walker": [136, 137], "dog": [136, 137], "trot": [136, 137], "humanoid_cmu": [136, 137], "lqr": [136, 137], "lqr_2_1": [136, 137], "lqr_6_2": [136, 137], "quadrup": [136, 137], "escap": [136, 137], "stacker": [136, 137], "stack_2": [136, 137], "stack_4": [136, 137], "deviceless": 138, "run_type_check": [138, 156], "hint": 138, "counterenv": 138, "creator": [139, 463, 464, 470, 471, 472], "substitut": [139, 267, 282, 488], "vecnorm": [139, 283, 472], "env_creat": [139, 482], "test_env1": 139, "observation_count": [139, 504], "test_env2": 139, "ps": 139, "p1": 139, "p2": 139, "9934": 139, "make_vari": [139, 273], "variant": [139, 273, 290, 477], "trajcount": 139, "env_creator_pendulum": 139, "env_creator_cartpol": 139, "env_str": 140, "device_map": 140, "registri": [141, 174], "asyncvectorenv": 141, "pixel_observ": [141, 143, 144, 168], "pixelobservationwrapp": [141, 143, 144, 168], "adventur": [141, 143], "airraid": [141, 143, 504], "alien": [141, 143], "time_limit": 141, "timelimit": [141, 154, 155, 176, 177], "default_info_dict_read": [141, 142, 143, 162, 193], "reader": [141, 142, 143, 162, 193, 483], "set_info_dict_read": [141, 142, 143, 162, 193, 487], "info_dict": [141, 142, 143, 162, 193], "gymlikeenv": [141, 143, 193, 474], "auto_register_info_dict": [141, 142, 143, 162, 193], "multibinari": [141, 143], "multidiscret": [141, 143], "rag": [141, 143], "gym_conversion_exampl": [141, 143], "info_dict_read": [142, 162, 193], "ignore_priv": [142, 193], "baseinfodictread": [142, 193], "tensordictprim": [142, 162, 193, 291, 308, 313, 377, 477, 485], "succe": [142, 162, 193], "underscor": [142, 193], "primer": [142, 183, 184, 185, 188, 191, 193, 198, 268, 291, 308, 313, 377, 485], "halfcheetah": [142, 162, 193, 218, 257, 482, 503], "reward_run": [142, 162, 193], "raise_if_clos": [142, 193], "fast_encod": [142, 193], "memoize_cach": [142, 193], "adaptive_autorang": [142, 193], "4f": [142, 193, 416, 484, 485, 499], "fp": [142, 193, 440, 445, 447], "10141": [142, 193], "5742fp": [142, 193], "10576": [142, 193], "8388fp": [142, 193], "read_act": [142, 193], "read_don": [142, 193], "nonsens": [142, 193], "fallback": [142, 193], "read_ob": [142, 193], "dictat": [142, 193, 246, 366, 370, 400, 482, 499], "read_reward": [142, 193], "hoc": [142, 162, 193, 488], "dict_read": [142, 193], "my_info_kei": [142, 193], "some_env": [142, 193], "vecenv": 143, "vectorenv": 143, "convert_actions_to_numpi": 143, "missing_obs_valu": [143, 281], "vecgymenvtransform": 143, "secur": [144, 494], "habitat3": 144, "ai": [144, 476, 500], "habitatrenderpick": 144, "isaacgym": [145, 146], "isaacgymwrapp": [145, 474], "isaacgymenv": [146, 474], "webpag": 146, "isaac": [146, 147], "essenc": [146, 487], "scripts_isaaclab": 147, "managerbasedrlenv": 147, "app": 147, "applaunch": 147, "argpars": [147, 469, 472], "parser": [147, 187, 469, 472, 476], "argumentpars": 147, "add_app_launcher_arg": 147, "args_cli": 147, "hydra_arg": 147, "parse_known_arg": 147, "app_launch": 147, "isaaclab_task": 147, "f401": 147, "manager_bas": 147, "ant_env_cfg": 147, "antenvcfg": 147, "isaac_lab": 147, "cfg": [147, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472], "instadeepai": [148, 149], "2306": [148, 149, 283], "09884": [148, 149], "snake": [148, 149, 185], "grid": [148, 149, 440], "bodi": [148, 149], "body_st": [148, 149], "fruit_posit": [148, 149], "col": [148, 149], "head_posit": [148, 149], "tail": [148, 149], "game2048": [148, 149], "maze": [148, 149], "cleaner": [148, 149, 495], "cvrp": [148, 149], "multicvrp": [148, 149], "minesweep": [148, 149], "rubikscub": [148, 149], "knapsack": [148, 149], "sudoku": [148, 149], "tsp": [148, 149], "connector": [148, 149], "v2": [148, 149, 169, 170, 409, 429, 430, 431, 432, 434, 435, 436, 437, 485], "mmst": [148, 149], "graphcolor": [148, 149], "partli": [148, 149], "scrambl": [148, 149], "robotwarehous": [148, 149], "tetri": [148, 149], "binpack": [148, 149], "jobshop": [148, 149], "0x1fca91910": 148, "122": [148, 149, 504], "0x1ff9baee0": 148, "134": [148, 149], "0x1ff9ba7c0": 148, "172": [148, 149], "jit": 149, "eager": [149, 350], "tdreset": [149, 285, 496], "whichev": 149, "overview": [150, 192, 484, 486, 489, 497, 498, 503], "vocab_s": [150, 191, 192], "hashing_modul": [150, 192], "text_output": [150, 192], "decod": [150, 192, 211, 324, 344, 349, 353, 476], "batch_decod": [150, 192], "text_kei": [150, 192, 344, 349, 353], "gpt2token": [150, 192], "make_tensordict": [150, 192], "mo": [151, 152], "minecart": [151, 152], "mo_gym": [152, 246], "qualnam": 153, "neural": [153, 164, 165, 292, 293, 327, 329, 335, 369, 420, 477, 483, 484, 485, 488, 497, 498, 499, 504], "group_map": [153, 154, 155, 160, 161, 164, 165, 174, 175, 176, 177, 179, 497], "constructiuon": [153, 164, 165], "premad": [153, 154, 155, 164, 165, 176, 177, 418], "all_in_one_group": [153, 160, 161, 179], "agent_0": [153, 164, 165, 174, 179, 265], "agent_1": [153, 164, 165, 174, 179, 265], "agent_2": [153, 164, 165, 174, 179], "agent_3": [153, 174], "one_group_per_ag": [153, 164, 165], "meltingpot": [154, 155], "2211": [154, 155], "13746": [154, 155], "melt": [154, 155], "pot": [154, 155], "novel": [154, 155, 489], "social": [154, 155], "familiar": [154, 155, 483, 494, 498, 504], "unfamiliar": [154, 155], "broad": [154, 155], "cooper": [154, 155, 497, 498], "decept": [154, 155], "reciproc": [154, 155], "stubborn": [154, 155], "substrat": [154, 155], "ml_collect": 154, "config_dict": 154, "configdict": 154, "categorical_act": [154, 155, 160, 161, 164, 165, 169, 170, 174, 175, 176, 177], "marlgroupmaptyp": [154, 155, 160, 161, 164, 165, 174, 175, 176, 177, 179, 474, 497], "agent_nam": [154, 155, 176, 177, 179], "agent_names_to_indices_map": [154, 155, 176, 177], "env_torchrl": [154, 155], "commons_harvest__open": [154, 155], "rgb": [154, 155], "144": [154, 155], "192": [154, 155], "collective_reward": [154, 155], "ready_to_shoot": [154, 155], "88": [154, 155, 169, 170], "substrate_config": 155, "get_config": 155, "mp_env": 155, "build_from_config": 155, "default_player_rol": 155, "mymbenv": [156, 289, 316], "world_model": [156, 289, 316, 392], "hidden_observ": [156, 289, 316], "mlp": [156, 289, 292, 293, 295, 296, 297, 298, 304, 308, 313, 316, 320, 321, 358, 362, 377, 385, 387, 477, 483, 486, 488, 489, 492, 496, 500, 503], "worldmodelwrapp": [156, 289, 316], "activation_class": [156, 289, 292, 293, 295, 296, 297, 298, 303, 304, 314, 316, 319, 320, 483, 488, 497, 498, 503], "activate_last_lay": [156, 289, 298, 314, 316], "sail": [157, 158], "sg": [157, 158], "2206": [157, 158], "10558": [157, 158], "readthedoc": [157, 160, 161], "en": [157, 160, 161], "python_interfac": 157, "envpoolmixin": 158, "env_bas": 158, "task_id": 158, "env_typ": 158, "gym_reset_return_info": 158, "envpool_env": 158, "www": [159, 317, 318], "fetch_openml": 159, "adult_num": 159, "adult_onehot": 159, "mushroom_num": 159, "mushroom_onehot": 159, "covertyp": 159, "shuttl": 159, "magic": [159, 486, 487], "106": 159, "openspiel": [160, 161], "open_spiel": [160, 161], "game_str": 160, "return_st": [160, 161, 164, 165], "4672": [160, 161], "current_play": [160, 161], "674": 160, "2048": [160, 161], "add_nois": [160, 161], "amazon": [160, 161], "backgammon": [160, 161], "restor": [160, 161, 476], "td_restor": [160, 161], "pyspiel": 161, "load_gam": 161, "new_initial_st": 161, "3009": 161, "my_env_fun": [162, 171], "custom_attribute_list": [162, 171], "custom_attribut": [162, 171], "custom_method_list": [162, 171], "custom_method": [162, 171], "deploi": [162, 171, 222, 486], "slight": [162, 171, 483], "share_individual_td": [162, 171], "shared_memori": [162, 171], "policy_proof": [162, 171], "ll": [162, 171, 230, 306, 307, 311, 312, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 498, 504], "serial_for_singl": [162, 171, 483], "circular": [162, 171, 482], "list_of_kwarg": [162, 171], "com_veloc": [162, 171], "head_height": [162, 171], "joint_angl": [162, 171], "torso_vert": [162, 171], "batched_pipe_timeout": 162, "stringent": [162, 484, 497, 498], "penv": [162, 273], "env_fix": 162, "influenc": 162, "myenv": [162, 222, 233, 236], "update_kwarg": [162, 171], "th": [163, 240, 277, 306, 311, 499], "thdot": [163, 499], "max_spe": [163, 499], "max_torqu": [163, 499], "gen_param": [163, 499], "gravit": [163, 499], "torqu": [163, 499], "pettingzoo": [164, 165, 497, 498], "pet": [164, 165], "zoo": [164, 165], "__": [164, 165], "aecenv": [164, 165], "dead": [164, 165], "done_on_ani": [164, 165, 497], "compulsori": [164, 165], "adversary_0": [164, 165], "adversari": [164, 165, 394, 497], "sisl": 164, "multiwalker_v9": 164, "aec": [164, 165], "n_piston": [164, 165], "pistonball_v6": [164, 165], "piston": [164, 165], "piston_0": [164, 165], "piston_1": [164, 165], "piston_20": [164, 165], "tictactoe_v3": [164, 165], "player": [164, 165, 173], "player_1": [164, 165], "player_2": [164, 165], "butterfli": 165, "parallel_env": [165, 482, 503, 504], "_setup": [166, 172], "async_reset_send": [166, 172], "async_reset_recv": [166, 172], "cube": 167, "roboh": 168, "expos": [168, 233, 236, 371, 382, 400, 483], "vikashplu": 168, "wiki": 168, "2310": 168, "06828": 168, "from_depth": 168, "smacv2": [169, 170], "starcraft": [169, 170], "challeng": [169, 170, 487, 499, 500], "10gen_terran": [169, 170], "10gen_zerg": [169, 170], "10gen_protoss": [169, 170], "3m": [169, 170], "8m": [169, 170], "25m": [169, 170], "5m_vs_6m": [169, 170], "8m_vs_9m": [169, 170], "10m_vs_11m": [169, 170], "27m_vs_30m": [169, 170], "mmm": [169, 170], "mmm2": [169, 170], "2s3z": [169, 170], "3s5z": [169, 170], "3s5z_vs_3s6z": [169, 170], "3s_vs_3z": [169, 170], "3s_vs_4z": [169, 170], "3s_vs_5z": [169, 170], "1c3s5z": [169, 170], "2m_vs_1z": [169, 170], "corridor": [169, 170], "6h_vs_8z": [169, 170], "2s_vs_1sc": [169, 170], "so_many_banel": [169, 170], "bane_vs_ban": [169, 170], "2c_vs_64zg": [169, 170], "old": [169, 170, 283, 397, 504], "smac": [169, 170], "map_nam": [169, 170], "176": [169, 170], "battle_won": [169, 170], "dead_al": [169, 170], "dead_enemi": [169, 170], "episode_limit": [169, 170], "322": [169, 170, 196], "procedur": [169, 170], "distribution_config": [169, 170], "n_unit": [169, 170], "n_enemi": [169, 170], "team_gen": [169, 170], "dist_typ": [169, 170], "weighted_team": [169, 170], "unit_typ": [169, 170], "marin": [169, 170], "maraud": [169, 170], "medivac": [169, 170], "exception_unit_typ": [169, 170], "start_posit": [169, 170], "surrounded_and_reflect": [169, 170], "map_x": [169, 170], "map_i": [169, 170], "capability_config": [169, 170], "131": [169, 170], "starcraft2env": 170, "tic": 173, "tac": 173, "toe": 173, "single_play": 173, "player1": 173, "desired_batch_s": 173, "player0": 173, "uniti": [174, 175], "ml": [174, 175], "technolog": [174, 175], "llapi": [174, 175], "mlagents_env": [174, 175], "unityenviron": [174, 175], "file_nam": 174, "registered_nam": 174, "nor": 174, "connect": 174, "3dball": 174, "group_0": 174, "vectorsensor_size8": 174, "continuous_act": [174, 176, 177, 438, 497, 498], "agent_10": 174, "agent_11": 174, "agent_4": 174, "agent_5": 174, "agent_6": 174, "agent_7": 174, "agent_8": 174, "agent_9": 174, "group_reward": 174, "proroklab": [176, 177], "vectorizedmultiagentsimul": [176, 177], "2207": [176, 177], "03530": [176, 177], "basescenario": 176, "defaultt": 176, "chosen": [176, 177, 267, 268, 331, 332, 340, 368, 440, 477, 491], "sparsiti": 176, "unbatched_action_spec": [176, 177], "unbatched_observation_spec": [176, 177], "unbatched_reward_spec": [176, 177], "het_spec": [176, 177], "het_specs_map": [176, 177], "flock": [176, 177, 438], "agent_collision_rew": [176, 177], "agent_distance_rew": [176, 177], "ca": 179, "environment4": 179, "get_group_map": 179, "sumbodul": 182, "blank": [183, 476], "canva": [183, 476], "fundament": [183, 476, 490], "histori": [183, 184, 185, 187, 188, 191, 196, 197, 200, 201, 203, 204, 205, 342, 344, 349, 353, 416, 474, 494], "intention": [183, 476], "data_kei": [183, 184, 185, 188, 191], "dialogu": [183, 476], "applic": [183, 403, 418, 476, 487, 488, 499], "klrewardtransform": [183, 199, 204, 205, 476], "pythoninterpret": [183, 476], "dataloadingprim": [183, 184, 191, 268, 476], "addthinkingprompt": [183, 476], "input_mod": [183, 184, 185, 187, 188, 204, 205, 344, 349, 353, 476, 495], "system_prompt": [183, 184, 185, 188, 201, 203, 476, 494], "template_kwarg": [183, 184, 185, 188], "system_rol": [183, 476], "user_rol": [183, 476], "policy_rol": 183, "response_kei": 183, "datasetchatenv": 183, "gsm8kenv": [183, 184, 187, 194, 196, 476], "ifevalenv": [183, 184, 476], "hello": [183, 204, 205, 349, 353, 416, 476], "response_data": 183, "next_ob": [183, 249, 420, 421, 422, 423, 503], "rlvr": 184, "verifi": [184, 476], "batch_size_dl": [184, 185, 188, 194], "apply_templ": [184, 185, 188, 201, 203, 494], "conflict": 184, "thin": [184, 193, 343, 476, 478], "chatenv": [184, 185, 188, 193, 201, 203, 474, 494], "bucket": 184, "reset_dataload": [184, 185, 188, 198], "set_missing_toler": [184, 185, 188, 275], "gsm8k": [185, 186, 194, 476], "compute_reward": [185, 188], "qwen2": [185, 188, 196, 201, 203, 350, 476, 494, 495], "3b": [185, 188, 196, 201, 203, 350], "question": [185, 188, 494, 501, 503], "answer": [185, 187, 188, 190, 196, 476, 494], "adam": [185, 329, 338, 482, 483, 484, 485, 486, 489, 492, 497, 498, 499], "bought": 185, "sandwich": 185, "he": 185, "paid": 185, "breed": 185, "mari": 185, "saw": [185, 491, 499, 501], "im_end": [185, 196, 201, 203, 476, 494], "reward_answ": [185, 187, 476], "reward_contain": [185, 187, 476], "reward_right": [185, 187, 476], "reward_think": [185, 187, 476], "snak": 185, "set_done_if_answ": [187, 190, 476], "make_gsm8k_env": 187, "extract_tag": [187, 476], "pars": [187, 206, 494, 501], "xml": [187, 476], "ifev": [188, 190, 476], "pprint": [188, 476], "nyou": 188, "instruction_id_list": [188, 190], "detectable_cont": 188, "number_placehold": 188, "num_highlight": 188, "num_": 188, "respond": 188, "plan": [188, 289, 315, 316], "week": 188, "europ": 188, "trip": 188, "london": 188, "pari": [188, 494], "rome": 188, "cap": [188, 484, 501], "restaur": 188, "prompt_level_strict_acc": [189, 190], "inst_level_strict_acc": [189, 190], "prompt_level_loose_acc": [189, 190], "inst_level_loose_acc": [189, 190], "instruction_ids_kei": 190, "keyword_args_kei": 190, "id_kei": 190, "response_column": 190, "score_kei": 190, "ifeval_scor": 190, "aggregate_reward": 190, "ifevalscoredata": [190, 476], "format_weight": 190, "scorer": 190, "IF": 190, "column": 190, "think_block": 190, "answer_block": [190, 476], "langdetect": 190, "nltk": 190, "immutabledict": 190, "default_reward_aggreg": [190, 476], "tier": 190, "metric": [190, 382, 400, 413, 478, 482], "formula": [190, 245, 309, 338, 339, 380, 382, 397, 400, 413, 478, 484], "format_scor": [190, 476], "quality_bonu": 190, "structure_multipli": 190, "complexity_scal": 190, "incent": 190, "cot": [191, 476], "token_kei": 191, "str_kei": 191, "attention_kei": 191, "assign_reward": 191, "has_attent": 191, "assign_don": 191, "batchless": 191, "eos_token_id": 191, "pretrainedtokenizerbas": [191, 207, 272], "stack_method": [191, 198], "as_nested_tensor": [191, 198, 344, 349, 353], "bert": [191, 207, 272], "uncas": [191, 207, 272], "tokens_in": 191, "tokens_out": 191, "mlgym": [193, 195, 476], "get_library_nam": 193, "prisonersdilemma": 195, "reward_wrong_format": 195, "mlgymenv": [195, 476], "wrongli": 195, "cond": [196, 230, 231], "random_prompt": 196, "edit_last_turn": 196, "zero_reward": 196, "undo_don": 196, "egocentr": 196, "reconsid": 196, "But": [196, 496], "wrong_answ": 196, "natalia": 196, "sold": 196, "48": 196, "friend": 196, "april": 196, "she": [196, 501], "72": 196, "altogeth": [196, 231], "undon": 196, "correct_answ": 196, "allowed_domain": [197, 494], "tool_nam": [197, 201, 203], "web": [197, 486, 494], "brows": [197, 494], "browser": [197, 494], "click": [197, 494], "llm_tool": 197, "clean": [197, 476], "mappabl": 198, "maybe_dense_stack": 198, "unrel": 198, "endless_dataload": 198, "set_capture_non_tensor_stack": 198, "dummydataload": 198, "generate_random_str": 198, "ascii_lowercas": 198, "__next__": 198, "zxwvupirska": 198, "stringa": 198, "zxwvupirsk": 198, "roll": 198, "init_st": 198, "nngcmflsana": 198, "vrrbnhzpmga": 198, "nngcmflsan": 198, "vrrb": 198, "dummytensordataload": 198, "generate_random_tensor": 198, "pad_tensor": 198, "padding_length": 198, "data_spec": 198, "gen_log_probs_full_kei": [199, 204], "ref_log_probs_full_kei": [199, 204], "ref_log_prob": [199, 204, 205, 416], "kl_kei": [199, 204], "kl_penalti": [199, 204], "add_to_reward": [199, 200, 204], "coeff": [199, 204, 382, 397, 400], "padding_sid": [199, 200, 204, 205, 317, 344, 349, 353], "retrievelogprob": [199, 200, 204, 416], "retrievekl": [199, 200, 205], "pad_output": [199, 204, 205, 344, 349, 353, 495], "gen_log_prob": [199, 204], "pad_sequ": [199, 200, 204, 205], "kl_transform": 199, "gen_log_probs_kei": 199, "ref_log_probs_kei": 199, "llmwrapperbas": [200, 204, 205, 349, 353, 413], "log_prob_kei": [200, 245, 370, 478], "assistant_onli": [200, 204, 205, 416], "chathistori": [200, 204, 205, 349, 353, 476], "gen_model": [200, 204], "klcomput": [200, 204, 205], "tool_schema": 201, "mcp": 201, "protocol": 201, "pattern": [201, 476], "schema": 201, "add_numb": 201, "add_schema": 201, "successfulli": [201, 203, 476, 494, 495], "version_typ": 202, "period": [202, 288], "llmcollector": [202, 204, 344, 349, 353, 476], "tracker": [202, 244], "new_weight": 202, "current_vers": 202, "uuid4": 202, "nprint": 203, "from_collector": 204, "history_kei": [204, 349, 353], "tokenizer_kwarg": [204, 205, 344, 349, 353, 416], "get_new_vers": [204, 344, 349, 353], "consciou": [204, 205], "identif": [204, 205], "assit": [204, 205, 416], "optconfig": [204, 205, 416], "optforcausallm": [204, 205, 416], "weather": [204, 205, 416], "facebook": [204, 205, 416], "opt": [204, 205, 416, 476], "125m": [204, 205, 416], "return_log_prob": [204, 205, 245, 349, 353, 358, 359, 360, 366, 370, 372, 402, 416, 477, 484, 488, 495, 497, 498, 503], "log_probs_kei": [204, 205, 344, 349, 353], "chat_histori": [204, 205, 349, 353], "log_probs_full_kei": 205, "batchabl": 205, "use_raw_nontensor": [207, 243, 272, 276], "additional_token": [207, 272], "skip_special_token": [207, 272], "add_special_token": [207, 272], "return_attention_mask": [207, 272], "missing_toler": [207, 272], "call_before_reset": [207, 272], "test_input_spec": [207, 276], "list_of_tensordict": [208, 209], "unsqueeze_null_shap": 210, "dynamic_shap": 210, "model_bas": [211, 212, 289, 316], "model_based_env": [211, 391], "dreamerenv": [211, 391, 474], "model_based_env_ev": 211, "spec_typ": 213, "convert_specnam": 213, "remap_state_to_observ": 213, "spectyp": 213, "unus": 213, "probabilistictdmodul": [214, 314, 366, 370, 419, 453], "keep_oth": [216, 499], "exclude_reward": 216, "exclude_don": 216, "next_": 216, "write_full_fals": 217, "_terminated_or_trunc": 217, "num_interv": 218, "out_action_kei": 218, "samplingstrategi": 218, "optino": 218, "intenum": 218, "action_disc": 218, "masker": 219, "finit": [219, 239, 329, 488, 501], "maskedenv": 219, "ones_lik": [219, 317], "scatter": 219, "fill_float": 221, "fill_int": 221, "fill_bool": 221, "someenvclass": 221, "autoresetenv": 221, "fooenv": 221, "sign": [221, 263, 420, 497], "envtyp": 221, "reshape_fn": [222, 486], "reset_func": 222, "accompani": [222, 266], "tensordict_batch_s": 222, "tensordict_reset": [222, 499], "biner": 223, "burn_in": 224, "burn": 224, "burnt": 224, "gru_modul": [224, 308, 377], "input_s": [224, 268, 306, 307, 308, 311, 312, 313, 377, 485, 486], "hidden_s": [224, 268, 306, 307, 308, 311, 312, 313, 377, 485, 486], "default_recurrent_mod": [224, 308, 313], "burn_in_transform": 224, "gru": [224, 268, 307, 308, 377, 486], "num_lay": [224, 306, 308, 311, 313, 324, 325, 377, 486], "is_init": [224, 244, 308, 313, 330, 365, 377, 420, 485, 486], "86": 224, "3008": 224, "0344": 224, "padding_valu": [225, 317, 318, 344, 349, 353], "as_invers": 225, "movement": 225, "1312": 225, "5602": 225, "consumpt": [225, 474], "pictur": 225, "pixels_trsf": [225, 501], "grayscal": [225, 483, 485, 486, 501, 504], "data_exclud": [225, 501], "make_rb_transform_and_sampl": 225, "sampler_kwarg": 225, "redund": [225, 476, 485], "del_kei": [226, 265, 278, 496, 499], "unsqueeze_if_oor": 226, "observation_posit": 226, "observation_veloc": 226, "crop": [227, 254, 440], "center": [227, 329, 440], "width": [227, 232, 257], "height": [227, 232, 257], "squar": [227, 232, 309, 338, 339, 382, 400, 413, 440, 476], "scalar": [228, 259, 287, 296, 298, 305, 322, 323, 330, 376, 380, 381, 382, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 413, 416, 418, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 477, 483, 489, 499], "rewardsc": [229, 275, 482, 483, 485], "rewardclip": 229, "transformed_env": [229, 275, 487], "condition": 230, "switch": [230, 275, 283, 309, 339, 438, 495], "met": [230, 231, 379, 497, 499], "unalt": 230, "criteria": 230, "policy_switch": 230, "step_count_kei": [230, 231, 266], "step_count_tot": 230, "step_count_main": 230, "0322": 230, "1540": 230, "0111": 230, "3190": 230, "0299": 230, "1544": 230, "0181": 230, "3280": 230, "0276": 230, "1550": 230, "0255": 230, "3414": 230, "0253": 230, "1558": 230, "0334": 230, "3596": 230, "0230": 230, "1569": 230, "0422": 230, "3828": 230, "0206": 230, "1582": 230, "0519": 230, "4117": 230, "1598": 230, "0629": 230, "4469": 230, "0156": 230, "1617": 230, "0753": 230, "4891": 230, "0130": 230, "1639": 230, "0895": 230, "5394": 230, "0104": 230, "1665": 230, "1058": 230, "5987": 230, "0076": 230, "1696": 230, "1246": 230, "6685": 230, "0047": 230, "1732": 230, "1463": 230, "7504": 230, "0016": 230, "1774": 230, "1715": 230, "8459": 230, "0020": 230, "0150": 230, "1884": 230, "6117": 230, "0017": 230, "2071": 230, "3838": 230, "0105": 230, "2115": 230, "5110": 230, "exectu": 231, "palliat": [231, 488], "inner_count": 231, "middle_env": 231, "middle_count": 231, "auto_unwrap": [231, 275, 448], "9670": 231, "2546": 231, "9669": 231, "9802": 231, "1981": 231, "1601": 231, "9926": 231, "1214": 231, "5556": 231, "9994": 231, "7622": 231, "9984": 231, "0561": 231, "7933": 231, "9895": 231, "1445": 231, "7779": 231, "dtype_in": 233, "dtype_out": 233, "scan": [233, 236, 371, 372], "resp": [233, 236], "not_transform": [233, 236], "orig_devic": 234, "unspecifi": 234, "num_actions_effect": 235, "max_act": 235, "include_forward": 235, "num_act": [235, 293, 389, 486, 488], "action_out": 235, "eol_kei": 237, "lives_kei": 237, "eol_attribut": 237, "breakout": 237, "210": [237, 251], "160": [237, 251], "eol_transform": 237, "eol": 237, "dqnloss": [237, 380, 381, 383, 384, 387, 389, 390, 391, 395, 396, 398, 400, 401, 402, 403, 404, 405, 406, 407, 413, 416, 418, 465, 474, 478, 483, 485, 486, 492], "register_kei": 237, "loss_or_advantag": 237, "lossmodul": [237, 458, 467, 468, 474, 478], "valueestimatorbas": [237, 398, 413, 416, 474], "first_dim": 240, "last_dim": 240, "allow_positive_dim": [240, 265, 277], "frameskip": 240, "repeatedli": [241, 484, 498], "hash_fn": 243, "repertoir": 243, "reproducible_hash": 243, "unarytransform": 243, "observation_str": 243, "tobyt": [243, 276], "observation_hash": 243, "x08": 243, "x8b": 243, "xbexav": 243, "xbf": 243, "x00": 243, "xee": 243, "xb5": 243, "x17": 243, "x8f": 243, "xbe": [243, 276], "x88": 243, "xccu": 243, "xc0vr": 243, "get_input_from_hash": 243, "hash_tensor": 243, "init_kei": [244, 365], "pi_curr": 245, "pi_0": 245, "overfit": 245, "probabilist": [245, 366, 380, 400, 474, 484, 503], "get_dist": [245, 344, 349, 353, 370, 371], "normalparamextractor": [245, 358, 359, 360, 366, 372, 380, 381, 383, 389, 396, 400, 401, 402, 403, 405, 406, 477, 484, 488, 498, 503], "probabilisticactor": [245, 358, 359, 360, 361, 380, 381, 383, 386, 388, 389, 396, 399, 400, 401, 402, 403, 405, 406, 477, 482, 484, 488, 497, 498], "tanhnorm": [245, 358, 359, 360, 366, 372, 380, 381, 383, 396, 400, 401, 402, 403, 405, 406, 474, 484, 498, 503], "apply_": 245, "copy_": [245, 482], "mogymwrapp": [246, 474], "mo_env": 246, "sea": 246, "treasur": 246, "so_env": 246, "stack_reward": 247, "stack_observ": 247, "auto_batch_size_": 247, "macro": [247, 365], "noop": 248, "trial": 248, "standard_norm": [249, 260, 282, 283, 482, 483, 485], "affin": [249, 260, 282, 283], "layer": [249, 282, 288, 292, 293, 295, 296, 301, 303, 306, 307, 308, 311, 312, 313, 314, 319, 320, 322, 323, 324, 325, 335, 336, 355, 364, 373, 476, 477, 483, 484, 485, 486, 488, 497, 500], "recover": 249, "set_default_tensor_typ": 249, "doubletensor": 249, "isclos": 249, "init_stat": [249, 482, 483, 484, 485], "3752e": 249, "5087e": 249, "9294e": 249, "9636": 249, "5608": 249, "6408": 249, "num_it": [249, 483, 484], "reduce_dim": [249, 482, 483, 484, 485], "cat_dim": [249, 482, 483, 484, 485], "keep_dim": [249, 365, 483, 485], "statist": [249, 282, 283, 288, 402, 472, 482, 483, 484, 504], "gaussian": [249, 268, 287, 289, 316, 322, 323, 328, 484, 486, 497], "empir": [249, 289, 316, 366, 370, 482, 484, 498], "3d": [249, 292], "reorder": 251, "in_keys_in": [251, 277], "channel": [251, 271, 319, 324, 325, 483], "r3m": [253, 500], "resnet": [253, 278, 280], "ego4d": [253, 278, 280], "univers": [253, 278, 280, 487], "suraj": [253, 278], "nair": [253, 278], "aravind": [253, 278], "rajeswaran": [253, 278], "vikash": [253, 278, 280], "kumar": [253, 278, 280], "chelsea": [253, 278], "finn": [253, 278], "abhinav": [253, 278], "gupta": [253, 278], "2203": [253, 278, 316, 500], "12601": [253, 278, 500], "_init": [253, 278, 482], "resnet50": [253, 280, 500], "model_nam": [253, 278, 280, 350, 443], "resnet34": 253, "resnet18": 253, "r3m_vec": [253, 500], "stack_imag": [253, 280], "tread": [253, 280], "hub": [253, 280, 487], "resnet50_weight": [253, 280], "imagenet1k_v1": [253, 280], "download_path": [253, 280], "tensor_pixels_kei": [253, 280], "sub_seq_len": 254, "sample_dim": [254, 482], "hesit": 254, "robust": [254, 288, 476], "mix": [254, 331, 340, 418, 476, 482, 497, 498], "improp": 254, "dummyenv": 255, "another_oth": 255, "other_reward": 255, "create_copi": 256, "stuff": [256, 490], "newnam": 256, "r2g": 258, "reward_to_go": 258, "bernoulli_": 258, "9010": 258, "9404": [258, 426], "9701": [258, 426], "9900": [258, 426], "0000": [258, 269, 270, 305, 329, 373, 426], "clamp_min": 259, "clamp_max": 259, "clip_min": 259, "clip_max": 259, "episode_": 261, "reward1": 261, "reward2": 261, "episode_reward": [261, 497, 498], "keep_reward": 262, "keep_don": 262, "logical_or": 263, "in_key_inv": 265, "unstack": 265, "update_don": 266, "disjunct": 266, "recognis": 266, "target_return": 267, "default_valu": [268, 377], "expand_spec": 268, "single_default_valu": 268, "call_before_env_reset": 268, "unit": [268, 289, 303, 306, 307, 324, 325, 333, 334, 484], "scala": 268, "mykei": 268, "__unless": 268, "exists__": 268, "get_primers_from_modul": [268, 291, 308, 313, 474], "recurrent_st": [268, 308, 313, 377, 485], "10th": 269, "0216": 269, "1149": 269, "1990": 269, "2749": 269, "3281": 269, "9290": 269, "3702": 269, "8978": 269, "time_kei": 270, "elaps": [270, 491], "monitor": [270, 382, 400, 487], "expend": 270, "_polici": 270, "time_reset": 270, "time_polici": 270, "time_step": [270, 312, 365], "0882": 270, "0002": 270, "5797e": 270, "6289e": 270, "7990e": 270, "0824e": 270, "0837e": 270, "6056e": 270, "2016e": 270, "1062e": 270, "7009e": 270, "from_int": 271, "shape_toler": 271, "ri": 271, "traj_count": 273, "traj": 273, "countingenv": 273, "make_env_c0": 273, "make_env_c1": 273, "set_contain": 274, "reset_par": 274, "smoothli": [275, 288], "add_1": 275, "cache_spec": 275, "inv_fn": 276, "unari": 276, "durin": 276, "ommit": 276, "observation_trsf": 276, "xbc": 276, "x7f": 276, "x859": 276, "x81": 276, "x9a": 276, "xbd": 276, "xb8t8": 276, "test_output_spec": 276, "danger": 277, "vc1": 278, "vc1_vec": 278, "untrain": 278, "make_noload_model": 278, "vip": [279, 280, 500], "implicit": [280, 388, 396, 501], "jason": 280, "ma": 280, "shagun": 280, "sodhani": 280, "dinesh": 280, "jayaraman": 280, "osbert": 280, "bastani": 280, "ami": 280, "zhang": 280, "vip_vec": 280, "final_nam": 281, "sb3": 281, "terminal_obs_read": 281, "vecnormv2": 282, "new_api": [282, 283], "to_observation_norm": [282, 283], "frozen_copi": [282, 283], "shared_td": 282, "race": 282, "decai": [282, 283, 287, 305, 404, 456, 482, 483, 485, 504], "underflow": [282, 456], "build_td_for_shared_vecnorm": 282, "memmori": 282, "td_share": 282, "v": [282, 306, 307, 311, 312, 358, 388, 396, 403, 482, 483], "unfreez": [282, 283], "train_env": 282, "eval_env": 282, "9999": 283, "0001": [283, 303], "shared_data": 283, "reduce_batch_dim": 283, "varianc": [283, 288, 289, 290, 309, 338, 339, 400, 478, 482, 484, 498], "vs": [283, 286], "weigh": 283, "_cast_int_to_float": 283, "env_trsf": 283, "observation_norm": 283, "reward_norm": [283, 456], "unnorm": [283, 310, 317, 318, 326], "7967": 283, "1238": 283, "5911": 283, "5275": 283, "8585": 283, "5028": 283, "2505": 283, "3169": [283, 373], "1332": 283, "1235": 283, "6596e": 283, "3072e": 283, "9170e": 283, "9255e": 283, "9131e": 283, "4671e": 283, "3760e": 283, "2058e": 283, "3484e": 283, "6185e": 283, "1456": 283, "1862": 283, "2053": 283, "2605": 283, "4046": 283, "5185": 283, "8023": 283, "1364": 283, "6183": 283, "5406": 283, "0920": 283, "1492": 283, "2702": 283, "3917": 283, "5001": 283, "7947": 283, "0160": 283, "3347": 283, "9082": 283, "9679": 283, "2199": 283, "2918": 283, "1668": 283, "2083": 283, "4981": 283, "5046": 283, "7950": 283, "9791": 283, "1484": 283, "4182": 283, "2201": 283, "0403": 283, "5206": 283, "7791": 283, "8282": 283, "2279": 283, "2907": 283, "4929": 283, "7793": 283, "8626": 283, "1832": 283, "local_env": 283, "testifi": 283, "4307": 283, "9613": 283, "state_dim": [284, 294, 299, 328, 333, 334, 361], "action_dim": [284, 294, 295, 297, 299, 328, 361, 482, 496], "gsde": [284, 401, 472], "gsdemodul": 284, "rb_transform": 285, "resist": 285, "insensit": 285, "sensit": [285, 483, 485], "_orig": 285, "95": [285, 316, 408, 484, 485], "window": [285, 365, 497, 501, 503], "module_nam": [286, 398, 413, 416], "from_vers": 286, "to_vers": 286, "class_method": 286, "import_modul": 286, "get_class_that_defined_method": 286, "module_set": 286, "setters_dict": 286, "setter": 286, "setter_dict": 286, "po": 287, "sigma_init": [287, 497], "sigma_end": [287, 497], "annealing_num_step": [287, 305, 330, 482, 483, 485, 486, 488, 492, 497], "sigma": [287, 306, 307, 309, 311, 312, 330, 338, 339, 416, 484, 497], "omiss": [287, 305, 330], "momentum": 288, "max_r": 288, "max_d": 288, "warmup_step": 288, "batchrenorm": 288, "1702": 288, "03275": 288, "corenet": 288, "enhanc": 288, "warmup": 288, "phase": [288, 290, 498, 501], "outlier": 288, "warm": 288, "renorm": 288, "entropi": [289, 310, 317, 326, 380, 381, 382, 383, 388, 389, 396, 397, 399, 400, 401, 403, 405, 406, 413, 414, 498], "botev": 289, "2013": 289, "cem": 289, "maximis": [289, 295, 297, 316, 483, 484, 498], "modelbasedenv": [289, 316], "planning_horizon": [289, 316], "mpc": [289, 315, 316], "num_candid": [289, 316], "candid": [289, 316], "top_k": [289, 316], "modelbasedenvbas": [289, 315, 316, 474], "safemodul": [289, 315, 358, 360, 370, 380, 381, 383, 388, 389, 396, 400, 401, 402, 403, 405, 406, 463, 464, 468, 474, 503], "hausknecht": 290, "wagen": 290, "reus": [290, 295, 447, 476], "consistentdropoutmodul": [290, 477], "capit": [290, 494, 495], "conceptu": 290, "devianc": 290, "set_exploration_typ": [290, 398, 453, 474, 477, 484, 485, 486, 488, 497, 503], "_main_async_collector": 290, "asyncdatacollector": [290, 474], "ditto": 290, "consistentdropout": 291, "input_shap": 291, "batcht": 291, "make_tensordict_prim": [291, 308, 313, 485], "input_dtyp": 291, "get_default_dtyp": [291, 456], "mask_6127171760": 291, "env0": [291, 504], "num_cel": [292, 293, 295, 296, 297, 298, 303, 304, 308, 313, 314, 319, 320, 358, 377, 483, 484, 485, 486, 488, 489, 492, 497, 498, 503], "elu": [292, 293, 295, 296, 297, 298, 303, 304, 319, 483, 503], "activation_kwarg": [292, 293, 314], "norm_class": [292, 293, 295, 296, 314], "norm_kwarg": [292, 293, 314], "bias_last_lay": [292, 293, 295, 296, 297, 298, 304, 314], "aggregator_class": [292, 293, 295, 296, 483, 485, 503], "squashdim": [292, 293, 295, 304, 319, 503], "aggregator_kwarg": [292, 293, 295, 296, 483, 485], "squeeze_output": [292, 293, 295, 296, 483, 485], "cell": [292, 293, 306, 307, 308, 311, 312, 313, 314, 319, 320, 484, 486, 487, 488, 489, 490, 491, 492], "kernel": [292, 293, 319], "cnet": [292, 293], "conv3d": 292, "rectangular": [292, 293], "lazyconv2d": [293, 295, 296, 304, 319], "default_atari_dqn": [293, 486], "semin": 293, "transformer_config": [294, 328, 361], "decisiontransform": [294, 328], "dtconfig": [294, 299, 328], "2202": [294, 299, 399], "05607": [294, 299, 399], "return_to_go": [294, 299, 328, 361], "conv_net_kwarg": [295, 296], "mlp_net_kwarg": [295, 296, 297], "use_avg_pool": [295, 296], "WITH": [295, 296, 297, 298, 330, 404], "1509": [295, 296, 297, 298, 316, 330, 385, 395, 404], "02971": [295, 296, 297, 298, 330, 404], "convnet": [295, 296, 304, 319, 485, 486, 488, 503], "ndims_in": 295, "avgpool": [295, 296], "lazylinear": [295, 296, 297, 298, 304, 314, 477, 484, 488, 499, 500], "2304": 295, "adaptiveavgpool2d": [296, 483, 485], "output_s": [296, 483, 485], "squeeze2dlay": 296, "400": [297, 298, 498], "mlp_net_kwargs_net1": 298, "mlp_net_kwargs_net2": 298, "mlp1": 298, "mlp2": 298, "desdescrib": 299, "n_embd": 299, "n_layer": [299, 306, 311], "n_head": 299, "n_inner": 299, "n_posit": 299, "resid_pdrop": 299, "attn_pdrop": 299, "gpt2config": 299, "atol": [300, 337], "rtol": [300, 337], "batch_shap": [300, 326, 337], "event_shap": [300, 337], "absolut": [300, 337, 482], "_instanc": 300, "densiti": [300, 317, 318, 326, 339], "mass": [300, 317, 318, 326, 339, 499], "rsampl": [300, 310, 318, 326, 370], "sample_shap": [300, 310, 317, 318, 326], "softmax": [301, 318, 326, 362, 363], "var_num": [302, 332, 362, 363, 368], "action_value_kei": [302, 332, 362, 363, 367, 368, 383, 398, 413, 416, 418], "action_mask_kei": [302, 305, 332, 362, 363, 367, 368], "1707": [302, 363, 390, 400], "06887": [302, 363, 390], "mult": [302, 320, 332, 362, 363, 367, 368], "tensordict_modul": [302, 306, 307, 311, 312, 332, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 383, 384, 388, 389, 396, 400, 401, 402, 403, 405, 406, 477], "nbin": [302, 362, 477], "customdistributionalqv": 302, "log_softmax": [302, 362], "qvalue_actor": [302, 332, 362, 367, 477], "to_modul": [302, 369, 372, 482, 503], "std_bia": 303, "std_min_val": 303, "belief": [303, 324, 333, 334], "1912": [303, 391, 392, 393], "01603": [303, 391, 392, 393], "softplu": [303, 376, 378, 379], "out_features_valu": 304, "cnn_kwarg": [304, 483], "mlp_kwarg": [304, 483], "duel": 304, "cnn": [304, 319, 483, 486, 488, 503], "06581": 304, "512": 304, "greedi": [305, 332, 363, 368, 483, 485, 486, 488], "eps_init": [305, 330, 483, 485, 486, 488, 492], "eps_end": [305, 330, 483], "explorative_polici": [305, 330], "9055": 305, "9277": 305, "6295": 305, "2532": 305, "grad_fn": [305, 357, 370], "addbackward0": 305, "batch_first": [306, 311, 485], "bidirect": [306, 311, 485], "cudnn": [306, 307, 308, 311, 312, 313, 485, 486], "rnn": [306, 307, 308, 311, 312, 313, 356, 389, 403, 420, 485, 486, 488], "device_count": [306, 307, 311, 312, 504], "n_in": [306, 307, 311, 312], "n_out": [306, 307, 311, 312], "h0": [306, 307, 311, 312], "h1": [306, 307, 311, 312], "vectoris": [306, 307, 311, 312], "call_gru": [306, 307], "h_out": [306, 307, 311, 312], "batched_cal": [306, 307, 311, 312], "gate": [306, 307, 311], "r_t": 306, "w_": [306, 307, 311, 312], "ir": [306, 307], "x_t": [306, 311], "b_": [306, 307, 311, 312], "hr": [306, 307, 311], "h_": [306, 307, 311], "z_t": 306, "iz": [306, 307], "hz": [306, 307], "n_t": 306, "odot": [306, 307, 311, 312], "hn": [306, 307, 311], "h_t": [306, 311], "sigmoid": [306, 307, 311, 312], "hadamard": [306, 307, 311, 312], "multilay": [306, 311], "_t": [306, 311, 498, 499], "ge": [306, 311], "bernoulli": [306, 311], "b_ih": [306, 307, 311, 312, 313], "b_hh": [306, 307, 311, 312, 313], "h_0": [306, 311, 312], "pack_padded_sequ": [306, 311], "pack_sequ": [306, 311], "num": [306, 311, 492], "_layer": [306, 311], "_size": [306, 307, 311, 312], "h_n": [306, 311], "packedsequ": [306, 311], "weight_ih_l": [306, 311], "learnabl": [306, 307, 311, 312], "w_ir": 306, "w_iz": 306, "w_in": 306, "num_direct": [306, 311], "weight_hh_l": [306, 311], "w_hr": 306, "w_hz": 306, "w_hn": 306, "bias_ih_l": [306, 311], "b_ir": 306, "b_iz": 306, "b_in": 306, "bias_hh_l": [306, 311], "b_hr": 306, "b_hz": 306, "b_hn": 306, "mathcal": [306, 307, 311, 312], "sqrt": [306, 307, 311, 312, 330], "seq_len": [306, 311], "subtli": 306, "matrix": [306, 311, 322, 323], "hx": [306, 307, 311, 312], "lstmcell": [307, 313, 486], "gru_cel": 307, "weight_ih": [307, 312], "weight_hh": [307, 312], "bias_ih": [307, 312], "bias_hh": [307, 312], "rocm": [307, 312], "embedd": [308, 313], "grucel": [308, 369], "python_bas": [308, 313], "custom_kei": [308, 313], "hasn": [308, 313], "set_recurrent_mod": [308, 313, 485], "recurrent_mod": [308, 313, 356], "rs": [308, 482], "gru_module_train": 308, "policy_train": [308, 416], "traj_td": 308, "make_cudnn_bas": [308, 313], "make_python_bas": [308, 313, 486], "supplementari": [308, 313, 484, 504], "That": [308, 313, 484, 497], "dealt": [308, 313], "poorli": [308, 313], "meth": [308, 313, 398, 499], "data_collector": [308, 313, 483], "upscal": [309, 338, 339], "tanh_loc": [309, 338, 339], "event_dim": [309, 337, 338], "poor": [309, 338, 339], "explos": [309, 338, 339], "ignore_index": 310, "50000": 310, "inf": [310, 317, 318], "test_distribut": 310, "clear_cach": 310, "masked_dist": 310, "masked_logit": 310, "position_level_mask": 310, "proj_siz": 311, "c0": [311, 312], "c1": [311, 312], "call_lstm": [311, 312], "c_out": [311, 312], "i_t": 311, "ii": [311, 312], "hi": [311, 312, 349, 353, 476], "f_t": 311, "hf": [311, 312, 476], "g_t": 311, "ig": [311, 312], "hg": [311, 312], "o_t": 311, "ho": [311, 312], "c_t": 311, "c_": 311, "1402": 311, "1128": 311, "c_0": [311, 312], "proj": 311, "c_n": 311, "w_ii": 311, "w_if": 311, "w_ig": 311, "w_io": 311, "w_hi": 311, "w_hf": 311, "w_hg": 311, "w_ho": 311, "b_ii": 311, "b_if": 311, "b_ig": 311, "b_io": 311, "b_hi": 311, "b_hf": 311, "b_hg": 311, "b_ho": 311, "weight_hr_l": 311, "_revers": 311, "analog": [311, 488], "cn": 311, "lstm_cell": 312, "h_1": 312, "c_1": 312, "cx": 312, "recurrent_state_h": 313, "recurrent_state_c": 313, "triplet": [313, 367, 368], "lstm_modul": 313, "rs_h": 313, "rs_c": 313, "single_bias_last_lay": 314, "layer_class": 314, "layer_kwarg": 314, "perceptron": [314, 488], "noisylinear": [314, 322, 474, 483], "noisylazylinear": [314, 474], "mpcplanner": 315, "tensordict_out": [315, 344, 349, 353, 504], "mppi": 316, "covari": 316, "william": [316, 402], "aldrich": 316, "theodor": 316, "01149": 316, "hansen": 316, "wang": 316, "su": 316, "04955": 316, "valueoper": [316, 358, 359, 360, 380, 381, 382, 383, 384, 389, 396, 397, 400, 401, 402, 403, 405, 406, 468, 477, 482, 484, 489], "tdlambdaestim": [316, 474, 482], "value_net": [316, 385, 387, 402, 420, 421, 422, 423, 484, 486, 488, 489, 492], "adv": 316, "lmbda": [316, 408, 420, 423, 425, 431, 432, 433, 436, 437, 478, 482, 484, 498], "value_network": [316, 384, 385, 387, 388, 390, 396, 403, 420, 421, 422, 423, 478, 482, 484, 486, 489, 492, 497], "temperatur": [316, 381, 388, 396], "neg_inf": [317, 318], "use_cross_entropi": 317, "api_doc": [317, 318], "tf_agent": [317, 318], "sparse_mask": [317, 318], "cross_entropi": 317, "1203": [317, 318], "0928": [317, 318], "0831": [317, 318], "1972": [317, 318], "grad_method": [318, 326], "reparamgradientstrategi": [318, 326], "passthrough": [318, 326], "relaxedonehot": [318, 326], "sample_non_valid": 318, "zeros_lik": [318, 499], "share_param": [319, 320, 321, 497, 498], "use_td_param": [319, 320, 321], "get_stateful_net": [319, 320, 321, 398, 413, 416, 477, 478], "from_stateful_net": [319, 320, 321, 398, 413, 416, 478], "homogen": [319, 320, 497, 498], "tensordictparam": [319, 320, 370], "_empty_net": [319, 320], "roughli": [319, 320, 503], "agent_network": [319, 320], "modulelist": [319, 320], "2592": 319, "decentr": 319, "n_agent_input": [320, 321, 497, 498], "n_agent_output": [320, 321, 497, 498], "toech": 320, "centalis": 320, "shown": [320, 476, 477, 486, 494, 496, 497, 498, 501], "agent_dim": 321, "vmap_random": [321, 398, 413, 416, 478], "stateful_net": [321, 398, 413, 416], "Such": [321, 398, 413, 416], "multiagentmlp": [321, 497, 498], "snet": 321, "hasattr": [321, 476, 482], "kaiming_normal_": 321, "std_init": [322, 323], "initialize_paramet": 322, "isol": [322, 398, 413, 416, 476, 486], "1706": [323, 340], "10295v3": 323, "induc": [323, 370], "aid": 323, "1803": [324, 325, 331], "10122": [324, 325], "rnn_hidden": 324, "latent": 325, "ordin": [327, 474], "parametris": [327, 329], "inres": 328, "mu": [328, 330, 484], "impos": [329, 477], "proxim": [329, 400, 484, 498], "atom": 329, "tang": 329, "agraw": 329, "2020": 329, "1901": 329, "10500": 329, "discretis": 329, "num_atom": 329, "num_sampl": [329, 344, 349, 353], "middl": 329, "lr": [329, 482, 483, 484, 485, 492, 497, 498, 499], "optimis": [329, 497, 498], "minimis": 329, "penalis": 329, "0308": 329, "1586": 329, "4727": 329, "2260": 329, "1120": 329, "histogram": 329, "return_typ": 329, "hist": [329, 501], "158": 329, "478": 329, "228": 329, "112": 329, "bin_edg": 329, "8000": 329, "6000": 329, "4000": 329, "ornstein": [330, 482, 486], "uhlenbeck": [330, 482, 486], "ou": [330, 482], "correl": 330, "noise_t": 330, "noise_": 330, "theta": [330, 484, 499], "sigma_t": 330, "sigma_": 330, "ou_prev_nois": 330, "ou_step": 330, "x0": 330, "sigma_min": 330, "n_steps_ann": 330, "is_init_kei": 330, "_ou_prev_nois": 330, "_ou_step": 330, "state_shap": [331, 418], "mixing_embed_dim": [331, 418], "qmix": [331, 497, 498], "mixer": [331, 340, 418], "monoton": 331, "hyper": 331, "11485": 331, "qmixerloss": [331, 340], "qmix_vdn": [331, 340], "vdn": [331, 340], "hidden_dim": [333, 334], "scale_lb": [333, 334], "posterior": [333, 392], "rssm": [333, 334, 392], "1811": [333, 334], "04551": [333, 334], "obs_embed": 333, "rnn_hidden_dim": 334, "dream": 334, "safe_tanh": 338, "tanhtransform": 338, "overflow": [338, 357, 362, 363, 366, 367, 368, 369, 370], "get_mod": [338, 370], "decomposit": 340, "05296": 340, "hide": [341, 484, 497, 498], "satisfi": [341, 477], "vmap_dim": 341, "lam": 341, "sample_in": 341, "sample_in_td": 341, "vm": 341, "bundle_indic": 343, "placement": 343, "modal": [344, 349, 353, 482], "logprob": [344, 349, 353, 476, 495], "input_kei": [344, 349, 353, 495], "attention_mask_kei": [344, 349, 353], "generate_kwarg": [344, 349, 353, 495], "tokens_kei": [344, 349, 353], "masks_kei": [344, 349, 353], "ref_transformers_wrapp": [344, 353], "ref_vllm_wrapp": [344, 349], "logits_kei": [344, 349, 353], "llmmaskedcategor": [344, 474], "alter": [344, 349, 353, 365, 398, 477], "weak": [344, 349, 353], "all_attention_mask": [346, 349, 353, 495], "all_assistant_mask": [346, 349, 353, 495], "unifi": [349, 353, 476, 495, 504], "automodelforcausallm": [349, 495], "tokenization_util": [349, 353], "num_return_sequ": 349, "do_sampl": 349, "ref_categorical_sequenti": [349, 353], "num_devic": 350, "make_ray_work": 350, "enforce_eag": 350, "actorclass": 350, "world_siz": 351, "statelessprocessgroup": 351, "plane": 351, "pyncclcommun": 351, "vllmparameterserv": 352, "tp": 352, "tp_size": 352, "check_weights_chang": 352, "get_dist_with_prompt_mask": 353, "assistant_mask_kei": 353, "translat": [357, 366], "character": [357, 362, 366, 367, 369, 501], "td_modul": [357, 358, 359, 360, 366, 369, 370, 372, 374, 488, 503], "3635": 357, "0340": 357, "1476": 357, "3911": 357, "1664": 357, "5455": 357, "2247": 357, "4583": 357, "2916": 357, "2160": 357, "5337": 357, "5193": 357, "addmmbackward0": 357, "actorvalueoper": [358, 382, 397, 400, 477, 488], "get_policy_oper": [358, 359, 360, 382, 397, 400, 477], "standalon": [358, 359, 360, 486, 488], "tdmodul": [358, 359, 360, 468], "get_critic_oper": 358, "common_oper": [358, 360], "policy_oper": [358, 359, 360], "value_oper": [358, 359, 360], "module_hidden": [358, 360], "td_module_hidden": [358, 360], "module_act": [358, 360], "td_module_act": [358, 359, 360], "module_valu": [358, 359, 360], "td_module_valu": [358, 359, 360], "state_action_valu": [358, 374, 381, 383, 388, 396, 403, 419, 468, 477, 482, 497, 503], "td_clone": [358, 359, 360], "tensordictmodulewrapp": [358, 463, 464, 468], "get_policy_head": [358, 359, 360], "safesequenti": [358, 359, 360, 418], "head": [358, 360, 370, 377, 382, 397, 400, 474], "get_value_head": [358, 359, 360], "get_value_oper": [358, 359, 360, 382, 397, 400], "action_modul": 359, "actorcriticoper": [360, 477, 488], "actorcriticwrapp": [360, 477, 482], "inferec": 361, "set_tensor_kei": 361, "dt_inference_wrapp": 361, "baz": 361, "inference_context": 361, "obs_dim": 361, "tanhdelta": [361, 474, 482, 497], "dtactor": 361, "actor_modul": [361, 503], "dist_class": 361, "dist_kwarg": 361, "distribution_kwarg": [361, 366, 370, 484, 497, 498], "inference_actor": 361, "sequence_length": 361, "mask_context": 361, "out_act": 361, "qvaluemodul": [362, 367, 418, 485, 486, 488, 492], "distributionaldqnnet": 362, "make_log_softmax": 362, "my_action_valu": [363, 368], "chanc": 363, "lmheadmodel": 364, "actor_head": [364, 382, 397, 400], "base_model": 364, "lm_head": 364, "lookahead": 365, "reshape_cat": 365, "actor_bas": 365, "obs_cat": 365, "obs_cat_reshap": 365, "action_orig": 365, "multistepenvwrapp": 365, "ego": 365, "default_interaction_typ": [366, 370, 488], "interaction_typ": [366, 370], "set_interaction_typ": [366, 370], "compositedistribut": [366, 370, 380, 400, 478, 488], "distribution_map": [366, 370], "name_map": [366, 370], "cache_dist": [366, 370], "n_empirical_estim": [366, 370], "compound": [366, 488], "chose": 368, "functionalmodul": 369, "functionalmodulewithbuff": 369, "td_fmodul": 369, "td_function": 369, "td_state": 369, "params_repeat": 369, "td_vmap": [369, 372], "random_sampl": [369, 370], "suppli": 370, "paliat": 370, "get_median": 370, "get_mean": 370, "sample_key_nam": 370, "_log_prob": 370, "composite_lp_aggreg": 370, "clampbackward0": 370, "anihil": 370, "probabilistictensordictsequenti": [371, 380, 382, 397, 400, 402, 463, 464, 478, 503], "partial_toler": [371, 372, 496], "AND": [371, 372, 383], "tensordictsequ": 372, "safeprobabilisticmodul": [372, 477], "spec1": 372, "net1": 372, "module1": 372, "td_module1": 372, "spec2": 372, "module2": 372, "td_module2": 372, "boundari": [373, 484, 486, 497, 498], "resolut": 373, "9944": 373, "9991": 373, "3020": 373, "2299": 373, "5418": 373, "2989": 373, "6849": 373, "2690": 373, "9649": 373, "5686": 373, "8602": 373, "0315": 373, "8455": 373, "6027": 373, "4746": 373, "7843": 373, "7782": 373, "2111": 373, "5115": 373, "4687": 373, "5760": 373, "custommodul": 374, "imaginari": 375, "imagin": 375, "transition_model": 375, "get_reward_oper": 375, "get_transition_model_oper": 375, "min_val": [376, 379], "_bia": 376, "surject": 379, "expln": 379, "biased_softplu": [379, 474], "biased_softplus_": 379, "syntax": [379, 482], "add_custom_map": 379, "1602": 380, "01783v2": 380, "actor_network": [380, 381, 382, 383, 384, 386, 388, 389, 396, 397, 399, 400, 401, 402, 403, 405, 406, 413, 416, 478, 482, 484, 489, 497, 498], "critic_network": [380, 382, 397, 400, 402, 484, 498], "entropy_bonu": [380, 382, 397, 400, 413, 484], "favour": [380, 382, 397, 400, 413], "samples_mc_entropi": [380, 382, 397, 399, 400, 413], "entropy_coeff": [380, 382, 397, 400, 413], "critic_coeff": [380, 382, 397, 400, 413], "loss_critic_typ": [380, 382, 397, 400, 402, 484], "l1": [380, 382, 384, 385, 389, 397, 400, 401, 402, 405, 406, 409, 418, 477, 482], "l2": [380, 382, 384, 385, 386, 387, 389, 392, 393, 397, 400, 401, 402, 405, 406, 409, 418, 482, 497], "smooth_l1": [380, 381, 382, 383, 384, 385, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406, 409, 418, 484], "separate_loss": [380, 382, 383, 384, 388, 389, 396, 397, 400, 401, 402, 403, 405, 406], "advantage_kei": [380, 382, 397, 400, 402, 413, 415, 420, 421, 422, 423], "value_target_kei": [380, 382, 397, 400, 402, 420, 421, 422, 423], "value_target": [380, 382, 397, 400, 402, 420, 421, 422, 423, 484, 498], "ddp": [380, 382, 397, 400, 402], "fsdp": [380, 382, 397, 400, 402], "divid": [380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 397, 399, 400, 401, 402, 403, 405, 406, 413, 461, 482, 497, 498, 499], "clip_valu": [380, 382, 397, 400, 402, 413], "loss_crit": [380, 400, 413, 484, 498], "loss_entropi": [380, 400, 414, 484, 498], "loss_object": [380, 400, 414, 484, 498], "next_reward": [380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 420, 421, 422, 423], "next_don": [380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 420, 421, 422, 423], "next_termin": [380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 420, 421, 422, 423], "loss_obj": 380, "next_observ": [380, 381, 383, 384, 385, 387, 388, 389, 396, 400, 401, 402, 403, 405, 406, 496], "sacloss": [380, 395, 404, 474], "default_kei": [380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 399, 400, 401, 402, 403, 405, 406, 413, 416, 418, 424], "_acceptedkei": [380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 405, 406, 413, 416, 418, 424], "fraction": [380, 382, 400], "make_value_estim": [380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 407, 413, 416, 418, 478, 482, 483, 497, 498, 503], "value_typ": [380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 408, 413, 416, 418, 482], "hyperparam": [380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 482], "enum": [380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 408, 413, 416, 418, 482], "default_value_estim": [380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 482, 503], "default_value_kwarg": [380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 474, 482], "dqn_loss": [380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 407, 413, 416, 418], "td1": [380, 381, 383, 384, 385, 387, 389, 390, 391, 396, 398, 400, 401, 402, 403, 405, 406, 413, 416, 418, 482], "conserv": [381, 387], "04779": [381, 387], "qvalue_network": [381, 383, 388, 389, 396, 401, 403, 405, 406], "unti": [381, 383, 396, 401, 403, 405, 406], "loss_funct": [381, 383, 384, 385, 386, 387, 388, 389, 396, 401, 403, 405, 406, 409, 416, 418, 482, 497], "alpha_init": [381, 383, 389, 399, 401, 403], "min_alpha": [381, 383, 389, 399, 401, 403], "max_alpha": [381, 383, 389, 399, 401, 403], "fixed_alpha": [381, 383, 389, 399, 401, 403], "target_entropi": [381, 383, 389, 399, 401, 403], "prod": [381, 383, 399, 403], "delay_actor": [381, 384, 403, 405, 406], "delay_qvalu": [381, 389, 401, 403, 405, 406], "min_q_weight": 381, "max_q_backup": 381, "backup": 381, "deterministic_backup": 381, "num_random": 381, "with_lagrang": 381, "lagrang": 381, "lagrange_thresh": 381, "deactivate_vmap": [381, 383, 389, 396, 401, 403, 405, 406, 420, 421, 422, 423], "valueclass": [381, 383, 384, 389, 401, 403, 405, 406], "qvalu": [381, 383, 388, 389, 396, 401, 403, 405, 406], "loss_actor": [381, 383, 384, 388, 389, 396, 401, 402, 403, 405, 406, 454, 482, 497], "loss_actor_bc": 381, "loss_alpha": [381, 383, 389, 401, 403], "loss_cql": [381, 387], "loss_qvalu": [381, 383, 387, 388, 389, 396, 401, 403, 405, 406], "loss_alpha_prim": 381, "ess": [382, 400, 413, 414], "clip_epsilon": [382, 413, 484, 498], "head_nam": [382, 397, 400], "normalize_advantag": [382, 397, 400, 498], "normalize_advantage_exclude_dim": [382, 397, 400], "multiobject": [382, 397, 400], "value_kei": [382, 397, 400, 420, 421, 422, 423, 482], "somemodul": [382, 397, 400], "someactor": [382, 397, 400], "value_head": [382, 397, 400], "somevalu": [382, 397, 400], "loss_modul": [382, 395, 397, 398, 400, 404, 413, 416, 458, 467, 468, 478, 479, 482, 483, 484, 497, 498, 501], "IN": 383, "FOR": 383, "simplic": [383, 483, 484, 490, 500, 501, 503], "openreview": [383, 401], "pczqttstix": 383, "qvalue_loss": [383, 405], "actor_loss": [383, 405], "alpha_loss": 383, "num_qvalue_net": [383, 388, 389, 396, 401, 403, 405, 406], "maybe_init_target_entropi": 383, "fault_toler": 383, "target_entropy_buff": 383, "delay_valu": [384, 385, 387, 390, 402, 403, 418, 483, 485, 486, 492, 497], "loss_valu": [384, 388, 396, 402, 403, 482, 484, 497, 498], "pred_valu": [384, 387, 405, 406, 482], "pred_value_max": [384, 482], "target_valu": [384, 387, 401, 405, 406, 419, 478, 482], "target_value_max": [384, 482], "qvalueactor": [385, 387, 418, 483, 485], "double_dqn": 385, "06461": [385, 395], "mult_one_hot": [385, 388, 389, 418], "loss_val": [385, 387, 416, 478, 482, 484, 485, 486, 489, 490, 492, 497, 498, 501], "01345": 386, "distanc": [387, 397, 409, 419, 420, 498], "dcql_loss": 387, "2110": [388, 396], "06169": [388, 396], "expectil": [388, 396], "tau": [388, 396, 404, 482, 483, 497], "antmaz": [388, 396], "sticht": [388, 396], "onehotcategor": [388, 389, 474], "target_entropy_weight": 389, "skip_done_st": [389, 403], "disctount": 390, "distributionalqvalueactor": [390, 477], "input_tensordict": [390, 482], "actor_model": 391, "value_model": [391, 393], "imagination_horizon": 391, "discount_loss": [391, 393], "lambda_kl": 392, "lambda_reco": 392, "lambda_reward": 392, "reco_loss": 392, "reward_loss": 392, "free_nat": 392, "nat": 392, "delayed_clamp": 392, "global_averag": 392, "value_loss": 393, "fake_data": 393, "1606": 394, "03476": 394, "discriminator_network": 394, "use_grad_penalti": 394, "gp_lambda": 394, "discrimin": 394, "ddpgloss": [395, 404, 468, 474, 482, 489, 497, 503], "td3loss": [395, 404, 474], "value_network_update_interv": 395, "qvalueclass": 396, "loss_value_diff": 396, "diff": 396, "old_polici": 397, "new_polici": 397, "apart": [397, 498], "dtarg": 397, "samples_mc_kl": 397, "analyt": 397, "decrement": 397, "loss_": [398, 454, 478, 482, 489], "equip": [398, 485, 486, 488], "gh": 398, "_forward_value_estimator_kei": 398, "value_estim": [398, 413, 416, 420, 421, 422, 423, 424, 478, 482, 498], "myloss": 398, "action2": 398, "augment": [398, 476, 490, 492, 501], "deterministic_sampling_mod": 398, "convert_to_funct": [398, 413, 416, 482], "expand_dim": [398, 413, 416], "create_target_param": [398, 413, 416, 482], "compare_against": [398, 413, 416, 482], "_param": [398, 413, 416], "resampl": [398, 413, 416], "_target_param": [398, 413, 416], "network_nam": [398, 413, 416], "blend": [398, 413, 416], "add_random_modul": [398, 413, 416, 478], "flavor": [400, 482, 497, 498, 503], "clipppoloss": [400, 474, 484, 498], "klpenppoloss": [400, 474], "06347": 400, "log_explained_vari": 400, "explain": [400, 486, 500], "explained_vari": 400, "wors": 400, "gae": [400, 474, 478, 482, 484, 498], "ppo_loss": 400, "tdlambda": [400, 408, 478, 482], "base_lay": 400, "randn_lik": 400, "samplelogprob": 400, "ay8zfzm0tdd": 401, "sub_sample_len": 401, "subsampl": [401, 449, 479], "action_log_prob_actor": 401, "state_action_value_actor": [401, 405, 406], "connectionist": 402, "1992": 402, "doi": 402, "1007": 402, "bf00992696": 402, "actor_net": [402, 482, 484], "1801": 403, "01290": 403, "1812": 403, "05905": 403, "redqloss": [404, 474], "theta_t": [404, 499], "theta_": [404, 499], "polyak": 404, "minimalist": 405, "06860": 405, "policy_nois": [405, 406], "noise_clip": [405, 406], "td3_bc": 405, "bc_loss": 405, "lmbd": 405, "td0": [407, 482, 497], "tensorlik": 409, "strict_shap": 409, "view_a": 409, "instabl": 413, "diagnost": 413, "masking_strategi": 413, "sft": [413, 416], "kl_to_ref_coeff": [413, 416], "kl_to_inference_coeff": 413, "grpolossoutput": [413, 415], "clip_fract": 414, "kl_approx": 414, "loss_kl_to_ref": [414, 416, 417], "kl_to_ref": [414, 417], "loss_kl_to_infer": 414, "kl_to_infer": 414, "grpo_siz": 415, "hit": 415, "supervis": [416, 476, 489, 490, 501, 504], "normalize_by_seq_length": 416, "minor_sft": 416, "minorsft": 416, "push": 416, "shime": 416, "xie": 416, "hong": 416, "chen": 416, "fred": 416, "yu": 416, "zey": 416, "sun": 416, "xiuyu": 416, "wu": 416, "2024": 416, "minor": [416, 497], "_chat_templ": 416, "policy_ref": 416, "txt_start": 416, "zip": [416, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "loss_sft": [416, 417], "qmixer": [418, 474], "local_valu": 418, "visibl": [418, 498], "acceptedkei": 418, "global_valu": 418, "penultim": 418, "local_value_network": 418, "mixer_network": 418, "value_modul": [418, 484, 503], "qnet": [418, 482], "next_val_kei": 419, "pred_next_v": 419, "mse": 419, "q_valu": 419, "n_steps_to_next": 419, "value_next_st": 419, "1506": [420, 425, 433], "02438": [420, 425, 433], "exponenti": [420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 456], "average_ga": [420, 484], "skip_exist": [420, 421, 422, 423], "get_default_devic": [420, 421, 422, 423, 424], "auto_reset_env": 420, "next_valu": [420, 421, 422, 423, 424], "gradient_mod": 420, "value_error": [420, 421, 422, 423, 424], "marker": [420, 482], "trajecotri": 420, "fair": 420, "target_param": [420, 421, 422, 423, 424, 482, 498], "98": [420, 421, 422, 423], "94": [420, 423], "unpack": [420, 421, 422, 423], "tensor_kei": [420, 421, 422, 423, 424], "aka": [421, 483, 497], "average_reward": [421, 422, 423], "tdestim": [421, 422, 424], "infti": 422, "valuefunctionbas": 424, "old_stat": [425, 427, 429, 431, 433, 434, 436], "new_stat": [425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "rolling_gamma": [429, 430, 431, 432, 434, 435, 436, 437], "g1": [429, 430, 431, 432, 434, 435, 436, 437], "g2": [429, 430, 431, 432, 434, 435, 436, 437], "g3": [429, 430, 431, 432, 434, 435, 436, 437], "g4": [429, 430, 431, 432, 434, 435, 436, 437], "v3": [429, 430, 431, 432, 434, 435, 436, 437], "preproc": [438, 486, 497], "as_non_tensor": [438, 497], "render_method": 438, "pass_tensordict": 438, "syntact": 438, "sugar": 438, "out_file_bas": 439, "skip_reset": 439, "center_crop": 440, "make_grid": 440, "log_video": 440, "csv": [440, 442, 444, 483, 491, 492], "wandb": [440, 444, 447, 491, 503], "tensorboard": [440, 444, 446, 491, 503], "log_dir": [440, 441, 442, 444, 446, 447, 483, 492], "cheetah_video": 440, "run_video": 440, "openxexperiencereplai": 440, "sec": [440, 499], "video_fp": [440, 442, 445], "cmu_stretch": 440, "run_video_0": 440, "cur_dir": 442, "csv_log": 442, "add_video": 442, "video_": 442, "experiment_nam": [443, 444], "logger_typ": 444, "logger_nam": 444, "mlflow": [444, 445], "wandb_kwarg": 444, "mlflow_kwarg": 444, "tracking_uri": 445, "uri": 445, "datastor": 445, "tb_log": 446, "tensoarboard": 446, "td_log": 446, "save_dir": 447, "resum": 447, "uncategor": 447, "my_funct": 448, "sub_traj_len": 449, "min_sub_traj_len": 449, "register_op": [449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 479, 483], "process_optim_batch": [449, 455, 456, 479], "td_out": [449, 457], "_process_optim_batch_hook": [449, 479], "batch_subsampl": 449, "clear_cuda": 450, "pre_optim_step": [450, 479], "log_pbar": [451, 452, 453, 456, 479, 483], "count_fram": 451, "pre_steps_log": [451, 452, 479], "count_frames_log": 451, "lognam": 452, "r_train": 452, "log_reward": [452, 483], "record_interv": [453, 482, 483], "record_fram": [453, 461, 482, 483], "policy_explor": [453, 468, 482, 483, 486, 488, 492], "log_kei": [453, 483], "underestim": 453, "r_evalu": [453, 482], "loss_compon": 454, "appl": 454, "optimizer_hook": 454, "flatten_tensordict": [455, 483], "max_dim": 455, "rb_trainer": 455, "batch_process": [455, 456, 457, 479], "post_loss": [455, 479], "999": [456, 483], "jitter": 456, "finfo": 456, "default_dtyp": 456, "update_reward_stat": 456, "normalize_reward": 456, "make_train": [457, 474], "_process_batch_hook": [457, 479], "select_kei": [457, 479], "versatil": [458, 487], "optim_steps_per_batch": [458, 479, 483], "clip_grad_norm": 458, "clip_norm": 458, "progress_bar": 458, "save_trainer_interv": 458, "log_interv": [458, 483], "save_trainer_fil": [458, 479], "load_from_fil": [458, 479], "update_weights_interv": [460, 483], "post_step": [460, 479, 483], "dictconfig": [461, 462, 463, 464, 466, 467, 468, 469, 472], "unknowingli": 461, "annealing_fram": [461, 482], "init_env_step": [461, 462, 482], "proof_environ": [462, 482], "sta": 462, "ot": 462, "actor_model_explor": [463, 464, 482], "make_env_kwarg": [463, 464], "targetnetupdat": [465, 467, 468], "replayargsconfig": 466, "target_net_updat": [468, 482, 483], "constitu": 468, "egreedywrapp": 468, "env_proof": 468, "obs_spec": 468, "net_valu": 468, "dir": [468, 479, 483], "gettempdir": 468, "namespac": [469, 472], "transformed_env_constructor": [469, 474], "num_env_per_collector": [470, 471], "video_tag": 472, "norm_obs_onli": 472, "use_env_cr": 472, "custom_env_mak": 472, "custom_env": 472, "return_transformed_env": 472, "action_dim_gsd": 472, "state_dim_gsd": 472, "obs_norm_state_dict": 472, "weightupdat": 474, "distributedsyncdatacollector": 474, "submitit_delayed_launch": 474, "remotetensordictreplaybuff": 474, "rational": 474, "footnot": 474, "binarydiscretetensorspec": 474, "boundedtensorspec": 474, "discretetensorspec": 474, "lazystackedcompositespec": 474, "lazystackedtensorspec": 474, "multidiscretetensorspec": 474, "multionehotdiscretetensorspec": 474, "nontensorspec": 474, "onehotdiscretetensorspec": 474, "unboundedcontinuoustensorspec": 474, "unboundeddiscretetensorspec": 474, "prompttensordicttoken": 474, "rolloutfrommodel": 474, "tokenizeddatasetload": 474, "create_infinite_iter": 474, "constantklcontrol": 474, "adaptiveklcontrol": 474, "densifyreward": 474, "h5combin": 474, "h5split": 474, "nested2t": 474, "check_no_exclusive_kei": 474, "consolidate_spec": 474, "contains_lazy_spec": 474, "envmetadata": 474, "chessenv": 474, "tictactoeenv": 474, "llmhashingenv": 474, "check_marl_group": 474, "get_available_librari": 474, "terminated_or_trunc": 474, "dreamerdecod": 474, "braxwrapp": 474, "dmcontrolwrapp": 474, "isaaclabwrapp": 474, "jumanjiwrapp": 474, "meltingpotenv": 474, "meltingpotwrapp": 474, "mogymenv": 474, "multithreadedenvwrapp": 474, "openmlenv": 474, "openspielwrapp": 474, "openspielenv": 474, "pettingzooenv": [474, 497], "robohiveenv": 474, "smacv2env": 474, "smacv2wrapp": 474, "unitymlagentsenv": 474, "unitymlagentswrapp": 474, "vmaswrapp": 474, "register_gym_spec_convers": 474, "qvaluehook": 474, "distributionalqvaluehook": 474, "reset_nois": 474, "cemplann": 474, "mpcplannerbas": 474, "mppiplann": 474, "independentnorm": 474, "truncatednorm": 474, "maskedonehotcategor": 474, "onehotordin": 474, "inv_softplu": 474, "vmapmodul": 474, "distributionaldqnloss": [474, 483], "discretesacloss": 474, "crossqloss": 474, "iqlloss": 474, "discreteiqlloss": 474, "cqlloss": 474, "discretecqlloss": 474, "gailloss": 474, "dtloss": 474, "onlinedtloss": 474, "td3bcloss": 474, "ppoloss": [474, 476], "a2closs": 474, "reinforceloss": 474, "dreameractorloss": 474, "dreamermodelloss": 474, "dreamervalueloss": 474, "td0estim": [474, 482], "td1estim": [474, 482], "td0_return_estim": 474, "td0_advantage_estim": 474, "td1_return_estim": 474, "vec_td1_return_estim": 474, "td1_advantage_estim": 474, "vec_td1_advantage_estim": 474, "td_lambda_return_estim": 474, "vec_td_lambda_return_estim": 474, "td_lambda_advantage_estim": 474, "vec_td_lambda_advantage_estim": 474, "generalized_advantage_estim": 474, "vec_generalized_advantage_estim": 474, "hardupd": [474, 482, 489], "softupd": [474, 482, 483, 485, 486, 489, 492, 497], "distance_loss": [474, 482], "group_optim": 474, "hold_out_net": 474, "hold_out_param": [474, 482], "batchsubsampl": [474, 479], "clearcudacach": 474, "countframeslog": 474, "logscalar": [474, 479, 483], "optimizerhook": [474, 483], "logvalidationreward": [474, 479, 482, 483], "replaybuffertrain": [474, 479, 483], "rewardnorm": 474, "selectkei": [474, 479], "trainerhookbas": [474, 479, 483], "updateweight": [474, 479, 483], "make_collector_offpolici": 474, "make_collector_onpolici": 474, "make_dqn_loss": 474, "make_replay_buff": [474, 482], "make_target_updat": 474, "parallel_env_constructor": [474, 482], "sync_async_collector": 474, "sync_sync_collector": 474, "correct_for_frame_skip": 474, "get_stats_random_rollout": 474, "mlflowlogg": 474, "get_logg": 474, "generate_exp_nam": 474, "journei": 475, "textbook": 475, "highlight": [475, 497], "ever": [475, 498], "bump": 475, "pr": [475, 476], "comprehens": 476, "five": [476, 483], "orchestr": [476, 483, 489, 491], "grpoloss": 476, "sftloss": 476, "mcadvantag": 476, "5b": [476, 495], "microsoft": 476, "medium": [476, 501], "tiiuae": 476, "7b": [476, 494], "coder": 476, "mistral": 476, "gpt": 476, "mpt": 476, "bloom": 476, "pythia": 476, "phi": 476, "add_chat_templ": 476, "llama_templ": 476, "inst": 476, "elif": [476, 482, 483, 494], "endgener": 476, "endif": 476, "endfor": 476, "parse_llama_text": 476, "findal": 476, "dotal": 476, "user_cont": 476, "assistant_cont": 476, "strip": [476, 483], "template_nam": 476, "inverse_pars": 476, "model_family_keyword": 476, "pytest": 476, "test_my_model_assistant_mask": 476, "my_model": 476, "your_template_her": 476, "assistant_token_count": 476, "test_my_model_template_equival": 476, "default_out": 476, "custom_out": 476, "whitespac": 476, "ncustom": 476, "test_my_model_inverse_pars": 476, "aspect": [476, 483, 489], "inject": 476, "ref_env_llm_step": 476, "annot": [476, 494], "llm_output": 476, "attention_mask_al": 476, "assistant_mask_al": 476, "unpad": 476, "cohes": 476, "ref_collector": 476, "budget": [476, 483], "weight_upd": 476, "vllmupdat": 476, "make_polici": 476, "policy_version_track": 476, "mcptooltransform": 476, "concern": [476, 489], "step_data": 476, "s_": [476, 494], "gsm8krewardpars": 476, "ifevalscor": 476, "excel": 476, "bsz": 476, "num_token": 476, "predetermin": 476, "demonstr": [476, 484, 486, 490, 494, 495, 497, 498, 499, 501, 504], "text_complet": 476, "sophist": [476, 484, 498], "format_compon": 476, "structure_scor": 476, "think_scor": 476, "answer_scor": 476, "completion_bonu": 476, "potential_answ": 476, "compl": 476, "parseerror": 476, "regex": 476, "unnecessari": 476, "reliabl": 476, "characterist": [476, 478, 482, 499], "ground": [477, 482, 499], "recycl": [477, 501], "noisier": 477, "Their": [477, 497, 498], "sd": [477, 504], "prob_modul": 477, "uncertainti": 477, "soften": 477, "backbon": [477, 485, 488, 496, 503], "make_actor": 477, "make_valu": 477, "shared_param": 477, "make_common": 477, "reusabl": [478, 482, 501], "swappabl": [478, 482], "trainabl": [478, 482, 489, 500], "smth": [478, 482], "plenti": [478, 486], "amort": [478, 483, 484], "told": [478, 484], "pseudo": [478, 490, 499], "buri": 478, "str_valu": 478, "nutshel": [478, 482], "barto": [478, 497, 498], "chapter": [478, 491], "value_net_loss": 478, "pow": [478, 482], "room": 478, "signifi": [478, 497, 498], "underperform": 478, "intric": [478, 488], "set_composite_lp_aggreg": [478, 498], "action_td": 478, "action0": 478, "f0": 478, "action1": 478, "f1": 478, "f2": 478, "f3": 478, "action0_log_prob": 478, "action1_log_prob": 478, "inferior": 478, "multivari": 478, "dirichlet": 478, "prev_log_prob": 478, "new_log_prob": 478, "log_weight": 478, "appreci": [478, 487], "multihead": 478, "believ": 479, "substanti": 479, "_pre_steps_log_hook": 479, "_pre_optim_hook": 479, "sub_batch": 479, "_post_loss_hook": 479, "_post_optim_hook": 479, "post_optim": [479, 483], "_post_optim_log": 479, "post_optim_log": 479, "_post_steps_hook": 479, "_post_steps_log_hook": 479, "post_steps_log": 479, "logginghook": 479, "logging_hook": 479, "save_dict": 479, "some_valu": 479, "torchsnapshot": 479, "ckpt_backend": 479, "filepath": 479, "save_train": 479, "000": [481, 502], "galleri": [481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "mem": [481, 502], "mb": [481, 502], "coding_ddpg": [481, 482, 502], "coding_dqn": [481, 483, 502], "coding_ppo": [481, 484, 502], "dqn_with_rnn": [481, 485, 502], "llm_browser": [481, 494, 502], "llm_wrapper": [481, 495, 502], "multi_task": [481, 496, 502], "multiagent_competitive_ddpg": [481, 497, 502], "multiagent_ppo": [481, 498, 502], "pretrained_model": [481, 500, 502], "rb_tutori": [481, 501, 502], "torchrl_demo": [481, 502, 503], "torchrl_env": [481, 502, 504], "author": [482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 497, 498, 499, 501, 504], "vincent": [482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 499, 501, 504], "moen": [482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 499, 501, 504], "assembl": 482, "maxim": [482, 489, 499], "transpar": [482, 485], "bash": 482, "is_fork": [482, 483, 484, 485, 497, 498, 500], "get_start_method": [482, 483, 484, 485, 497, 498, 500], "collector_devic": 482, "loss_dict": 482, "oblivi": [482, 484, 501], "elementari": 482, "didact": [482, 486], "dilut": 482, "pessimist": [482, 483, 484], "target_actor_network_param": 482, "actor_in_kei": 482, "actor_crit": 482, "compromis": 482, "hp": 482, "_value_estim": 482, "unknown": 482, "_loss_actor": 482, "td_copi": 482, "actor_network_param": [482, 497], "value_network_param": [482, 497], "_loss_valu": 482, "pred_val": 482, "target_value_network_param": 482, "glue": 482, "_forward": 482, "remaind": 482, "env_librari": 482, "env_task": 482, "env_arg": [482, 483], "torchr": 482, "rescal": 482, "presum": 482, "make_transformed_env": 482, "reward_sc": 482, "env_per_collector": 482, "transform_state_dict": 482, "make_t_env": 482, "cheat": 482, "10m": 482, "cautiou": 482, "thousand": [482, 485], "get_env_stat": 482, "proof_env": 482, "5000": [482, 486, 492], "recal": [482, 484, 494, 501], "ddpgmlpactor": 482, "ddpgmlpqnet": 482, "materi": 482, "ornsteinuhlenbeckprocessmodul": [482, 488], "make_ddpg_actor": 482, "q_net": 482, "tight": 482, "10_000": [482, 484], "traj_len": [482, 485], "make_record": 482, "recorder_obj": 482, "pick": [482, 483, 488, 494], "buffer_s": [482, 483], "random_crop_len": 482, "prb": 482, "buffer_scratch_dir": [482, 483, 485, 490, 500], "dataflow": 482, "ceil_div": 482, "utd": [482, 485], "update_to_data": 482, "realiz": 482, "_must_": 482, "001": [482, 499], "outdat": 482, "trick": [482, 483], "despit": 482, "optimizer_actor": 482, "weight_decai": [482, 483], "optimizer_valu": 482, "total_collection_step": 482, "rewards_ev": 482, "collected_fram": 482, "numel": [482, 484, 485, 486, 492, 497, 500, 501], "current_fram": [482, 497], "sampled_tensordict": 482, "gn1": 482, "clip_grad_norm_": [482, 484, 497, 498, 499], "gn2": 482, "gn": [482, 499], "td_record": 482, "rn": 482, "2f": 482, "mention": [482, 485, 501, 504], "matplotlib": [482, 484, 485, 486, 497, 498, 499, 501, 504], "pyplot": [482, 484, 485, 486, 497, 498, 499, 501, 504], "plt": [482, 484, 485, 486, 497, 498, 499, 501, 504], "legend": [482, 497], "xlabel": [482, 485, 498, 499], "ylabel": [482, 498], "tight_layout": 482, "takeawai": [482, 483, 486, 494], "distpatch": 482, "jupyt": [482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "ipynb": [482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "sphinx": [482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504], "road": 483, "highest": [483, 488], "prerequisit": [483, 485, 494], "lookup": 483, "cart": 483, "pole": 483, "un": 483, "actuat": 483, "frictionless": 483, "duelingcnndqnet": 483, "egreedymodul": [483, 485, 486, 488, 492], "is_notebook": 483, "shell": 483, "get_ipython": 483, "__class__": [483, 495], "zmqinteractiveshel": 483, "qtconsol": 483, "terminalinteractiveshel": 483, "ipython": [483, 498, 499], "nameerror": [483, 495, 497], "umbrella": 483, "misplac": 483, "misus": 483, "64x64": 483, "motion": [483, 499], "obs_norm_sd": 483, "mp_context": 483, "simpler": [483, 487, 495], "get_norm_stat": 483, "test_env": 483, "mathbb": 483, "rightarrow": 483, "make_model": 483, "dummy_env": 483, "init_bia": 483, "exploration_modul": [483, 485, 486, 488, 492], "eps_greedy_v": 483, "eps_greedy_val_env": 483, "actor_explor": 483, "get_replay_buff": 483, "n_optim": [483, 489, 490], "parametriz": 483, "get_collector": 483, "bunch": 483, "ubiquit": [483, 487], "get_loss_modul": 483, "target_updat": [483, 497], "995": 483, "hopefulli": 483, "variat": 483, "2e": [483, 499], "wd": 483, "upd": 483, "harder": [483, 503], "5_000": 483, "500000": 483, "100000": 483, "005": [483, 497], "mandatori": [483, 484, 498, 499], "fairer": 483, "dqn_exp_": 483, "uuid1": [483, 504], "cumbersom": 483, "buffer_hook": 483, "aliv": 483, "total_reward": 483, "print_csv_files_in_fold": 483, "folder_path": 483, "csv_file": 483, "output_str": 483, "dirpath": 483, "endswith": 483, "qvaluenetwork": 483, "accuraci": 483, "fanci": [483, 490], "talk": 484, "six": 484, "invent": 484, "theta_k": 484, "pi_": 484, "exceed": 484, "discourag": [484, 499], "indispens": 484, "analyz": 484, "lingua": 484, "franca": 484, "defaultdict": [484, 499], "3e": [484, 485, 497, 498], "max_grad_norm": [484, 497, 498], "sub_batch_s": 484, "num_epoch": [484, 498], "entropy_ep": [484, 498], "charact": [484, 486], "inverteddoublependulum": 484, "transmit": 484, "stai": 484, "confid": [484, 497, 498], "ran": 484, "f_": 484, "mu_": 484, "difficulti": [484, 504], "d_ob": 484, "d_action": 484, "policy_modul": [484, 497, 498], "briefli": [484, 497, 498], "refil": [484, 498], "easiest": [484, 489, 497, 498], "mathemat": [484, 497, 498], "tradeoff": [484, 498], "advantage_modul": 484, "entropy_coef": [484, 498], "critic_coef": 484, "lr_schedul": [484, 499], "cosineannealinglr": [484, 499], "eval_str": 484, "tensordict_data": [484, 498], "data_view": [484, 498], "subdata": [484, 497, 498], "cum_reward_str": 484, "stepcount_str": 484, "param_group": [484, 497], "lr_str": 484, "eval_rollout": 484, "nice": [484, 487, 490], "figsiz": [484, 499], "subplot": [484, 497, 499, 504], "titl": [484, 485, 486, 498, 499], "84x84": [485, 486], "accessori": 485, "stamp": 485, "n_cell": 485, "customiz": 485, "wouldn": 485, "qval": 485, "stoch_polici": 485, "opportun": [485, 497], "uniniti": 485, "again": [485, 486, 487, 488, 490, 498, 500, 501, 504], "strongli": 485, "sake": [485, 500, 501], "20_000": [485, 499], "longest": 485, "npai": 485, "action_spread": 485, "strong": 486, "impress": 486, "arduino": 486, "raspberri": 486, "pi": [486, 497, 498, 499], "alon": 486, "examplifi": 486, "ship": 486, "stick": 486, "nearest": 486, "value_mlp": [486, 492], "init_rand_step": [486, 492], "total_count": [486, 492], "total_episod": [486, 492], "t0": [486, 492], "screen": [486, 497], "color": [486, 497], "unblock": 486, "policy_transform": 486, "fake_td": 486, "exported_polici": 486, "div": 486, "graph_modul": 486, "print_read": 486, "group0": 486, "group0_agent0_ob": 486, "collid": [486, 498], "group0_agent0": 486, "agent0_ob": 486, "comma": 486, "digress": 486, "exported_stochastic_polici": 486, "trace": 486, "batchsizetransform": 486, "hidden0": 486, "hidden1": 486, "recurrent_polici": 486, "fake_ob": 486, "fake_hidden0": 486, "fake_hidden1": 486, "fake_is_init": 486, "exported_recurrent_polici": 486, "platform": [486, 503], "aoti": 486, "_inductor": 486, "aoti_compile_and_packag": 486, "aoti_load_packag": 486, "pt2": 486, "pkg_path": 486, "package_path": 486, "compiled_modul": 486, "onnxruntim": 486, "showcas": [486, 499], "tensorrt": 486, "android": 486, "aleinterfac": 486, "rom": 486, "loadrom": 486, "reset_gam": 486, "screen_ob": 486, "getscreenrgb": 486, "tick_param": 486, "bottom": 486, "labelleft": 486, "labelbottom": 486, "imshow": [486, 504], "dynamo_export": 486, "onnx_policy_export": 486, "onnx_file_path": 486, "ort_sess": 486, "inferencesess": 486, "cpuexecutionprovid": 486, "onnxruntime_input": 486, "get_input": 486, "onnx_polici": 486, "onnxruntime_output": 486, "topic": [487, 488, 489], "straight": 487, "backtrack": 487, "reset_with_act": 487, "stepped_data": 487, "spatial": 487, "useless": 487, "policyless": 487, "examin": [487, 497], "tackl": 488, "delv": 488, "extractor": 488, "additivegaussianmodul": [488, 497], "exploration_polici": [488, 497], "greedili": 488, "2d": [488, 497, 498], "innov": [488, 489], "rollout_explor": 488, "sole": 489, "n_collect": 489, "get_next_batch": 489, "concis": 489, "ddpg_loss": 489, "total_loss": 489, "prove": 489, "reliev": 489, "accustom": 490, "surprisingli": 490, "art": [490, 497, 498], "countless": 490, "yourself": [490, 497, 498], "everywher": 491, "log_scalar": 491, "my_scalar": 491, "excess": 491, "lesson": 492, "voluntarili": 492, "training_loop": 492, "video_record": 492, "arbitrarili": 492, "t1": 492, "conclud": [492, 500], "tutorials_python": 493, "tutorials_jupyt": 493, "playwright": 494, "autom": 494, "__future__": 494, "browsertransform": 494, "filterwarn": [494, 495], "browser_transform": 494, "rewardtransform": 494, "last_item": 494, "agnost": 494, "execute_tool_act": 494, "current_st": 494, "nllm": 494, "nenviron": 494, "franc": [494, 495], "button": 494, "css": 494, "btnk": 494, "extract_typ": 494, "ref_llm": 494, "suppress": 495, "vllm_use_v1": 495, "canada": 495, "vllm_wrapper": 495, "return_text": 495, "return_token": 495, "return_mask": 495, "data_histori": 495, "nload": 495, "transformers_model": 495, "transformers_token": 495, "transformers_wrapp": 495, "result_tf": 495, "data_text": 495, "vllm_text_wrapp": 495, "result_vllm_text": 495, "nvllm": 495, "transformers_text_wrapp": 495, "result_tf_text": 495, "vllm_logprobs_wrapp": 495, "result_vllm_lp": 495, "transformers_logprobs_wrapp": 495, "result_tf_lp": 495, "ntensorclass": 495, "analysi": 495, "ntext": 495, "__annotations__": 495, "ntoken": 495, "nlogprob": 495, "nmask": 495, "nerror": 495, "invalid_mod": 495, "nrl": 495, "env_stat": 495, "action_output": 495, "60": [495, 503], "env1_obs_kei": 496, "observation_stand": 496, "env2_obs_kei": 496, "observation_walk": 496, "tdreset1": 496, "tdreset2": 496, "policy_common": 496, "policy_stand": 496, "policy_walk": 496, "env1_mak": 496, "env2_mak": 496, "_single_task": 496, "td_rollout": 496, "matteo": [497, 498], "bettini": [497, 498], "benchmarl": [497, 498], "simple_tag": 497, "maddpg": [497, 498], "multiagentparticleenviron": 497, "mpe": 497, "centralis": [497, 498], "tie": [497, 498], "iddpg": [497, 498], "richard": 497, "andrew": 497, "mit": 497, "press": 497, "2018": 497, "mathbf": [497, 498], "decentralis": [497, 498], "literatur": [497, 498], "overcom": [497, 498], "stationari": [497, 498], "establish": 497, "gui": [497, 498], "is_sphinx": 497, "__sphinx_build__": 497, "n_iter": [497, 498, 499], "evad": 497, "iteration_when_stop_training_evad": 497, "memory_s": 497, "n_optimiser_step": 497, "train_batch_s": 497, "polyak_tau": 497, "chaser": 497, "red": 497, "circl": [497, 498], "green": 497, "touch": [497, 499], "penal": [497, 498], "obstacl": 497, "drag": [497, 498], "elast": [497, 498], "collis": [497, 498], "imped": 497, "n_chaser": 497, "n_evad": 497, "n_obstacl": 497, "use_vma": 497, "simple_tag_v3": 497, "num_good": 497, "num_adversari": 497, "num_obstacl": 497, "max_cycl": 497, "num_vmas_env": [497, 498], "num_good_ag": 497, "num_landmark": 497, "four": [497, 498, 499], "n_agents_in_that_group": 497, "stress": [497, 498], "paramount": [497, 498], "n_rollout_step": [497, 498], "evolut": [497, 498], "group_nam": 497, "n_agents_in_group": 497, "agents_exploration_polici": 497, "utilis": [497, 498], "n_obs_per_ag": [497, 498], "n_actions_per_ag": [497, 498], "share_parameters_polici": [497, 498], "policy_net": [497, 498], "_agent": 497, "grant": [497, 498], "converg": [497, 498], "share_parameters_crit": [497, 498], "obs_act": 497, "cat_modul": 497, "critic_modul": 497, "fantast": [497, 498], "reset_td": 497, "interfer": 497, "subject": [497, 499], "flatten_kei": 497, "process_batch": 497, "group_shap": 497, "get_item_shap": [497, 498], "nested_done_kei": 497, "nested_terminated_kei": 497, "desc": [497, 498], "episode_reward_mean_": 497, "episode_reward_mean_map": 497, "train_group_map": 497, "group_batch": 497, "_group": 497, "loss_nam": 497, "episode_reward_mean": [497, 498], "fig": [497, 501], "set_ylabel": 497, "axvlin": 497, "orang": 497, "set_xlabel": 497, "video_logg": 497, "vmas_log": 497, "env_with_rend": 497, "vmas_rend": 497, "print_log_dir": 497, "profici": [497, 498], "lidar": 498, "sensor": 498, "mappo": 498, "ippo": 498, "analys": 498, "visualis": 498, "vmas_devic": 498, "6_000": 498, "minibatch_s": 498, "generalis": 498, "simd": 498, "warp": 498, "todai": 498, "surround": 498, "dot": [498, 499], "scenario_nam": 498, "critic_net": 498, "minibatch": 498, "episode_reward_mean_list": 498, "critic_network_param": 498, "target_critic_network_param": 498, "xvfb": 498, "pyvirtualdisplai": 498, "1400": 498, "900": 498, "pil": 498, "rendering_callback": 498, "fromarrai": 498, "gif": 498, "save_al": 498, "append_imag": 498, "freeli": 499, "broader": 499, "wider": 499, "acquaint": 499, "avenu": 499, "_apply_to_composit": 499, "default_x": 499, "default_i": 499, "upward": 499, "angular": 499, "sin": 499, "rad": 499, "angl": 499, "deleg": 499, "new_th": 499, "new_thdot": 499, "g_forc": 499, "angle_norm": 499, "albeit": 499, "high_th": 499, "high_thdot": 499, "low_th": 499, "low_thdot": 499, "trivial": 499, "irrelev": 499, "_make_spec": 499, "td_param": 499, "render_fp": 499, "random_": 499, "_make_step": 499, "staticmethod": 499, "skeleton": 499, "sine": 499, "cosin": 499, "sintransform": 499, "costransform": 499, "t_sin": 499, "t_co": 499, "cat_transform": 499, "simple_rollout": 499, "unexplor": 499, "init_td": 499, "traj_return": 499, "last_reward": 499, "is_ipython": 499, "inlin": 499, "get_backend": 499, "ion": 499, "gcf": 499, "clear_output": 499, "r3mtransform": 500, "embodi": 500, "env_transform": [500, 504], "wiser": 500, "batteri": 501, "gc": 501, "buffer_list": 501, "lowest": 501, "buffer_lazytensor": 501, "tempdir": 501, "buffer_lazymemmap": 501, "fullest": 501, "mydata": 501, "buffer_lazi": 501, "_i": 501, "artifici": 501, "hamper": 501, "reappear": 501, "unfold": 501, "problemat": 501, "4th": 501, "prioritizedslicesampl": 501, "tensordictmaxvaluewrit": 501, "demo": 503, "icml": 503, "vmoen": 503, "fb": 503, "invest": 503, "media": 503, "predominantli": 503, "data2": 503, "sub_key1": 503, "scturctur": 503, "data_stack": 503, "data_sampl": 503, "_sampler": 503, "_sum_tre": 503, "modulenotfounderror": 503, "noopresetenv": [503, 504], "backbone_modul": 503, "params_expand": 503, "exec_sequ": 503, "tensordict_exp": 503, "base_modul": 503, "tensordicts_prealloc": 503, "tensordicts_stack": 503, "tensordict_rollout": [503, 504], "automatical": 503, "particularili": 503, "concatmodul": 503, "loss_td": 503, "contributor": 503, "curiou": 503, "nascent": 503, "unsupervis": 504, "_build_env": 504, "deserv": 504, "__episode__": 504, "__trajectory__": 504, "void": 504, "reproduct": 504, "tensordict_tprim": 504, "wrapper1": 504, "wrapper2": 504, "obviou": 504, "truth": 504, "env_transformed_bi": 504, "stanc": 504, "transformeddistribut": 504, "base_dist": 504, "concat": 504, "mofidi": 504, "transformedenviron": 504, "moderet": 504, "computation": 504, "incom": 504, "amongst": 504, "has_cuda": 504, "convention": 504, "markovian": 504, "bar_": 504, "get_someth": 504, "aargh": 504, "is_clos": 504, "foo_list": 504, "121": 504, "evolv": 504, "steadi": 504, "approx": 504, "absor": 504, "_extra_st": 504}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [286, 0, 1, "", "implement_for"], [448, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiProcessedWeightUpdater"], [15, 0, 1, "", "MultiSyncDataCollector"], [16, 0, 1, "", "MultiaSyncDataCollector"], [17, 0, 1, "", "RayWeightUpdater"], [18, 0, 1, "", "SyncDataCollector"], [19, 0, 1, "", "VanillaWeightUpdater"], [20, 0, 1, "", "WeightUpdaterBase"], [21, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "async_shutdown"], [13, 1, 1, "", "init_updater"], [13, 1, 1, "", "pause"], [13, 1, 1, "", "start"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiProcessedWeightUpdater": [[14, 1, 1, "", "all_worker_ids"], [14, 2, 1, "", "collector"], [14, 1, 1, "", "from_policy"], [14, 1, 1, "", "increment_version"], [14, 1, 1, "", "init"], [14, 2, 1, "", "post_hooks"], [14, 1, 1, "", "push_weights"], [14, 1, 1, "", "register_collector"], [14, 1, 1, "", "register_post_hook"]], "torchrl.collectors.MultiSyncDataCollector": [[15, 1, 1, "", "async_shutdown"], [15, 1, 1, "", "init_updater"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "pause"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "start"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "init_updater"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "pause"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[17, 1, 1, "", "_get_server_weights"], [17, 1, 1, "", "_maybe_map_weights"], [17, 1, 1, "", "_skip_update"], [17, 1, 1, "", "_sync_weights_with_worker"], [17, 1, 1, "id0", "all_worker_ids"], [17, 2, 1, "", "collector"], [17, 1, 1, "", "from_policy"], [17, 1, 1, "", "increment_version"], [17, 1, 1, "", "init"], [17, 2, 1, "", "post_hooks"], [17, 1, 1, "", "push_weights"], [17, 1, 1, "", "register_collector"], [17, 1, 1, "", "register_post_hook"]], "torchrl.collectors.SyncDataCollector": [[18, 1, 1, "", "async_shutdown"], [18, 1, 1, "", "init_updater"], [18, 1, 1, "", "iterator"], [18, 1, 1, "", "load_state_dict"], [18, 1, 1, "", "pause"], [18, 1, 1, "", "reset"], [18, 1, 1, "", "rollout"], [18, 1, 1, "", "set_seed"], [18, 1, 1, "", "shutdown"], [18, 1, 1, "", "start"], [18, 1, 1, "", "state_dict"], [18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[19, 1, 1, "", "all_worker_ids"], [19, 2, 1, "", "collector"], [19, 1, 1, "", "from_policy"], [19, 1, 1, "", "increment_version"], [19, 1, 1, "", "init"], [19, 2, 1, "", "post_hooks"], [19, 1, 1, "", "push_weights"], [19, 1, 1, "", "register_collector"], [19, 1, 1, "", "register_post_hook"]], "torchrl.collectors.WeightUpdaterBase": [[20, 1, 1, "", "all_worker_ids"], [20, 2, 1, "", "collector"], [20, 1, 1, "id0", "from_policy"], [20, 1, 1, "", "increment_version"], [20, 1, 1, "", "init"], [20, 2, 1, "", "post_hooks"], [20, 1, 1, "id1", "push_weights"], [20, 1, 1, "id2", "register_collector"], [20, 1, 1, "", "register_post_hook"]], "torchrl.collectors.aSyncDataCollector": [[21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "init_updater"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "pause"], [21, 1, 1, "", "reset"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "start"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[22, 0, 1, "", "DistributedDataCollector"], [23, 0, 1, "", "DistributedSyncDataCollector"], [24, 0, 1, "", "DistributedWeightUpdater"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RPCWeightUpdater"], [27, 0, 1, "", "RayCollector"], [28, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "init_updater"], [22, 1, 1, "", "pause"], [22, 1, 1, "", "start"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "init_updater"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedWeightUpdater": [[24, 1, 1, "", "_get_server_weights"], [24, 1, 1, "", "_maybe_map_weights"], [24, 1, 1, "", "_sync_weights_with_worker"], [24, 1, 1, "id0", "all_worker_ids"], [24, 2, 1, "", "collector"], [24, 1, 1, "", "from_policy"], [24, 1, 1, "", "increment_version"], [24, 1, 1, "", "init"], [24, 2, 1, "", "post_hooks"], [24, 1, 1, "", "push_weights"], [24, 1, 1, "", "register_collector"], [24, 1, 1, "", "register_post_hook"], [24, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "async_shutdown"], [25, 1, 1, "", "init_updater"], [25, 1, 1, "", "pause"], [25, 1, 1, "", "start"], [25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCWeightUpdater": [[26, 1, 1, "", "_get_server_weights"], [26, 1, 1, "", "_maybe_map_weights"], [26, 1, 1, "", "_sync_weights_with_worker"], [26, 1, 1, "id0", "all_worker_ids"], [26, 2, 1, "", "collector"], [26, 1, 1, "", "from_policy"], [26, 1, 1, "", "increment_version"], [26, 1, 1, "", "init"], [26, 2, 1, "", "post_hooks"], [26, 1, 1, "", "push_weights"], [26, 1, 1, "", "register_collector"], [26, 1, 1, "", "register_post_hook"], [26, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RayCollector": [[27, 1, 1, "", "add_collectors"], [27, 1, 1, "", "async_shutdown"], [27, 1, 1, "", "init_updater"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "local_policy"], [27, 1, 1, "", "pause"], [27, 2, 1, "", "remote_collectors"], [27, 1, 1, "", "set_seed"], [27, 1, 1, "", "shutdown"], [27, 1, 1, "", "start"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "stop_remote_collectors"], [27, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm": [[29, 0, 1, "", "LLMCollector"], [30, 0, 1, "", "RayLLMCollector"], [31, 0, 1, "", "vLLMUpdater"]], "torchrl.collectors.llm.LLMCollector": [[29, 1, 1, "", "as_remote"], [29, 1, 1, "", "async_shutdown"], [29, 2, 1, "", "dialog_turns_per_batch"], [29, 1, 1, "", "get_policy_model"], [29, 1, 1, "", "get_policy_version"], [29, 1, 1, "", "increment_version"], [29, 1, 1, "", "init_updater"], [29, 1, 1, "", "is_initialized"], [29, 1, 1, "", "iterator"], [29, 1, 1, "", "load_state_dict"], [29, 1, 1, "", "pause"], [29, 2, 1, "", "policy_version"], [29, 1, 1, "", "reset"], [29, 2, 1, "", "rollout"], [29, 1, 1, "", "set_seed"], [29, 1, 1, "", "shutdown"], [29, 1, 1, "", "start"], [29, 1, 1, "", "state_dict"], [29, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm.RayLLMCollector": [[30, 1, 1, "", "as_remote"], [30, 1, 1, "", "async_shutdown"], [30, 2, 1, "", "dialog_turns_per_batch"], [30, 1, 1, "", "get_policy_model"], [30, 1, 1, "", "get_policy_version"], [30, 1, 1, "", "increment_version"], [30, 1, 1, "", "init_updater"], [30, 1, 1, "", "is_initialized"], [30, 1, 1, "", "iterator"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "next"], [30, 1, 1, "", "pause"], [30, 2, 1, "", "policy_version"], [30, 1, 1, "", "reset"], [30, 2, 1, "", "rollout"], [30, 1, 1, "", "set_seed"], [30, 1, 1, "", "shutdown"], [30, 1, 1, "", "start"], [30, 1, 1, "", "state_dict"], [30, 2, 1, "", "total_dialog_turns"], [30, 1, 1, "", "update_policy_weights_"], [30, 2, 1, "", "weight_updater"]], "torchrl.collectors.llm.vLLMUpdater": [[31, 1, 1, "", "_get_server_weights"], [31, 1, 1, "", "_maybe_map_weights"], [31, 1, 1, "", "_sync_weights_with_worker"], [31, 1, 1, "id0", "all_worker_ids"], [31, 2, 1, "", "collector"], [31, 1, 1, "", "from_policy"], [31, 1, 1, "", "get_model_metadata"], [31, 1, 1, "", "increment_version"], [31, 1, 1, "id1", "init"], [31, 2, 1, "", "post_hooks"], [31, 1, 1, "", "push_weights"], [31, 1, 1, "", "register_collector"], [31, 1, 1, "", "register_post_hook"]], "torchrl.collectors.utils": [[32, 3, 1, "", "split_trajectories"]], "torchrl.data": [[33, 0, 1, "", "AdaptiveKLController"], [34, 0, 1, "", "Binary"], [35, 0, 1, "", "BinaryDiscreteTensorSpec"], [36, 0, 1, "", "BinaryToDecimal"], [37, 0, 1, "", "Bounded"], [38, 0, 1, "", "BoundedTensorSpec"], [39, 0, 1, "", "Categorical"], [40, 0, 1, "", "Composite"], [41, 0, 1, "", "CompositeSpec"], [42, 0, 1, "", "ConstantKLController"], [43, 0, 1, "", "DensifyReward"], [44, 0, 1, "", "DiscreteTensorSpec"], [45, 0, 1, "", "Flat2TED"], [46, 0, 1, "", "H5Combine"], [47, 0, 1, "", "H5Split"], [48, 0, 1, "", "HashToInt"], [49, 0, 1, "", "LazyStackedCompositeSpec"], [50, 0, 1, "", "LazyStackedTensorSpec"], [51, 0, 1, "", "MCTSForest"], [52, 0, 1, "", "MultiCategorical"], [53, 0, 1, "", "MultiDiscreteTensorSpec"], [54, 0, 1, "", "MultiOneHot"], [55, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [56, 0, 1, "", "MultiStep"], [57, 0, 1, "", "Nested2TED"], [58, 0, 1, "", "NonTensor"], [59, 0, 1, "", "NonTensorSpec"], [60, 0, 1, "", "OneHot"], [61, 0, 1, "", "OneHotDiscreteTensorSpec"], [62, 0, 1, "", "PairwiseDataset"], [63, 0, 1, "", "PrioritizedReplayBuffer"], [64, 0, 1, "", "PromptData"], [65, 0, 1, "", "PromptTensorDictTokenizer"], [66, 0, 1, "", "QueryModule"], [67, 0, 1, "", "RandomProjectionHash"], [68, 0, 1, "", "RayReplayBuffer"], [69, 0, 1, "", "RemoteTensorDictReplayBuffer"], [70, 0, 1, "", "ReplayBuffer"], [71, 0, 1, "", "RewardData"], [72, 0, 1, "", "RolloutFromModel"], [73, 0, 1, "", "SipHash"], [74, 0, 1, "", "Stacked"], [75, 0, 1, "", "StackedComposite"], [76, 0, 1, "", "TED2Flat"], [77, 0, 1, "", "TED2Nested"], [78, 0, 1, "", "TensorDictMap"], [79, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [80, 0, 1, "", "TensorDictReplayBuffer"], [81, 0, 1, "", "TensorDictTokenizer"], [82, 0, 1, "", "TensorMap"], [83, 0, 1, "", "TensorSpec"], [84, 0, 1, "", "TokenizedDatasetLoader"], [85, 0, 1, "", "Tree"], [86, 0, 1, "", "Unbounded"], [87, 0, 1, "", "UnboundedContinuous"], [88, 0, 1, "", "UnboundedContinuousTensorSpec"], [89, 0, 1, "", "UnboundedDiscrete"], [90, 0, 1, "", "UnboundedDiscreteTensorSpec"], [91, 0, 1, "", "check_no_exclusive_keys"], [92, 0, 1, "", "consolidate_spec"], [93, 0, 1, "", "contains_lazy_spec"], [94, 0, 1, "", "create_infinite_iterator"], [99, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[33, 1, 1, "", "update"]], "torchrl.data.Binary": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 4, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 4, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "erase_memoize_cache"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 1, 1, "", "memoize_encode"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[36, 1, 1, "", "add_module"], [36, 1, 1, "", "apply"], [36, 1, 1, "", "bfloat16"], [36, 1, 1, "", "buffers"], [36, 1, 1, "", "children"], [36, 1, 1, "", "compile"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 1, 1, "", "double"], [36, 1, 1, "", "eval"], [36, 1, 1, "", "extra_repr"], [36, 1, 1, "", "float"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "get_buffer"], [36, 1, 1, "", "get_extra_state"], [36, 1, 1, "", "get_parameter"], [36, 1, 1, "", "get_submodule"], [36, 1, 1, "", "half"], [36, 1, 1, "", "ipu"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "modules"], [36, 1, 1, "", "mtia"], [36, 1, 1, "", "named_buffers"], [36, 1, 1, "", "named_children"], [36, 1, 1, "", "named_modules"], [36, 1, 1, "", "named_parameters"], [36, 1, 1, "", "parameters"], [36, 1, 1, "", "register_backward_hook"], [36, 1, 1, "", "register_buffer"], [36, 1, 1, "", "register_forward_hook"], [36, 1, 1, "", "register_forward_pre_hook"], [36, 1, 1, "", "register_full_backward_hook"], [36, 1, 1, "", "register_full_backward_pre_hook"], [36, 1, 1, "", "register_load_state_dict_post_hook"], [36, 1, 1, "", "register_load_state_dict_pre_hook"], [36, 1, 1, "", "register_module"], [36, 1, 1, "", "register_parameter"], [36, 1, 1, "", "register_state_dict_post_hook"], [36, 1, 1, "", "register_state_dict_pre_hook"], [36, 1, 1, "", "requires_grad_"], [36, 1, 1, "", "set_extra_state"], [36, 1, 1, "", "set_submodule"], [36, 1, 1, "", "share_memory"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_empty"], [36, 1, 1, "", "train"], [36, 1, 1, "", "type"], [36, 1, 1, "", "xpu"], [36, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "cardinality"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 2, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "enumerate"], [38, 1, 1, "", "erase_memoize_cache"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 1, 1, "", "memoize_encode"], [38, 2, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "erase_memoize_cache"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 1, 1, "", "memoize_encode"], [39, 2, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "set_provisional_n"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "to_one_hot"], [39, 1, 1, "", "to_one_hot_spec"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "update_mask"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 2, 1, "", "device"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "erase_memoize_cache"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "get"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_empty"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "items"], [40, 1, 1, "", "keys"], [40, 1, 1, "", "lock_"], [40, 1, 1, "", "make_neg_dim"], [40, 1, 1, "", "memoize_encode"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "pop"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "separates"], [40, 1, 1, "", "set"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unlock_"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "values"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "cardinality"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 2, 1, "", "device"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "enumerate"], [41, 1, 1, "", "erase_memoize_cache"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "get"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_empty"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "items"], [41, 1, 1, "", "keys"], [41, 1, 1, "", "lock_"], [41, 1, 1, "", "make_neg_dim"], [41, 1, 1, "", "memoize_encode"], [41, 2, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "pop"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "separates"], [41, 1, 1, "", "set"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unlock_"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "values"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "compile"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "is_tdmodule_compatible"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "mtia"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_load_state_dict_pre_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "register_state_dict_post_hook"], [43, 1, 1, "", "register_state_dict_pre_hook"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "reset_out_keys"], [43, 1, 1, "", "reset_parameters_recursive"], [43, 1, 1, "", "select_out_keys"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_submodule"], [43, 1, 1, "", "share_memory"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 4, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "erase_memoize_cache"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 1, 1, "", "memoize_encode"], [44, 2, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "set_provisional_n"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "compile"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "mtia"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_load_state_dict_pre_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "register_state_dict_post_hook"], [48, 1, 1, "", "register_state_dict_pre_hook"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_submodule"], [48, 1, 1, "", "share_memory"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "erase_memoize_cache"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "get"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_empty"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "items"], [49, 1, 1, "", "keys"], [49, 1, 1, "", "lock_"], [49, 1, 1, "", "make_neg_dim"], [49, 1, 1, "", "memoize_encode"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "pop"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "separates"], [49, 1, 1, "", "set"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unlock_"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "values"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 2, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "erase_memoize_cache"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 1, 1, "", "memoize_encode"], [50, 2, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[51, 2, 1, "", "action_keys"], [51, 2, 1, "", "done_keys"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "get_keys_from_env"], [51, 2, 1, "", "observation_keys"], [51, 2, 1, "", "reward_keys"], [51, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "set_provisional_n"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "erase_memoize_cache"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 1, 1, "", "memoize_encode"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "erase_memoize_cache"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 1, 1, "", "memoize_encode"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 2, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "erase_memoize_cache"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 1, 1, "", "memoize_encode"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "erase_memoize_cache"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 1, 1, "", "memoize_encode"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "cardinality"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "enumerate"], [61, 1, 1, "", "erase_memoize_cache"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "make_neg_dim"], [61, 1, 1, "", "memoize_encode"], [61, 2, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_categorical"], [61, 1, 1, "", "to_categorical_spec"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "to_one_hot"], [61, 1, 1, "", "to_one_hot_spec"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "update_mask"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[62, 2, 1, "", "device"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "fields"], [62, 1, 1, "", "from_dataset"], [62, 1, 1, "", "from_tensordict"], [62, 1, 1, "", "get"], [62, 1, 1, "", "load"], [62, 1, 1, "", "load_"], [62, 1, 1, "", "load_memmap"], [62, 1, 1, "", "load_state_dict"], [62, 1, 1, "", "memmap"], [62, 1, 1, "", "memmap_"], [62, 1, 1, "", "memmap_like"], [62, 1, 1, "", "memmap_refresh_"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set"], [62, 1, 1, "", "state_dict"], [62, 1, 1, "", "to_tensordict"], [62, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 2, 1, "", "batch_size"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "next"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 2, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 2, 1, "", "storage"], [63, 2, 1, "", "write_count"], [63, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[64, 2, 1, "", "device"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "fields"], [64, 1, 1, "", "from_dataset"], [64, 1, 1, "", "from_tensordict"], [64, 1, 1, "", "get"], [64, 1, 1, "", "load"], [64, 1, 1, "", "load_"], [64, 1, 1, "", "load_memmap"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "memmap"], [64, 1, 1, "", "memmap_"], [64, 1, 1, "", "memmap_like"], [64, 1, 1, "", "memmap_refresh_"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to_tensordict"], [64, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fit"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "mtia"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_load_state_dict_pre_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_post_hook"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "", "set_submodule"], [67, 1, 1, "", "share_memory"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 2, 1, "", "batch_size"], [68, 1, 1, "", "close"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "next"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 2, 1, "", "batch_size"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "next"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[70, 1, 1, "", "add"], [70, 1, 1, "", "append_transform"], [70, 1, 1, "", "as_remote"], [70, 2, 1, "", "batch_size"], [70, 1, 1, "", "dump"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "empty"], [70, 1, 1, "", "extend"], [70, 1, 1, "", "insert_transform"], [70, 1, 1, "", "load"], [70, 1, 1, "", "loads"], [70, 1, 1, "", "next"], [70, 1, 1, "", "register_load_hook"], [70, 1, 1, "", "register_save_hook"], [70, 1, 1, "", "sample"], [70, 2, 1, "", "sampler"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set_sampler"], [70, 1, 1, "", "set_storage"], [70, 1, 1, "", "set_writer"], [70, 2, 1, "", "storage"], [70, 2, 1, "", "write_count"], [70, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[71, 2, 1, "", "device"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "fields"], [71, 1, 1, "", "from_tensordict"], [71, 1, 1, "", "get"], [71, 1, 1, "", "load"], [71, 1, 1, "", "load_"], [71, 1, 1, "", "load_memmap"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "memmap"], [71, 1, 1, "", "memmap_"], [71, 1, 1, "", "memmap_like"], [71, 1, 1, "", "memmap_refresh_"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "to_tensordict"], [71, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[72, 1, 1, "", "create_rollout_td"], [72, 1, 1, "", "generate"], [72, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "mtia"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_load_state_dict_pre_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_post_hook"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_submodule"], [73, 1, 1, "", "share_memory"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "erase_memoize_cache"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 1, 1, "", "memoize_encode"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 2, 1, "", "device"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "erase_memoize_cache"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "get"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_empty"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "items"], [75, 1, 1, "", "keys"], [75, 1, 1, "", "lock_"], [75, 1, 1, "", "make_neg_dim"], [75, 1, 1, "", "memoize_encode"], [75, 2, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "pop"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "separates"], [75, 1, 1, "", "set"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unlock_"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "values"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[78, 1, 1, "", "add_module"], [78, 1, 1, "", "apply"], [78, 1, 1, "", "bfloat16"], [78, 1, 1, "", "buffers"], [78, 1, 1, "", "children"], [78, 1, 1, "", "compile"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 1, 1, "", "double"], [78, 1, 1, "", "eval"], [78, 1, 1, "", "extra_repr"], [78, 1, 1, "", "float"], [78, 1, 1, "", "forward"], [78, 1, 1, "", "from_tensordict_pair"], [78, 1, 1, "", "get_buffer"], [78, 1, 1, "", "get_extra_state"], [78, 1, 1, "", "get_parameter"], [78, 1, 1, "", "get_submodule"], [78, 1, 1, "", "half"], [78, 1, 1, "", "ipu"], [78, 1, 1, "", "is_tdmodule_compatible"], [78, 1, 1, "", "load_state_dict"], [78, 1, 1, "", "modules"], [78, 1, 1, "", "mtia"], [78, 1, 1, "", "named_buffers"], [78, 1, 1, "", "named_children"], [78, 1, 1, "", "named_modules"], [78, 1, 1, "", "named_parameters"], [78, 1, 1, "", "parameters"], [78, 1, 1, "", "register_backward_hook"], [78, 1, 1, "", "register_buffer"], [78, 1, 1, "", "register_forward_hook"], [78, 1, 1, "", "register_forward_pre_hook"], [78, 1, 1, "", "register_full_backward_hook"], [78, 1, 1, "", "register_full_backward_pre_hook"], [78, 1, 1, "", "register_load_state_dict_post_hook"], [78, 1, 1, "", "register_load_state_dict_pre_hook"], [78, 1, 1, "", "register_module"], [78, 1, 1, "", "register_parameter"], [78, 1, 1, "", "register_state_dict_post_hook"], [78, 1, 1, "", "register_state_dict_pre_hook"], [78, 1, 1, "", "requires_grad_"], [78, 1, 1, "", "reset_out_keys"], [78, 1, 1, "", "reset_parameters_recursive"], [78, 1, 1, "", "select_out_keys"], [78, 1, 1, "", "set_extra_state"], [78, 1, 1, "", "set_submodule"], [78, 1, 1, "", "share_memory"], [78, 1, 1, "", "state_dict"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_empty"], [78, 1, 1, "", "train"], [78, 1, 1, "", "type"], [78, 1, 1, "", "xpu"], [78, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 2, 1, "", "batch_size"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "next"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 1, 1, "", "as_remote"], [80, 2, 1, "", "batch_size"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "next"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 2, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 2, 1, "", "storage"], [80, 2, 1, "", "write_count"], [80, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 2, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "erase_memoize_cache"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 1, 1, "", "memoize_encode"], [83, 2, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[84, 1, 1, "", "dataset_to_tensordict"], [84, 1, 1, "", "load"]], "torchrl.data.Tree": [[85, 2, 1, "", "branching_action"], [85, 2, 1, "", "device"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "edges"], [85, 1, 1, "", "fields"], [85, 1, 1, "", "from_tensordict"], [85, 2, 1, "", "full_action_spec"], [85, 2, 1, "", "full_done_spec"], [85, 2, 1, "", "full_observation_spec"], [85, 2, 1, "", "full_reward_spec"], [85, 2, 1, "", "full_state_spec"], [85, 1, 1, "", "fully_expanded"], [85, 1, 1, "", "get"], [85, 1, 1, "", "get_vertex_by_hash"], [85, 1, 1, "", "get_vertex_by_id"], [85, 2, 1, "", "is_terminal"], [85, 1, 1, "", "load"], [85, 1, 1, "", "load_"], [85, 1, 1, "", "load_memmap"], [85, 1, 1, "", "load_state_dict"], [85, 1, 1, "", "make_node"], [85, 1, 1, "", "max_length"], [85, 1, 1, "", "memmap"], [85, 1, 1, "", "memmap_"], [85, 1, 1, "", "memmap_like"], [85, 1, 1, "", "memmap_refresh_"], [85, 2, 1, "", "node_observation"], [85, 2, 1, "", "node_observations"], [85, 2, 1, "", "num_children"], [85, 1, 1, "", "num_vertices"], [85, 2, 1, "", "parent"], [85, 1, 1, "", "plot"], [85, 2, 1, "", "prev_action"], [85, 1, 1, "", "rollout_from_path"], [85, 1, 1, "", "save"], [85, 2, 1, "", "selected_actions"], [85, 1, 1, "", "set"], [85, 1, 1, "", "state_dict"], [85, 1, 1, "", "to_string"], [85, 1, 1, "", "to_tensordict"], [85, 1, 1, "", "unbind"], [85, 1, 1, "", "valid_paths"], [85, 1, 1, "", "vertices"], [85, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "erase_memoize_cache"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 1, 1, "", "memoize_encode"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "erase_memoize_cache"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 1, 1, "", "memoize_encode"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "erase_memoize_cache"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 1, 1, "", "memoize_encode"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "erase_memoize_cache"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 1, 1, "", "memoize_encode"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[90, 1, 1, "", "assert_is_in"], [90, 1, 1, "", "cardinality"], [90, 1, 1, "", "clear_device_"], [90, 1, 1, "", "clone"], [90, 1, 1, "", "contains"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 2, 1, "", "device"], [90, 1, 1, "", "encode"], [90, 1, 1, "", "enumerate"], [90, 1, 1, "", "erase_memoize_cache"], [90, 1, 1, "", "expand"], [90, 1, 1, "", "flatten"], [90, 1, 1, "", "implements_for_spec"], [90, 1, 1, "", "index"], [90, 1, 1, "", "is_in"], [90, 1, 1, "", "make_neg_dim"], [90, 1, 1, "", "memoize_encode"], [90, 2, 1, "", "ndim"], [90, 1, 1, "", "ndimension"], [90, 1, 1, "", "one"], [90, 1, 1, "", "ones"], [90, 1, 1, "", "project"], [90, 1, 1, "", "rand"], [90, 1, 1, "", "reshape"], [90, 1, 1, "", "sample"], [90, 1, 1, "", "squeeze"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_numpy"], [90, 1, 1, "", "type_check"], [90, 1, 1, "", "unflatten"], [90, 1, 1, "", "unsqueeze"], [90, 1, 1, "", "view"], [90, 1, 1, "", "zero"], [90, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[95, 0, 1, "", "AtariDQNExperienceReplay"], [96, 0, 1, "", "BaseDatasetExperienceReplay"], [97, 0, 1, "", "D4RLExperienceReplay"], [98, 0, 1, "", "MinariExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[95, 1, 1, "", "add"], [95, 1, 1, "", "append_transform"], [95, 1, 1, "", "as_remote"], [95, 2, 1, "", "batch_size"], [95, 2, 1, "", "data_path"], [95, 2, 1, "", "data_path_root"], [95, 1, 1, "", "delete"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "dumps"], [95, 1, 1, "", "empty"], [95, 1, 1, "", "extend"], [95, 1, 1, "", "insert_transform"], [95, 1, 1, "", "load"], [95, 1, 1, "", "loads"], [95, 1, 1, "", "next"], [95, 1, 1, "", "preprocess"], [95, 1, 1, "", "register_load_hook"], [95, 1, 1, "", "register_save_hook"], [95, 1, 1, "", "sample"], [95, 2, 1, "", "sampler"], [95, 1, 1, "", "save"], [95, 1, 1, "", "set_sampler"], [95, 1, 1, "", "set_storage"], [95, 1, 1, "", "set_writer"], [95, 2, 1, "", "storage"], [95, 2, 1, "", "write_count"], [95, 2, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[96, 1, 1, "", "add"], [96, 1, 1, "", "append_transform"], [96, 1, 1, "", "as_remote"], [96, 2, 1, "", "batch_size"], [96, 2, 1, "", "data_path"], [96, 2, 1, "", "data_path_root"], [96, 1, 1, "", "delete"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "dumps"], [96, 1, 1, "", "empty"], [96, 1, 1, "", "extend"], [96, 1, 1, "", "insert_transform"], [96, 1, 1, "", "load"], [96, 1, 1, "", "loads"], [96, 1, 1, "", "next"], [96, 1, 1, "", "preprocess"], [96, 1, 1, "", "register_load_hook"], [96, 1, 1, "", "register_save_hook"], [96, 1, 1, "", "sample"], [96, 2, 1, "", "sampler"], [96, 1, 1, "", "save"], [96, 1, 1, "", "set_sampler"], [96, 1, 1, "", "set_storage"], [96, 1, 1, "", "set_writer"], [96, 2, 1, "", "storage"], [96, 2, 1, "", "write_count"], [96, 2, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[97, 1, 1, "", "add"], [97, 1, 1, "", "append_transform"], [97, 1, 1, "", "as_remote"], [97, 2, 1, "", "batch_size"], [97, 2, 1, "", "data_path"], [97, 2, 1, "", "data_path_root"], [97, 1, 1, "", "delete"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "dumps"], [97, 1, 1, "", "empty"], [97, 1, 1, "", "extend"], [97, 1, 1, "", "insert_transform"], [97, 1, 1, "", "load"], [97, 1, 1, "", "loads"], [97, 1, 1, "", "next"], [97, 1, 1, "", "preprocess"], [97, 1, 1, "", "register_load_hook"], [97, 1, 1, "", "register_save_hook"], [97, 1, 1, "", "sample"], [97, 2, 1, "", "sampler"], [97, 1, 1, "", "save"], [97, 1, 1, "", "set_sampler"], [97, 1, 1, "", "set_storage"], [97, 1, 1, "", "set_writer"], [97, 2, 1, "", "storage"], [97, 2, 1, "", "write_count"], [97, 2, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[98, 1, 1, "", "add"], [98, 1, 1, "", "append_transform"], [98, 1, 1, "", "as_remote"], [98, 2, 1, "", "batch_size"], [98, 2, 1, "", "data_path"], [98, 2, 1, "", "data_path_root"], [98, 1, 1, "", "delete"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "dumps"], [98, 1, 1, "", "empty"], [98, 1, 1, "", "extend"], [98, 1, 1, "", "insert_transform"], [98, 1, 1, "", "load"], [98, 1, 1, "", "loads"], [98, 1, 1, "", "next"], [98, 1, 1, "", "preprocess"], [98, 1, 1, "", "register_load_hook"], [98, 1, 1, "", "register_save_hook"], [98, 1, 1, "", "sample"], [98, 2, 1, "", "sampler"], [98, 1, 1, "", "save"], [98, 1, 1, "", "set_sampler"], [98, 1, 1, "", "set_storage"], [98, 1, 1, "", "set_writer"], [98, 2, 1, "", "storage"], [98, 2, 1, "", "write_count"], [98, 2, 1, "", "writer"]], "torchrl.data.llm": [[100, 0, 1, "", "ContentBase"], [101, 0, 1, "", "History"], [102, 0, 1, "", "TopKRewardSelector"]], "torchrl.data.llm.ContentBase": [[100, 2, 1, "", "device"], [100, 1, 1, "", "dumps"], [100, 1, 1, "", "fields"], [100, 1, 1, "", "from_tensordict"], [100, 1, 1, "", "get"], [100, 1, 1, "", "load"], [100, 1, 1, "", "load_"], [100, 1, 1, "", "load_memmap"], [100, 1, 1, "", "load_state_dict"], [100, 1, 1, "", "memmap"], [100, 1, 1, "", "memmap_"], [100, 1, 1, "", "memmap_like"], [100, 1, 1, "", "memmap_refresh_"], [100, 1, 1, "", "save"], [100, 1, 1, "", "set"], [100, 1, 1, "", "state_dict"], [100, 1, 1, "", "to_tensordict"], [100, 1, 1, "", "unbind"]], "torchrl.data.llm.History": [[101, 1, 1, "", "append"], [101, 1, 1, "", "apply_chat_template"], [101, 1, 1, "", "default_spec"], [101, 2, 1, "", "device"], [101, 1, 1, "", "dumps"], [101, 1, 1, "", "fields"], [101, 1, 1, "", "from_chats"], [101, 1, 1, "", "from_tensordict"], [101, 1, 1, "", "get"], [101, 1, 1, "", "load"], [101, 1, 1, "", "load_"], [101, 1, 1, "", "load_memmap"], [101, 1, 1, "", "load_state_dict"], [101, 1, 1, "", "memmap"], [101, 1, 1, "", "memmap_"], [101, 1, 1, "", "memmap_like"], [101, 1, 1, "", "memmap_refresh_"], [101, 1, 1, "", "save"], [101, 1, 1, "", "set"], [101, 1, 1, "", "state_dict"], [101, 1, 1, "", "to_tensordict"], [101, 1, 1, "", "unbind"]], "torchrl.data.llm.TopKRewardSelector": [[102, 1, 1, "", "add_module"], [102, 1, 1, "", "apply"], [102, 1, 1, "", "bfloat16"], [102, 1, 1, "", "buffers"], [102, 1, 1, "", "children"], [102, 1, 1, "", "close"], [102, 2, 1, "", "collector"], [102, 1, 1, "", "compile"], [102, 2, 1, "", "container"], [102, 1, 1, "", "cpu"], [102, 1, 1, "", "cuda"], [102, 1, 1, "", "double"], [102, 1, 1, "", "eval"], [102, 1, 1, "", "extra_repr"], [102, 1, 1, "", "float"], [102, 1, 1, "", "forward"], [102, 1, 1, "", "get_buffer"], [102, 1, 1, "", "get_extra_state"], [102, 1, 1, "", "get_parameter"], [102, 1, 1, "", "get_submodule"], [102, 1, 1, "", "half"], [102, 1, 1, "", "init"], [102, 1, 1, "", "inv"], [102, 1, 1, "", "ipu"], [102, 1, 1, "", "load_state_dict"], [102, 1, 1, "", "modules"], [102, 1, 1, "", "mtia"], [102, 1, 1, "", "named_buffers"], [102, 1, 1, "", "named_children"], [102, 1, 1, "", "named_modules"], [102, 1, 1, "", "named_parameters"], [102, 1, 1, "", "parameters"], [102, 2, 1, "", "parent"], [102, 1, 1, "", "register_backward_hook"], [102, 1, 1, "", "register_buffer"], [102, 1, 1, "", "register_forward_hook"], [102, 1, 1, "", "register_forward_pre_hook"], [102, 1, 1, "", "register_full_backward_hook"], [102, 1, 1, "", "register_full_backward_pre_hook"], [102, 1, 1, "", "register_load_state_dict_post_hook"], [102, 1, 1, "", "register_load_state_dict_pre_hook"], [102, 1, 1, "", "register_module"], [102, 1, 1, "", "register_parameter"], [102, 1, 1, "", "register_state_dict_post_hook"], [102, 1, 1, "", "register_state_dict_pre_hook"], [102, 1, 1, "", "requires_grad_"], [102, 1, 1, "", "set_extra_state"], [102, 1, 1, "", "set_submodule"], [102, 1, 1, "", "share_memory"], [102, 1, 1, "", "state_dict"], [102, 1, 1, "", "to"], [102, 1, 1, "", "to_empty"], [102, 1, 1, "", "train"], [102, 1, 1, "", "transform_action_spec"], [102, 1, 1, "", "transform_done_spec"], [102, 1, 1, "", "transform_env_batch_size"], [102, 1, 1, "", "transform_env_device"], [102, 1, 1, "", "transform_input_spec"], [102, 1, 1, "", "transform_observation_spec"], [102, 1, 1, "", "transform_output_spec"], [102, 1, 1, "", "transform_reward_spec"], [102, 1, 1, "", "transform_state_spec"], [102, 1, 1, "", "type"], [102, 1, 1, "", "xpu"], [102, 1, 1, "", "zero_grad"]], "torchrl.data.replay_buffers": [[103, 0, 1, "", "FlatStorageCheckpointer"], [104, 0, 1, "", "H5StorageCheckpointer"], [105, 0, 1, "", "ImmutableDatasetWriter"], [106, 0, 1, "", "LazyMemmapStorage"], [107, 0, 1, "", "LazyStackStorage"], [108, 0, 1, "", "LazyTensorStorage"], [109, 0, 1, "", "ListStorage"], [110, 0, 1, "", "ListStorageCheckpointer"], [111, 0, 1, "", "NestedStorageCheckpointer"], [112, 0, 1, "", "PrioritizedSampler"], [113, 0, 1, "", "PrioritizedSliceSampler"], [114, 0, 1, "", "RandomSampler"], [115, 0, 1, "", "ReplayBufferEnsemble"], [116, 0, 1, "", "RoundRobinWriter"], [117, 0, 1, "", "Sampler"], [118, 0, 1, "", "SamplerEnsemble"], [119, 0, 1, "", "SamplerWithoutReplacement"], [120, 0, 1, "", "SliceSampler"], [121, 0, 1, "", "SliceSamplerWithoutReplacement"], [122, 0, 1, "", "Storage"], [123, 0, 1, "", "StorageCheckpointerBase"], [124, 0, 1, "", "StorageEnsemble"], [125, 0, 1, "", "StorageEnsembleCheckpointer"], [126, 0, 1, "", "TensorDictMaxValueWriter"], [127, 0, 1, "", "TensorDictRoundRobinWriter"], [128, 0, 1, "", "TensorStorage"], [129, 0, 1, "", "TensorStorageCheckpointer"], [130, 0, 1, "", "Writer"], [131, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[105, 1, 1, "", "add"], [105, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[106, 1, 1, "", "attach"], [106, 1, 1, "", "dump"], [106, 1, 1, "", "load"], [106, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[107, 1, 1, "", "attach"], [107, 1, 1, "", "dump"], [107, 1, 1, "", "load"], [107, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[108, 1, 1, "", "attach"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "load"], [108, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[109, 1, 1, "", "attach"], [109, 1, 1, "", "dump"], [109, 1, 1, "", "load"], [109, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[112, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[113, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[115, 1, 1, "", "add"], [115, 1, 1, "", "append_transform"], [115, 1, 1, "", "as_remote"], [115, 2, 1, "", "batch_size"], [115, 1, 1, "", "dump"], [115, 1, 1, "", "dumps"], [115, 1, 1, "", "empty"], [115, 1, 1, "", "extend"], [115, 1, 1, "", "insert_transform"], [115, 1, 1, "", "load"], [115, 1, 1, "", "loads"], [115, 1, 1, "", "next"], [115, 1, 1, "", "register_load_hook"], [115, 1, 1, "", "register_save_hook"], [115, 1, 1, "", "sample"], [115, 2, 1, "", "sampler"], [115, 1, 1, "", "save"], [115, 1, 1, "", "set_sampler"], [115, 1, 1, "", "set_storage"], [115, 1, 1, "", "set_writer"], [115, 2, 1, "", "storage"], [115, 2, 1, "", "write_count"], [115, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[116, 1, 1, "", "add"], [116, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[122, 1, 1, "", "attach"], [122, 1, 1, "", "dump"], [122, 1, 1, "", "load"], [122, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[124, 1, 1, "", "attach"], [124, 1, 1, "", "dump"], [124, 1, 1, "", "load"], [124, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[126, 1, 1, "", "add"], [126, 1, 1, "", "extend"], [126, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[127, 1, 1, "", "add"], [127, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[128, 1, 1, "", "attach"], [128, 1, 1, "", "dump"], [128, 1, 1, "", "load"], [128, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[130, 1, 1, "", "add"], [130, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[131, 1, 1, "", "add"], [131, 1, 1, "", "extend"]], "torchrl.envs": [[132, 0, 1, "", "AsyncEnvPool"], [133, 3, 1, "", "BraxEnv"], [134, 3, 1, "", "BraxWrapper"], [135, 0, 1, "", "ChessEnv"], [136, 3, 1, "", "DMControlEnv"], [137, 3, 1, "", "DMControlWrapper"], [138, 0, 1, "", "EnvBase"], [139, 0, 1, "", "EnvCreator"], [140, 0, 1, "", "EnvMetaData"], [141, 3, 1, "", "GymEnv"], [142, 0, 1, "", "GymLikeEnv"], [143, 3, 1, "", "GymWrapper"], [144, 3, 1, "", "HabitatEnv"], [145, 3, 1, "", "IsaacGymEnv"], [146, 3, 1, "", "IsaacGymWrapper"], [147, 3, 1, "", "IsaacLabWrapper"], [148, 3, 1, "", "JumanjiEnv"], [149, 3, 1, "", "JumanjiWrapper"], [150, 0, 1, "", "LLMHashingEnv"], [151, 3, 1, "", "MOGymEnv"], [152, 3, 1, "", "MOGymWrapper"], [153, 3, 1, "", "MarlGroupMapType"], [154, 3, 1, "", "MeltingpotEnv"], [155, 3, 1, "", "MeltingpotWrapper"], [156, 3, 1, "", "ModelBasedEnvBase"], [157, 3, 1, "", "MultiThreadedEnv"], [158, 3, 1, "", "MultiThreadedEnvWrapper"], [159, 3, 1, "", "OpenMLEnv"], [160, 3, 1, "", "OpenSpielEnv"], [161, 3, 1, "", "OpenSpielWrapper"], [162, 0, 1, "", "ParallelEnv"], [163, 0, 1, "", "PendulumEnv"], [164, 3, 1, "", "PettingZooEnv"], [165, 3, 1, "", "PettingZooWrapper"], [166, 0, 1, "", "ProcessorAsyncEnvPool"], [167, 3, 1, "", "RandomPolicy"], [168, 3, 1, "", "RoboHiveEnv"], [169, 3, 1, "", "SMACv2Env"], [170, 3, 1, "", "SMACv2Wrapper"], [171, 0, 1, "", "SerialEnv"], [172, 0, 1, "", "ThreadingAsyncEnvPool"], [173, 0, 1, "", "TicTacToeEnv"], [174, 3, 1, "", "UnityMLAgentsEnv"], [175, 3, 1, "", "UnityMLAgentsWrapper"], [176, 3, 1, "", "VmasEnv"], [177, 3, 1, "", "VmasWrapper"], [178, 3, 1, "", "check_env_specs"], [179, 3, 1, "", "check_marl_grouping"], [180, 3, 1, "", "exploration_type"], [181, 3, 1, "", "get_available_libraries"], [182, 3, 1, "", "gym_backend"], [210, 3, 1, "", "make_composite_from_td"], [156, 1, 1, "", "rand_step"], [213, 3, 1, "", "register_gym_spec_conversion"], [156, 1, 1, "", "reset"], [156, 1, 1, "", "rollout"], [214, 3, 1, "", "set_exploration_type"], [215, 3, 1, "", "set_gym_backend"], [156, 1, 1, "", "set_seed"], [156, 1, 1, "", "step"], [216, 3, 1, "", "step_mdp"], [217, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[132, 2, 1, "", "action_key"], [132, 2, 1, "", "action_keys"], [132, 2, 1, "", "action_spec"], [132, 2, 1, "", "action_spec_unbatched"], [132, 1, 1, "", "add_module"], [132, 1, 1, "", "add_truncated_keys"], [132, 1, 1, "", "all_actions"], [132, 1, 1, "", "any_done"], [132, 1, 1, "", "append_transform"], [132, 1, 1, "", "apply"], [132, 1, 1, "", "auto_specs_"], [132, 2, 1, "", "batch_dims"], [132, 2, 1, "", "batch_locked"], [132, 2, 1, "", "batch_size"], [132, 1, 1, "", "bfloat16"], [132, 1, 1, "", "buffers"], [132, 1, 1, "", "cardinality"], [132, 1, 1, "", "check_env_specs"], [132, 1, 1, "", "children"], [132, 2, 1, "", "collector"], [132, 1, 1, "", "compile"], [132, 1, 1, "", "cpu"], [132, 1, 1, "", "cuda"], [132, 2, 1, "", "done_key"], [132, 2, 1, "", "done_keys"], [132, 2, 1, "", "done_keys_groups"], [132, 2, 1, "", "done_spec"], [132, 2, 1, "", "done_spec_unbatched"], [132, 1, 1, "", "double"], [132, 1, 1, "", "empty_cache"], [132, 2, 1, "", "env_batch_sizes"], [132, 1, 1, "", "eval"], [132, 1, 1, "", "extra_repr"], [132, 1, 1, "", "fake_tensordict"], [132, 1, 1, "", "float"], [132, 1, 1, "", "forward"], [132, 2, 1, "", "full_action_spec"], [132, 2, 1, "", "full_action_spec_unbatched"], [132, 2, 1, "", "full_done_spec"], [132, 2, 1, "", "full_done_spec_unbatched"], [132, 2, 1, "", "full_observation_spec_unbatched"], [132, 2, 1, "", "full_reward_spec"], [132, 2, 1, "", "full_reward_spec_unbatched"], [132, 2, 1, "", "full_state_spec"], [132, 2, 1, "", "full_state_spec_unbatched"], [132, 1, 1, "", "get_buffer"], [132, 1, 1, "", "get_extra_state"], [132, 1, 1, "", "get_parameter"], [132, 1, 1, "", "get_submodule"], [132, 1, 1, "", "half"], [132, 2, 1, "", "input_spec"], [132, 2, 1, "", "input_spec_unbatched"], [132, 1, 1, "", "ipu"], [132, 2, 1, "", "is_spec_locked"], [132, 1, 1, "", "load_state_dict"], [132, 1, 1, "", "maybe_reset"], [132, 1, 1, "", "modules"], [132, 1, 1, "", "mtia"], [132, 1, 1, "", "named_buffers"], [132, 1, 1, "", "named_children"], [132, 1, 1, "", "named_modules"], [132, 1, 1, "", "named_parameters"], [132, 2, 1, "", "observation_keys"], [132, 2, 1, "", "observation_spec"], [132, 2, 1, "", "observation_spec_unbatched"], [132, 2, 1, "", "output_spec"], [132, 2, 1, "", "output_spec_unbatched"], [132, 1, 1, "", "parameters"], [132, 1, 1, "", "rand_action"], [132, 1, 1, "", "rand_step"], [132, 1, 1, "", "register_backward_hook"], [132, 1, 1, "", "register_buffer"], [132, 1, 1, "", "register_collector"], [132, 1, 1, "", "register_forward_hook"], [132, 1, 1, "", "register_forward_pre_hook"], [132, 1, 1, "", "register_full_backward_hook"], [132, 1, 1, "", "register_full_backward_pre_hook"], [132, 1, 1, "", "register_gym"], [132, 1, 1, "", "register_load_state_dict_post_hook"], [132, 1, 1, "", "register_load_state_dict_pre_hook"], [132, 1, 1, "", "register_module"], [132, 1, 1, "", "register_parameter"], [132, 1, 1, "", "register_state_dict_post_hook"], [132, 1, 1, "", "register_state_dict_pre_hook"], [132, 1, 1, "", "requires_grad_"], [132, 1, 1, "", "reset"], [132, 2, 1, "", "reset_keys"], [132, 2, 1, "", "reward_key"], [132, 2, 1, "", "reward_keys"], [132, 2, 1, "", "reward_spec"], [132, 2, 1, "", "reward_spec_unbatched"], [132, 1, 1, "", "rollout"], [132, 1, 1, "", "set_extra_state"], [132, 1, 1, "", "set_seed"], [132, 1, 1, "", "set_spec_lock_"], [132, 1, 1, "", "set_submodule"], [132, 2, 1, "", "shape"], [132, 1, 1, "", "share_memory"], [132, 2, 1, "", "specs"], [132, 1, 1, "", "state_dict"], [132, 2, 1, "", "state_keys"], [132, 2, 1, "", "state_spec"], [132, 2, 1, "", "state_spec_unbatched"], [132, 1, 1, "", "step"], [132, 1, 1, "", "step_and_maybe_reset"], [132, 1, 1, "", "step_mdp"], [132, 1, 1, "", "to"], [132, 1, 1, "", "to_empty"], [132, 1, 1, "", "train"], [132, 1, 1, "", "type"], [132, 1, 1, "", "xpu"], [132, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[135, 2, 1, "", "action_key"], [135, 2, 1, "", "action_keys"], [135, 2, 1, "", "action_spec"], [135, 2, 1, "", "action_spec_unbatched"], [135, 1, 1, "", "add_module"], [135, 1, 1, "", "add_truncated_keys"], [135, 1, 1, "", "all_actions"], [135, 1, 1, "", "any_done"], [135, 1, 1, "", "append_transform"], [135, 1, 1, "", "apply"], [135, 1, 1, "", "auto_specs_"], [135, 2, 1, "", "batch_dims"], [135, 2, 1, "", "batch_locked"], [135, 2, 1, "", "batch_size"], [135, 1, 1, "", "bfloat16"], [135, 1, 1, "", "buffers"], [135, 1, 1, "", "cardinality"], [135, 1, 1, "", "check_env_specs"], [135, 1, 1, "", "children"], [135, 2, 1, "", "collector"], [135, 1, 1, "", "compile"], [135, 1, 1, "", "cpu"], [135, 1, 1, "", "cuda"], [135, 2, 1, "", "done_key"], [135, 2, 1, "", "done_keys"], [135, 2, 1, "", "done_keys_groups"], [135, 2, 1, "", "done_spec"], [135, 2, 1, "", "done_spec_unbatched"], [135, 1, 1, "", "double"], [135, 1, 1, "", "empty_cache"], [135, 1, 1, "", "eval"], [135, 1, 1, "", "extra_repr"], [135, 1, 1, "", "fake_tensordict"], [135, 1, 1, "", "float"], [135, 1, 1, "", "forward"], [135, 2, 1, "", "full_action_spec"], [135, 2, 1, "", "full_action_spec_unbatched"], [135, 2, 1, "", "full_done_spec"], [135, 2, 1, "", "full_done_spec_unbatched"], [135, 2, 1, "", "full_observation_spec_unbatched"], [135, 2, 1, "", "full_reward_spec"], [135, 2, 1, "", "full_reward_spec_unbatched"], [135, 2, 1, "", "full_state_spec"], [135, 2, 1, "", "full_state_spec_unbatched"], [135, 1, 1, "", "get_buffer"], [135, 1, 1, "", "get_extra_state"], [135, 1, 1, "", "get_legal_moves"], [135, 1, 1, "", "get_parameter"], [135, 1, 1, "", "get_submodule"], [135, 1, 1, "", "half"], [135, 2, 1, "", "input_spec"], [135, 2, 1, "", "input_spec_unbatched"], [135, 1, 1, "", "ipu"], [135, 2, 1, "", "is_spec_locked"], [135, 1, 1, "", "load_state_dict"], [135, 1, 1, "", "maybe_reset"], [135, 1, 1, "", "modules"], [135, 1, 1, "", "mtia"], [135, 1, 1, "", "named_buffers"], [135, 1, 1, "", "named_children"], [135, 1, 1, "", "named_modules"], [135, 1, 1, "", "named_parameters"], [135, 2, 1, "", "observation_keys"], [135, 2, 1, "", "observation_spec"], [135, 2, 1, "", "observation_spec_unbatched"], [135, 2, 1, "", "output_spec"], [135, 2, 1, "", "output_spec_unbatched"], [135, 1, 1, "", "parameters"], [135, 1, 1, "", "rand_action"], [135, 1, 1, "", "rand_step"], [135, 1, 1, "", "register_backward_hook"], [135, 1, 1, "", "register_buffer"], [135, 1, 1, "", "register_collector"], [135, 1, 1, "", "register_forward_hook"], [135, 1, 1, "", "register_forward_pre_hook"], [135, 1, 1, "", "register_full_backward_hook"], [135, 1, 1, "", "register_full_backward_pre_hook"], [135, 1, 1, "", "register_gym"], [135, 1, 1, "", "register_load_state_dict_post_hook"], [135, 1, 1, "", "register_load_state_dict_pre_hook"], [135, 1, 1, "", "register_module"], [135, 1, 1, "", "register_parameter"], [135, 1, 1, "", "register_state_dict_post_hook"], [135, 1, 1, "", "register_state_dict_pre_hook"], [135, 1, 1, "", "requires_grad_"], [135, 1, 1, "", "reset"], [135, 2, 1, "", "reset_keys"], [135, 2, 1, "", "reward_key"], [135, 2, 1, "", "reward_keys"], [135, 2, 1, "", "reward_spec"], [135, 2, 1, "", "reward_spec_unbatched"], [135, 1, 1, "", "rollout"], [135, 1, 1, "", "set_extra_state"], [135, 1, 1, "", "set_seed"], [135, 1, 1, "", "set_spec_lock_"], [135, 1, 1, "", "set_submodule"], [135, 2, 1, "", "shape"], [135, 1, 1, "", "share_memory"], [135, 2, 1, "", "specs"], [135, 1, 1, "", "state_dict"], [135, 2, 1, "", "state_keys"], [135, 2, 1, "", "state_spec"], [135, 2, 1, "", "state_spec_unbatched"], [135, 1, 1, "", "step"], [135, 1, 1, "", "step_and_maybe_reset"], [135, 1, 1, "", "step_mdp"], [135, 1, 1, "", "to"], [135, 1, 1, "", "to_empty"], [135, 1, 1, "", "train"], [135, 1, 1, "", "type"], [135, 1, 1, "", "xpu"], [135, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[138, 2, 1, "", "action_key"], [138, 2, 1, "", "action_keys"], [138, 2, 1, "", "action_spec"], [138, 2, 1, "", "action_spec_unbatched"], [138, 1, 1, "", "add_module"], [138, 1, 1, "", "add_truncated_keys"], [138, 1, 1, "", "all_actions"], [138, 1, 1, "", "any_done"], [138, 1, 1, "", "append_transform"], [138, 1, 1, "", "apply"], [138, 1, 1, "", "auto_specs_"], [138, 2, 1, "", "batch_dims"], [138, 2, 1, "", "batch_locked"], [138, 2, 1, "", "batch_size"], [138, 1, 1, "", "bfloat16"], [138, 1, 1, "", "buffers"], [138, 1, 1, "", "cardinality"], [138, 1, 1, "", "check_env_specs"], [138, 1, 1, "", "children"], [138, 2, 1, "", "collector"], [138, 1, 1, "", "compile"], [138, 1, 1, "", "cpu"], [138, 1, 1, "", "cuda"], [138, 2, 1, "", "done_key"], [138, 2, 1, "", "done_keys"], [138, 2, 1, "", "done_keys_groups"], [138, 2, 1, "", "done_spec"], [138, 2, 1, "", "done_spec_unbatched"], [138, 1, 1, "", "double"], [138, 1, 1, "", "empty_cache"], [138, 1, 1, "", "eval"], [138, 1, 1, "", "extra_repr"], [138, 1, 1, "", "fake_tensordict"], [138, 1, 1, "", "float"], [138, 1, 1, "", "forward"], [138, 2, 1, "", "full_action_spec"], [138, 2, 1, "", "full_action_spec_unbatched"], [138, 2, 1, "", "full_done_spec"], [138, 2, 1, "", "full_done_spec_unbatched"], [138, 2, 1, "", "full_observation_spec_unbatched"], [138, 2, 1, "", "full_reward_spec"], [138, 2, 1, "", "full_reward_spec_unbatched"], [138, 2, 1, "", "full_state_spec"], [138, 2, 1, "", "full_state_spec_unbatched"], [138, 1, 1, "", "get_buffer"], [138, 1, 1, "", "get_extra_state"], [138, 1, 1, "", "get_parameter"], [138, 1, 1, "", "get_submodule"], [138, 1, 1, "", "half"], [138, 2, 1, "", "input_spec"], [138, 2, 1, "", "input_spec_unbatched"], [138, 1, 1, "", "ipu"], [138, 2, 1, "", "is_spec_locked"], [138, 1, 1, "", "load_state_dict"], [138, 1, 1, "", "maybe_reset"], [138, 1, 1, "", "modules"], [138, 1, 1, "", "mtia"], [138, 1, 1, "", "named_buffers"], [138, 1, 1, "", "named_children"], [138, 1, 1, "", "named_modules"], [138, 1, 1, "", "named_parameters"], [138, 2, 1, "", "observation_keys"], [138, 2, 1, "", "observation_spec"], [138, 2, 1, "", "observation_spec_unbatched"], [138, 2, 1, "", "output_spec"], [138, 2, 1, "", "output_spec_unbatched"], [138, 1, 1, "", "parameters"], [138, 1, 1, "", "rand_action"], [138, 1, 1, "id0", "rand_step"], [138, 1, 1, "", "register_backward_hook"], [138, 1, 1, "", "register_buffer"], [138, 1, 1, "", "register_collector"], [138, 1, 1, "", "register_forward_hook"], [138, 1, 1, "", "register_forward_pre_hook"], [138, 1, 1, "", "register_full_backward_hook"], [138, 1, 1, "", "register_full_backward_pre_hook"], [138, 1, 1, "", "register_gym"], [138, 1, 1, "", "register_load_state_dict_post_hook"], [138, 1, 1, "", "register_load_state_dict_pre_hook"], [138, 1, 1, "", "register_module"], [138, 1, 1, "", "register_parameter"], [138, 1, 1, "", "register_state_dict_post_hook"], [138, 1, 1, "", "register_state_dict_pre_hook"], [138, 1, 1, "", "requires_grad_"], [138, 1, 1, "id1", "reset"], [138, 2, 1, "", "reset_keys"], [138, 2, 1, "", "reward_key"], [138, 2, 1, "", "reward_keys"], [138, 2, 1, "", "reward_spec"], [138, 2, 1, "", "reward_spec_unbatched"], [138, 1, 1, "id2", "rollout"], [138, 1, 1, "", "set_extra_state"], [138, 1, 1, "id3", "set_seed"], [138, 1, 1, "", "set_spec_lock_"], [138, 1, 1, "", "set_submodule"], [138, 2, 1, "", "shape"], [138, 1, 1, "", "share_memory"], [138, 2, 1, "", "specs"], [138, 1, 1, "", "state_dict"], [138, 2, 1, "", "state_keys"], [138, 2, 1, "", "state_spec"], [138, 2, 1, "", "state_spec_unbatched"], [138, 1, 1, "id4", "step"], [138, 1, 1, "", "step_and_maybe_reset"], [138, 1, 1, "", "step_mdp"], [138, 1, 1, "", "to"], [138, 1, 1, "", "to_empty"], [138, 1, 1, "", "train"], [138, 1, 1, "", "type"], [138, 1, 1, "", "xpu"], [138, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[139, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[142, 2, 1, "", "action_key"], [142, 2, 1, "", "action_keys"], [142, 2, 1, "", "action_spec"], [142, 2, 1, "", "action_spec_unbatched"], [142, 1, 1, "", "add_module"], [142, 1, 1, "", "add_truncated_keys"], [142, 1, 1, "", "all_actions"], [142, 1, 1, "", "any_done"], [142, 1, 1, "", "append_transform"], [142, 1, 1, "", "apply"], [142, 1, 1, "", "auto_register_info_dict"], [142, 1, 1, "", "auto_specs_"], [142, 2, 1, "", "batch_dims"], [142, 2, 1, "", "batch_locked"], [142, 2, 1, "", "batch_size"], [142, 1, 1, "", "bfloat16"], [142, 1, 1, "", "buffers"], [142, 1, 1, "", "cardinality"], [142, 1, 1, "", "check_env_specs"], [142, 1, 1, "", "children"], [142, 1, 1, "", "close"], [142, 2, 1, "", "collector"], [142, 1, 1, "", "compile"], [142, 1, 1, "", "cpu"], [142, 1, 1, "", "cuda"], [142, 2, 1, "", "done_key"], [142, 2, 1, "", "done_keys"], [142, 2, 1, "", "done_keys_groups"], [142, 2, 1, "", "done_spec"], [142, 2, 1, "", "done_spec_unbatched"], [142, 1, 1, "", "double"], [142, 1, 1, "", "empty_cache"], [142, 1, 1, "", "eval"], [142, 1, 1, "", "extra_repr"], [142, 1, 1, "", "fake_tensordict"], [142, 1, 1, "", "fast_encoding"], [142, 1, 1, "", "float"], [142, 1, 1, "", "forward"], [142, 2, 1, "", "full_action_spec"], [142, 2, 1, "", "full_action_spec_unbatched"], [142, 2, 1, "", "full_done_spec"], [142, 2, 1, "", "full_done_spec_unbatched"], [142, 2, 1, "", "full_observation_spec_unbatched"], [142, 2, 1, "", "full_reward_spec"], [142, 2, 1, "", "full_reward_spec_unbatched"], [142, 2, 1, "", "full_state_spec"], [142, 2, 1, "", "full_state_spec_unbatched"], [142, 1, 1, "", "get_buffer"], [142, 1, 1, "", "get_extra_state"], [142, 1, 1, "", "get_parameter"], [142, 1, 1, "", "get_submodule"], [142, 1, 1, "", "half"], [142, 2, 1, "", "input_spec"], [142, 2, 1, "", "input_spec_unbatched"], [142, 1, 1, "", "ipu"], [142, 2, 1, "", "is_spec_locked"], [142, 1, 1, "", "load_state_dict"], [142, 1, 1, "", "maybe_reset"], [142, 1, 1, "", "modules"], [142, 1, 1, "", "mtia"], [142, 1, 1, "", "named_buffers"], [142, 1, 1, "", "named_children"], [142, 1, 1, "", "named_modules"], [142, 1, 1, "", "named_parameters"], [142, 2, 1, "", "observation_keys"], [142, 2, 1, "", "observation_spec"], [142, 2, 1, "", "observation_spec_unbatched"], [142, 2, 1, "", "output_spec"], [142, 2, 1, "", "output_spec_unbatched"], [142, 1, 1, "", "parameters"], [142, 1, 1, "", "rand_action"], [142, 1, 1, "", "rand_step"], [142, 1, 1, "", "read_action"], [142, 1, 1, "", "read_done"], [142, 1, 1, "", "read_obs"], [142, 1, 1, "", "read_reward"], [142, 1, 1, "", "register_backward_hook"], [142, 1, 1, "", "register_buffer"], [142, 1, 1, "", "register_collector"], [142, 1, 1, "", "register_forward_hook"], [142, 1, 1, "", "register_forward_pre_hook"], [142, 1, 1, "", "register_full_backward_hook"], [142, 1, 1, "", "register_full_backward_pre_hook"], [142, 1, 1, "", "register_gym"], [142, 1, 1, "", "register_load_state_dict_post_hook"], [142, 1, 1, "", "register_load_state_dict_pre_hook"], [142, 1, 1, "", "register_module"], [142, 1, 1, "", "register_parameter"], [142, 1, 1, "", "register_state_dict_post_hook"], [142, 1, 1, "", "register_state_dict_pre_hook"], [142, 1, 1, "", "requires_grad_"], [142, 1, 1, "", "reset"], [142, 2, 1, "", "reset_keys"], [142, 2, 1, "", "reward_key"], [142, 2, 1, "", "reward_keys"], [142, 2, 1, "", "reward_spec"], [142, 2, 1, "", "reward_spec_unbatched"], [142, 1, 1, "", "rollout"], [142, 1, 1, "", "set_extra_state"], [142, 1, 1, "", "set_info_dict_reader"], [142, 1, 1, "", "set_seed"], [142, 1, 1, "", "set_spec_lock_"], [142, 1, 1, "", "set_submodule"], [142, 2, 1, "", "shape"], [142, 1, 1, "", "share_memory"], [142, 2, 1, "", "specs"], [142, 1, 1, "", "state_dict"], [142, 2, 1, "", "state_keys"], [142, 2, 1, "", "state_spec"], [142, 2, 1, "", "state_spec_unbatched"], [142, 1, 1, "", "step"], [142, 1, 1, "", "step_and_maybe_reset"], [142, 1, 1, "", "step_mdp"], [142, 1, 1, "", "to"], [142, 1, 1, "", "to_empty"], [142, 1, 1, "", "train"], [142, 1, 1, "", "type"], [142, 1, 1, "", "xpu"], [142, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[150, 2, 1, "", "action_key"], [150, 2, 1, "", "action_keys"], [150, 2, 1, "", "action_spec"], [150, 2, 1, "", "action_spec_unbatched"], [150, 1, 1, "", "add_module"], [150, 1, 1, "", "add_truncated_keys"], [150, 1, 1, "", "all_actions"], [150, 1, 1, "", "any_done"], [150, 1, 1, "", "append_transform"], [150, 1, 1, "", "apply"], [150, 1, 1, "", "auto_specs_"], [150, 2, 1, "", "batch_dims"], [150, 2, 1, "", "batch_locked"], [150, 2, 1, "", "batch_size"], [150, 1, 1, "", "bfloat16"], [150, 1, 1, "", "buffers"], [150, 1, 1, "", "cardinality"], [150, 1, 1, "", "check_env_specs"], [150, 1, 1, "", "children"], [150, 2, 1, "", "collector"], [150, 1, 1, "", "compile"], [150, 1, 1, "", "cpu"], [150, 1, 1, "", "cuda"], [150, 2, 1, "", "done_key"], [150, 2, 1, "", "done_keys"], [150, 2, 1, "", "done_keys_groups"], [150, 2, 1, "", "done_spec"], [150, 2, 1, "", "done_spec_unbatched"], [150, 1, 1, "", "double"], [150, 1, 1, "", "empty_cache"], [150, 1, 1, "", "eval"], [150, 1, 1, "", "extra_repr"], [150, 1, 1, "", "fake_tensordict"], [150, 1, 1, "", "float"], [150, 1, 1, "", "forward"], [150, 2, 1, "", "full_action_spec"], [150, 2, 1, "", "full_action_spec_unbatched"], [150, 2, 1, "", "full_done_spec"], [150, 2, 1, "", "full_done_spec_unbatched"], [150, 2, 1, "", "full_observation_spec_unbatched"], [150, 2, 1, "", "full_reward_spec"], [150, 2, 1, "", "full_reward_spec_unbatched"], [150, 2, 1, "", "full_state_spec"], [150, 2, 1, "", "full_state_spec_unbatched"], [150, 1, 1, "", "get_buffer"], [150, 1, 1, "", "get_extra_state"], [150, 1, 1, "", "get_parameter"], [150, 1, 1, "", "get_submodule"], [150, 1, 1, "", "half"], [150, 2, 1, "", "input_spec"], [150, 2, 1, "", "input_spec_unbatched"], [150, 1, 1, "", "ipu"], [150, 2, 1, "", "is_spec_locked"], [150, 1, 1, "", "load_state_dict"], [150, 1, 1, "", "make_tensordict"], [150, 1, 1, "", "maybe_reset"], [150, 1, 1, "", "modules"], [150, 1, 1, "", "mtia"], [150, 1, 1, "", "named_buffers"], [150, 1, 1, "", "named_children"], [150, 1, 1, "", "named_modules"], [150, 1, 1, "", "named_parameters"], [150, 2, 1, "", "observation_keys"], [150, 2, 1, "", "observation_spec"], [150, 2, 1, "", "observation_spec_unbatched"], [150, 2, 1, "", "output_spec"], [150, 2, 1, "", "output_spec_unbatched"], [150, 1, 1, "", "parameters"], [150, 1, 1, "", "rand_action"], [150, 1, 1, "", "rand_step"], [150, 1, 1, "", "register_backward_hook"], [150, 1, 1, "", "register_buffer"], [150, 1, 1, "", "register_collector"], [150, 1, 1, "", "register_forward_hook"], [150, 1, 1, "", "register_forward_pre_hook"], [150, 1, 1, "", "register_full_backward_hook"], [150, 1, 1, "", "register_full_backward_pre_hook"], [150, 1, 1, "", "register_gym"], [150, 1, 1, "", "register_load_state_dict_post_hook"], [150, 1, 1, "", "register_load_state_dict_pre_hook"], [150, 1, 1, "", "register_module"], [150, 1, 1, "", "register_parameter"], [150, 1, 1, "", "register_state_dict_post_hook"], [150, 1, 1, "", "register_state_dict_pre_hook"], [150, 1, 1, "", "requires_grad_"], [150, 1, 1, "", "reset"], [150, 2, 1, "", "reset_keys"], [150, 2, 1, "", "reward_key"], [150, 2, 1, "", "reward_keys"], [150, 2, 1, "", "reward_spec"], [150, 2, 1, "", "reward_spec_unbatched"], [150, 1, 1, "", "rollout"], [150, 1, 1, "", "set_extra_state"], [150, 1, 1, "", "set_seed"], [150, 1, 1, "", "set_spec_lock_"], [150, 1, 1, "", "set_submodule"], [150, 2, 1, "", "shape"], [150, 1, 1, "", "share_memory"], [150, 2, 1, "", "specs"], [150, 1, 1, "", "state_dict"], [150, 2, 1, "", "state_keys"], [150, 2, 1, "", "state_spec"], [150, 2, 1, "", "state_spec_unbatched"], [150, 1, 1, "", "step"], [150, 1, 1, "", "step_and_maybe_reset"], [150, 1, 1, "", "step_mdp"], [150, 1, 1, "", "to"], [150, 1, 1, "", "to_empty"], [150, 1, 1, "", "train"], [150, 1, 1, "", "type"], [150, 1, 1, "", "xpu"], [150, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[162, 2, 1, "", "action_key"], [162, 2, 1, "", "action_keys"], [162, 2, 1, "", "action_spec"], [162, 2, 1, "", "action_spec_unbatched"], [162, 1, 1, "", "add_module"], [162, 1, 1, "", "add_truncated_keys"], [162, 1, 1, "", "all_actions"], [162, 1, 1, "", "any_done"], [162, 1, 1, "", "append_transform"], [162, 1, 1, "", "apply"], [162, 1, 1, "", "auto_specs_"], [162, 2, 1, "", "batch_dims"], [162, 2, 1, "", "batch_locked"], [162, 2, 1, "", "batch_size"], [162, 1, 1, "", "bfloat16"], [162, 1, 1, "", "buffers"], [162, 1, 1, "", "cardinality"], [162, 1, 1, "", "check_env_specs"], [162, 1, 1, "", "children"], [162, 2, 1, "", "collector"], [162, 1, 1, "", "compile"], [162, 1, 1, "", "cpu"], [162, 1, 1, "", "cuda"], [162, 2, 1, "", "done_key"], [162, 2, 1, "", "done_keys"], [162, 2, 1, "", "done_keys_groups"], [162, 2, 1, "", "done_spec"], [162, 2, 1, "", "done_spec_unbatched"], [162, 1, 1, "", "double"], [162, 1, 1, "", "empty_cache"], [162, 1, 1, "", "eval"], [162, 1, 1, "", "extra_repr"], [162, 1, 1, "", "fake_tensordict"], [162, 1, 1, "", "float"], [162, 1, 1, "", "forward"], [162, 2, 1, "", "full_action_spec"], [162, 2, 1, "", "full_action_spec_unbatched"], [162, 2, 1, "", "full_done_spec"], [162, 2, 1, "", "full_done_spec_unbatched"], [162, 2, 1, "", "full_observation_spec_unbatched"], [162, 2, 1, "", "full_reward_spec"], [162, 2, 1, "", "full_reward_spec_unbatched"], [162, 2, 1, "", "full_state_spec"], [162, 2, 1, "", "full_state_spec_unbatched"], [162, 1, 1, "", "get_buffer"], [162, 1, 1, "", "get_extra_state"], [162, 1, 1, "", "get_parameter"], [162, 1, 1, "", "get_submodule"], [162, 1, 1, "", "half"], [162, 2, 1, "", "input_spec"], [162, 2, 1, "", "input_spec_unbatched"], [162, 1, 1, "", "ipu"], [162, 2, 1, "", "is_spec_locked"], [162, 1, 1, "", "load_state_dict"], [162, 1, 1, "", "maybe_reset"], [162, 1, 1, "", "modules"], [162, 1, 1, "", "mtia"], [162, 1, 1, "", "named_buffers"], [162, 1, 1, "", "named_children"], [162, 1, 1, "", "named_modules"], [162, 1, 1, "", "named_parameters"], [162, 2, 1, "", "observation_keys"], [162, 2, 1, "", "observation_spec"], [162, 2, 1, "", "observation_spec_unbatched"], [162, 2, 1, "", "output_spec"], [162, 2, 1, "", "output_spec_unbatched"], [162, 1, 1, "", "parameters"], [162, 1, 1, "", "rand_action"], [162, 1, 1, "", "rand_step"], [162, 1, 1, "", "register_backward_hook"], [162, 1, 1, "", "register_buffer"], [162, 1, 1, "", "register_collector"], [162, 1, 1, "", "register_forward_hook"], [162, 1, 1, "", "register_forward_pre_hook"], [162, 1, 1, "", "register_full_backward_hook"], [162, 1, 1, "", "register_full_backward_pre_hook"], [162, 1, 1, "", "register_gym"], [162, 1, 1, "", "register_load_state_dict_post_hook"], [162, 1, 1, "", "register_load_state_dict_pre_hook"], [162, 1, 1, "", "register_module"], [162, 1, 1, "", "register_parameter"], [162, 1, 1, "", "register_state_dict_post_hook"], [162, 1, 1, "", "register_state_dict_pre_hook"], [162, 1, 1, "", "requires_grad_"], [162, 1, 1, "", "reset"], [162, 2, 1, "", "reset_keys"], [162, 2, 1, "", "reward_key"], [162, 2, 1, "", "reward_keys"], [162, 2, 1, "", "reward_spec"], [162, 2, 1, "", "reward_spec_unbatched"], [162, 1, 1, "", "rollout"], [162, 1, 1, "", "set_extra_state"], [162, 1, 1, "", "set_seed"], [162, 1, 1, "", "set_spec_lock_"], [162, 1, 1, "", "set_submodule"], [162, 2, 1, "", "shape"], [162, 1, 1, "", "share_memory"], [162, 2, 1, "", "specs"], [162, 1, 1, "", "state_dict"], [162, 2, 1, "", "state_keys"], [162, 2, 1, "", "state_spec"], [162, 2, 1, "", "state_spec_unbatched"], [162, 1, 1, "", "step"], [162, 1, 1, "", "step_and_maybe_reset"], [162, 1, 1, "", "step_mdp"], [162, 1, 1, "", "to"], [162, 1, 1, "", "to_empty"], [162, 1, 1, "", "train"], [162, 1, 1, "", "type"], [162, 1, 1, "", "update_kwargs"], [162, 1, 1, "", "xpu"], [162, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[163, 2, 1, "", "action_key"], [163, 2, 1, "", "action_keys"], [163, 2, 1, "", "action_spec"], [163, 2, 1, "", "action_spec_unbatched"], [163, 1, 1, "", "add_module"], [163, 1, 1, "", "add_truncated_keys"], [163, 1, 1, "", "all_actions"], [163, 1, 1, "", "any_done"], [163, 1, 1, "", "append_transform"], [163, 1, 1, "", "apply"], [163, 1, 1, "", "auto_specs_"], [163, 2, 1, "", "batch_dims"], [163, 2, 1, "", "batch_size"], [163, 1, 1, "", "bfloat16"], [163, 1, 1, "", "buffers"], [163, 1, 1, "", "cardinality"], [163, 1, 1, "", "check_env_specs"], [163, 1, 1, "", "children"], [163, 2, 1, "", "collector"], [163, 1, 1, "", "compile"], [163, 1, 1, "", "cpu"], [163, 1, 1, "", "cuda"], [163, 2, 1, "", "done_key"], [163, 2, 1, "", "done_keys"], [163, 2, 1, "", "done_keys_groups"], [163, 2, 1, "", "done_spec"], [163, 2, 1, "", "done_spec_unbatched"], [163, 1, 1, "", "double"], [163, 1, 1, "", "empty_cache"], [163, 1, 1, "", "eval"], [163, 1, 1, "", "extra_repr"], [163, 1, 1, "", "fake_tensordict"], [163, 1, 1, "", "float"], [163, 1, 1, "", "forward"], [163, 2, 1, "", "full_action_spec"], [163, 2, 1, "", "full_action_spec_unbatched"], [163, 2, 1, "", "full_done_spec"], [163, 2, 1, "", "full_done_spec_unbatched"], [163, 2, 1, "", "full_observation_spec_unbatched"], [163, 2, 1, "", "full_reward_spec"], [163, 2, 1, "", "full_reward_spec_unbatched"], [163, 2, 1, "", "full_state_spec"], [163, 2, 1, "", "full_state_spec_unbatched"], [163, 1, 1, "", "gen_params"], [163, 1, 1, "", "get_buffer"], [163, 1, 1, "", "get_extra_state"], [163, 1, 1, "", "get_parameter"], [163, 1, 1, "", "get_submodule"], [163, 1, 1, "", "half"], [163, 2, 1, "", "input_spec"], [163, 2, 1, "", "input_spec_unbatched"], [163, 1, 1, "", "ipu"], [163, 2, 1, "", "is_spec_locked"], [163, 1, 1, "", "load_state_dict"], [163, 1, 1, "", "maybe_reset"], [163, 1, 1, "", "modules"], [163, 1, 1, "", "mtia"], [163, 1, 1, "", "named_buffers"], [163, 1, 1, "", "named_children"], [163, 1, 1, "", "named_modules"], [163, 1, 1, "", "named_parameters"], [163, 2, 1, "", "observation_keys"], [163, 2, 1, "", "observation_spec"], [163, 2, 1, "", "observation_spec_unbatched"], [163, 2, 1, "", "output_spec"], [163, 2, 1, "", "output_spec_unbatched"], [163, 1, 1, "", "parameters"], [163, 1, 1, "", "rand_action"], [163, 1, 1, "", "rand_step"], [163, 1, 1, "", "register_backward_hook"], [163, 1, 1, "", "register_buffer"], [163, 1, 1, "", "register_collector"], [163, 1, 1, "", "register_forward_hook"], [163, 1, 1, "", "register_forward_pre_hook"], [163, 1, 1, "", "register_full_backward_hook"], [163, 1, 1, "", "register_full_backward_pre_hook"], [163, 1, 1, "", "register_gym"], [163, 1, 1, "", "register_load_state_dict_post_hook"], [163, 1, 1, "", "register_load_state_dict_pre_hook"], [163, 1, 1, "", "register_module"], [163, 1, 1, "", "register_parameter"], [163, 1, 1, "", "register_state_dict_post_hook"], [163, 1, 1, "", "register_state_dict_pre_hook"], [163, 1, 1, "", "requires_grad_"], [163, 1, 1, "", "reset"], [163, 2, 1, "", "reset_keys"], [163, 2, 1, "", "reward_key"], [163, 2, 1, "", "reward_keys"], [163, 2, 1, "", "reward_spec"], [163, 2, 1, "", "reward_spec_unbatched"], [163, 1, 1, "", "rollout"], [163, 1, 1, "", "set_extra_state"], [163, 1, 1, "", "set_seed"], [163, 1, 1, "", "set_spec_lock_"], [163, 1, 1, "", "set_submodule"], [163, 2, 1, "", "shape"], [163, 1, 1, "", "share_memory"], [163, 2, 1, "", "specs"], [163, 1, 1, "", "state_dict"], [163, 2, 1, "", "state_keys"], [163, 2, 1, "", "state_spec"], [163, 2, 1, "", "state_spec_unbatched"], [163, 1, 1, "", "step"], [163, 1, 1, "", "step_and_maybe_reset"], [163, 1, 1, "", "step_mdp"], [163, 1, 1, "", "to"], [163, 1, 1, "", "to_empty"], [163, 1, 1, "", "train"], [163, 1, 1, "", "type"], [163, 1, 1, "", "xpu"], [163, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[166, 1, 1, "", "_setup"], [166, 2, 1, "", "action_key"], [166, 2, 1, "", "action_keys"], [166, 2, 1, "", "action_spec"], [166, 2, 1, "", "action_spec_unbatched"], [166, 1, 1, "", "add_module"], [166, 1, 1, "", "add_truncated_keys"], [166, 1, 1, "", "all_actions"], [166, 1, 1, "", "any_done"], [166, 1, 1, "", "append_transform"], [166, 1, 1, "", "apply"], [166, 1, 1, "", "async_reset_recv"], [166, 1, 1, "", "async_reset_send"], [166, 1, 1, "", "async_step_recv"], [166, 1, 1, "", "async_step_send"], [166, 1, 1, "", "auto_specs_"], [166, 2, 1, "", "batch_dims"], [166, 2, 1, "", "batch_locked"], [166, 2, 1, "", "batch_size"], [166, 1, 1, "", "bfloat16"], [166, 1, 1, "", "buffers"], [166, 1, 1, "", "cardinality"], [166, 1, 1, "", "check_env_specs"], [166, 1, 1, "", "children"], [166, 2, 1, "", "collector"], [166, 1, 1, "", "compile"], [166, 1, 1, "", "cpu"], [166, 1, 1, "", "cuda"], [166, 2, 1, "", "done_key"], [166, 2, 1, "", "done_keys"], [166, 2, 1, "", "done_keys_groups"], [166, 2, 1, "", "done_spec"], [166, 2, 1, "", "done_spec_unbatched"], [166, 1, 1, "", "double"], [166, 1, 1, "", "empty_cache"], [166, 2, 1, "", "env_batch_sizes"], [166, 1, 1, "", "eval"], [166, 1, 1, "", "extra_repr"], [166, 1, 1, "", "fake_tensordict"], [166, 1, 1, "", "float"], [166, 1, 1, "", "forward"], [166, 2, 1, "", "full_action_spec"], [166, 2, 1, "", "full_action_spec_unbatched"], [166, 2, 1, "", "full_done_spec"], [166, 2, 1, "", "full_done_spec_unbatched"], [166, 2, 1, "", "full_observation_spec_unbatched"], [166, 2, 1, "", "full_reward_spec"], [166, 2, 1, "", "full_reward_spec_unbatched"], [166, 2, 1, "", "full_state_spec"], [166, 2, 1, "", "full_state_spec_unbatched"], [166, 1, 1, "", "get_buffer"], [166, 1, 1, "", "get_extra_state"], [166, 1, 1, "", "get_parameter"], [166, 1, 1, "", "get_submodule"], [166, 1, 1, "", "half"], [166, 2, 1, "", "input_spec"], [166, 2, 1, "", "input_spec_unbatched"], [166, 1, 1, "", "ipu"], [166, 2, 1, "", "is_spec_locked"], [166, 1, 1, "", "load_state_dict"], [166, 1, 1, "", "maybe_reset"], [166, 1, 1, "", "modules"], [166, 1, 1, "", "mtia"], [166, 1, 1, "", "named_buffers"], [166, 1, 1, "", "named_children"], [166, 1, 1, "", "named_modules"], [166, 1, 1, "", "named_parameters"], [166, 2, 1, "", "observation_keys"], [166, 2, 1, "", "observation_spec"], [166, 2, 1, "", "observation_spec_unbatched"], [166, 2, 1, "", "output_spec"], [166, 2, 1, "", "output_spec_unbatched"], [166, 1, 1, "", "parameters"], [166, 1, 1, "", "rand_action"], [166, 1, 1, "", "rand_step"], [166, 1, 1, "", "register_backward_hook"], [166, 1, 1, "", "register_buffer"], [166, 1, 1, "", "register_collector"], [166, 1, 1, "", "register_forward_hook"], [166, 1, 1, "", "register_forward_pre_hook"], [166, 1, 1, "", "register_full_backward_hook"], [166, 1, 1, "", "register_full_backward_pre_hook"], [166, 1, 1, "", "register_gym"], [166, 1, 1, "", "register_load_state_dict_post_hook"], [166, 1, 1, "", "register_load_state_dict_pre_hook"], [166, 1, 1, "", "register_module"], [166, 1, 1, "", "register_parameter"], [166, 1, 1, "", "register_state_dict_post_hook"], [166, 1, 1, "", "register_state_dict_pre_hook"], [166, 1, 1, "", "requires_grad_"], [166, 1, 1, "", "reset"], [166, 2, 1, "", "reset_keys"], [166, 2, 1, "", "reward_key"], [166, 2, 1, "", "reward_keys"], [166, 2, 1, "", "reward_spec"], [166, 2, 1, "", "reward_spec_unbatched"], [166, 1, 1, "", "rollout"], [166, 1, 1, "", "set_extra_state"], [166, 1, 1, "", "set_seed"], [166, 1, 1, "", "set_spec_lock_"], [166, 1, 1, "", "set_submodule"], [166, 2, 1, "", "shape"], [166, 1, 1, "", "share_memory"], [166, 1, 1, "", "shutdown"], [166, 2, 1, "", "specs"], [166, 1, 1, "", "state_dict"], [166, 2, 1, "", "state_keys"], [166, 2, 1, "", "state_spec"], [166, 2, 1, "", "state_spec_unbatched"], [166, 1, 1, "", "step"], [166, 1, 1, "", "step_and_maybe_reset"], [166, 1, 1, "", "step_mdp"], [166, 1, 1, "", "to"], [166, 1, 1, "", "to_empty"], [166, 1, 1, "", "train"], [166, 1, 1, "", "type"], [166, 1, 1, "", "xpu"], [166, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[171, 2, 1, "", "action_key"], [171, 2, 1, "", "action_keys"], [171, 2, 1, "", "action_spec"], [171, 2, 1, "", "action_spec_unbatched"], [171, 1, 1, "", "add_module"], [171, 1, 1, "", "add_truncated_keys"], [171, 1, 1, "", "all_actions"], [171, 1, 1, "", "any_done"], [171, 1, 1, "", "append_transform"], [171, 1, 1, "", "apply"], [171, 1, 1, "", "auto_specs_"], [171, 2, 1, "", "batch_dims"], [171, 2, 1, "", "batch_locked"], [171, 2, 1, "", "batch_size"], [171, 1, 1, "", "bfloat16"], [171, 1, 1, "", "buffers"], [171, 1, 1, "", "cardinality"], [171, 1, 1, "", "check_env_specs"], [171, 1, 1, "", "children"], [171, 2, 1, "", "collector"], [171, 1, 1, "", "compile"], [171, 1, 1, "", "cpu"], [171, 1, 1, "", "cuda"], [171, 2, 1, "", "done_key"], [171, 2, 1, "", "done_keys"], [171, 2, 1, "", "done_keys_groups"], [171, 2, 1, "", "done_spec"], [171, 2, 1, "", "done_spec_unbatched"], [171, 1, 1, "", "double"], [171, 1, 1, "", "empty_cache"], [171, 1, 1, "", "eval"], [171, 1, 1, "", "extra_repr"], [171, 1, 1, "", "fake_tensordict"], [171, 1, 1, "", "float"], [171, 1, 1, "", "forward"], [171, 2, 1, "", "full_action_spec"], [171, 2, 1, "", "full_action_spec_unbatched"], [171, 2, 1, "", "full_done_spec"], [171, 2, 1, "", "full_done_spec_unbatched"], [171, 2, 1, "", "full_observation_spec_unbatched"], [171, 2, 1, "", "full_reward_spec"], [171, 2, 1, "", "full_reward_spec_unbatched"], [171, 2, 1, "", "full_state_spec"], [171, 2, 1, "", "full_state_spec_unbatched"], [171, 1, 1, "", "get_buffer"], [171, 1, 1, "", "get_extra_state"], [171, 1, 1, "", "get_parameter"], [171, 1, 1, "", "get_submodule"], [171, 1, 1, "", "half"], [171, 2, 1, "", "input_spec"], [171, 2, 1, "", "input_spec_unbatched"], [171, 1, 1, "", "ipu"], [171, 2, 1, "", "is_spec_locked"], [171, 1, 1, "", "load_state_dict"], [171, 1, 1, "", "maybe_reset"], [171, 1, 1, "", "modules"], [171, 1, 1, "", "mtia"], [171, 1, 1, "", "named_buffers"], [171, 1, 1, "", "named_children"], [171, 1, 1, "", "named_modules"], [171, 1, 1, "", "named_parameters"], [171, 2, 1, "", "observation_keys"], [171, 2, 1, "", "observation_spec"], [171, 2, 1, "", "observation_spec_unbatched"], [171, 2, 1, "", "output_spec"], [171, 2, 1, "", "output_spec_unbatched"], [171, 1, 1, "", "parameters"], [171, 1, 1, "", "rand_action"], [171, 1, 1, "", "rand_step"], [171, 1, 1, "", "register_backward_hook"], [171, 1, 1, "", "register_buffer"], [171, 1, 1, "", "register_collector"], [171, 1, 1, "", "register_forward_hook"], [171, 1, 1, "", "register_forward_pre_hook"], [171, 1, 1, "", "register_full_backward_hook"], [171, 1, 1, "", "register_full_backward_pre_hook"], [171, 1, 1, "", "register_gym"], [171, 1, 1, "", "register_load_state_dict_post_hook"], [171, 1, 1, "", "register_load_state_dict_pre_hook"], [171, 1, 1, "", "register_module"], [171, 1, 1, "", "register_parameter"], [171, 1, 1, "", "register_state_dict_post_hook"], [171, 1, 1, "", "register_state_dict_pre_hook"], [171, 1, 1, "", "requires_grad_"], [171, 1, 1, "", "reset"], [171, 2, 1, "", "reset_keys"], [171, 2, 1, "", "reward_key"], [171, 2, 1, "", "reward_keys"], [171, 2, 1, "", "reward_spec"], [171, 2, 1, "", "reward_spec_unbatched"], [171, 1, 1, "", "rollout"], [171, 1, 1, "", "set_extra_state"], [171, 1, 1, "", "set_seed"], [171, 1, 1, "", "set_spec_lock_"], [171, 1, 1, "", "set_submodule"], [171, 2, 1, "", "shape"], [171, 1, 1, "", "share_memory"], [171, 2, 1, "", "specs"], [171, 1, 1, "", "state_dict"], [171, 2, 1, "", "state_keys"], [171, 2, 1, "", "state_spec"], [171, 2, 1, "", "state_spec_unbatched"], [171, 1, 1, "", "step"], [171, 1, 1, "", "step_and_maybe_reset"], [171, 1, 1, "", "step_mdp"], [171, 1, 1, "", "to"], [171, 1, 1, "", "to_empty"], [171, 1, 1, "", "train"], [171, 1, 1, "", "type"], [171, 1, 1, "", "update_kwargs"], [171, 1, 1, "", "xpu"], [171, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[172, 1, 1, "", "_setup"], [172, 2, 1, "", "action_key"], [172, 2, 1, "", "action_keys"], [172, 2, 1, "", "action_spec"], [172, 2, 1, "", "action_spec_unbatched"], [172, 1, 1, "", "add_module"], [172, 1, 1, "", "add_truncated_keys"], [172, 1, 1, "", "all_actions"], [172, 1, 1, "", "any_done"], [172, 1, 1, "", "append_transform"], [172, 1, 1, "", "apply"], [172, 1, 1, "", "async_reset_recv"], [172, 1, 1, "", "async_reset_send"], [172, 1, 1, "", "async_step_recv"], [172, 1, 1, "", "async_step_send"], [172, 1, 1, "", "auto_specs_"], [172, 2, 1, "", "batch_dims"], [172, 2, 1, "", "batch_locked"], [172, 2, 1, "", "batch_size"], [172, 1, 1, "", "bfloat16"], [172, 1, 1, "", "buffers"], [172, 1, 1, "", "cardinality"], [172, 1, 1, "", "check_env_specs"], [172, 1, 1, "", "children"], [172, 2, 1, "", "collector"], [172, 1, 1, "", "compile"], [172, 1, 1, "", "cpu"], [172, 1, 1, "", "cuda"], [172, 2, 1, "", "done_key"], [172, 2, 1, "", "done_keys"], [172, 2, 1, "", "done_keys_groups"], [172, 2, 1, "", "done_spec"], [172, 2, 1, "", "done_spec_unbatched"], [172, 1, 1, "", "double"], [172, 1, 1, "", "empty_cache"], [172, 2, 1, "", "env_batch_sizes"], [172, 1, 1, "", "eval"], [172, 1, 1, "", "extra_repr"], [172, 1, 1, "", "fake_tensordict"], [172, 1, 1, "", "float"], [172, 1, 1, "", "forward"], [172, 2, 1, "", "full_action_spec"], [172, 2, 1, "", "full_action_spec_unbatched"], [172, 2, 1, "", "full_done_spec"], [172, 2, 1, "", "full_done_spec_unbatched"], [172, 2, 1, "", "full_observation_spec_unbatched"], [172, 2, 1, "", "full_reward_spec"], [172, 2, 1, "", "full_reward_spec_unbatched"], [172, 2, 1, "", "full_state_spec"], [172, 2, 1, "", "full_state_spec_unbatched"], [172, 1, 1, "", "get_buffer"], [172, 1, 1, "", "get_extra_state"], [172, 1, 1, "", "get_parameter"], [172, 1, 1, "", "get_submodule"], [172, 1, 1, "", "half"], [172, 2, 1, "", "input_spec"], [172, 2, 1, "", "input_spec_unbatched"], [172, 1, 1, "", "ipu"], [172, 2, 1, "", "is_spec_locked"], [172, 1, 1, "", "load_state_dict"], [172, 1, 1, "", "maybe_reset"], [172, 1, 1, "", "modules"], [172, 1, 1, "", "mtia"], [172, 1, 1, "", "named_buffers"], [172, 1, 1, "", "named_children"], [172, 1, 1, "", "named_modules"], [172, 1, 1, "", "named_parameters"], [172, 2, 1, "", "observation_keys"], [172, 2, 1, "", "observation_spec"], [172, 2, 1, "", "observation_spec_unbatched"], [172, 2, 1, "", "output_spec"], [172, 2, 1, "", "output_spec_unbatched"], [172, 1, 1, "", "parameters"], [172, 1, 1, "", "rand_action"], [172, 1, 1, "", "rand_step"], [172, 1, 1, "", "register_backward_hook"], [172, 1, 1, "", "register_buffer"], [172, 1, 1, "", "register_collector"], [172, 1, 1, "", "register_forward_hook"], [172, 1, 1, "", "register_forward_pre_hook"], [172, 1, 1, "", "register_full_backward_hook"], [172, 1, 1, "", "register_full_backward_pre_hook"], [172, 1, 1, "", "register_gym"], [172, 1, 1, "", "register_load_state_dict_post_hook"], [172, 1, 1, "", "register_load_state_dict_pre_hook"], [172, 1, 1, "", "register_module"], [172, 1, 1, "", "register_parameter"], [172, 1, 1, "", "register_state_dict_post_hook"], [172, 1, 1, "", "register_state_dict_pre_hook"], [172, 1, 1, "", "requires_grad_"], [172, 1, 1, "", "reset"], [172, 2, 1, "", "reset_keys"], [172, 2, 1, "", "reward_key"], [172, 2, 1, "", "reward_keys"], [172, 2, 1, "", "reward_spec"], [172, 2, 1, "", "reward_spec_unbatched"], [172, 1, 1, "", "rollout"], [172, 1, 1, "", "set_extra_state"], [172, 1, 1, "", "set_seed"], [172, 1, 1, "", "set_spec_lock_"], [172, 1, 1, "", "set_submodule"], [172, 2, 1, "", "shape"], [172, 1, 1, "", "share_memory"], [172, 1, 1, "", "shutdown"], [172, 2, 1, "", "specs"], [172, 1, 1, "", "state_dict"], [172, 2, 1, "", "state_keys"], [172, 2, 1, "", "state_spec"], [172, 2, 1, "", "state_spec_unbatched"], [172, 1, 1, "", "step"], [172, 1, 1, "", "step_and_maybe_reset"], [172, 1, 1, "", "step_mdp"], [172, 1, 1, "", "to"], [172, 1, 1, "", "to_empty"], [172, 1, 1, "", "train"], [172, 1, 1, "", "type"], [172, 1, 1, "", "xpu"], [172, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[173, 2, 1, "", "action_key"], [173, 2, 1, "", "action_keys"], [173, 2, 1, "", "action_spec"], [173, 2, 1, "", "action_spec_unbatched"], [173, 1, 1, "", "add_module"], [173, 1, 1, "", "add_truncated_keys"], [173, 1, 1, "", "all_actions"], [173, 1, 1, "", "any_done"], [173, 1, 1, "", "append_transform"], [173, 1, 1, "", "apply"], [173, 1, 1, "", "auto_specs_"], [173, 2, 1, "", "batch_dims"], [173, 2, 1, "", "batch_size"], [173, 1, 1, "", "bfloat16"], [173, 1, 1, "", "buffers"], [173, 1, 1, "", "cardinality"], [173, 1, 1, "", "check_env_specs"], [173, 1, 1, "", "children"], [173, 2, 1, "", "collector"], [173, 1, 1, "", "compile"], [173, 1, 1, "", "cpu"], [173, 1, 1, "", "cuda"], [173, 2, 1, "", "done_key"], [173, 2, 1, "", "done_keys"], [173, 2, 1, "", "done_keys_groups"], [173, 2, 1, "", "done_spec"], [173, 2, 1, "", "done_spec_unbatched"], [173, 1, 1, "", "double"], [173, 1, 1, "", "empty_cache"], [173, 1, 1, "", "eval"], [173, 1, 1, "", "extra_repr"], [173, 1, 1, "", "fake_tensordict"], [173, 1, 1, "", "float"], [173, 1, 1, "", "forward"], [173, 2, 1, "", "full_action_spec"], [173, 2, 1, "", "full_action_spec_unbatched"], [173, 2, 1, "", "full_done_spec"], [173, 2, 1, "", "full_done_spec_unbatched"], [173, 2, 1, "", "full_observation_spec_unbatched"], [173, 2, 1, "", "full_reward_spec"], [173, 2, 1, "", "full_reward_spec_unbatched"], [173, 2, 1, "", "full_state_spec"], [173, 2, 1, "", "full_state_spec_unbatched"], [173, 1, 1, "", "get_buffer"], [173, 1, 1, "", "get_extra_state"], [173, 1, 1, "", "get_parameter"], [173, 1, 1, "", "get_submodule"], [173, 1, 1, "", "half"], [173, 2, 1, "", "input_spec"], [173, 2, 1, "", "input_spec_unbatched"], [173, 1, 1, "", "ipu"], [173, 2, 1, "", "is_spec_locked"], [173, 1, 1, "", "load_state_dict"], [173, 1, 1, "", "maybe_reset"], [173, 1, 1, "", "modules"], [173, 1, 1, "", "mtia"], [173, 1, 1, "", "named_buffers"], [173, 1, 1, "", "named_children"], [173, 1, 1, "", "named_modules"], [173, 1, 1, "", "named_parameters"], [173, 2, 1, "", "observation_keys"], [173, 2, 1, "", "observation_spec"], [173, 2, 1, "", "observation_spec_unbatched"], [173, 2, 1, "", "output_spec"], [173, 2, 1, "", "output_spec_unbatched"], [173, 1, 1, "", "parameters"], [173, 1, 1, "", "rand_action"], [173, 1, 1, "", "rand_step"], [173, 1, 1, "", "register_backward_hook"], [173, 1, 1, "", "register_buffer"], [173, 1, 1, "", "register_collector"], [173, 1, 1, "", "register_forward_hook"], [173, 1, 1, "", "register_forward_pre_hook"], [173, 1, 1, "", "register_full_backward_hook"], [173, 1, 1, "", "register_full_backward_pre_hook"], [173, 1, 1, "", "register_gym"], [173, 1, 1, "", "register_load_state_dict_post_hook"], [173, 1, 1, "", "register_load_state_dict_pre_hook"], [173, 1, 1, "", "register_module"], [173, 1, 1, "", "register_parameter"], [173, 1, 1, "", "register_state_dict_post_hook"], [173, 1, 1, "", "register_state_dict_pre_hook"], [173, 1, 1, "", "requires_grad_"], [173, 1, 1, "", "reset"], [173, 2, 1, "", "reset_keys"], [173, 2, 1, "", "reward_key"], [173, 2, 1, "", "reward_keys"], [173, 2, 1, "", "reward_spec"], [173, 2, 1, "", "reward_spec_unbatched"], [173, 1, 1, "", "rollout"], [173, 1, 1, "", "set_extra_state"], [173, 1, 1, "", "set_seed"], [173, 1, 1, "", "set_spec_lock_"], [173, 1, 1, "", "set_submodule"], [173, 2, 1, "", "shape"], [173, 1, 1, "", "share_memory"], [173, 2, 1, "", "specs"], [173, 1, 1, "", "state_dict"], [173, 2, 1, "", "state_keys"], [173, 2, 1, "", "state_spec"], [173, 2, 1, "", "state_spec_unbatched"], [173, 1, 1, "", "step"], [173, 1, 1, "", "step_and_maybe_reset"], [173, 1, 1, "", "step_mdp"], [173, 1, 1, "", "to"], [173, 1, 1, "", "to_empty"], [173, 1, 1, "", "train"], [173, 1, 1, "", "type"], [173, 1, 1, "", "xpu"], [173, 1, 1, "", "zero_grad"]], "torchrl.envs.llm": [[183, 0, 1, "", "ChatEnv"], [184, 0, 1, "", "DatasetChatEnv"], [185, 0, 1, "", "GSM8KEnv"], [186, 0, 1, "", "GSM8KPrepareQuestion"], [187, 0, 1, "", "GSM8KRewardParser"], [188, 0, 1, "", "IFEvalEnv"], [189, 0, 1, "", "IFEvalScoreData"], [190, 0, 1, "", "IfEvalScorer"], [191, 0, 1, "", "LLMEnv"], [192, 0, 1, "", "LLMHashingEnv"], [193, 0, 1, "", "MLGymWrapper"], [194, 0, 1, "", "make_gsm8k_env"], [195, 0, 1, "", "make_mlgym"]], "torchrl.envs.llm.ChatEnv": [[183, 2, 1, "", "action_key"], [183, 2, 1, "", "action_keys"], [183, 2, 1, "", "action_spec"], [183, 2, 1, "", "action_spec_unbatched"], [183, 1, 1, "", "add_module"], [183, 1, 1, "", "add_truncated_keys"], [183, 1, 1, "", "all_actions"], [183, 1, 1, "", "any_done"], [183, 1, 1, "", "append_transform"], [183, 1, 1, "", "apply"], [183, 1, 1, "", "auto_specs_"], [183, 2, 1, "", "batch_dims"], [183, 2, 1, "", "batch_locked"], [183, 2, 1, "", "batch_size"], [183, 1, 1, "", "bfloat16"], [183, 1, 1, "", "buffers"], [183, 1, 1, "", "cardinality"], [183, 1, 1, "", "check_env_specs"], [183, 1, 1, "", "children"], [183, 2, 1, "", "collector"], [183, 1, 1, "", "compile"], [183, 1, 1, "", "cpu"], [183, 1, 1, "", "cuda"], [183, 2, 1, "", "done_key"], [183, 2, 1, "", "done_keys"], [183, 2, 1, "", "done_keys_groups"], [183, 2, 1, "", "done_spec"], [183, 2, 1, "", "done_spec_unbatched"], [183, 1, 1, "", "double"], [183, 1, 1, "", "empty_cache"], [183, 1, 1, "", "eval"], [183, 1, 1, "", "extra_repr"], [183, 1, 1, "", "fake_tensordict"], [183, 1, 1, "", "float"], [183, 1, 1, "", "forward"], [183, 1, 1, "", "from_dataloader"], [183, 2, 1, "", "full_action_spec"], [183, 2, 1, "", "full_action_spec_unbatched"], [183, 2, 1, "", "full_done_spec"], [183, 2, 1, "", "full_done_spec_unbatched"], [183, 2, 1, "", "full_observation_spec_unbatched"], [183, 2, 1, "", "full_reward_spec"], [183, 2, 1, "", "full_reward_spec_unbatched"], [183, 2, 1, "", "full_state_spec"], [183, 2, 1, "", "full_state_spec_unbatched"], [183, 1, 1, "", "get_buffer"], [183, 1, 1, "", "get_extra_state"], [183, 1, 1, "", "get_parameter"], [183, 1, 1, "", "get_submodule"], [183, 1, 1, "", "half"], [183, 2, 1, "", "input_spec"], [183, 2, 1, "", "input_spec_unbatched"], [183, 1, 1, "", "ipu"], [183, 2, 1, "", "is_spec_locked"], [183, 1, 1, "", "load_state_dict"], [183, 1, 1, "", "maybe_reset"], [183, 1, 1, "", "modules"], [183, 1, 1, "", "mtia"], [183, 1, 1, "", "named_buffers"], [183, 1, 1, "", "named_children"], [183, 1, 1, "", "named_modules"], [183, 1, 1, "", "named_parameters"], [183, 2, 1, "", "observation_keys"], [183, 2, 1, "", "observation_spec"], [183, 2, 1, "", "observation_spec_unbatched"], [183, 2, 1, "", "output_spec"], [183, 2, 1, "", "output_spec_unbatched"], [183, 1, 1, "", "parameters"], [183, 1, 1, "", "rand_action"], [183, 1, 1, "", "rand_step"], [183, 1, 1, "", "register_backward_hook"], [183, 1, 1, "", "register_buffer"], [183, 1, 1, "", "register_collector"], [183, 1, 1, "", "register_forward_hook"], [183, 1, 1, "", "register_forward_pre_hook"], [183, 1, 1, "", "register_full_backward_hook"], [183, 1, 1, "", "register_full_backward_pre_hook"], [183, 1, 1, "", "register_gym"], [183, 1, 1, "", "register_load_state_dict_post_hook"], [183, 1, 1, "", "register_load_state_dict_pre_hook"], [183, 1, 1, "", "register_module"], [183, 1, 1, "", "register_parameter"], [183, 1, 1, "", "register_state_dict_post_hook"], [183, 1, 1, "", "register_state_dict_pre_hook"], [183, 1, 1, "", "requires_grad_"], [183, 1, 1, "id0", "reset"], [183, 2, 1, "", "reset_keys"], [183, 2, 1, "", "reward_key"], [183, 2, 1, "", "reward_keys"], [183, 2, 1, "", "reward_spec"], [183, 2, 1, "", "reward_spec_unbatched"], [183, 1, 1, "", "rollout"], [183, 1, 1, "", "set_extra_state"], [183, 1, 1, "", "set_seed"], [183, 1, 1, "", "set_spec_lock_"], [183, 1, 1, "", "set_submodule"], [183, 2, 1, "", "shape"], [183, 1, 1, "", "share_memory"], [183, 2, 1, "", "specs"], [183, 1, 1, "", "state_dict"], [183, 2, 1, "", "state_keys"], [183, 2, 1, "", "state_spec"], [183, 2, 1, "", "state_spec_unbatched"], [183, 1, 1, "id1", "step"], [183, 1, 1, "", "step_and_maybe_reset"], [183, 1, 1, "", "step_mdp"], [183, 1, 1, "", "to"], [183, 1, 1, "", "to_empty"], [183, 1, 1, "", "train"], [183, 1, 1, "", "type"], [183, 1, 1, "", "xpu"], [183, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.DatasetChatEnv": [[184, 2, 1, "", "action_key"], [184, 2, 1, "", "action_keys"], [184, 2, 1, "", "action_spec"], [184, 2, 1, "", "action_spec_unbatched"], [184, 1, 1, "", "add_module"], [184, 1, 1, "", "add_truncated_keys"], [184, 1, 1, "", "all_actions"], [184, 1, 1, "", "any_done"], [184, 1, 1, "", "append_transform"], [184, 1, 1, "", "apply"], [184, 1, 1, "", "auto_specs_"], [184, 2, 1, "", "batch_dims"], [184, 2, 1, "", "batch_locked"], [184, 2, 1, "", "batch_size"], [184, 1, 1, "", "bfloat16"], [184, 1, 1, "", "buffers"], [184, 1, 1, "", "cardinality"], [184, 1, 1, "", "check_env_specs"], [184, 1, 1, "", "children"], [184, 2, 1, "", "collector"], [184, 1, 1, "", "compile"], [184, 1, 1, "", "cpu"], [184, 1, 1, "", "cuda"], [184, 2, 1, "", "done_key"], [184, 2, 1, "", "done_keys"], [184, 2, 1, "", "done_keys_groups"], [184, 2, 1, "", "done_spec"], [184, 2, 1, "", "done_spec_unbatched"], [184, 1, 1, "", "double"], [184, 1, 1, "", "empty_cache"], [184, 1, 1, "", "eval"], [184, 1, 1, "", "extra_repr"], [184, 1, 1, "", "fake_tensordict"], [184, 1, 1, "", "float"], [184, 1, 1, "", "forward"], [184, 1, 1, "", "from_dataloader"], [184, 2, 1, "", "full_action_spec"], [184, 2, 1, "", "full_action_spec_unbatched"], [184, 2, 1, "", "full_done_spec"], [184, 2, 1, "", "full_done_spec_unbatched"], [184, 2, 1, "", "full_observation_spec_unbatched"], [184, 2, 1, "", "full_reward_spec"], [184, 2, 1, "", "full_reward_spec_unbatched"], [184, 2, 1, "", "full_state_spec"], [184, 2, 1, "", "full_state_spec_unbatched"], [184, 1, 1, "", "get_buffer"], [184, 1, 1, "", "get_extra_state"], [184, 1, 1, "", "get_parameter"], [184, 1, 1, "", "get_submodule"], [184, 1, 1, "", "half"], [184, 2, 1, "", "input_spec"], [184, 2, 1, "", "input_spec_unbatched"], [184, 1, 1, "", "insert_transform"], [184, 1, 1, "", "ipu"], [184, 2, 1, "", "is_spec_locked"], [184, 1, 1, "", "load_state_dict"], [184, 1, 1, "", "maybe_reset"], [184, 1, 1, "", "modules"], [184, 1, 1, "", "mtia"], [184, 1, 1, "", "named_buffers"], [184, 1, 1, "", "named_children"], [184, 1, 1, "", "named_modules"], [184, 1, 1, "", "named_parameters"], [184, 2, 1, "", "observation_keys"], [184, 2, 1, "", "observation_spec"], [184, 2, 1, "", "observation_spec_unbatched"], [184, 2, 1, "", "output_spec"], [184, 2, 1, "", "output_spec_unbatched"], [184, 1, 1, "", "parameters"], [184, 1, 1, "", "rand_action"], [184, 1, 1, "", "rand_step"], [184, 1, 1, "", "register_backward_hook"], [184, 1, 1, "", "register_buffer"], [184, 1, 1, "", "register_collector"], [184, 1, 1, "", "register_forward_hook"], [184, 1, 1, "", "register_forward_pre_hook"], [184, 1, 1, "", "register_full_backward_hook"], [184, 1, 1, "", "register_full_backward_pre_hook"], [184, 1, 1, "", "register_gym"], [184, 1, 1, "", "register_load_state_dict_post_hook"], [184, 1, 1, "", "register_load_state_dict_pre_hook"], [184, 1, 1, "", "register_module"], [184, 1, 1, "", "register_parameter"], [184, 1, 1, "", "register_state_dict_post_hook"], [184, 1, 1, "", "register_state_dict_pre_hook"], [184, 1, 1, "", "requires_grad_"], [184, 1, 1, "", "reset"], [184, 1, 1, "", "reset_dataloader"], [184, 2, 1, "", "reset_keys"], [184, 2, 1, "", "reward_key"], [184, 2, 1, "", "reward_keys"], [184, 2, 1, "", "reward_spec"], [184, 2, 1, "", "reward_spec_unbatched"], [184, 1, 1, "", "rollout"], [184, 1, 1, "", "set_extra_state"], [184, 1, 1, "", "set_missing_tolerance"], [184, 1, 1, "", "set_seed"], [184, 1, 1, "", "set_spec_lock_"], [184, 1, 1, "", "set_submodule"], [184, 2, 1, "", "shape"], [184, 1, 1, "", "share_memory"], [184, 2, 1, "", "specs"], [184, 1, 1, "", "state_dict"], [184, 2, 1, "", "state_keys"], [184, 2, 1, "", "state_spec"], [184, 2, 1, "", "state_spec_unbatched"], [184, 1, 1, "", "step"], [184, 1, 1, "", "step_and_maybe_reset"], [184, 1, 1, "", "step_mdp"], [184, 1, 1, "", "to"], [184, 1, 1, "", "to_empty"], [184, 1, 1, "", "train"], [184, 1, 1, "", "type"], [184, 1, 1, "", "xpu"], [184, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KEnv": [[185, 2, 1, "", "action_key"], [185, 2, 1, "", "action_keys"], [185, 2, 1, "", "action_spec"], [185, 2, 1, "", "action_spec_unbatched"], [185, 1, 1, "", "add_module"], [185, 1, 1, "", "add_truncated_keys"], [185, 1, 1, "", "all_actions"], [185, 1, 1, "", "any_done"], [185, 1, 1, "", "append_transform"], [185, 1, 1, "", "apply"], [185, 1, 1, "", "auto_specs_"], [185, 2, 1, "", "batch_dims"], [185, 2, 1, "", "batch_locked"], [185, 2, 1, "", "batch_size"], [185, 1, 1, "", "bfloat16"], [185, 1, 1, "", "buffers"], [185, 1, 1, "", "cardinality"], [185, 1, 1, "", "check_env_specs"], [185, 1, 1, "", "children"], [185, 2, 1, "", "collector"], [185, 1, 1, "", "compile"], [185, 1, 1, "", "cpu"], [185, 1, 1, "", "cuda"], [185, 2, 1, "", "done_key"], [185, 2, 1, "", "done_keys"], [185, 2, 1, "", "done_keys_groups"], [185, 2, 1, "", "done_spec"], [185, 2, 1, "", "done_spec_unbatched"], [185, 1, 1, "", "double"], [185, 1, 1, "", "empty_cache"], [185, 1, 1, "", "eval"], [185, 1, 1, "", "extra_repr"], [185, 1, 1, "", "fake_tensordict"], [185, 1, 1, "", "float"], [185, 1, 1, "", "forward"], [185, 1, 1, "", "from_dataloader"], [185, 2, 1, "", "full_action_spec"], [185, 2, 1, "", "full_action_spec_unbatched"], [185, 2, 1, "", "full_done_spec"], [185, 2, 1, "", "full_done_spec_unbatched"], [185, 2, 1, "", "full_observation_spec_unbatched"], [185, 2, 1, "", "full_reward_spec"], [185, 2, 1, "", "full_reward_spec_unbatched"], [185, 2, 1, "", "full_state_spec"], [185, 2, 1, "", "full_state_spec_unbatched"], [185, 1, 1, "", "get_buffer"], [185, 1, 1, "", "get_extra_state"], [185, 1, 1, "", "get_parameter"], [185, 1, 1, "", "get_submodule"], [185, 1, 1, "", "half"], [185, 2, 1, "", "input_spec"], [185, 2, 1, "", "input_spec_unbatched"], [185, 1, 1, "", "insert_transform"], [185, 1, 1, "", "ipu"], [185, 2, 1, "", "is_spec_locked"], [185, 1, 1, "", "load_state_dict"], [185, 1, 1, "", "maybe_reset"], [185, 1, 1, "", "modules"], [185, 1, 1, "", "mtia"], [185, 1, 1, "", "named_buffers"], [185, 1, 1, "", "named_children"], [185, 1, 1, "", "named_modules"], [185, 1, 1, "", "named_parameters"], [185, 2, 1, "", "observation_keys"], [185, 2, 1, "", "observation_spec"], [185, 2, 1, "", "observation_spec_unbatched"], [185, 2, 1, "", "output_spec"], [185, 2, 1, "", "output_spec_unbatched"], [185, 1, 1, "", "parameters"], [185, 1, 1, "", "rand_action"], [185, 1, 1, "", "rand_step"], [185, 1, 1, "", "register_backward_hook"], [185, 1, 1, "", "register_buffer"], [185, 1, 1, "", "register_collector"], [185, 1, 1, "", "register_forward_hook"], [185, 1, 1, "", "register_forward_pre_hook"], [185, 1, 1, "", "register_full_backward_hook"], [185, 1, 1, "", "register_full_backward_pre_hook"], [185, 1, 1, "", "register_gym"], [185, 1, 1, "", "register_load_state_dict_post_hook"], [185, 1, 1, "", "register_load_state_dict_pre_hook"], [185, 1, 1, "", "register_module"], [185, 1, 1, "", "register_parameter"], [185, 1, 1, "", "register_state_dict_post_hook"], [185, 1, 1, "", "register_state_dict_pre_hook"], [185, 1, 1, "", "requires_grad_"], [185, 1, 1, "", "reset"], [185, 1, 1, "", "reset_dataloader"], [185, 2, 1, "", "reset_keys"], [185, 2, 1, "", "reward_key"], [185, 2, 1, "", "reward_keys"], [185, 2, 1, "", "reward_spec"], [185, 2, 1, "", "reward_spec_unbatched"], [185, 1, 1, "", "rollout"], [185, 1, 1, "", "set_extra_state"], [185, 1, 1, "", "set_missing_tolerance"], [185, 1, 1, "", "set_seed"], [185, 1, 1, "", "set_spec_lock_"], [185, 1, 1, "", "set_submodule"], [185, 2, 1, "", "shape"], [185, 1, 1, "", "share_memory"], [185, 2, 1, "", "specs"], [185, 1, 1, "", "state_dict"], [185, 2, 1, "", "state_keys"], [185, 2, 1, "", "state_spec"], [185, 2, 1, "", "state_spec_unbatched"], [185, 1, 1, "", "step"], [185, 1, 1, "", "step_and_maybe_reset"], [185, 1, 1, "", "step_mdp"], [185, 1, 1, "", "to"], [185, 1, 1, "", "to_empty"], [185, 1, 1, "", "train"], [185, 1, 1, "", "type"], [185, 1, 1, "", "xpu"], [185, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KPrepareQuestion": [[186, 1, 1, "", "add_module"], [186, 1, 1, "", "apply"], [186, 1, 1, "", "bfloat16"], [186, 1, 1, "", "buffers"], [186, 1, 1, "", "children"], [186, 1, 1, "", "close"], [186, 2, 1, "", "collector"], [186, 1, 1, "", "compile"], [186, 2, 1, "", "container"], [186, 1, 1, "", "cpu"], [186, 1, 1, "", "cuda"], [186, 1, 1, "", "double"], [186, 1, 1, "", "eval"], [186, 1, 1, "", "extra_repr"], [186, 1, 1, "", "float"], [186, 1, 1, "", "forward"], [186, 1, 1, "", "get_buffer"], [186, 1, 1, "", "get_extra_state"], [186, 1, 1, "", "get_parameter"], [186, 1, 1, "", "get_submodule"], [186, 1, 1, "", "half"], [186, 1, 1, "", "init"], [186, 1, 1, "", "inv"], [186, 1, 1, "", "ipu"], [186, 1, 1, "", "load_state_dict"], [186, 1, 1, "", "modules"], [186, 1, 1, "", "mtia"], [186, 1, 1, "", "named_buffers"], [186, 1, 1, "", "named_children"], [186, 1, 1, "", "named_modules"], [186, 1, 1, "", "named_parameters"], [186, 1, 1, "", "parameters"], [186, 2, 1, "", "parent"], [186, 1, 1, "", "register_backward_hook"], [186, 1, 1, "", "register_buffer"], [186, 1, 1, "", "register_forward_hook"], [186, 1, 1, "", "register_forward_pre_hook"], [186, 1, 1, "", "register_full_backward_hook"], [186, 1, 1, "", "register_full_backward_pre_hook"], [186, 1, 1, "", "register_load_state_dict_post_hook"], [186, 1, 1, "", "register_load_state_dict_pre_hook"], [186, 1, 1, "", "register_module"], [186, 1, 1, "", "register_parameter"], [186, 1, 1, "", "register_state_dict_post_hook"], [186, 1, 1, "", "register_state_dict_pre_hook"], [186, 1, 1, "", "requires_grad_"], [186, 1, 1, "", "set_extra_state"], [186, 1, 1, "", "set_submodule"], [186, 1, 1, "", "share_memory"], [186, 1, 1, "", "state_dict"], [186, 1, 1, "", "to"], [186, 1, 1, "", "to_empty"], [186, 1, 1, "", "train"], [186, 1, 1, "", "transform_action_spec"], [186, 1, 1, "", "transform_done_spec"], [186, 1, 1, "", "transform_env_batch_size"], [186, 1, 1, "", "transform_env_device"], [186, 1, 1, "", "transform_input_spec"], [186, 1, 1, "", "transform_observation_spec"], [186, 1, 1, "", "transform_output_spec"], [186, 1, 1, "", "transform_reward_spec"], [186, 1, 1, "", "transform_state_spec"], [186, 1, 1, "", "type"], [186, 1, 1, "", "xpu"], [186, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KRewardParser": [[187, 1, 1, "", "add_module"], [187, 1, 1, "", "apply"], [187, 1, 1, "", "bfloat16"], [187, 1, 1, "", "buffers"], [187, 1, 1, "", "children"], [187, 1, 1, "", "close"], [187, 2, 1, "", "collector"], [187, 1, 1, "", "compile"], [187, 2, 1, "", "container"], [187, 1, 1, "", "cpu"], [187, 1, 1, "", "cuda"], [187, 1, 1, "", "double"], [187, 1, 1, "", "eval"], [187, 1, 1, "", "extra_repr"], [187, 1, 1, "", "extract_tags"], [187, 1, 1, "", "float"], [187, 1, 1, "", "forward"], [187, 1, 1, "", "get_buffer"], [187, 1, 1, "", "get_extra_state"], [187, 1, 1, "", "get_parameter"], [187, 1, 1, "", "get_submodule"], [187, 1, 1, "", "half"], [187, 1, 1, "", "init"], [187, 1, 1, "", "inv"], [187, 1, 1, "", "ipu"], [187, 1, 1, "", "load_state_dict"], [187, 1, 1, "", "modules"], [187, 1, 1, "", "mtia"], [187, 1, 1, "", "named_buffers"], [187, 1, 1, "", "named_children"], [187, 1, 1, "", "named_modules"], [187, 1, 1, "", "named_parameters"], [187, 1, 1, "", "parameters"], [187, 2, 1, "", "parent"], [187, 1, 1, "", "register_backward_hook"], [187, 1, 1, "", "register_buffer"], [187, 1, 1, "", "register_forward_hook"], [187, 1, 1, "", "register_forward_pre_hook"], [187, 1, 1, "", "register_full_backward_hook"], [187, 1, 1, "", "register_full_backward_pre_hook"], [187, 1, 1, "", "register_load_state_dict_post_hook"], [187, 1, 1, "", "register_load_state_dict_pre_hook"], [187, 1, 1, "", "register_module"], [187, 1, 1, "", "register_parameter"], [187, 1, 1, "", "register_state_dict_post_hook"], [187, 1, 1, "", "register_state_dict_pre_hook"], [187, 1, 1, "", "requires_grad_"], [187, 1, 1, "", "set_extra_state"], [187, 1, 1, "", "set_submodule"], [187, 1, 1, "", "share_memory"], [187, 1, 1, "", "state_dict"], [187, 1, 1, "", "to"], [187, 1, 1, "", "to_empty"], [187, 1, 1, "", "train"], [187, 1, 1, "", "transform_action_spec"], [187, 1, 1, "", "transform_done_spec"], [187, 1, 1, "", "transform_env_batch_size"], [187, 1, 1, "", "transform_env_device"], [187, 1, 1, "", "transform_input_spec"], [187, 1, 1, "", "transform_observation_spec"], [187, 1, 1, "", "transform_output_spec"], [187, 1, 1, "", "transform_reward_spec"], [187, 1, 1, "", "transform_state_spec"], [187, 1, 1, "", "type"], [187, 1, 1, "", "xpu"], [187, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalEnv": [[188, 2, 1, "", "action_key"], [188, 2, 1, "", "action_keys"], [188, 2, 1, "", "action_spec"], [188, 2, 1, "", "action_spec_unbatched"], [188, 1, 1, "", "add_module"], [188, 1, 1, "", "add_truncated_keys"], [188, 1, 1, "", "all_actions"], [188, 1, 1, "", "any_done"], [188, 1, 1, "", "append_transform"], [188, 1, 1, "", "apply"], [188, 1, 1, "", "auto_specs_"], [188, 2, 1, "", "batch_dims"], [188, 2, 1, "", "batch_locked"], [188, 2, 1, "", "batch_size"], [188, 1, 1, "", "bfloat16"], [188, 1, 1, "", "buffers"], [188, 1, 1, "", "cardinality"], [188, 1, 1, "", "check_env_specs"], [188, 1, 1, "", "children"], [188, 2, 1, "", "collector"], [188, 1, 1, "", "compile"], [188, 1, 1, "", "cpu"], [188, 1, 1, "", "cuda"], [188, 2, 1, "", "done_key"], [188, 2, 1, "", "done_keys"], [188, 2, 1, "", "done_keys_groups"], [188, 2, 1, "", "done_spec"], [188, 2, 1, "", "done_spec_unbatched"], [188, 1, 1, "", "double"], [188, 1, 1, "", "empty_cache"], [188, 1, 1, "", "eval"], [188, 1, 1, "", "extra_repr"], [188, 1, 1, "", "fake_tensordict"], [188, 1, 1, "", "float"], [188, 1, 1, "", "forward"], [188, 1, 1, "", "from_dataloader"], [188, 2, 1, "", "full_action_spec"], [188, 2, 1, "", "full_action_spec_unbatched"], [188, 2, 1, "", "full_done_spec"], [188, 2, 1, "", "full_done_spec_unbatched"], [188, 2, 1, "", "full_observation_spec_unbatched"], [188, 2, 1, "", "full_reward_spec"], [188, 2, 1, "", "full_reward_spec_unbatched"], [188, 2, 1, "", "full_state_spec"], [188, 2, 1, "", "full_state_spec_unbatched"], [188, 1, 1, "", "get_buffer"], [188, 1, 1, "", "get_extra_state"], [188, 1, 1, "", "get_parameter"], [188, 1, 1, "", "get_submodule"], [188, 1, 1, "", "half"], [188, 2, 1, "", "input_spec"], [188, 2, 1, "", "input_spec_unbatched"], [188, 1, 1, "", "insert_transform"], [188, 1, 1, "", "ipu"], [188, 2, 1, "", "is_spec_locked"], [188, 1, 1, "", "load_state_dict"], [188, 1, 1, "", "maybe_reset"], [188, 1, 1, "", "modules"], [188, 1, 1, "", "mtia"], [188, 1, 1, "", "named_buffers"], [188, 1, 1, "", "named_children"], [188, 1, 1, "", "named_modules"], [188, 1, 1, "", "named_parameters"], [188, 2, 1, "", "observation_keys"], [188, 2, 1, "", "observation_spec"], [188, 2, 1, "", "observation_spec_unbatched"], [188, 2, 1, "", "output_spec"], [188, 2, 1, "", "output_spec_unbatched"], [188, 1, 1, "", "parameters"], [188, 1, 1, "", "rand_action"], [188, 1, 1, "", "rand_step"], [188, 1, 1, "", "register_backward_hook"], [188, 1, 1, "", "register_buffer"], [188, 1, 1, "", "register_collector"], [188, 1, 1, "", "register_forward_hook"], [188, 1, 1, "", "register_forward_pre_hook"], [188, 1, 1, "", "register_full_backward_hook"], [188, 1, 1, "", "register_full_backward_pre_hook"], [188, 1, 1, "", "register_gym"], [188, 1, 1, "", "register_load_state_dict_post_hook"], [188, 1, 1, "", "register_load_state_dict_pre_hook"], [188, 1, 1, "", "register_module"], [188, 1, 1, "", "register_parameter"], [188, 1, 1, "", "register_state_dict_post_hook"], [188, 1, 1, "", "register_state_dict_pre_hook"], [188, 1, 1, "", "requires_grad_"], [188, 1, 1, "", "reset"], [188, 1, 1, "", "reset_dataloader"], [188, 2, 1, "", "reset_keys"], [188, 2, 1, "", "reward_key"], [188, 2, 1, "", "reward_keys"], [188, 2, 1, "", "reward_spec"], [188, 2, 1, "", "reward_spec_unbatched"], [188, 1, 1, "", "rollout"], [188, 1, 1, "", "set_extra_state"], [188, 1, 1, "", "set_missing_tolerance"], [188, 1, 1, "", "set_seed"], [188, 1, 1, "", "set_spec_lock_"], [188, 1, 1, "", "set_submodule"], [188, 2, 1, "", "shape"], [188, 1, 1, "", "share_memory"], [188, 2, 1, "", "specs"], [188, 1, 1, "", "state_dict"], [188, 2, 1, "", "state_keys"], [188, 2, 1, "", "state_spec"], [188, 2, 1, "", "state_spec_unbatched"], [188, 1, 1, "", "step"], [188, 1, 1, "", "step_and_maybe_reset"], [188, 1, 1, "", "step_mdp"], [188, 1, 1, "", "to"], [188, 1, 1, "", "to_empty"], [188, 1, 1, "", "train"], [188, 1, 1, "", "type"], [188, 1, 1, "", "xpu"], [188, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalScoreData": [[189, 2, 1, "", "device"], [189, 1, 1, "", "dumps"], [189, 1, 1, "", "fields"], [189, 1, 1, "", "from_tensordict"], [189, 1, 1, "", "get"], [189, 1, 1, "", "load"], [189, 1, 1, "", "load_"], [189, 1, 1, "", "load_memmap"], [189, 1, 1, "", "load_state_dict"], [189, 1, 1, "", "memmap"], [189, 1, 1, "", "memmap_"], [189, 1, 1, "", "memmap_like"], [189, 1, 1, "", "memmap_refresh_"], [189, 1, 1, "", "save"], [189, 1, 1, "", "set"], [189, 1, 1, "", "state_dict"], [189, 1, 1, "", "to_tensordict"], [189, 1, 1, "", "unbind"]], "torchrl.envs.llm.IfEvalScorer": [[190, 1, 1, "", "add_module"], [190, 1, 1, "", "apply"], [190, 1, 1, "", "bfloat16"], [190, 1, 1, "", "buffers"], [190, 1, 1, "", "children"], [190, 1, 1, "", "close"], [190, 2, 1, "", "collector"], [190, 1, 1, "", "compile"], [190, 2, 1, "", "container"], [190, 1, 1, "", "cpu"], [190, 1, 1, "", "cuda"], [190, 1, 1, "", "default_reward_aggregator"], [190, 1, 1, "", "double"], [190, 1, 1, "", "eval"], [190, 1, 1, "", "extra_repr"], [190, 1, 1, "", "float"], [190, 1, 1, "", "forward"], [190, 1, 1, "", "get_buffer"], [190, 1, 1, "", "get_extra_state"], [190, 1, 1, "", "get_parameter"], [190, 1, 1, "", "get_submodule"], [190, 1, 1, "", "half"], [190, 1, 1, "", "init"], [190, 1, 1, "", "inv"], [190, 1, 1, "", "ipu"], [190, 1, 1, "", "load_state_dict"], [190, 1, 1, "", "modules"], [190, 1, 1, "", "mtia"], [190, 1, 1, "", "named_buffers"], [190, 1, 1, "", "named_children"], [190, 1, 1, "", "named_modules"], [190, 1, 1, "", "named_parameters"], [190, 1, 1, "", "parameters"], [190, 2, 1, "", "parent"], [190, 1, 1, "", "register_backward_hook"], [190, 1, 1, "", "register_buffer"], [190, 1, 1, "", "register_forward_hook"], [190, 1, 1, "", "register_forward_pre_hook"], [190, 1, 1, "", "register_full_backward_hook"], [190, 1, 1, "", "register_full_backward_pre_hook"], [190, 1, 1, "", "register_load_state_dict_post_hook"], [190, 1, 1, "", "register_load_state_dict_pre_hook"], [190, 1, 1, "", "register_module"], [190, 1, 1, "", "register_parameter"], [190, 1, 1, "", "register_state_dict_post_hook"], [190, 1, 1, "", "register_state_dict_pre_hook"], [190, 1, 1, "", "requires_grad_"], [190, 1, 1, "", "set_extra_state"], [190, 1, 1, "", "set_submodule"], [190, 1, 1, "", "share_memory"], [190, 1, 1, "", "state_dict"], [190, 1, 1, "", "to"], [190, 1, 1, "", "to_empty"], [190, 1, 1, "", "train"], [190, 1, 1, "", "transform_action_spec"], [190, 1, 1, "", "transform_done_spec"], [190, 1, 1, "", "transform_env_batch_size"], [190, 1, 1, "", "transform_env_device"], [190, 1, 1, "", "transform_input_spec"], [190, 1, 1, "", "transform_observation_spec"], [190, 1, 1, "", "transform_output_spec"], [190, 1, 1, "", "transform_reward_spec"], [190, 1, 1, "", "transform_state_spec"], [190, 1, 1, "", "type"], [190, 1, 1, "", "xpu"], [190, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMEnv": [[191, 2, 1, "", "action_key"], [191, 2, 1, "", "action_keys"], [191, 2, 1, "", "action_spec"], [191, 2, 1, "", "action_spec_unbatched"], [191, 1, 1, "", "add_module"], [191, 1, 1, "", "add_truncated_keys"], [191, 1, 1, "", "all_actions"], [191, 1, 1, "", "any_done"], [191, 1, 1, "", "append_transform"], [191, 1, 1, "", "apply"], [191, 1, 1, "", "auto_specs_"], [191, 2, 1, "", "batch_dims"], [191, 2, 1, "", "batch_locked"], [191, 2, 1, "", "batch_size"], [191, 1, 1, "", "bfloat16"], [191, 1, 1, "", "buffers"], [191, 1, 1, "", "cardinality"], [191, 1, 1, "", "check_env_specs"], [191, 1, 1, "", "children"], [191, 2, 1, "", "collector"], [191, 1, 1, "", "compile"], [191, 1, 1, "", "cpu"], [191, 1, 1, "", "cuda"], [191, 2, 1, "", "done_key"], [191, 2, 1, "", "done_keys"], [191, 2, 1, "", "done_keys_groups"], [191, 2, 1, "", "done_spec"], [191, 2, 1, "", "done_spec_unbatched"], [191, 1, 1, "", "double"], [191, 1, 1, "", "empty_cache"], [191, 1, 1, "", "eval"], [191, 1, 1, "", "extra_repr"], [191, 1, 1, "", "fake_tensordict"], [191, 1, 1, "", "float"], [191, 1, 1, "", "forward"], [191, 1, 1, "id0", "from_dataloader"], [191, 2, 1, "", "full_action_spec"], [191, 2, 1, "", "full_action_spec_unbatched"], [191, 2, 1, "", "full_done_spec"], [191, 2, 1, "", "full_done_spec_unbatched"], [191, 2, 1, "", "full_observation_spec_unbatched"], [191, 2, 1, "", "full_reward_spec"], [191, 2, 1, "", "full_reward_spec_unbatched"], [191, 2, 1, "", "full_state_spec"], [191, 2, 1, "", "full_state_spec_unbatched"], [191, 1, 1, "", "get_buffer"], [191, 1, 1, "", "get_extra_state"], [191, 1, 1, "", "get_parameter"], [191, 1, 1, "", "get_submodule"], [191, 1, 1, "", "half"], [191, 2, 1, "", "input_spec"], [191, 2, 1, "", "input_spec_unbatched"], [191, 1, 1, "", "ipu"], [191, 2, 1, "", "is_spec_locked"], [191, 1, 1, "", "load_state_dict"], [191, 1, 1, "", "maybe_reset"], [191, 1, 1, "", "modules"], [191, 1, 1, "", "mtia"], [191, 1, 1, "", "named_buffers"], [191, 1, 1, "", "named_children"], [191, 1, 1, "", "named_modules"], [191, 1, 1, "", "named_parameters"], [191, 2, 1, "", "observation_keys"], [191, 2, 1, "", "observation_spec"], [191, 2, 1, "", "observation_spec_unbatched"], [191, 2, 1, "", "output_spec"], [191, 2, 1, "", "output_spec_unbatched"], [191, 1, 1, "", "parameters"], [191, 1, 1, "", "rand_action"], [191, 1, 1, "", "rand_step"], [191, 1, 1, "", "register_backward_hook"], [191, 1, 1, "", "register_buffer"], [191, 1, 1, "", "register_collector"], [191, 1, 1, "", "register_forward_hook"], [191, 1, 1, "", "register_forward_pre_hook"], [191, 1, 1, "", "register_full_backward_hook"], [191, 1, 1, "", "register_full_backward_pre_hook"], [191, 1, 1, "", "register_gym"], [191, 1, 1, "", "register_load_state_dict_post_hook"], [191, 1, 1, "", "register_load_state_dict_pre_hook"], [191, 1, 1, "", "register_module"], [191, 1, 1, "", "register_parameter"], [191, 1, 1, "", "register_state_dict_post_hook"], [191, 1, 1, "", "register_state_dict_pre_hook"], [191, 1, 1, "", "requires_grad_"], [191, 1, 1, "", "reset"], [191, 2, 1, "", "reset_keys"], [191, 2, 1, "", "reward_key"], [191, 2, 1, "", "reward_keys"], [191, 2, 1, "", "reward_spec"], [191, 2, 1, "", "reward_spec_unbatched"], [191, 1, 1, "", "rollout"], [191, 1, 1, "", "set_extra_state"], [191, 1, 1, "", "set_seed"], [191, 1, 1, "", "set_spec_lock_"], [191, 1, 1, "", "set_submodule"], [191, 2, 1, "", "shape"], [191, 1, 1, "", "share_memory"], [191, 2, 1, "", "specs"], [191, 1, 1, "", "state_dict"], [191, 2, 1, "", "state_keys"], [191, 2, 1, "", "state_spec"], [191, 2, 1, "", "state_spec_unbatched"], [191, 1, 1, "", "step"], [191, 1, 1, "", "step_and_maybe_reset"], [191, 1, 1, "", "step_mdp"], [191, 1, 1, "", "to"], [191, 1, 1, "", "to_empty"], [191, 1, 1, "", "train"], [191, 1, 1, "", "type"], [191, 1, 1, "", "xpu"], [191, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMHashingEnv": [[192, 2, 1, "", "action_key"], [192, 2, 1, "", "action_keys"], [192, 2, 1, "", "action_spec"], [192, 2, 1, "", "action_spec_unbatched"], [192, 1, 1, "", "add_module"], [192, 1, 1, "", "add_truncated_keys"], [192, 1, 1, "", "all_actions"], [192, 1, 1, "", "any_done"], [192, 1, 1, "", "append_transform"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "auto_specs_"], [192, 2, 1, "", "batch_dims"], [192, 2, 1, "", "batch_locked"], [192, 2, 1, "", "batch_size"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "cardinality"], [192, 1, 1, "", "check_env_specs"], [192, 1, 1, "", "children"], [192, 2, 1, "", "collector"], [192, 1, 1, "", "compile"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 2, 1, "", "done_key"], [192, 2, 1, "", "done_keys"], [192, 2, 1, "", "done_keys_groups"], [192, 2, 1, "", "done_spec"], [192, 2, 1, "", "done_spec_unbatched"], [192, 1, 1, "", "double"], [192, 1, 1, "", "empty_cache"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "fake_tensordict"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 2, 1, "", "full_action_spec"], [192, 2, 1, "", "full_action_spec_unbatched"], [192, 2, 1, "", "full_done_spec"], [192, 2, 1, "", "full_done_spec_unbatched"], [192, 2, 1, "", "full_observation_spec_unbatched"], [192, 2, 1, "", "full_reward_spec"], [192, 2, 1, "", "full_reward_spec_unbatched"], [192, 2, 1, "", "full_state_spec"], [192, 2, 1, "", "full_state_spec_unbatched"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 2, 1, "", "input_spec"], [192, 2, 1, "", "input_spec_unbatched"], [192, 1, 1, "", "ipu"], [192, 2, 1, "", "is_spec_locked"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "make_tensordict"], [192, 1, 1, "", "maybe_reset"], [192, 1, 1, "", "modules"], [192, 1, 1, "", "mtia"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 2, 1, "", "observation_keys"], [192, 2, 1, "", "observation_spec"], [192, 2, 1, "", "observation_spec_unbatched"], [192, 2, 1, "", "output_spec"], [192, 2, 1, "", "output_spec_unbatched"], [192, 1, 1, "", "parameters"], [192, 1, 1, "", "rand_action"], [192, 1, 1, "", "rand_step"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_collector"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_gym"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_load_state_dict_pre_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_post_hook"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "", "reset"], [192, 2, 1, "", "reset_keys"], [192, 2, 1, "", "reward_key"], [192, 2, 1, "", "reward_keys"], [192, 2, 1, "", "reward_spec"], [192, 2, 1, "", "reward_spec_unbatched"], [192, 1, 1, "", "rollout"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_seed"], [192, 1, 1, "", "set_spec_lock_"], [192, 1, 1, "", "set_submodule"], [192, 2, 1, "", "shape"], [192, 1, 1, "", "share_memory"], [192, 2, 1, "", "specs"], [192, 1, 1, "", "state_dict"], [192, 2, 1, "", "state_keys"], [192, 2, 1, "", "state_spec"], [192, 2, 1, "", "state_spec_unbatched"], [192, 1, 1, "", "step"], [192, 1, 1, "", "step_and_maybe_reset"], [192, 1, 1, "", "step_mdp"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.MLGymWrapper": [[193, 2, 1, "", "action_key"], [193, 2, 1, "", "action_keys"], [193, 2, 1, "", "action_spec"], [193, 2, 1, "", "action_spec_unbatched"], [193, 1, 1, "", "add_module"], [193, 1, 1, "", "add_truncated_keys"], [193, 1, 1, "", "all_actions"], [193, 1, 1, "", "any_done"], [193, 1, 1, "", "append_transform"], [193, 1, 1, "", "apply"], [193, 1, 1, "", "auto_register_info_dict"], [193, 1, 1, "", "auto_specs_"], [193, 2, 1, "", "batch_dims"], [193, 2, 1, "", "batch_locked"], [193, 2, 1, "", "batch_size"], [193, 1, 1, "", "bfloat16"], [193, 1, 1, "", "buffers"], [193, 1, 1, "", "cardinality"], [193, 1, 1, "", "check_env_specs"], [193, 1, 1, "", "children"], [193, 1, 1, "", "close"], [193, 2, 1, "", "collector"], [193, 1, 1, "", "compile"], [193, 1, 1, "", "cpu"], [193, 1, 1, "", "cuda"], [193, 2, 1, "", "done_key"], [193, 2, 1, "", "done_keys"], [193, 2, 1, "", "done_keys_groups"], [193, 2, 1, "", "done_spec"], [193, 2, 1, "", "done_spec_unbatched"], [193, 1, 1, "", "double"], [193, 1, 1, "", "empty_cache"], [193, 1, 1, "", "eval"], [193, 1, 1, "", "extra_repr"], [193, 1, 1, "", "fake_tensordict"], [193, 1, 1, "", "fast_encoding"], [193, 1, 1, "", "float"], [193, 1, 1, "", "forward"], [193, 2, 1, "", "full_action_spec"], [193, 2, 1, "", "full_action_spec_unbatched"], [193, 2, 1, "", "full_done_spec"], [193, 2, 1, "", "full_done_spec_unbatched"], [193, 2, 1, "", "full_observation_spec_unbatched"], [193, 2, 1, "", "full_reward_spec"], [193, 2, 1, "", "full_reward_spec_unbatched"], [193, 2, 1, "", "full_state_spec"], [193, 2, 1, "", "full_state_spec_unbatched"], [193, 1, 1, "", "get_buffer"], [193, 1, 1, "", "get_extra_state"], [193, 1, 1, "", "get_library_name"], [193, 1, 1, "", "get_parameter"], [193, 1, 1, "", "get_submodule"], [193, 1, 1, "", "half"], [193, 2, 1, "", "input_spec"], [193, 2, 1, "", "input_spec_unbatched"], [193, 1, 1, "", "ipu"], [193, 2, 1, "", "is_spec_locked"], [193, 1, 1, "", "load_state_dict"], [193, 1, 1, "", "maybe_reset"], [193, 1, 1, "", "modules"], [193, 1, 1, "", "mtia"], [193, 1, 1, "", "named_buffers"], [193, 1, 1, "", "named_children"], [193, 1, 1, "", "named_modules"], [193, 1, 1, "", "named_parameters"], [193, 2, 1, "", "observation_keys"], [193, 2, 1, "", "observation_spec"], [193, 2, 1, "", "observation_spec_unbatched"], [193, 2, 1, "", "output_spec"], [193, 2, 1, "", "output_spec_unbatched"], [193, 1, 1, "", "parameters"], [193, 1, 1, "", "rand_action"], [193, 1, 1, "", "rand_step"], [193, 1, 1, "", "read_action"], [193, 1, 1, "", "read_done"], [193, 1, 1, "", "read_obs"], [193, 1, 1, "", "read_reward"], [193, 1, 1, "", "register_backward_hook"], [193, 1, 1, "", "register_buffer"], [193, 1, 1, "", "register_collector"], [193, 1, 1, "", "register_forward_hook"], [193, 1, 1, "", "register_forward_pre_hook"], [193, 1, 1, "", "register_full_backward_hook"], [193, 1, 1, "", "register_full_backward_pre_hook"], [193, 1, 1, "", "register_gym"], [193, 1, 1, "", "register_load_state_dict_post_hook"], [193, 1, 1, "", "register_load_state_dict_pre_hook"], [193, 1, 1, "", "register_module"], [193, 1, 1, "", "register_parameter"], [193, 1, 1, "", "register_state_dict_post_hook"], [193, 1, 1, "", "register_state_dict_pre_hook"], [193, 1, 1, "", "requires_grad_"], [193, 1, 1, "", "reset"], [193, 2, 1, "", "reset_keys"], [193, 2, 1, "", "reward_key"], [193, 2, 1, "", "reward_keys"], [193, 2, 1, "", "reward_spec"], [193, 2, 1, "", "reward_spec_unbatched"], [193, 1, 1, "", "rollout"], [193, 1, 1, "", "set_extra_state"], [193, 1, 1, "", "set_info_dict_reader"], [193, 1, 1, "", "set_seed"], [193, 1, 1, "", "set_spec_lock_"], [193, 1, 1, "", "set_submodule"], [193, 2, 1, "", "shape"], [193, 1, 1, "", "share_memory"], [193, 2, 1, "", "specs"], [193, 1, 1, "", "state_dict"], [193, 2, 1, "", "state_keys"], [193, 2, 1, "", "state_spec"], [193, 2, 1, "", "state_spec_unbatched"], [193, 1, 1, "", "step"], [193, 1, 1, "", "step_and_maybe_reset"], [193, 1, 1, "", "step_mdp"], [193, 1, 1, "", "to"], [193, 1, 1, "", "to_empty"], [193, 1, 1, "", "train"], [193, 1, 1, "", "type"], [193, 1, 1, "", "xpu"], [193, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms": [[196, 0, 1, "", "AddThinkingPrompt"], [197, 0, 1, "", "BrowserTransform"], [198, 0, 1, "", "DataLoadingPrimer"], [199, 0, 1, "", "KLComputation"], [200, 0, 1, "", "KLRewardTransform"], [201, 0, 1, "", "MCPToolTransform"], [202, 0, 1, "", "PolicyVersion"], [203, 0, 1, "", "PythonInterpreter"], [204, 0, 1, "", "RetrieveKL"], [205, 0, 1, "", "RetrieveLogProb"], [206, 0, 1, "", "TemplateTransform"], [207, 0, 1, "", "Tokenizer"], [208, 0, 1, "", "as_nested_tensor"], [209, 0, 1, "", "as_padded_tensor"]], "torchrl.envs.llm.transforms.AddThinkingPrompt": [[196, 1, 1, "", "add_module"], [196, 1, 1, "", "apply"], [196, 1, 1, "", "bfloat16"], [196, 1, 1, "", "buffers"], [196, 1, 1, "", "children"], [196, 1, 1, "", "close"], [196, 2, 1, "", "collector"], [196, 1, 1, "", "compile"], [196, 2, 1, "", "container"], [196, 1, 1, "", "cpu"], [196, 1, 1, "", "cuda"], [196, 1, 1, "", "double"], [196, 1, 1, "", "eval"], [196, 1, 1, "", "extra_repr"], [196, 1, 1, "", "float"], [196, 1, 1, "", "forward"], [196, 1, 1, "", "get_buffer"], [196, 1, 1, "", "get_extra_state"], [196, 1, 1, "", "get_parameter"], [196, 1, 1, "", "get_submodule"], [196, 1, 1, "", "half"], [196, 1, 1, "", "init"], [196, 1, 1, "", "inv"], [196, 1, 1, "", "ipu"], [196, 1, 1, "", "load_state_dict"], [196, 1, 1, "", "modules"], [196, 1, 1, "", "mtia"], [196, 1, 1, "", "named_buffers"], [196, 1, 1, "", "named_children"], [196, 1, 1, "", "named_modules"], [196, 1, 1, "", "named_parameters"], [196, 1, 1, "", "parameters"], [196, 2, 1, "", "parent"], [196, 1, 1, "", "register_backward_hook"], [196, 1, 1, "", "register_buffer"], [196, 1, 1, "", "register_forward_hook"], [196, 1, 1, "", "register_forward_pre_hook"], [196, 1, 1, "", "register_full_backward_hook"], [196, 1, 1, "", "register_full_backward_pre_hook"], [196, 1, 1, "", "register_load_state_dict_post_hook"], [196, 1, 1, "", "register_load_state_dict_pre_hook"], [196, 1, 1, "", "register_module"], [196, 1, 1, "", "register_parameter"], [196, 1, 1, "", "register_state_dict_post_hook"], [196, 1, 1, "", "register_state_dict_pre_hook"], [196, 1, 1, "", "requires_grad_"], [196, 1, 1, "", "set_extra_state"], [196, 1, 1, "", "set_submodule"], [196, 1, 1, "", "share_memory"], [196, 1, 1, "", "state_dict"], [196, 1, 1, "", "to"], [196, 1, 1, "", "to_empty"], [196, 1, 1, "", "train"], [196, 1, 1, "", "transform_action_spec"], [196, 1, 1, "", "transform_done_spec"], [196, 1, 1, "", "transform_env_batch_size"], [196, 1, 1, "", "transform_env_device"], [196, 1, 1, "", "transform_input_spec"], [196, 1, 1, "", "transform_observation_spec"], [196, 1, 1, "", "transform_output_spec"], [196, 1, 1, "", "transform_reward_spec"], [196, 1, 1, "", "transform_state_spec"], [196, 1, 1, "", "type"], [196, 1, 1, "", "xpu"], [196, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.BrowserTransform": [[197, 1, 1, "", "add_module"], [197, 1, 1, "", "apply"], [197, 1, 1, "", "bfloat16"], [197, 1, 1, "", "buffers"], [197, 1, 1, "", "children"], [197, 1, 1, "", "clone"], [197, 1, 1, "", "close"], [197, 2, 1, "", "collector"], [197, 1, 1, "", "compile"], [197, 2, 1, "", "container"], [197, 1, 1, "", "cpu"], [197, 1, 1, "", "cuda"], [197, 1, 1, "", "double"], [197, 1, 1, "", "eval"], [197, 1, 1, "", "extra_repr"], [197, 1, 1, "", "float"], [197, 1, 1, "", "forward"], [197, 1, 1, "", "get_buffer"], [197, 1, 1, "", "get_extra_state"], [197, 1, 1, "", "get_parameter"], [197, 1, 1, "", "get_submodule"], [197, 1, 1, "", "half"], [197, 1, 1, "", "init"], [197, 1, 1, "", "inv"], [197, 1, 1, "", "ipu"], [197, 1, 1, "", "load_state_dict"], [197, 1, 1, "", "modules"], [197, 1, 1, "", "mtia"], [197, 1, 1, "", "named_buffers"], [197, 1, 1, "", "named_children"], [197, 1, 1, "", "named_modules"], [197, 1, 1, "", "named_parameters"], [197, 1, 1, "", "parameters"], [197, 2, 1, "", "parent"], [197, 1, 1, "", "register_backward_hook"], [197, 1, 1, "", "register_buffer"], [197, 1, 1, "", "register_forward_hook"], [197, 1, 1, "", "register_forward_pre_hook"], [197, 1, 1, "", "register_full_backward_hook"], [197, 1, 1, "", "register_full_backward_pre_hook"], [197, 1, 1, "", "register_load_state_dict_post_hook"], [197, 1, 1, "", "register_load_state_dict_pre_hook"], [197, 1, 1, "", "register_module"], [197, 1, 1, "", "register_parameter"], [197, 1, 1, "", "register_state_dict_post_hook"], [197, 1, 1, "", "register_state_dict_pre_hook"], [197, 1, 1, "", "requires_grad_"], [197, 1, 1, "", "set_extra_state"], [197, 1, 1, "", "set_submodule"], [197, 1, 1, "", "share_memory"], [197, 1, 1, "", "state_dict"], [197, 1, 1, "", "to"], [197, 1, 1, "", "to_empty"], [197, 1, 1, "", "train"], [197, 1, 1, "", "transform_action_spec"], [197, 1, 1, "", "transform_done_spec"], [197, 1, 1, "", "transform_env_batch_size"], [197, 1, 1, "", "transform_env_device"], [197, 1, 1, "", "transform_input_spec"], [197, 1, 1, "", "transform_observation_spec"], [197, 1, 1, "", "transform_output_spec"], [197, 1, 1, "", "transform_reward_spec"], [197, 1, 1, "", "transform_state_spec"], [197, 1, 1, "", "type"], [197, 1, 1, "", "xpu"], [197, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.DataLoadingPrimer": [[198, 1, 1, "", "add_module"], [198, 1, 1, "", "apply"], [198, 1, 1, "", "bfloat16"], [198, 1, 1, "", "buffers"], [198, 1, 1, "", "children"], [198, 1, 1, "", "close"], [198, 2, 1, "", "collector"], [198, 1, 1, "", "compile"], [198, 2, 1, "", "container"], [198, 1, 1, "", "cpu"], [198, 1, 1, "", "cuda"], [198, 1, 1, "", "double"], [198, 1, 1, "", "eval"], [198, 1, 1, "", "extra_repr"], [198, 1, 1, "", "float"], [198, 1, 1, "", "forward"], [198, 1, 1, "", "get_buffer"], [198, 1, 1, "", "get_extra_state"], [198, 1, 1, "", "get_parameter"], [198, 1, 1, "", "get_submodule"], [198, 1, 1, "", "half"], [198, 1, 1, "", "init"], [198, 1, 1, "", "inv"], [198, 1, 1, "", "ipu"], [198, 1, 1, "", "load_state_dict"], [198, 1, 1, "", "modules"], [198, 1, 1, "", "mtia"], [198, 1, 1, "", "named_buffers"], [198, 1, 1, "", "named_children"], [198, 1, 1, "", "named_modules"], [198, 1, 1, "", "named_parameters"], [198, 1, 1, "", "parameters"], [198, 2, 1, "", "parent"], [198, 1, 1, "", "register_backward_hook"], [198, 1, 1, "", "register_buffer"], [198, 1, 1, "", "register_forward_hook"], [198, 1, 1, "", "register_forward_pre_hook"], [198, 1, 1, "", "register_full_backward_hook"], [198, 1, 1, "", "register_full_backward_pre_hook"], [198, 1, 1, "", "register_load_state_dict_post_hook"], [198, 1, 1, "", "register_load_state_dict_pre_hook"], [198, 1, 1, "", "register_module"], [198, 1, 1, "", "register_parameter"], [198, 1, 1, "", "register_state_dict_post_hook"], [198, 1, 1, "", "register_state_dict_pre_hook"], [198, 1, 1, "", "requires_grad_"], [198, 1, 1, "", "reset_dataloader"], [198, 1, 1, "", "set_extra_state"], [198, 1, 1, "", "set_submodule"], [198, 1, 1, "", "share_memory"], [198, 1, 1, "", "state_dict"], [198, 1, 1, "", "to"], [198, 1, 1, "", "to_empty"], [198, 1, 1, "", "train"], [198, 1, 1, "", "transform_action_spec"], [198, 1, 1, "", "transform_done_spec"], [198, 1, 1, "", "transform_env_batch_size"], [198, 1, 1, "", "transform_env_device"], [198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_observation_spec"], [198, 1, 1, "", "transform_output_spec"], [198, 1, 1, "", "transform_reward_spec"], [198, 1, 1, "", "transform_state_spec"], [198, 1, 1, "", "type"], [198, 1, 1, "", "xpu"], [198, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLComputation": [[199, 1, 1, "", "add_module"], [199, 1, 1, "", "apply"], [199, 1, 1, "", "bfloat16"], [199, 1, 1, "", "buffers"], [199, 1, 1, "", "children"], [199, 1, 1, "", "close"], [199, 2, 1, "", "collector"], [199, 1, 1, "", "compile"], [199, 2, 1, "", "container"], [199, 1, 1, "", "cpu"], [199, 1, 1, "", "cuda"], [199, 1, 1, "", "double"], [199, 1, 1, "", "eval"], [199, 1, 1, "", "extra_repr"], [199, 1, 1, "", "float"], [199, 1, 1, "", "forward"], [199, 1, 1, "", "get_buffer"], [199, 1, 1, "", "get_extra_state"], [199, 1, 1, "", "get_parameter"], [199, 1, 1, "", "get_submodule"], [199, 1, 1, "", "half"], [199, 1, 1, "", "init"], [199, 1, 1, "", "inv"], [199, 1, 1, "", "ipu"], [199, 1, 1, "", "load_state_dict"], [199, 1, 1, "", "modules"], [199, 1, 1, "", "mtia"], [199, 1, 1, "", "named_buffers"], [199, 1, 1, "", "named_children"], [199, 1, 1, "", "named_modules"], [199, 1, 1, "", "named_parameters"], [199, 1, 1, "", "parameters"], [199, 2, 1, "", "parent"], [199, 1, 1, "", "register_backward_hook"], [199, 1, 1, "", "register_buffer"], [199, 1, 1, "", "register_forward_hook"], [199, 1, 1, "", "register_forward_pre_hook"], [199, 1, 1, "", "register_full_backward_hook"], [199, 1, 1, "", "register_full_backward_pre_hook"], [199, 1, 1, "", "register_load_state_dict_post_hook"], [199, 1, 1, "", "register_load_state_dict_pre_hook"], [199, 1, 1, "", "register_module"], [199, 1, 1, "", "register_parameter"], [199, 1, 1, "", "register_state_dict_post_hook"], [199, 1, 1, "", "register_state_dict_pre_hook"], [199, 1, 1, "", "requires_grad_"], [199, 1, 1, "", "set_extra_state"], [199, 1, 1, "", "set_submodule"], [199, 1, 1, "", "share_memory"], [199, 1, 1, "", "state_dict"], [199, 1, 1, "", "to"], [199, 1, 1, "", "to_empty"], [199, 1, 1, "", "train"], [199, 1, 1, "", "transform_action_spec"], [199, 1, 1, "", "transform_done_spec"], [199, 1, 1, "", "transform_env_batch_size"], [199, 1, 1, "", "transform_env_device"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_observation_spec"], [199, 1, 1, "", "transform_output_spec"], [199, 1, 1, "", "transform_reward_spec"], [199, 1, 1, "", "transform_state_spec"], [199, 1, 1, "", "type"], [199, 1, 1, "", "xpu"], [199, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLRewardTransform": [[200, 1, 1, "", "add_module"], [200, 1, 1, "", "apply"], [200, 1, 1, "", "bfloat16"], [200, 1, 1, "", "buffers"], [200, 1, 1, "", "children"], [200, 1, 1, "", "close"], [200, 2, 1, "", "collector"], [200, 1, 1, "", "compile"], [200, 2, 1, "", "container"], [200, 1, 1, "", "cpu"], [200, 1, 1, "", "cuda"], [200, 1, 1, "", "double"], [200, 1, 1, "", "eval"], [200, 1, 1, "", "extra_repr"], [200, 1, 1, "", "float"], [200, 1, 1, "", "forward"], [200, 1, 1, "", "get_buffer"], [200, 1, 1, "", "get_extra_state"], [200, 1, 1, "", "get_parameter"], [200, 1, 1, "", "get_submodule"], [200, 1, 1, "", "half"], [200, 1, 1, "", "init"], [200, 1, 1, "", "inv"], [200, 1, 1, "", "ipu"], [200, 1, 1, "", "load_state_dict"], [200, 1, 1, "", "modules"], [200, 1, 1, "", "mtia"], [200, 1, 1, "", "named_buffers"], [200, 1, 1, "", "named_children"], [200, 1, 1, "", "named_modules"], [200, 1, 1, "", "named_parameters"], [200, 1, 1, "", "parameters"], [200, 2, 1, "", "parent"], [200, 1, 1, "", "register_backward_hook"], [200, 1, 1, "", "register_buffer"], [200, 1, 1, "", "register_forward_hook"], [200, 1, 1, "", "register_forward_pre_hook"], [200, 1, 1, "", "register_full_backward_hook"], [200, 1, 1, "", "register_full_backward_pre_hook"], [200, 1, 1, "", "register_load_state_dict_post_hook"], [200, 1, 1, "", "register_load_state_dict_pre_hook"], [200, 1, 1, "", "register_module"], [200, 1, 1, "", "register_parameter"], [200, 1, 1, "", "register_state_dict_post_hook"], [200, 1, 1, "", "register_state_dict_pre_hook"], [200, 1, 1, "", "requires_grad_"], [200, 1, 1, "", "set_extra_state"], [200, 1, 1, "", "set_submodule"], [200, 1, 1, "", "share_memory"], [200, 1, 1, "", "state_dict"], [200, 1, 1, "", "to"], [200, 1, 1, "", "to_empty"], [200, 1, 1, "", "train"], [200, 1, 1, "", "transform_action_spec"], [200, 1, 1, "", "transform_done_spec"], [200, 1, 1, "", "transform_env_batch_size"], [200, 1, 1, "", "transform_env_device"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_output_spec"], [200, 1, 1, "", "transform_reward_spec"], [200, 1, 1, "", "transform_state_spec"], [200, 1, 1, "", "type"], [200, 1, 1, "", "xpu"], [200, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.MCPToolTransform": [[201, 1, 1, "", "add_module"], [201, 1, 1, "", "apply"], [201, 1, 1, "", "bfloat16"], [201, 1, 1, "", "buffers"], [201, 1, 1, "", "children"], [201, 1, 1, "", "close"], [201, 2, 1, "", "collector"], [201, 1, 1, "", "compile"], [201, 2, 1, "", "container"], [201, 1, 1, "", "cpu"], [201, 1, 1, "", "cuda"], [201, 1, 1, "", "double"], [201, 1, 1, "", "eval"], [201, 1, 1, "", "extra_repr"], [201, 1, 1, "", "float"], [201, 1, 1, "", "forward"], [201, 1, 1, "", "get_buffer"], [201, 1, 1, "", "get_extra_state"], [201, 1, 1, "", "get_parameter"], [201, 1, 1, "", "get_submodule"], [201, 1, 1, "", "half"], [201, 1, 1, "", "init"], [201, 1, 1, "", "inv"], [201, 1, 1, "", "ipu"], [201, 1, 1, "", "load_state_dict"], [201, 1, 1, "", "modules"], [201, 1, 1, "", "mtia"], [201, 1, 1, "", "named_buffers"], [201, 1, 1, "", "named_children"], [201, 1, 1, "", "named_modules"], [201, 1, 1, "", "named_parameters"], [201, 1, 1, "", "parameters"], [201, 2, 1, "", "parent"], [201, 1, 1, "", "register_backward_hook"], [201, 1, 1, "", "register_buffer"], [201, 1, 1, "", "register_forward_hook"], [201, 1, 1, "", "register_forward_pre_hook"], [201, 1, 1, "", "register_full_backward_hook"], [201, 1, 1, "", "register_full_backward_pre_hook"], [201, 1, 1, "", "register_load_state_dict_post_hook"], [201, 1, 1, "", "register_load_state_dict_pre_hook"], [201, 1, 1, "", "register_module"], [201, 1, 1, "", "register_parameter"], [201, 1, 1, "", "register_state_dict_post_hook"], [201, 1, 1, "", "register_state_dict_pre_hook"], [201, 1, 1, "", "requires_grad_"], [201, 1, 1, "", "set_extra_state"], [201, 1, 1, "", "set_submodule"], [201, 1, 1, "", "share_memory"], [201, 1, 1, "", "state_dict"], [201, 1, 1, "", "to"], [201, 1, 1, "", "to_empty"], [201, 1, 1, "", "train"], [201, 1, 1, "", "transform_action_spec"], [201, 1, 1, "", "transform_done_spec"], [201, 1, 1, "", "transform_env_batch_size"], [201, 1, 1, "", "transform_env_device"], [201, 1, 1, "", "transform_input_spec"], [201, 1, 1, "", "transform_observation_spec"], [201, 1, 1, "", "transform_output_spec"], [201, 1, 1, "", "transform_reward_spec"], [201, 1, 1, "", "transform_state_spec"], [201, 1, 1, "", "type"], [201, 1, 1, "", "xpu"], [201, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PolicyVersion": [[202, 1, 1, "", "add_module"], [202, 1, 1, "", "apply"], [202, 1, 1, "", "bfloat16"], [202, 1, 1, "", "buffers"], [202, 1, 1, "", "children"], [202, 1, 1, "", "close"], [202, 2, 1, "", "collector"], [202, 1, 1, "", "compile"], [202, 2, 1, "", "container"], [202, 1, 1, "", "cpu"], [202, 1, 1, "", "cuda"], [202, 1, 1, "", "double"], [202, 1, 1, "", "eval"], [202, 1, 1, "", "extra_repr"], [202, 1, 1, "", "float"], [202, 1, 1, "", "forward"], [202, 1, 1, "", "get_buffer"], [202, 1, 1, "", "get_extra_state"], [202, 1, 1, "", "get_parameter"], [202, 1, 1, "", "get_submodule"], [202, 1, 1, "", "half"], [202, 1, 1, "", "increment_version"], [202, 1, 1, "", "init"], [202, 1, 1, "", "inv"], [202, 1, 1, "", "ipu"], [202, 1, 1, "", "load_state_dict"], [202, 1, 1, "", "modules"], [202, 1, 1, "", "mtia"], [202, 1, 1, "", "named_buffers"], [202, 1, 1, "", "named_children"], [202, 1, 1, "", "named_modules"], [202, 1, 1, "", "named_parameters"], [202, 1, 1, "", "parameters"], [202, 2, 1, "", "parent"], [202, 1, 1, "", "register_backward_hook"], [202, 1, 1, "", "register_buffer"], [202, 1, 1, "", "register_forward_hook"], [202, 1, 1, "", "register_forward_pre_hook"], [202, 1, 1, "", "register_full_backward_hook"], [202, 1, 1, "", "register_full_backward_pre_hook"], [202, 1, 1, "", "register_load_state_dict_post_hook"], [202, 1, 1, "", "register_load_state_dict_pre_hook"], [202, 1, 1, "", "register_module"], [202, 1, 1, "", "register_parameter"], [202, 1, 1, "", "register_state_dict_post_hook"], [202, 1, 1, "", "register_state_dict_pre_hook"], [202, 1, 1, "", "requires_grad_"], [202, 1, 1, "", "set_extra_state"], [202, 1, 1, "", "set_submodule"], [202, 1, 1, "", "share_memory"], [202, 1, 1, "", "state_dict"], [202, 1, 1, "", "to"], [202, 1, 1, "", "to_empty"], [202, 1, 1, "", "train"], [202, 1, 1, "", "transform_action_spec"], [202, 1, 1, "", "transform_done_spec"], [202, 1, 1, "", "transform_env_batch_size"], [202, 1, 1, "", "transform_env_device"], [202, 1, 1, "", "transform_input_spec"], [202, 1, 1, "", "transform_observation_spec"], [202, 1, 1, "", "transform_output_spec"], [202, 1, 1, "", "transform_reward_spec"], [202, 1, 1, "", "transform_state_spec"], [202, 1, 1, "", "type"], [202, 2, 1, "", "version"], [202, 1, 1, "", "xpu"], [202, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PythonInterpreter": [[203, 1, 1, "", "add_module"], [203, 1, 1, "", "apply"], [203, 1, 1, "", "bfloat16"], [203, 1, 1, "", "buffers"], [203, 1, 1, "", "children"], [203, 1, 1, "", "clone"], [203, 1, 1, "", "close"], [203, 2, 1, "", "collector"], [203, 1, 1, "", "compile"], [203, 2, 1, "", "container"], [203, 1, 1, "", "cpu"], [203, 1, 1, "", "cuda"], [203, 1, 1, "", "double"], [203, 1, 1, "", "eval"], [203, 1, 1, "", "extra_repr"], [203, 1, 1, "", "float"], [203, 1, 1, "", "forward"], [203, 1, 1, "", "get_buffer"], [203, 1, 1, "", "get_extra_state"], [203, 1, 1, "", "get_parameter"], [203, 1, 1, "", "get_submodule"], [203, 1, 1, "", "half"], [203, 1, 1, "", "init"], [203, 1, 1, "", "inv"], [203, 1, 1, "", "ipu"], [203, 1, 1, "", "load_state_dict"], [203, 1, 1, "", "modules"], [203, 1, 1, "", "mtia"], [203, 1, 1, "", "named_buffers"], [203, 1, 1, "", "named_children"], [203, 1, 1, "", "named_modules"], [203, 1, 1, "", "named_parameters"], [203, 1, 1, "", "parameters"], [203, 2, 1, "", "parent"], [203, 1, 1, "", "register_backward_hook"], [203, 1, 1, "", "register_buffer"], [203, 1, 1, "", "register_forward_hook"], [203, 1, 1, "", "register_forward_pre_hook"], [203, 1, 1, "", "register_full_backward_hook"], [203, 1, 1, "", "register_full_backward_pre_hook"], [203, 1, 1, "", "register_load_state_dict_post_hook"], [203, 1, 1, "", "register_load_state_dict_pre_hook"], [203, 1, 1, "", "register_module"], [203, 1, 1, "", "register_parameter"], [203, 1, 1, "", "register_state_dict_post_hook"], [203, 1, 1, "", "register_state_dict_pre_hook"], [203, 1, 1, "", "requires_grad_"], [203, 1, 1, "", "set_extra_state"], [203, 1, 1, "", "set_submodule"], [203, 1, 1, "", "share_memory"], [203, 1, 1, "", "state_dict"], [203, 1, 1, "", "to"], [203, 1, 1, "", "to_empty"], [203, 1, 1, "", "train"], [203, 1, 1, "", "transform_action_spec"], [203, 1, 1, "", "transform_done_spec"], [203, 1, 1, "", "transform_env_batch_size"], [203, 1, 1, "", "transform_env_device"], [203, 1, 1, "", "transform_input_spec"], [203, 1, 1, "", "transform_observation_spec"], [203, 1, 1, "", "transform_output_spec"], [203, 1, 1, "", "transform_reward_spec"], [203, 1, 1, "", "transform_state_spec"], [203, 1, 1, "", "type"], [203, 1, 1, "", "xpu"], [203, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveKL": [[204, 1, 1, "", "add_module"], [204, 1, 1, "", "append"], [204, 1, 1, "", "apply"], [204, 1, 1, "", "bfloat16"], [204, 1, 1, "", "buffers"], [204, 1, 1, "", "children"], [204, 1, 1, "", "close"], [204, 2, 1, "", "collector"], [204, 1, 1, "", "compile"], [204, 2, 1, "", "container"], [204, 1, 1, "", "cpu"], [204, 1, 1, "", "cuda"], [204, 1, 1, "", "double"], [204, 1, 1, "", "eval"], [204, 1, 1, "", "extra_repr"], [204, 1, 1, "", "float"], [204, 1, 1, "", "forward"], [204, 1, 1, "", "get_buffer"], [204, 1, 1, "", "get_extra_state"], [204, 1, 1, "", "get_parameter"], [204, 1, 1, "", "get_submodule"], [204, 1, 1, "", "half"], [204, 1, 1, "", "init"], [204, 1, 1, "", "insert"], [204, 1, 1, "", "inv"], [204, 1, 1, "", "ipu"], [204, 1, 1, "", "load_state_dict"], [204, 1, 1, "", "modules"], [204, 1, 1, "", "mtia"], [204, 1, 1, "", "named_buffers"], [204, 1, 1, "", "named_children"], [204, 1, 1, "", "named_modules"], [204, 1, 1, "", "named_parameters"], [204, 1, 1, "", "parameters"], [204, 2, 1, "", "parent"], [204, 1, 1, "", "pop"], [204, 1, 1, "", "register_backward_hook"], [204, 1, 1, "", "register_buffer"], [204, 1, 1, "", "register_forward_hook"], [204, 1, 1, "", "register_forward_pre_hook"], [204, 1, 1, "", "register_full_backward_hook"], [204, 1, 1, "", "register_full_backward_pre_hook"], [204, 1, 1, "", "register_load_state_dict_post_hook"], [204, 1, 1, "", "register_load_state_dict_pre_hook"], [204, 1, 1, "", "register_module"], [204, 1, 1, "", "register_parameter"], [204, 1, 1, "", "register_state_dict_post_hook"], [204, 1, 1, "", "register_state_dict_pre_hook"], [204, 1, 1, "", "requires_grad_"], [204, 1, 1, "", "set_extra_state"], [204, 1, 1, "", "set_submodule"], [204, 1, 1, "", "share_memory"], [204, 1, 1, "", "state_dict"], [204, 1, 1, "", "to"], [204, 1, 1, "", "to_empty"], [204, 1, 1, "", "train"], [204, 1, 1, "", "transform_action_spec"], [204, 1, 1, "", "transform_done_spec"], [204, 1, 1, "", "transform_env_batch_size"], [204, 1, 1, "", "transform_env_device"], [204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_observation_spec"], [204, 1, 1, "", "transform_output_spec"], [204, 1, 1, "", "transform_reward_spec"], [204, 1, 1, "", "transform_state_spec"], [204, 1, 1, "", "type"], [204, 1, 1, "", "xpu"], [204, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveLogProb": [[205, 1, 1, "", "add_module"], [205, 1, 1, "", "apply"], [205, 1, 1, "", "bfloat16"], [205, 1, 1, "", "buffers"], [205, 1, 1, "", "children"], [205, 1, 1, "", "close"], [205, 2, 1, "", "collector"], [205, 1, 1, "", "compile"], [205, 2, 1, "", "container"], [205, 1, 1, "", "cpu"], [205, 1, 1, "", "cuda"], [205, 1, 1, "", "double"], [205, 1, 1, "", "eval"], [205, 1, 1, "", "extra_repr"], [205, 1, 1, "", "float"], [205, 1, 1, "", "forward"], [205, 1, 1, "", "get_buffer"], [205, 1, 1, "", "get_extra_state"], [205, 1, 1, "", "get_parameter"], [205, 1, 1, "", "get_submodule"], [205, 1, 1, "", "half"], [205, 1, 1, "", "init"], [205, 1, 1, "", "inv"], [205, 1, 1, "", "ipu"], [205, 1, 1, "", "load_state_dict"], [205, 1, 1, "", "modules"], [205, 1, 1, "", "mtia"], [205, 1, 1, "", "named_buffers"], [205, 1, 1, "", "named_children"], [205, 1, 1, "", "named_modules"], [205, 1, 1, "", "named_parameters"], [205, 1, 1, "", "parameters"], [205, 2, 1, "", "parent"], [205, 1, 1, "", "register_backward_hook"], [205, 1, 1, "", "register_buffer"], [205, 1, 1, "", "register_forward_hook"], [205, 1, 1, "", "register_forward_pre_hook"], [205, 1, 1, "", "register_full_backward_hook"], [205, 1, 1, "", "register_full_backward_pre_hook"], [205, 1, 1, "", "register_load_state_dict_post_hook"], [205, 1, 1, "", "register_load_state_dict_pre_hook"], [205, 1, 1, "", "register_module"], [205, 1, 1, "", "register_parameter"], [205, 1, 1, "", "register_state_dict_post_hook"], [205, 1, 1, "", "register_state_dict_pre_hook"], [205, 1, 1, "", "requires_grad_"], [205, 1, 1, "", "set_extra_state"], [205, 1, 1, "", "set_submodule"], [205, 1, 1, "", "share_memory"], [205, 1, 1, "", "state_dict"], [205, 1, 1, "", "to"], [205, 1, 1, "", "to_empty"], [205, 1, 1, "", "train"], [205, 1, 1, "", "transform_action_spec"], [205, 1, 1, "", "transform_done_spec"], [205, 1, 1, "", "transform_env_batch_size"], [205, 1, 1, "", "transform_env_device"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"], [205, 1, 1, "", "transform_output_spec"], [205, 1, 1, "", "transform_reward_spec"], [205, 1, 1, "", "transform_state_spec"], [205, 1, 1, "", "type"], [205, 1, 1, "", "xpu"], [205, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.TemplateTransform": [[206, 1, 1, "", "add_module"], [206, 1, 1, "", "apply"], [206, 1, 1, "", "bfloat16"], [206, 1, 1, "", "buffers"], [206, 1, 1, "", "children"], [206, 1, 1, "", "close"], [206, 2, 1, "", "collector"], [206, 1, 1, "", "compile"], [206, 2, 1, "", "container"], [206, 1, 1, "", "cpu"], [206, 1, 1, "", "cuda"], [206, 1, 1, "", "double"], [206, 1, 1, "", "eval"], [206, 1, 1, "", "extra_repr"], [206, 1, 1, "", "float"], [206, 1, 1, "", "forward"], [206, 1, 1, "", "get_buffer"], [206, 1, 1, "", "get_extra_state"], [206, 1, 1, "", "get_parameter"], [206, 1, 1, "", "get_submodule"], [206, 1, 1, "", "half"], [206, 1, 1, "", "init"], [206, 1, 1, "", "inv"], [206, 1, 1, "", "ipu"], [206, 1, 1, "", "load_state_dict"], [206, 1, 1, "", "modules"], [206, 1, 1, "", "mtia"], [206, 1, 1, "", "named_buffers"], [206, 1, 1, "", "named_children"], [206, 1, 1, "", "named_modules"], [206, 1, 1, "", "named_parameters"], [206, 1, 1, "", "parameters"], [206, 2, 1, "", "parent"], [206, 1, 1, "", "register_backward_hook"], [206, 1, 1, "", "register_buffer"], [206, 1, 1, "", "register_forward_hook"], [206, 1, 1, "", "register_forward_pre_hook"], [206, 1, 1, "", "register_full_backward_hook"], [206, 1, 1, "", "register_full_backward_pre_hook"], [206, 1, 1, "", "register_load_state_dict_post_hook"], [206, 1, 1, "", "register_load_state_dict_pre_hook"], [206, 1, 1, "", "register_module"], [206, 1, 1, "", "register_parameter"], [206, 1, 1, "", "register_state_dict_post_hook"], [206, 1, 1, "", "register_state_dict_pre_hook"], [206, 1, 1, "", "requires_grad_"], [206, 1, 1, "", "set_extra_state"], [206, 1, 1, "", "set_submodule"], [206, 1, 1, "", "share_memory"], [206, 1, 1, "", "state_dict"], [206, 1, 1, "", "to"], [206, 1, 1, "", "to_empty"], [206, 1, 1, "", "train"], [206, 1, 1, "", "transform_action_spec"], [206, 1, 1, "", "transform_done_spec"], [206, 1, 1, "", "transform_env_batch_size"], [206, 1, 1, "", "transform_env_device"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"], [206, 1, 1, "", "transform_output_spec"], [206, 1, 1, "", "transform_reward_spec"], [206, 1, 1, "", "transform_state_spec"], [206, 1, 1, "", "type"], [206, 1, 1, "", "xpu"], [206, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.Tokenizer": [[207, 1, 1, "", "add_module"], [207, 1, 1, "", "apply"], [207, 1, 1, "", "bfloat16"], [207, 1, 1, "", "buffers"], [207, 1, 1, "", "children"], [207, 1, 1, "", "close"], [207, 2, 1, "", "collector"], [207, 1, 1, "", "compile"], [207, 2, 1, "", "container"], [207, 1, 1, "", "cpu"], [207, 1, 1, "", "cuda"], [207, 1, 1, "", "double"], [207, 1, 1, "", "eval"], [207, 1, 1, "", "extra_repr"], [207, 1, 1, "", "float"], [207, 1, 1, "", "forward"], [207, 1, 1, "", "get_buffer"], [207, 1, 1, "", "get_extra_state"], [207, 1, 1, "", "get_parameter"], [207, 1, 1, "", "get_submodule"], [207, 1, 1, "", "half"], [207, 1, 1, "", "init"], [207, 1, 1, "", "inv"], [207, 1, 1, "", "ipu"], [207, 1, 1, "", "load_state_dict"], [207, 1, 1, "", "modules"], [207, 1, 1, "", "mtia"], [207, 1, 1, "", "named_buffers"], [207, 1, 1, "", "named_children"], [207, 1, 1, "", "named_modules"], [207, 1, 1, "", "named_parameters"], [207, 1, 1, "", "parameters"], [207, 2, 1, "", "parent"], [207, 1, 1, "", "register_backward_hook"], [207, 1, 1, "", "register_buffer"], [207, 1, 1, "", "register_forward_hook"], [207, 1, 1, "", "register_forward_pre_hook"], [207, 1, 1, "", "register_full_backward_hook"], [207, 1, 1, "", "register_full_backward_pre_hook"], [207, 1, 1, "", "register_load_state_dict_post_hook"], [207, 1, 1, "", "register_load_state_dict_pre_hook"], [207, 1, 1, "", "register_module"], [207, 1, 1, "", "register_parameter"], [207, 1, 1, "", "register_state_dict_post_hook"], [207, 1, 1, "", "register_state_dict_pre_hook"], [207, 1, 1, "", "requires_grad_"], [207, 1, 1, "", "set_extra_state"], [207, 1, 1, "", "set_submodule"], [207, 1, 1, "", "share_memory"], [207, 1, 1, "", "state_dict"], [207, 1, 1, "", "to"], [207, 1, 1, "", "to_empty"], [207, 1, 1, "", "train"], [207, 1, 1, "", "transform_action_spec"], [207, 1, 1, "", "transform_done_spec"], [207, 1, 1, "", "transform_env_batch_size"], [207, 1, 1, "", "transform_env_device"], [207, 1, 1, "", "transform_input_spec"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "transform_output_spec"], [207, 1, 1, "", "transform_reward_spec"], [207, 1, 1, "", "transform_state_spec"], [207, 1, 1, "", "type"], [207, 1, 1, "", "xpu"], [207, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[211, 3, 1, "", "DreamerDecoder"], [212, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[218, 0, 1, "", "ActionDiscretizer"], [219, 0, 1, "", "ActionMask"], [220, 0, 1, "", "AutoResetEnv"], [221, 0, 1, "", "AutoResetTransform"], [222, 0, 1, "", "BatchSizeTransform"], [223, 0, 1, "", "BinarizeReward"], [224, 0, 1, "", "BurnInTransform"], [225, 0, 1, "", "CatFrames"], [226, 0, 1, "", "CatTensors"], [227, 0, 1, "", "CenterCrop"], [228, 0, 1, "", "ClipTransform"], [229, 0, 1, "", "Compose"], [230, 0, 1, "", "ConditionalPolicySwitch"], [231, 0, 1, "", "ConditionalSkip"], [232, 0, 1, "", "Crop"], [233, 0, 1, "", "DTypeCastTransform"], [234, 0, 1, "", "DeviceCastTransform"], [235, 0, 1, "", "DiscreteActionProjection"], [236, 0, 1, "", "DoubleToFloat"], [237, 0, 1, "", "EndOfLifeTransform"], [238, 0, 1, "", "ExcludeTransform"], [239, 0, 1, "", "FiniteTensorDictCheck"], [240, 0, 1, "", "FlattenObservation"], [241, 0, 1, "", "FrameSkipTransform"], [242, 0, 1, "", "GrayScale"], [243, 0, 1, "", "Hash"], [244, 0, 1, "", "InitTracker"], [245, 0, 1, "", "KLRewardTransform"], [246, 0, 1, "", "LineariseRewards"], [247, 0, 1, "", "MultiAction"], [248, 0, 1, "", "NoopResetEnv"], [249, 0, 1, "", "ObservationNorm"], [250, 0, 1, "", "ObservationTransform"], [251, 0, 1, "", "PermuteTransform"], [252, 0, 1, "", "PinMemoryTransform"], [253, 0, 1, "", "R3MTransform"], [254, 0, 1, "", "RandomCropTensorDict"], [255, 0, 1, "", "RemoveEmptySpecs"], [256, 0, 1, "", "RenameTransform"], [257, 0, 1, "", "Resize"], [258, 0, 1, "", "Reward2GoTransform"], [259, 0, 1, "", "RewardClipping"], [260, 0, 1, "", "RewardScaling"], [261, 0, 1, "", "RewardSum"], [262, 0, 1, "", "SelectTransform"], [263, 0, 1, "", "SignTransform"], [264, 0, 1, "", "SqueezeTransform"], [265, 0, 1, "", "Stack"], [266, 0, 1, "", "StepCounter"], [267, 0, 1, "", "TargetReturn"], [268, 0, 1, "", "TensorDictPrimer"], [269, 0, 1, "", "TimeMaxPool"], [270, 0, 1, "", "Timer"], [271, 0, 1, "", "ToTensorImage"], [272, 0, 1, "", "Tokenizer"], [273, 0, 1, "", "TrajCounter"], [274, 0, 1, "", "Transform"], [275, 0, 1, "", "TransformedEnv"], [276, 0, 1, "", "UnaryTransform"], [277, 0, 1, "", "UnsqueezeTransform"], [278, 0, 1, "", "VC1Transform"], [279, 0, 1, "", "VIPRewardTransform"], [280, 0, 1, "", "VIPTransform"], [281, 0, 1, "", "VecGymEnvTransform"], [282, 0, 1, "", "VecNorm"], [283, 0, 1, "", "VecNormV2"], [284, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[218, 0, 1, "", "SamplingStrategy"], [218, 1, 1, "", "inv"], [218, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[219, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[220, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[221, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[222, 1, 1, "", "forward"], [222, 1, 1, "", "transform_env_batch_size"], [222, 1, 1, "", "transform_input_spec"], [222, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[223, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[224, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_rb_transform_and_sampler"], [225, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[226, 1, 1, "", "forward"], [226, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[227, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[228, 1, 1, "", "transform_observation_spec"], [228, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[229, 1, 1, "", "append"], [229, 1, 1, "", "close"], [229, 1, 1, "", "forward"], [229, 1, 1, "", "init"], [229, 1, 1, "", "insert"], [229, 1, 1, "", "pop"], [229, 1, 1, "", "to"], [229, 1, 1, "", "transform_action_spec"], [229, 1, 1, "", "transform_env_batch_size"], [229, 1, 1, "", "transform_env_device"], [229, 1, 1, "", "transform_input_spec"], [229, 1, 1, "", "transform_observation_spec"], [229, 1, 1, "", "transform_output_spec"], [229, 1, 1, "", "transform_reward_spec"], [229, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalPolicySwitch": [[230, 1, 1, "", "forward"]], "torchrl.envs.transforms.ConditionalSkip": [[231, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[232, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "transform_input_spec"], [233, 1, 1, "", "transform_observation_spec"], [233, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "transform_action_spec"], [234, 1, 1, "", "transform_done_spec"], [234, 1, 1, "", "transform_env_device"], [234, 1, 1, "", "transform_input_spec"], [234, 1, 1, "", "transform_observation_spec"], [234, 1, 1, "", "transform_output_spec"], [234, 1, 1, "", "transform_reward_spec"], [234, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[235, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "register_keys"], [237, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[239, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[241, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[242, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[243, 1, 1, "", "get_input_from_hash"], [243, 1, 1, "", "reproducible_hash"], [243, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[246, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[247, 1, 1, "", "transform_input_spec"], [247, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[249, 1, 1, "", "init_stats"], [249, 1, 1, "", "transform_action_spec"], [249, 1, 1, "", "transform_observation_spec"], [249, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[251, 1, 1, "", "transform_input_spec"], [251, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[252, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[253, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[254, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "transform_input_spec"], [255, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "transform_input_spec"], [256, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[257, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[258, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[259, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[260, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "transform_input_spec"], [261, 1, 1, "", "transform_observation_spec"], [261, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[263, 1, 1, "", "transform_observation_spec"], [263, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "transform_done_spec"], [265, 1, 1, "", "transform_input_spec"], [265, 1, 1, "", "transform_observation_spec"], [265, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "transform_input_spec"], [266, 1, 1, "", "transform_observation_spec"], [266, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "transform_input_spec"], [267, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "to"], [268, 1, 1, "", "transform_input_spec"], [268, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[271, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "transform_done_spec"], [272, 1, 1, "", "transform_input_spec"], [272, 1, 1, "", "transform_observation_spec"], [272, 1, 1, "", "transform_output_spec"], [272, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "load_state_dict"], [273, 1, 1, "", "state_dict"], [273, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[274, 1, 1, "", "clone"], [274, 1, 1, "", "close"], [274, 2, 1, "", "collector"], [274, 2, 1, "", "container"], [274, 1, 1, "", "forward"], [274, 1, 1, "", "init"], [274, 1, 1, "", "inv"], [274, 2, 1, "", "parent"], [274, 1, 1, "", "reset_parent"], [274, 1, 1, "", "set_container"], [274, 1, 1, "", "to"], [274, 1, 1, "", "transform_action_spec"], [274, 1, 1, "", "transform_done_spec"], [274, 1, 1, "", "transform_env_batch_size"], [274, 1, 1, "", "transform_env_device"], [274, 1, 1, "", "transform_input_spec"], [274, 1, 1, "", "transform_observation_spec"], [274, 1, 1, "", "transform_output_spec"], [274, 1, 1, "", "transform_reward_spec"], [274, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[275, 1, 1, "", "add_truncated_keys"], [275, 1, 1, "", "append_transform"], [275, 2, 1, "", "batch_locked"], [275, 2, 1, "", "batch_size"], [275, 1, 1, "", "empty_cache"], [275, 1, 1, "", "eval"], [275, 2, 1, "", "input_spec"], [275, 1, 1, "", "insert_transform"], [275, 1, 1, "", "load_state_dict"], [275, 2, 1, "", "output_spec"], [275, 1, 1, "", "rand_action"], [275, 1, 1, "", "set_missing_tolerance"], [275, 1, 1, "", "set_seed"], [275, 1, 1, "", "state_dict"], [275, 1, 1, "", "to"], [275, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[276, 1, 1, "", "transform_action_spec"], [276, 1, 1, "", "transform_done_spec"], [276, 1, 1, "", "transform_input_spec"], [276, 1, 1, "", "transform_observation_spec"], [276, 1, 1, "", "transform_output_spec"], [276, 1, 1, "", "transform_reward_spec"], [276, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[277, 1, 1, "", "transform_action_spec"], [277, 1, 1, "", "transform_observation_spec"], [277, 1, 1, "", "transform_reward_spec"], [277, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_noload_model"], [278, 1, 1, "", "to"], [278, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[280, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[282, 1, 1, "", "build_td_for_shared_vecnorm"], [282, 1, 1, "", "forward"], [282, 1, 1, "", "freeze"], [282, 1, 1, "", "frozen_copy"], [282, 1, 1, "", "get_extra_state"], [282, 2, 1, "", "loc"], [282, 2, 1, "", "scale"], [282, 1, 1, "", "set_extra_state"], [282, 2, 1, "", "standard_normal"], [282, 1, 1, "", "to_observation_norm"], [282, 1, 1, "", "transform_observation_spec"], [282, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[283, 1, 1, "", "clone"], [283, 1, 1, "id0", "freeze"], [283, 1, 1, "id1", "frozen_copy"], [283, 1, 1, "id2", "get_extra_state"], [283, 2, 1, "id3", "loc"], [283, 2, 1, "id4", "scale"], [283, 1, 1, "id5", "set_extra_state"], [283, 2, 1, "id6", "standard_normal"], [283, 1, 1, "", "to_observation_norm"], [283, 1, 1, "id7", "transform_observation_spec"], [283, 1, 1, "id8", "transform_output_spec"], [283, 1, 1, "id9", "transform_reward_spec"], [283, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[285, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[285, 1, 1, "", "add_module"], [285, 1, 1, "", "apply"], [285, 1, 1, "", "bfloat16"], [285, 1, 1, "", "buffers"], [285, 1, 1, "", "children"], [285, 1, 1, "", "close"], [285, 2, 1, "", "collector"], [285, 1, 1, "", "compile"], [285, 2, 1, "", "container"], [285, 1, 1, "", "cpu"], [285, 1, 1, "", "cuda"], [285, 1, 1, "", "double"], [285, 1, 1, "", "eval"], [285, 1, 1, "", "extra_repr"], [285, 1, 1, "", "float"], [285, 1, 1, "", "forward"], [285, 1, 1, "", "get_buffer"], [285, 1, 1, "", "get_extra_state"], [285, 1, 1, "", "get_parameter"], [285, 1, 1, "", "get_submodule"], [285, 1, 1, "", "half"], [285, 1, 1, "", "init"], [285, 1, 1, "", "inv"], [285, 1, 1, "", "ipu"], [285, 1, 1, "", "load_state_dict"], [285, 1, 1, "", "modules"], [285, 1, 1, "", "mtia"], [285, 2, 1, "", "n_steps"], [285, 1, 1, "", "named_buffers"], [285, 1, 1, "", "named_children"], [285, 1, 1, "", "named_modules"], [285, 1, 1, "", "named_parameters"], [285, 1, 1, "", "parameters"], [285, 2, 1, "", "parent"], [285, 1, 1, "", "register_backward_hook"], [285, 1, 1, "", "register_buffer"], [285, 1, 1, "", "register_forward_hook"], [285, 1, 1, "", "register_forward_pre_hook"], [285, 1, 1, "", "register_full_backward_hook"], [285, 1, 1, "", "register_full_backward_pre_hook"], [285, 1, 1, "", "register_load_state_dict_post_hook"], [285, 1, 1, "", "register_load_state_dict_pre_hook"], [285, 1, 1, "", "register_module"], [285, 1, 1, "", "register_parameter"], [285, 1, 1, "", "register_state_dict_post_hook"], [285, 1, 1, "", "register_state_dict_pre_hook"], [285, 1, 1, "", "requires_grad_"], [285, 1, 1, "", "set_extra_state"], [285, 1, 1, "", "set_submodule"], [285, 1, 1, "", "share_memory"], [285, 1, 1, "", "state_dict"], [285, 1, 1, "", "to"], [285, 1, 1, "", "to_empty"], [285, 1, 1, "", "train"], [285, 1, 1, "", "transform_action_spec"], [285, 1, 1, "", "transform_done_spec"], [285, 1, 1, "", "transform_env_batch_size"], [285, 1, 1, "", "transform_env_device"], [285, 1, 1, "", "transform_input_spec"], [285, 1, 1, "", "transform_observation_spec"], [285, 1, 1, "", "transform_output_spec"], [285, 1, 1, "", "transform_reward_spec"], [285, 1, 1, "", "transform_state_spec"], [285, 1, 1, "", "type"], [285, 1, 1, "", "xpu"], [285, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[286, 1, 1, "", "get_class_that_defined_method"], [286, 1, 1, "", "import_module"], [286, 1, 1, "", "module_set"], [286, 1, 1, "", "reset"]], "torchrl.modules": [[287, 0, 1, "", "AdditiveGaussianModule"], [288, 0, 1, "", "BatchRenorm1d"], [289, 0, 1, "", "CEMPlanner"], [290, 0, 1, "", "ConsistentDropout"], [291, 0, 1, "", "ConsistentDropoutModule"], [292, 0, 1, "", "Conv3dNet"], [293, 0, 1, "", "ConvNet"], [294, 0, 1, "", "DTActor"], [295, 0, 1, "", "DdpgCnnActor"], [296, 0, 1, "", "DdpgCnnQNet"], [297, 0, 1, "", "DdpgMlpActor"], [298, 0, 1, "", "DdpgMlpQNet"], [299, 0, 1, "", "DecisionTransformer"], [300, 0, 1, "", "Delta"], [301, 0, 1, "", "DistributionalDQNnet"], [302, 0, 1, "", "DistributionalQValueHook"], [303, 0, 1, "", "DreamerActor"], [304, 0, 1, "", "DuelingCnnDQNet"], [305, 0, 1, "", "EGreedyModule"], [306, 0, 1, "", "GRU"], [307, 0, 1, "", "GRUCell"], [308, 0, 1, "", "GRUModule"], [309, 0, 1, "", "IndependentNormal"], [310, 0, 1, "", "LLMMaskedCategorical"], [311, 0, 1, "", "LSTM"], [312, 0, 1, "", "LSTMCell"], [313, 0, 1, "", "LSTMModule"], [314, 0, 1, "", "MLP"], [315, 0, 1, "", "MPCPlannerBase"], [316, 0, 1, "", "MPPIPlanner"], [317, 0, 1, "", "MaskedCategorical"], [318, 0, 1, "", "MaskedOneHotCategorical"], [319, 0, 1, "", "MultiAgentConvNet"], [320, 0, 1, "", "MultiAgentMLP"], [321, 0, 1, "", "MultiAgentNetBase"], [322, 0, 1, "", "NoisyLazyLinear"], [323, 0, 1, "", "NoisyLinear"], [324, 0, 1, "", "ObsDecoder"], [325, 0, 1, "", "ObsEncoder"], [326, 0, 1, "", "OneHotCategorical"], [327, 0, 1, "", "OneHotOrdinal"], [328, 0, 1, "", "OnlineDTActor"], [329, 0, 1, "", "Ordinal"], [330, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [331, 0, 1, "", "QMixer"], [332, 0, 1, "", "QValueHook"], [333, 0, 1, "", "RSSMPosterior"], [334, 0, 1, "", "RSSMPrior"], [335, 0, 1, "", "Squeeze2dLayer"], [336, 0, 1, "", "SqueezeLayer"], [337, 0, 1, "", "TanhDelta"], [338, 0, 1, "", "TanhNormal"], [339, 0, 1, "", "TruncatedNormal"], [340, 0, 1, "", "VDNMixer"], [341, 0, 1, "", "VmapModule"], [354, 0, 1, "", "recurrent_mode"], [355, 0, 1, "", "reset_noise"], [356, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[288, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[289, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[290, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[292, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[293, 1, 1, "", "default_atari_dqn"], [293, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[294, 1, 1, "", "default_config"], [294, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[295, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[296, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[297, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[298, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[299, 0, 1, "", "DTConfig"], [299, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[300, 1, 1, "", "expand"], [300, 1, 1, "", "log_prob"], [300, 2, 1, "", "mean"], [300, 2, 1, "", "mode"], [300, 1, 1, "", "rsample"], [300, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[301, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[303, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[304, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[305, 1, 1, "", "forward"], [305, 1, 1, "", "step"]], "torchrl.modules.GRU": [[306, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[307, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[308, 1, 1, "", "forward"], [308, 1, 1, "", "make_cudnn_based"], [308, 1, 1, "", "make_python_based"], [308, 1, 1, "id0", "make_tensordict_primer"], [308, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[309, 2, 1, "", "mode"]], "torchrl.modules.LLMMaskedCategorical": [[310, 1, 1, "", "clear_cache"], [310, 1, 1, "", "entropy"], [310, 1, 1, "", "log_prob"], [310, 2, 1, "", "logits"], [310, 2, 1, "", "mask"], [310, 2, 1, "", "masked_dist"], [310, 2, 1, "", "masked_logits"], [310, 2, 1, "", "mode"], [310, 2, 1, "", "position_level_masking"], [310, 2, 1, "", "probs"], [310, 1, 1, "", "rsample"], [310, 1, 1, "", "sample"]], "torchrl.modules.LSTM": [[311, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[312, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[313, 1, 1, "", "forward"], [313, 1, 1, "", "make_cudnn_based"], [313, 1, 1, "", "make_python_based"], [313, 1, 1, "id0", "make_tensordict_primer"], [313, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[314, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[316, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[317, 1, 1, "", "entropy"], [317, 1, 1, "", "log_prob"], [317, 2, 1, "", "padding_value"], [317, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[318, 1, 1, "", "log_prob"], [318, 2, 1, "", "mode"], [318, 1, 1, "", "rsample"], [318, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[321, 1, 1, "", "forward"], [321, 1, 1, "", "from_stateful_net"], [321, 1, 1, "", "get_stateful_net"], [321, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[322, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[324, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[325, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[326, 1, 1, "", "entropy"], [326, 1, 1, "", "log_prob"], [326, 2, 1, "", "mode"], [326, 1, 1, "", "rsample"], [326, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[328, 1, 1, "", "default_config"], [328, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[330, 1, 1, "", "forward"], [330, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[331, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[333, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[334, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[336, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[337, 2, 1, "", "mean"], [337, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[338, 1, 1, "", "get_mode"], [338, 2, 1, "", "mean"], [338, 2, 1, "", "mode"], [338, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[339, 1, 1, "", "log_prob"], [339, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[340, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[341, 1, 1, "", "forward"]], "torchrl.modules.llm": [[342, 0, 1, "", "ChatHistory"], [343, 0, 1, "", "LLMOnDevice"], [344, 0, 1, "", "LLMWrapperBase"], [345, 0, 1, "", "LogProbs"], [346, 0, 1, "", "Masks"], [347, 0, 1, "", "Text"], [348, 0, 1, "", "Tokens"], [349, 0, 1, "", "TransformersWrapper"], [350, 0, 1, "", "make_vllm_worker"], [351, 0, 1, "", "stateless_init_process_group"], [352, 0, 1, "", "vLLMWorker"], [353, 0, 1, "", "vLLMWrapper"]], "torchrl.modules.llm.ChatHistory": [[342, 1, 1, "", "default_spec"], [342, 2, 1, "", "device"], [342, 1, 1, "", "dumps"], [342, 1, 1, "", "fields"], [342, 1, 1, "", "from_tensordict"], [342, 1, 1, "", "get"], [342, 1, 1, "", "load"], [342, 1, 1, "", "load_"], [342, 1, 1, "", "load_memmap"], [342, 1, 1, "", "load_state_dict"], [342, 1, 1, "", "memmap"], [342, 1, 1, "", "memmap_"], [342, 1, 1, "", "memmap_like"], [342, 1, 1, "", "memmap_refresh_"], [342, 1, 1, "", "save"], [342, 1, 1, "", "set"], [342, 1, 1, "", "state_dict"], [342, 1, 1, "", "to_tensordict"], [342, 1, 1, "", "unbind"]], "torchrl.modules.llm.LLMWrapperBase": [[344, 1, 1, "", "add_module"], [344, 1, 1, "", "apply"], [344, 1, 1, "", "bfloat16"], [344, 1, 1, "", "buffers"], [344, 1, 1, "", "children"], [344, 2, 1, "", "collector"], [344, 1, 1, "", "compile"], [344, 1, 1, "", "cpu"], [344, 1, 1, "", "cuda"], [344, 1, 1, "", "double"], [344, 1, 1, "", "eval"], [344, 1, 1, "", "extra_repr"], [344, 1, 1, "", "float"], [344, 1, 1, "", "forward"], [344, 1, 1, "", "get_buffer"], [344, 1, 1, "", "get_dist"], [344, 1, 1, "", "get_extra_state"], [344, 1, 1, "", "get_new_version"], [344, 1, 1, "", "get_parameter"], [344, 1, 1, "", "get_submodule"], [344, 1, 1, "", "half"], [344, 1, 1, "", "ipu"], [344, 1, 1, "", "is_tdmodule_compatible"], [344, 1, 1, "", "load_state_dict"], [344, 1, 1, "", "modules"], [344, 1, 1, "", "mtia"], [344, 1, 1, "", "named_buffers"], [344, 1, 1, "", "named_children"], [344, 1, 1, "", "named_modules"], [344, 1, 1, "", "named_parameters"], [344, 1, 1, "", "parameters"], [344, 1, 1, "", "register_backward_hook"], [344, 1, 1, "", "register_buffer"], [344, 1, 1, "", "register_collector"], [344, 1, 1, "", "register_forward_hook"], [344, 1, 1, "", "register_forward_pre_hook"], [344, 1, 1, "", "register_full_backward_hook"], [344, 1, 1, "", "register_full_backward_pre_hook"], [344, 1, 1, "", "register_load_state_dict_post_hook"], [344, 1, 1, "", "register_load_state_dict_pre_hook"], [344, 1, 1, "", "register_module"], [344, 1, 1, "", "register_parameter"], [344, 1, 1, "", "register_state_dict_post_hook"], [344, 1, 1, "", "register_state_dict_pre_hook"], [344, 1, 1, "", "requires_grad_"], [344, 1, 1, "", "reset_out_keys"], [344, 1, 1, "", "reset_parameters_recursive"], [344, 1, 1, "", "select_out_keys"], [344, 1, 1, "", "set_extra_state"], [344, 1, 1, "", "set_submodule"], [344, 1, 1, "", "share_memory"], [344, 1, 1, "", "state_dict"], [344, 1, 1, "", "to"], [344, 1, 1, "", "to_empty"], [344, 1, 1, "", "train"], [344, 1, 1, "", "type"], [344, 1, 1, "", "xpu"], [344, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.LogProbs": [[345, 1, 1, "", "default_spec"], [345, 2, 1, "", "device"], [345, 1, 1, "", "dumps"], [345, 1, 1, "", "fields"], [345, 1, 1, "", "from_tensordict"], [345, 1, 1, "", "get"], [345, 1, 1, "", "load"], [345, 1, 1, "", "load_"], [345, 1, 1, "", "load_memmap"], [345, 1, 1, "", "load_state_dict"], [345, 1, 1, "", "memmap"], [345, 1, 1, "", "memmap_"], [345, 1, 1, "", "memmap_like"], [345, 1, 1, "", "memmap_refresh_"], [345, 1, 1, "", "save"], [345, 1, 1, "", "set"], [345, 1, 1, "", "state_dict"], [345, 1, 1, "", "to_tensordict"], [345, 1, 1, "", "unbind"]], "torchrl.modules.llm.Masks": [[346, 1, 1, "", "default_spec"], [346, 2, 1, "", "device"], [346, 1, 1, "", "dumps"], [346, 1, 1, "", "fields"], [346, 1, 1, "", "from_tensordict"], [346, 1, 1, "", "get"], [346, 1, 1, "", "load"], [346, 1, 1, "", "load_"], [346, 1, 1, "", "load_memmap"], [346, 1, 1, "", "load_state_dict"], [346, 1, 1, "", "memmap"], [346, 1, 1, "", "memmap_"], [346, 1, 1, "", "memmap_like"], [346, 1, 1, "", "memmap_refresh_"], [346, 1, 1, "", "save"], [346, 1, 1, "", "set"], [346, 1, 1, "", "state_dict"], [346, 1, 1, "", "to_tensordict"], [346, 1, 1, "", "unbind"]], "torchrl.modules.llm.Text": [[347, 1, 1, "", "default_spec"], [347, 2, 1, "", "device"], [347, 1, 1, "", "dumps"], [347, 1, 1, "", "fields"], [347, 1, 1, "", "from_tensordict"], [347, 1, 1, "", "get"], [347, 1, 1, "", "load"], [347, 1, 1, "", "load_"], [347, 1, 1, "", "load_memmap"], [347, 1, 1, "", "load_state_dict"], [347, 1, 1, "", "memmap"], [347, 1, 1, "", "memmap_"], [347, 1, 1, "", "memmap_like"], [347, 1, 1, "", "memmap_refresh_"], [347, 1, 1, "", "save"], [347, 1, 1, "", "set"], [347, 1, 1, "", "state_dict"], [347, 1, 1, "", "to_tensordict"], [347, 1, 1, "", "unbind"]], "torchrl.modules.llm.Tokens": [[348, 1, 1, "", "default_spec"], [348, 2, 1, "", "device"], [348, 1, 1, "", "dumps"], [348, 1, 1, "", "fields"], [348, 1, 1, "", "from_tensordict"], [348, 1, 1, "", "get"], [348, 1, 1, "", "load"], [348, 1, 1, "", "load_"], [348, 1, 1, "", "load_memmap"], [348, 1, 1, "", "load_state_dict"], [348, 1, 1, "", "memmap"], [348, 1, 1, "", "memmap_"], [348, 1, 1, "", "memmap_like"], [348, 1, 1, "", "memmap_refresh_"], [348, 1, 1, "", "save"], [348, 1, 1, "", "set"], [348, 1, 1, "", "state_dict"], [348, 1, 1, "", "to_tensordict"], [348, 1, 1, "", "unbind"]], "torchrl.modules.llm.TransformersWrapper": [[349, 1, 1, "", "add_module"], [349, 1, 1, "", "apply"], [349, 1, 1, "", "bfloat16"], [349, 1, 1, "", "buffers"], [349, 1, 1, "", "children"], [349, 2, 1, "", "collector"], [349, 1, 1, "", "compile"], [349, 1, 1, "", "cpu"], [349, 1, 1, "", "cuda"], [349, 1, 1, "", "double"], [349, 1, 1, "", "eval"], [349, 1, 1, "", "extra_repr"], [349, 1, 1, "", "float"], [349, 1, 1, "", "forward"], [349, 1, 1, "", "get_buffer"], [349, 1, 1, "", "get_dist"], [349, 1, 1, "", "get_extra_state"], [349, 1, 1, "", "get_new_version"], [349, 1, 1, "", "get_parameter"], [349, 1, 1, "", "get_submodule"], [349, 1, 1, "", "half"], [349, 1, 1, "", "ipu"], [349, 1, 1, "", "is_tdmodule_compatible"], [349, 1, 1, "", "load_state_dict"], [349, 1, 1, "", "modules"], [349, 1, 1, "", "mtia"], [349, 1, 1, "", "named_buffers"], [349, 1, 1, "", "named_children"], [349, 1, 1, "", "named_modules"], [349, 1, 1, "", "named_parameters"], [349, 1, 1, "", "parameters"], [349, 1, 1, "", "register_backward_hook"], [349, 1, 1, "", "register_buffer"], [349, 1, 1, "", "register_collector"], [349, 1, 1, "", "register_forward_hook"], [349, 1, 1, "", "register_forward_pre_hook"], [349, 1, 1, "", "register_full_backward_hook"], [349, 1, 1, "", "register_full_backward_pre_hook"], [349, 1, 1, "", "register_load_state_dict_post_hook"], [349, 1, 1, "", "register_load_state_dict_pre_hook"], [349, 1, 1, "", "register_module"], [349, 1, 1, "", "register_parameter"], [349, 1, 1, "", "register_state_dict_post_hook"], [349, 1, 1, "", "register_state_dict_pre_hook"], [349, 1, 1, "", "requires_grad_"], [349, 1, 1, "", "reset_out_keys"], [349, 1, 1, "", "reset_parameters_recursive"], [349, 1, 1, "", "select_out_keys"], [349, 1, 1, "", "set_extra_state"], [349, 1, 1, "", "set_submodule"], [349, 1, 1, "", "share_memory"], [349, 1, 1, "", "state_dict"], [349, 1, 1, "", "to"], [349, 1, 1, "", "to_empty"], [349, 1, 1, "", "train"], [349, 1, 1, "", "type"], [349, 1, 1, "", "xpu"], [349, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.vLLMWorker": [[352, 1, 1, "", "check_weights_changed"]], "torchrl.modules.llm.vLLMWrapper": [[353, 1, 1, "", "add_module"], [353, 1, 1, "", "apply"], [353, 1, 1, "", "bfloat16"], [353, 1, 1, "", "buffers"], [353, 1, 1, "", "children"], [353, 2, 1, "", "collector"], [353, 1, 1, "", "compile"], [353, 1, 1, "", "cpu"], [353, 1, 1, "", "cuda"], [353, 1, 1, "", "double"], [353, 1, 1, "", "eval"], [353, 1, 1, "", "extra_repr"], [353, 1, 1, "", "float"], [353, 1, 1, "", "forward"], [353, 1, 1, "", "get_buffer"], [353, 1, 1, "", "get_dist"], [353, 1, 1, "", "get_dist_with_prompt_mask"], [353, 1, 1, "", "get_extra_state"], [353, 1, 1, "", "get_new_version"], [353, 1, 1, "", "get_parameter"], [353, 1, 1, "", "get_submodule"], [353, 1, 1, "", "half"], [353, 1, 1, "", "ipu"], [353, 1, 1, "", "is_tdmodule_compatible"], [353, 1, 1, "", "load_state_dict"], [353, 1, 1, "", "modules"], [353, 1, 1, "", "mtia"], [353, 1, 1, "", "named_buffers"], [353, 1, 1, "", "named_children"], [353, 1, 1, "", "named_modules"], [353, 1, 1, "", "named_parameters"], [353, 1, 1, "", "parameters"], [353, 1, 1, "", "register_backward_hook"], [353, 1, 1, "", "register_buffer"], [353, 1, 1, "", "register_collector"], [353, 1, 1, "", "register_forward_hook"], [353, 1, 1, "", "register_forward_pre_hook"], [353, 1, 1, "", "register_full_backward_hook"], [353, 1, 1, "", "register_full_backward_pre_hook"], [353, 1, 1, "", "register_load_state_dict_post_hook"], [353, 1, 1, "", "register_load_state_dict_pre_hook"], [353, 1, 1, "", "register_module"], [353, 1, 1, "", "register_parameter"], [353, 1, 1, "", "register_state_dict_post_hook"], [353, 1, 1, "", "register_state_dict_pre_hook"], [353, 1, 1, "", "requires_grad_"], [353, 1, 1, "", "reset_out_keys"], [353, 1, 1, "", "reset_parameters_recursive"], [353, 1, 1, "", "select_out_keys"], [353, 1, 1, "", "set_extra_state"], [353, 1, 1, "", "set_submodule"], [353, 1, 1, "", "share_memory"], [353, 1, 1, "", "state_dict"], [353, 1, 1, "", "to"], [353, 1, 1, "", "to_empty"], [353, 1, 1, "", "train"], [353, 1, 1, "", "type"], [353, 1, 1, "", "xpu"], [353, 1, 1, "", "zero_grad"]], "torchrl.modules.tensordict_module": [[357, 0, 1, "", "Actor"], [358, 0, 1, "", "ActorCriticOperator"], [359, 0, 1, "", "ActorCriticWrapper"], [360, 0, 1, "", "ActorValueOperator"], [361, 0, 1, "", "DecisionTransformerInferenceWrapper"], [362, 0, 1, "", "DistributionalQValueActor"], [363, 0, 1, "", "DistributionalQValueModule"], [364, 0, 1, "", "LMHeadActorValueOperator"], [365, 0, 1, "", "MultiStepActorWrapper"], [366, 0, 1, "", "ProbabilisticActor"], [367, 0, 1, "", "QValueActor"], [368, 0, 1, "", "QValueModule"], [369, 0, 1, "", "SafeModule"], [370, 0, 1, "", "SafeProbabilisticModule"], [371, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [372, 0, 1, "", "SafeSequential"], [373, 0, 1, "", "TanhModule"], [374, 0, 1, "", "ValueOperator"], [375, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[358, 1, 1, "", "get_critic_operator"], [358, 1, 1, "", "get_policy_head"], [358, 1, 1, "", "get_value_head"], [358, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[359, 1, 1, "", "get_policy_head"], [359, 1, 1, "", "get_policy_operator"], [359, 1, 1, "", "get_value_head"], [359, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[360, 1, 1, "", "get_policy_head"], [360, 1, 1, "", "get_policy_operator"], [360, 1, 1, "", "get_value_head"], [360, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[361, 1, 1, "", "forward"], [361, 1, 1, "", "mask_context"], [361, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[363, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[365, 1, 1, "", "forward"], [365, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[368, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[369, 1, 1, "", "random"], [369, 1, 1, "", "random_sample"], [369, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[370, 1, 1, "", "random"], [370, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[373, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[375, 1, 1, "", "get_reward_operator"], [375, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[376, 0, 1, "", "biased_softplus"], [377, 0, 1, "", "get_primers_from_module"], [378, 0, 1, "", "inv_softplus"], [379, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[376, 1, 1, "", "forward"]], "torchrl.objectives": [[380, 0, 1, "", "A2CLoss"], [381, 0, 1, "", "CQLLoss"], [382, 0, 1, "", "ClipPPOLoss"], [383, 0, 1, "", "CrossQLoss"], [384, 0, 1, "", "DDPGLoss"], [385, 0, 1, "", "DQNLoss"], [386, 0, 1, "", "DTLoss"], [387, 0, 1, "", "DiscreteCQLLoss"], [388, 0, 1, "", "DiscreteIQLLoss"], [389, 0, 1, "", "DiscreteSACLoss"], [390, 0, 1, "", "DistributionalDQNLoss"], [391, 0, 1, "", "DreamerActorLoss"], [392, 0, 1, "", "DreamerModelLoss"], [393, 0, 1, "", "DreamerValueLoss"], [394, 0, 1, "", "GAILLoss"], [395, 0, 1, "", "HardUpdate"], [396, 0, 1, "", "IQLLoss"], [397, 0, 1, "", "KLPENPPOLoss"], [398, 0, 1, "", "LossModule"], [399, 0, 1, "", "OnlineDTLoss"], [400, 0, 1, "", "PPOLoss"], [401, 0, 1, "", "REDQLoss"], [402, 0, 1, "", "ReinforceLoss"], [403, 0, 1, "", "SACLoss"], [404, 0, 1, "", "SoftUpdate"], [405, 0, 1, "", "TD3BCLoss"], [406, 0, 1, "", "TD3Loss"], [407, 0, 1, "", "ValueEstimators"], [408, 0, 1, "", "default_value_kwargs"], [409, 0, 1, "", "distance_loss"], [410, 0, 1, "", "group_optimizers"], [411, 0, 1, "", "hold_out_net"], [412, 0, 1, "", "hold_out_params"], [419, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[380, 4, 1, "", "default_keys"], [380, 1, 1, "", "forward"], [380, 2, 1, "", "functional"], [380, 1, 1, "", "loss_critic"], [380, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[381, 4, 1, "", "default_keys"], [381, 1, 1, "", "forward"], [381, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[382, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[383, 1, 1, "", "actor_loss"], [383, 1, 1, "", "alpha_loss"], [383, 4, 1, "", "default_keys"], [383, 1, 1, "", "forward"], [383, 1, 1, "", "load_state_dict"], [383, 1, 1, "", "make_value_estimator"], [383, 1, 1, "", "maybe_init_target_entropy"], [383, 1, 1, "", "qvalue_loss"], [383, 1, 1, "", "set_keys"], [383, 1, 1, "", "state_dict"], [383, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[384, 4, 1, "", "default_keys"], [384, 1, 1, "", "forward"], [384, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[385, 4, 1, "", "default_keys"], [385, 1, 1, "", "forward"], [385, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[386, 4, 1, "", "default_keys"], [386, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[387, 4, 1, "", "default_keys"], [387, 1, 1, "", "forward"], [387, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[388, 4, 1, "", "default_keys"], [388, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[389, 4, 1, "", "default_keys"], [389, 1, 1, "", "forward"], [389, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[390, 4, 1, "", "default_keys"], [390, 1, 1, "", "forward"], [390, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[391, 4, 1, "", "default_keys"], [391, 1, 1, "", "forward"], [391, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[392, 4, 1, "", "default_keys"], [392, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[393, 4, 1, "", "default_keys"], [393, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[394, 4, 1, "", "default_keys"], [394, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[396, 4, 1, "", "default_keys"], [396, 1, 1, "", "forward"], [396, 1, 1, "", "loss_value_diff"], [396, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[397, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[398, 1, 1, "", "convert_to_functional"], [398, 1, 1, "", "forward"], [398, 1, 1, "", "from_stateful_net"], [398, 2, 1, "", "functional"], [398, 1, 1, "", "get_stateful_net"], [398, 1, 1, "", "make_value_estimator"], [398, 1, 1, "", "named_parameters"], [398, 1, 1, "", "parameters"], [398, 1, 1, "", "reset_parameters_recursive"], [398, 1, 1, "", "set_keys"], [398, 2, 1, "", "value_estimator"], [398, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[399, 4, 1, "", "default_keys"], [399, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[400, 4, 1, "", "default_keys"], [400, 1, 1, "", "forward"], [400, 2, 1, "", "functional"], [400, 1, 1, "", "loss_critic"], [400, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[401, 4, 1, "", "default_keys"], [401, 1, 1, "", "forward"], [401, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[402, 4, 1, "", "default_keys"], [402, 1, 1, "", "forward"], [402, 2, 1, "", "functional"], [402, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[403, 4, 1, "", "default_keys"], [403, 1, 1, "", "forward"], [403, 1, 1, "", "load_state_dict"], [403, 1, 1, "", "make_value_estimator"], [403, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3BCLoss": [[405, 1, 1, "", "actor_loss"], [405, 4, 1, "", "default_keys"], [405, 1, 1, "", "forward"], [405, 1, 1, "", "make_value_estimator"], [405, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[406, 4, 1, "", "default_keys"], [406, 1, 1, "", "forward"], [406, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.llm": [[413, 0, 1, "", "GRPOLoss"], [414, 0, 1, "", "GRPOLossOutput"], [415, 0, 1, "", "MCAdvantage"], [416, 0, 1, "", "SFTLoss"], [417, 0, 1, "", "SFTLossOutput"]], "torchrl.objectives.llm.GRPOLoss": [[413, 1, 1, "", "add_module"], [413, 1, 1, "", "apply"], [413, 1, 1, "", "bfloat16"], [413, 1, 1, "", "buffers"], [413, 1, 1, "", "children"], [413, 1, 1, "", "compile"], [413, 1, 1, "", "convert_to_functional"], [413, 1, 1, "", "cpu"], [413, 1, 1, "", "cuda"], [413, 4, 1, "", "default_keys"], [413, 1, 1, "", "double"], [413, 1, 1, "", "eval"], [413, 1, 1, "", "extra_repr"], [413, 1, 1, "", "float"], [413, 1, 1, "", "forward"], [413, 1, 1, "", "from_stateful_net"], [413, 2, 1, "", "functional"], [413, 1, 1, "", "get_buffer"], [413, 1, 1, "", "get_extra_state"], [413, 1, 1, "", "get_parameter"], [413, 1, 1, "", "get_stateful_net"], [413, 1, 1, "", "get_submodule"], [413, 1, 1, "", "half"], [413, 1, 1, "", "ipu"], [413, 1, 1, "", "is_tdmodule_compatible"], [413, 1, 1, "", "load_state_dict"], [413, 1, 1, "", "loss_critic"], [413, 1, 1, "", "make_value_estimator"], [413, 1, 1, "", "modules"], [413, 1, 1, "", "mtia"], [413, 1, 1, "", "named_buffers"], [413, 1, 1, "", "named_children"], [413, 1, 1, "", "named_modules"], [413, 1, 1, "", "named_parameters"], [413, 1, 1, "", "parameters"], [413, 1, 1, "", "register_backward_hook"], [413, 1, 1, "", "register_buffer"], [413, 1, 1, "", "register_forward_hook"], [413, 1, 1, "", "register_forward_pre_hook"], [413, 1, 1, "", "register_full_backward_hook"], [413, 1, 1, "", "register_full_backward_pre_hook"], [413, 1, 1, "", "register_load_state_dict_post_hook"], [413, 1, 1, "", "register_load_state_dict_pre_hook"], [413, 1, 1, "", "register_module"], [413, 1, 1, "", "register_parameter"], [413, 1, 1, "", "register_state_dict_post_hook"], [413, 1, 1, "", "register_state_dict_pre_hook"], [413, 1, 1, "", "requires_grad_"], [413, 1, 1, "", "reset_out_keys"], [413, 1, 1, "", "reset_parameters_recursive"], [413, 1, 1, "", "select_out_keys"], [413, 1, 1, "", "set_extra_state"], [413, 1, 1, "", "set_keys"], [413, 1, 1, "", "set_submodule"], [413, 1, 1, "", "share_memory"], [413, 1, 1, "", "state_dict"], [413, 1, 1, "", "to"], [413, 1, 1, "", "to_empty"], [413, 1, 1, "", "train"], [413, 1, 1, "", "type"], [413, 2, 1, "", "value_estimator"], [413, 2, 1, "", "vmap_randomness"], [413, 1, 1, "", "xpu"], [413, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.GRPOLossOutput": [[414, 2, 1, "", "device"], [414, 1, 1, "", "dumps"], [414, 1, 1, "", "fields"], [414, 1, 1, "", "from_tensordict"], [414, 1, 1, "", "get"], [414, 1, 1, "", "load"], [414, 1, 1, "", "load_"], [414, 1, 1, "", "load_memmap"], [414, 1, 1, "", "load_state_dict"], [414, 1, 1, "", "memmap"], [414, 1, 1, "", "memmap_"], [414, 1, 1, "", "memmap_like"], [414, 1, 1, "", "memmap_refresh_"], [414, 1, 1, "", "save"], [414, 1, 1, "", "set"], [414, 1, 1, "", "state_dict"], [414, 1, 1, "", "to_tensordict"], [414, 1, 1, "", "unbind"]], "torchrl.objectives.llm.MCAdvantage": [[415, 1, 1, "", "add_module"], [415, 1, 1, "", "apply"], [415, 1, 1, "", "bfloat16"], [415, 1, 1, "", "buffers"], [415, 1, 1, "", "children"], [415, 1, 1, "", "close"], [415, 2, 1, "", "collector"], [415, 1, 1, "", "compile"], [415, 2, 1, "", "container"], [415, 1, 1, "", "cpu"], [415, 1, 1, "", "cuda"], [415, 1, 1, "", "double"], [415, 1, 1, "", "eval"], [415, 1, 1, "", "extra_repr"], [415, 1, 1, "", "float"], [415, 1, 1, "", "forward"], [415, 1, 1, "", "get_buffer"], [415, 1, 1, "", "get_extra_state"], [415, 1, 1, "", "get_parameter"], [415, 1, 1, "", "get_submodule"], [415, 1, 1, "", "half"], [415, 1, 1, "", "init"], [415, 1, 1, "", "inv"], [415, 1, 1, "", "ipu"], [415, 1, 1, "", "load_state_dict"], [415, 1, 1, "", "modules"], [415, 1, 1, "", "mtia"], [415, 1, 1, "", "named_buffers"], [415, 1, 1, "", "named_children"], [415, 1, 1, "", "named_modules"], [415, 1, 1, "", "named_parameters"], [415, 1, 1, "", "parameters"], [415, 2, 1, "", "parent"], [415, 1, 1, "", "register_backward_hook"], [415, 1, 1, "", "register_buffer"], [415, 1, 1, "", "register_forward_hook"], [415, 1, 1, "", "register_forward_pre_hook"], [415, 1, 1, "", "register_full_backward_hook"], [415, 1, 1, "", "register_full_backward_pre_hook"], [415, 1, 1, "", "register_load_state_dict_post_hook"], [415, 1, 1, "", "register_load_state_dict_pre_hook"], [415, 1, 1, "", "register_module"], [415, 1, 1, "", "register_parameter"], [415, 1, 1, "", "register_state_dict_post_hook"], [415, 1, 1, "", "register_state_dict_pre_hook"], [415, 1, 1, "", "requires_grad_"], [415, 1, 1, "", "set_extra_state"], [415, 1, 1, "", "set_submodule"], [415, 1, 1, "", "share_memory"], [415, 1, 1, "", "state_dict"], [415, 1, 1, "", "to"], [415, 1, 1, "", "to_empty"], [415, 1, 1, "", "train"], [415, 1, 1, "", "transform_action_spec"], [415, 1, 1, "", "transform_done_spec"], [415, 1, 1, "", "transform_env_batch_size"], [415, 1, 1, "", "transform_env_device"], [415, 1, 1, "", "transform_input_spec"], [415, 1, 1, "", "transform_observation_spec"], [415, 1, 1, "", "transform_output_spec"], [415, 1, 1, "", "transform_reward_spec"], [415, 1, 1, "", "transform_state_spec"], [415, 1, 1, "", "type"], [415, 1, 1, "", "xpu"], [415, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLoss": [[416, 1, 1, "", "add_module"], [416, 1, 1, "", "apply"], [416, 1, 1, "", "bfloat16"], [416, 1, 1, "", "buffers"], [416, 1, 1, "", "children"], [416, 1, 1, "", "compile"], [416, 1, 1, "", "convert_to_functional"], [416, 1, 1, "", "cpu"], [416, 1, 1, "", "cuda"], [416, 4, 1, "", "default_keys"], [416, 1, 1, "", "double"], [416, 1, 1, "", "eval"], [416, 1, 1, "", "extra_repr"], [416, 1, 1, "", "float"], [416, 1, 1, "", "forward"], [416, 1, 1, "", "from_stateful_net"], [416, 2, 1, "", "functional"], [416, 1, 1, "", "get_buffer"], [416, 1, 1, "", "get_extra_state"], [416, 1, 1, "", "get_parameter"], [416, 1, 1, "", "get_stateful_net"], [416, 1, 1, "", "get_submodule"], [416, 1, 1, "", "half"], [416, 1, 1, "", "ipu"], [416, 1, 1, "", "is_tdmodule_compatible"], [416, 1, 1, "", "load_state_dict"], [416, 1, 1, "", "make_value_estimator"], [416, 1, 1, "", "modules"], [416, 1, 1, "", "mtia"], [416, 1, 1, "", "named_buffers"], [416, 1, 1, "", "named_children"], [416, 1, 1, "", "named_modules"], [416, 1, 1, "", "named_parameters"], [416, 1, 1, "", "parameters"], [416, 1, 1, "", "register_backward_hook"], [416, 1, 1, "", "register_buffer"], [416, 1, 1, "", "register_forward_hook"], [416, 1, 1, "", "register_forward_pre_hook"], [416, 1, 1, "", "register_full_backward_hook"], [416, 1, 1, "", "register_full_backward_pre_hook"], [416, 1, 1, "", "register_load_state_dict_post_hook"], [416, 1, 1, "", "register_load_state_dict_pre_hook"], [416, 1, 1, "", "register_module"], [416, 1, 1, "", "register_parameter"], [416, 1, 1, "", "register_state_dict_post_hook"], [416, 1, 1, "", "register_state_dict_pre_hook"], [416, 1, 1, "", "requires_grad_"], [416, 1, 1, "", "reset_out_keys"], [416, 1, 1, "", "reset_parameters_recursive"], [416, 1, 1, "", "select_out_keys"], [416, 1, 1, "", "set_extra_state"], [416, 1, 1, "", "set_keys"], [416, 1, 1, "", "set_submodule"], [416, 1, 1, "", "share_memory"], [416, 1, 1, "", "state_dict"], [416, 1, 1, "", "to"], [416, 1, 1, "", "to_empty"], [416, 1, 1, "", "train"], [416, 1, 1, "", "type"], [416, 2, 1, "", "value_estimator"], [416, 2, 1, "", "vmap_randomness"], [416, 1, 1, "", "xpu"], [416, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLossOutput": [[417, 2, 1, "", "device"], [417, 1, 1, "", "dumps"], [417, 1, 1, "", "fields"], [417, 1, 1, "", "from_tensordict"], [417, 1, 1, "", "get"], [417, 1, 1, "", "load"], [417, 1, 1, "", "load_"], [417, 1, 1, "", "load_memmap"], [417, 1, 1, "", "load_state_dict"], [417, 1, 1, "", "memmap"], [417, 1, 1, "", "memmap_"], [417, 1, 1, "", "memmap_like"], [417, 1, 1, "", "memmap_refresh_"], [417, 1, 1, "", "save"], [417, 1, 1, "", "set"], [417, 1, 1, "", "state_dict"], [417, 1, 1, "", "to_tensordict"], [417, 1, 1, "", "unbind"]], "torchrl.objectives.multiagent": [[418, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[418, 4, 1, "", "default_keys"], [418, 1, 1, "", "forward"], [418, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[420, 0, 1, "", "GAE"], [421, 0, 1, "", "TD0Estimator"], [422, 0, 1, "", "TD1Estimator"], [423, 0, 1, "", "TDLambdaEstimator"], [424, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[420, 1, 1, "", "forward"], [420, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[421, 1, 1, "", "forward"], [421, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[422, 1, 1, "", "forward"], [422, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[423, 1, 1, "", "forward"], [423, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[424, 4, 1, "", "default_keys"], [424, 1, 1, "", "forward"], [424, 1, 1, "", "set_keys"], [424, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[425, 0, 1, "", "generalized_advantage_estimate"], [426, 0, 1, "", "reward2go"], [427, 0, 1, "", "td0_advantage_estimate"], [428, 0, 1, "", "td0_return_estimate"], [429, 0, 1, "", "td1_advantage_estimate"], [430, 0, 1, "", "td1_return_estimate"], [431, 0, 1, "", "td_lambda_advantage_estimate"], [432, 0, 1, "", "td_lambda_return_estimate"], [433, 0, 1, "", "vec_generalized_advantage_estimate"], [434, 0, 1, "", "vec_td1_advantage_estimate"], [435, 0, 1, "", "vec_td1_return_estimate"], [436, 0, 1, "", "vec_td_lambda_advantage_estimate"], [437, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[438, 3, 1, "", "PixelRenderTransform"], [439, 3, 1, "", "TensorDictRecorder"], [440, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[441, 3, 1, "", "Logger"], [443, 3, 1, "", "generate_exp_name"], [444, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[442, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[445, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[446, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[447, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[449, 0, 1, "", "BatchSubSampler"], [450, 0, 1, "", "ClearCudaCache"], [451, 0, 1, "", "CountFramesLog"], [452, 0, 1, "", "LogScalar"], [453, 0, 1, "", "LogValidationReward"], [454, 0, 1, "", "OptimizerHook"], [455, 0, 1, "", "ReplayBufferTrainer"], [456, 0, 1, "", "RewardNormalizer"], [457, 0, 1, "", "SelectKeys"], [458, 0, 1, "", "Trainer"], [459, 0, 1, "", "TrainerHookBase"], [460, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[449, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[450, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[451, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[452, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[453, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[454, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[455, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[456, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[457, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[458, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[459, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[460, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[461, 3, 1, "", "correct_for_frame_skip"], [462, 3, 1, "", "get_stats_random_rollout"], [463, 3, 1, "", "make_collector_offpolicy"], [464, 3, 1, "", "make_collector_onpolicy"], [465, 3, 1, "", "make_dqn_loss"], [466, 3, 1, "", "make_replay_buffer"], [467, 3, 1, "", "make_target_updater"], [468, 3, 1, "", "make_trainer"], [469, 3, 1, "", "parallel_env_constructor"], [470, 3, 1, "", "sync_async_collector"], [471, 3, 1, "", "sync_sync_collector"], [472, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 477, 478, 479, 480, 482, 483, 484, 486, 488, 494, 495, 497, 498, 499, 503, 504], "instal": [0, 6, 7, 494, 503], "get": [0, 487, 488, 489, 490, 491, 492], "start": [0, 487, 488, 489, 490, 491, 492, 494], "tutori": [0, 484, 497, 498], "basic": [0, 494, 501], "intermedi": [0, 8], "advanc": 0, "refer": [0, 474], "knowledg": [0, 475], "base": [0, 2, 7, 475, 476, 486], "indic": 0, "tabl": 0, "collector": [1, 476, 482, 483, 484, 485, 490, 492, 497, 498, 503], "packag": [1, 2, 3, 477, 478, 479, 480], "batch": [1, 3, 482, 499, 501], "size": [1, 3, 482, 501], "polici": [1, 2, 4, 476, 478, 482, 484, 485, 486, 488, 492, 496, 497, 498, 499], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 477], "environ": [1, 3, 4, 6, 7, 476, 482, 483, 484, 485, 487, 492, 494, 495, 496, 497, 498, 499, 503, 504], "send": 1, "receiv": 1, "model": [1, 2, 4, 476, 477, 482, 483, 485, 486, 489, 500, 503], "weightupdat": 1, "extend": 1, "updat": [1, 482], "class": [1, 3, 476, 499, 503], "replai": [1, 2, 3, 482, 483, 484, 485, 490, 492, 497, 498, 501, 503], "buffer": [1, 2, 3, 482, 483, 484, 485, 490, 492, 497, 498, 501, 503], "interoper": 1, "run": [1, 486, 487, 504], "asynchron": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 476, 482, 483, 484, 490, 492, 497, 498, 503], "helper": [1, 3, 494], "function": [1, 4, 476, 478, 483, 484, 489, 497, 498, 503], "compos": [2, 229], "support": [2, 476], "type": 2, "choos": 2, "storag": [2, 122, 482, 490, 501], "sampl": [2, 501], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 483, 501], "trajectori": [2, 501], "checkpoint": [2, 479], "episod": [2, 4], "format": 2, "ted": [2, 487], "The": [2, 482], "rational": 2, "behind": 2, "structur": [2, 476, 495, 501], "A": [2, 483, 501], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "memori": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 477, 501, 503], "special": [2, 488, 503], "case": 2, "footnot": 2, "multi": [2, 3, 477, 478, 496, 497, 498], "agent": [2, 3, 4, 477, 478, 497, 498], "present": 2, "rnn": 2, "transform": [2, 3, 274, 476, 482, 484, 487, 495, 497, 498, 499, 501, 503, 504], "step": [2, 3, 482, 484, 487, 490, 494, 497, 498, 501, 504], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 83], "numer": 2, "subclass": [2, 3], "categor": [2, 39], "tree": [2, 85], "forest": 2, "tensordictmap": [2, 78], "mctsforest": [2, 51], "larg": 2, "languag": 2, "reinforc": [2, 478, 484, 497, 498], "learn": [2, 4, 477, 484, 497, 498], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 476, 477, 478, 479, 497], "env": [3, 499, 503, 504], "spec": [3, 499, 504], "lock": 3, "method": [3, 482], "partial": 3, "reset": [3, 499, 504], "vector": [3, 503], "async": [3, 503], "exampl": [3, 11, 476, 483, 495, 501], "custom": [3, 11, 476, 499, 501], "nativ": 3, "auto": 3, "dynam": [3, 4, 501], "forward": [3, 4, 482], "invers": [3, 476], "understand": 3, "kei": 3, "tensor": [3, 501], "expos": 3, "outsid": 3, "world": 3, "design": [3, 476, 492], "your": [3, 4, 6, 476, 482, 486, 492, 499], "own": [3, 492], "tip": 3, "us": [3, 4, 6, 9, 478, 485, 500, 501, 503], "clone": [3, 7], "mask": [3, 346, 476], "action": [3, 4, 478, 485, 499], "record": [3, 479, 482, 491], "video": [3, 11, 491], "domain": [3, 477], "specif": [3, 476, 477, 496], "librari": [3, 503], "thing": [4, 482, 499], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 487, 489, 495, 503], "gener": [4, 11, 477], "have": 4, "you": 4, "valid": [4, 495], "algorithm": [4, 477], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 482, 483, 489, 492], "return": [4, 478], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 503], "drastic": 4, "reward": [4, 476], "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": [4, 476], "l2": 4, "magnitud": 4, "task": [4, 476, 496], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 482, 483, 484], "standard": 4, "explor": [4, 477, 482, 483, 488, 495], "valu": [4, 477, 478, 482, 484, 485, 488], "loss": [4, 482, 483, 484, 485, 492, 497, 498], "earli": 4, "train": [4, 8, 478, 482, 484, 485, 486, 489, 492, 497, 498, 499], "roughli": 4, "uniformli": 4, "random": [4, 478, 497, 498], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 483], "increas": 4, "an": [4, 484, 485, 487, 499], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 482], "space": 4, "effect": [4, 499], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 486], "gym": [5, 503, 504], "openai": 5, "version": [5, 7, 10, 476], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 482], "render": [7, 11, 492, 497, 498, 504], "all": 7, "new": 7, "bindindg": 7, "2": [7, 494, 495], "1": [7, 494, 495], "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 482, 495], "pytorch": [8, 9, 10, 486], "error": [8, 495], "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 499], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multiprocessedweightupdat": 14, "multisyncdatacollector": 15, "multiasyncdatacollector": 16, "rayweightupdat": 17, "syncdatacollector": 18, "vanillaweightupdat": 19, "weightupdaterbas": 20, "asyncdatacollector": 21, "distributeddatacollector": 22, "distributedsyncdatacollector": 23, "distributedweightupdat": 24, "rpcdatacollector": 25, "rpcweightupdat": 26, "raycollector": 27, "submitit_delayed_launch": 28, "llmcollector": 29, "rayllmcollector": 30, "vllmupdat": 31, "split_trajectori": 32, "adaptiveklcontrol": 33, "binari": [34, 486], "binarydiscretetensorspec": 35, "binarytodecim": 36, "bound": 37, "boundedtensorspec": 38, "composit": 40, "compositespec": 41, "constantklcontrol": 42, "densifyreward": 43, "discretetensorspec": 44, "flat2t": 45, "h5combin": 46, "h5split": 47, "hashtoint": 48, "lazystackedcompositespec": 49, "lazystackedtensorspec": 50, "multicategor": 52, "multidiscretetensorspec": 53, "multionehot": 54, "multionehotdiscretetensorspec": 55, "multistep": 56, "nested2t": 57, "nontensor": 58, "nontensorspec": 59, "onehot": 60, "onehotdiscretetensorspec": 61, "pairwisedataset": 62, "prioritizedreplaybuff": 63, "promptdata": 64, "prompttensordicttoken": 65, "querymodul": 66, "randomprojectionhash": 67, "rayreplaybuff": 68, "remotetensordictreplaybuff": 69, "replaybuff": 70, "rewarddata": 71, "rolloutfrommodel": 72, "siphash": 73, "stack": [74, 265], "stackedcomposit": 75, "ted2flat": 76, "ted2nest": 77, "tensordictprioritizedreplaybuff": 79, "tensordictreplaybuff": 80, "tensordicttoken": 81, "tensormap": 82, "tokenizeddatasetload": 84, "unbound": 86, "unboundedcontinu": 87, "unboundedcontinuoustensorspec": 88, "unboundeddiscret": 89, "unboundeddiscretetensorspec": 90, "check_no_exclusive_kei": 91, "consolidate_spec": 92, "contains_lazy_spec": 93, "create_infinite_iter": 94, "ataridqnexperiencereplai": 95, "basedatasetexperiencereplai": 96, "d4rlexperiencereplai": 97, "minariexperiencereplai": 98, "get_dataload": 99, "contentbas": 100, "histori": [101, 476, 495], "topkrewardselector": 102, "flatstoragecheckpoint": 103, "h5storagecheckpoint": 104, "immutabledatasetwrit": 105, "lazymemmapstorag": 106, "lazystackstorag": 107, "lazytensorstorag": 108, "liststorag": 109, "liststoragecheckpoint": 110, "nestedstoragecheckpoint": 111, "prioritizedsampl": 112, "prioritizedslicesampl": 113, "randomsampl": 114, "replaybufferensembl": 115, "roundrobinwrit": 116, "sampler": 117, "samplerensembl": 118, "samplerwithoutreplac": 119, "slicesampl": 120, "slicesamplerwithoutreplac": 121, "storagecheckpointerbas": 123, "storageensembl": 124, "storageensemblecheckpoint": 125, "tensordictmaxvaluewrit": 126, "tensordictroundrobinwrit": 127, "tensorstorag": 128, "tensorstoragecheckpoint": 129, "writer": 130, "writerensembl": 131, "asyncenvpool": 132, "braxenv": 133, "braxwrapp": 134, "chessenv": 135, "dmcontrolenv": 136, "dmcontrolwrapp": 137, "envbas": [138, 499], "envcreat": 139, "envmetadata": 140, "gymenv": 141, "gymlikeenv": 142, "gymwrapp": 143, "habitatenv": 144, "isaacgymenv": 145, "isaacgymwrapp": 146, "isaaclabwrapp": 147, "jumanjienv": 148, "jumanjiwrapp": 149, "llmhashingenv": [150, 192], "mogymenv": 151, "mogymwrapp": 152, "marlgroupmaptyp": 153, "meltingpotenv": 154, "meltingpotwrapp": 155, "modelbasedenvbas": 156, "multithreadedenv": 157, "multithreadedenvwrapp": 158, "openmlenv": 159, "openspielenv": 160, "openspielwrapp": 161, "parallelenv": 162, "pendulumenv": 163, "pettingzooenv": 164, "pettingzoowrapp": 165, "processorasyncenvpool": 166, "randompolici": 167, "robohiveenv": 168, "smacv2env": 169, "smacv2wrapp": 170, "serialenv": 171, "threadingasyncenvpool": 172, "tictactoeenv": 173, "unitymlagentsenv": 174, "unitymlagentswrapp": 175, "vmasenv": 176, "vmaswrapp": 177, "check_env_spec": 178, "check_marl_group": 179, "exploration_typ": 180, "get_available_librari": 181, "gym_backend": 182, "chatenv": [183, 476], "datasetchatenv": 184, "gsm8kenv": 185, "gsm8kpreparequest": 186, "gsm8krewardpars": 187, "ifevalenv": 188, "ifevalscoredata": 189, "ifevalscor": 190, "llmenv": 191, "mlgymwrapp": 193, "make_gsm8k_env": 194, "make_mlgym": 195, "addthinkingprompt": 196, "browsertransform": 197, "dataloadingprim": 198, "klcomput": 199, "klrewardtransform": [200, 245], "mcptooltransform": 201, "policyvers": 202, "pythoninterpret": 203, "retrievekl": 204, "retrievelogprob": 205, "templatetransform": 206, "token": [207, 272, 348, 476], "as_nested_tensor": 208, "as_padded_tensor": 209, "make_composite_from_td": 210, "dreamerdecod": 211, "dreamerenv": 212, "register_gym_spec_convers": 213, "set_exploration_typ": 214, "set_gym_backend": 215, "step_mdp": 216, "terminated_or_trunc": 217, "actiondiscret": 218, "actionmask": 219, "autoresetenv": 220, "autoresettransform": 221, "batchsizetransform": 222, "binarizereward": 223, "burnintransform": 224, "catfram": [225, 501], "cattensor": 226, "centercrop": 227, "cliptransform": 228, "conditionalpolicyswitch": 230, "conditionalskip": 231, "crop": 232, "dtypecasttransform": 233, "devicecasttransform": 234, "discreteactionproject": 235, "doubletofloat": 236, "endoflifetransform": 237, "excludetransform": 238, "finitetensordictcheck": 239, "flattenobserv": 240, "frameskiptransform": 241, "grayscal": 242, "hash": 243, "inittrack": 244, "linearisereward": 246, "multiact": 247, "noopresetenv": 248, "observationnorm": 249, "observationtransform": 250, "permutetransform": 251, "pinmemorytransform": 252, "r3mtransform": 253, "randomcroptensordict": 254, "removeemptyspec": 255, "renametransform": 256, "resiz": 257, "reward2gotransform": 258, "rewardclip": 259, "rewardsc": 260, "rewardsum": 261, "selecttransform": 262, "signtransform": 263, "squeezetransform": 264, "stepcount": 266, "targetreturn": 267, "tensordictprim": 268, "timemaxpool": 269, "timer": 270, "totensorimag": 271, "trajcount": 273, "transformedenv": 275, "unarytransform": 276, "unsqueezetransform": 277, "vc1transform": 278, "viprewardtransform": 279, "viptransform": 280, "vecgymenvtransform": 281, "vecnorm": [282, 504], "vecnormv2": 283, "gsdenois": 284, "multisteptransform": 285, "implement_for": 286, "additivegaussianmodul": 287, "batchrenorm1d": 288, "cemplann": 289, "consistentdropout": 290, "consistentdropoutmodul": 291, "conv3dnet": 292, "convnet": 293, "dtactor": 294, "ddpgcnnactor": 295, "ddpgcnnqnet": 296, "ddpgmlpactor": 297, "ddpgmlpqnet": 298, "decisiontransform": 299, "delta": 300, "distributionaldqnnet": 301, "distributionalqvaluehook": 302, "dreameractor": 303, "duelingcnndqnet": 304, "egreedymodul": 305, "gru": 306, "grucel": 307, "grumodul": 308, "independentnorm": 309, "llmmaskedcategor": 310, "lstm": [311, 485], "lstmcell": 312, "lstmmodul": 313, "mlp": [314, 485], "mpcplannerbas": 315, "mppiplann": 316, "maskedcategor": 317, "maskedonehotcategor": 318, "multiagentconvnet": 319, "multiagentmlp": 320, "multiagentnetbas": 321, "noisylazylinear": 322, "noisylinear": 323, "obsdecod": 324, "obsencod": 325, "onehotcategor": 326, "onehotordin": 327, "onlinedtactor": 328, "ordin": 329, "ornsteinuhlenbeckprocessmodul": 330, "qmixer": [331, 478], "qvaluehook": 332, "rssmposterior": 333, "rssmprior": 334, "squeeze2dlay": 335, "squeezelay": 336, "tanhdelta": 337, "tanhnorm": 338, "truncatednorm": 339, "vdnmixer": 340, "vmapmodul": 341, "chathistori": 342, "llmondevic": 343, "llmwrapperbas": 344, "logprob": 345, "text": [347, 495], "transformerswrapp": 349, "make_vllm_work": 350, "stateless_init_process_group": 351, "vllmworker": 352, "vllmwrapper": 353, "recurrent_mod": 354, "reset_nois": 355, "set_recurrent_mod": 356, "actor": [357, 477, 482, 488], "actorcriticoper": 358, "actorcriticwrapp": 359, "actorvalueoper": 360, "decisiontransformerinferencewrapp": 361, "distributionalqvalueactor": 362, "distributionalqvaluemodul": 363, "lmheadactorvalueoper": 364, "multistepactorwrapp": 365, "probabilisticactor": 366, "qvalueactor": [367, 477], "qvaluemodul": 368, "safemodul": [369, 477], "safeprobabilisticmodul": 370, "safeprobabilistictensordictsequenti": 371, "safesequenti": 372, "tanhmodul": 373, "valueoper": 374, "worldmodelwrapp": 375, "biased_softplu": 376, "get_primers_from_modul": 377, "inv_softplu": 378, "map": [379, 497], "a2closs": 380, "cqlloss": 381, "clipppoloss": 382, "crossqloss": 383, "ddpgloss": 384, "dqnloss": 385, "dtloss": 386, "discretecqlloss": 387, "discreteiqlloss": 388, "discretesacloss": 389, "distributionaldqnloss": 390, "dreameractorloss": 391, "dreamermodelloss": 392, "dreamervalueloss": 393, "gailloss": 394, "hardupd": 395, "iqlloss": 396, "klpenppoloss": 397, "lossmodul": [398, 482, 489], "onlinedtloss": 399, "ppoloss": 400, "redqloss": 401, "reinforceloss": 402, "sacloss": 403, "softupd": 404, "td3bcloss": 405, "td3loss": 406, "valueestim": 407, "default_value_kwarg": 408, "distance_loss": 409, "group_optim": 410, "hold_out_net": 411, "hold_out_param": 412, "grpoloss": 413, "grpolossoutput": 414, "mcadvantag": 415, "sftloss": 416, "sftlossoutput": 417, "qmixerloss": 418, "next_state_valu": 419, "gae": 420, "td0estim": 421, "td1estim": 422, "tdlambdaestim": 423, "valueestimatorbas": 424, "generalized_advantage_estim": 425, "reward2go": 426, "td0_advantage_estim": 427, "td0_return_estim": 428, "td1_advantage_estim": 429, "td1_return_estim": 430, "td_lambda_advantage_estim": 431, "td_lambda_return_estim": 432, "vec_generalized_advantage_estim": 433, "vec_td1_advantage_estim": 434, "vec_td1_return_estim": 435, "vec_td_lambda_advantage_estim": 436, "vec_td_lambda_return_estim": 437, "pixelrendertransform": 438, "tensordictrecord": 439, "videorecord": 440, "logger": [441, 479, 491, 492], "csvlogger": 442, "generate_exp_nam": 443, "get_logg": 444, "mlflowlogg": 445, "tensorboardlogg": 446, "wandblogg": 447, "set_auto_unwrap_transformed_env": 448, "batchsubsampl": 449, "clearcudacach": 450, "countframeslog": 451, "logscalar": 452, "logvalidationreward": 453, "optimizerhook": 454, "replaybuffertrain": 455, "rewardnorm": 456, "selectkei": 457, "trainer": [458, 479, 483], "trainerhookbas": 459, "updateweight": 460, "correct_for_frame_skip": 461, "get_stats_random_rollout": 462, "make_collector_offpolici": 463, "make_collector_onpolici": 464, "make_dqn_loss": 465, "make_replay_buff": 466, "make_target_updat": 467, "make_train": 468, "parallel_env_constructor": 469, "sync_async_collector": 470, "sync_sync_collector": 471, "transformed_env_constructor": 472, "readm": [473, 493], "tuto": [473, 493], "api": [474, 476], "contribut": [475, 503], "content": 475, "llm": [476, 494, 495], "interfac": 476, "famili": 476, "usag": 476, "ad": 476, "templat": 476, "llama": 476, "test": [476, 499], "assist": 476, "equival": 476, "pars": 476, "wrapper": [476, 477, 488, 495], "prompt": 476, "respons": 476, "pad": 476, "modul": [476, 477, 482, 485, 486, 488, 492, 503], "track": 476, "core": 476, "architectur": 476, "integr": [476, 495, 501], "object": [476, 478, 482, 489, 503], "grpo": 476, "sft": 476, "tensordictmodul": [477, 486, 488, 503], "probabilist": [477, 488], "q": [477, 483, 485, 488], "oper": 477, "join": 477, "hook": [477, 479, 483], "regular": 477, "planner": 477, "torch": 478, "vmap": [478, 503], "dqn": [478, 483, 485], "ddpg": [478, 482, 497], "sac": 478, "redq": 478, "crossq": 478, "iql": 478, "cql": 478, "gail": 478, "dt": 478, "td3": 478, "bc": 478, "ppo": [478, 484, 498], "head": 478, "a2c": 478, "dreamer": 478, "builder": 479, "_util": 480, "comput": [481, 483, 499, 502], "time": [481, 482, 502], "code": [482, 499], "overview": [482, 485], "setup": [482, 485, 494, 495], "__init__": 482, "estim": 482, "put": 482, "togeth": [482, 499], "call": 482, "parallel": [482, 496, 504], "execut": [482, 494, 496, 499], "stat": 482, "build": [482, 483, 492, 494, 501], "evalu": 482, "construct": 482, "target": [482, 483, 489], "network": [482, 483, 484, 485, 488, 497, 498], "experi": [482, 499], "result": [482, 484, 494, 497, 498], "conclus": [482, 483, 484, 485, 486, 494, 495, 497, 498, 499, 501], "next": [482, 484, 487, 490, 497, 498, 501], "deep": 483, "collect": [483, 484, 490], "paramet": [483, 484, 489], "hyperparamet": [483, 484, 497, 498], "regist": 483, "possibl": 483, "improv": 483, "defin": [484, 497, 498], "loop": [484, 485, 486, 492, 497, 498, 499], "recurr": [485, 486], "convolut": 485, "select": 485, "further": [485, 489], "read": 485, "export": 486, "introduct": [486, 503], "fast": 486, "recap": 486, "simpl": [486, 499], "stochast": 486, "aotinductor": 486, "free": 486, "c": 486, "onnx": 486, "rollout": [486, 487, 496, 497, 498, 499, 504], "creat": 487, "s": [488, 489], "output": 489, "consider": 489, "log": [491, 495], "first": 492, "tool": 494, "enabl": 494, "configur": 494, "3": [494, 495], "interact": 494, "4": [494, 495], "perform": 494, "search": 494, "5": [494, 495], "extract": 494, "vllm": 495, "input": 495, "mode": 495, "probabl": 495, "onli": 495, "tensorclass": [495, 501], "6": 495, "handl": 495, "7": 495, "divers": 496, "competit": 497, "group": 497, "critic": [497, 498], "pendulum": 499, "write": 499, "_step": 499, "simul": 499, "_reset": 499, "metadata": 499, "_spec": 499, "shape": 499, "seed": [499, 504], "wrap": 499, "our": 499, "pretrain": 500, "vanilla": 501, "other": 501, "pytre": 501, "iter": 501, "over": 501, "fix": 501, "priorit": 501, "save": 501, "raw": 501, "imag": 501, "more": 501, "complex": 501, "config": 503, "sequenc": 503, "program": 503, "ensembl": 503, "meta": 503, "sync": 503, "multiprocess": 503, "frame_skip": 504, "deepmind": 504, "control": 504, "devic": 504, "close": 504, "access": 504, "attribut": 504, "kwarg": 504}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})