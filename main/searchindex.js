Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION", "reference/generated/torchrl.auto_unwrap_transformed_env", "reference/generated/torchrl.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.RayWeightUpdater", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.VanillaWeightUpdater", "reference/generated/torchrl.collectors.WeightUpdaterBase", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.llm.LLMCollector", "reference/generated/torchrl.collectors.llm.RayLLMCollector", "reference/generated/torchrl.collectors.llm.vLLMUpdater", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.AdaptiveKLController", "reference/generated/torchrl.data.Binary", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BinaryToDecimal", "reference/generated/torchrl.data.Bounded", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.Categorical", "reference/generated/torchrl.data.Composite", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.ConstantKLController", "reference/generated/torchrl.data.DensifyReward", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.Flat2TED", "reference/generated/torchrl.data.H5Combine", "reference/generated/torchrl.data.H5Split", "reference/generated/torchrl.data.HashToInt", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MCTSForest", "reference/generated/torchrl.data.MultiCategorical", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHot", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.Nested2TED", "reference/generated/torchrl.data.NonTensor", "reference/generated/torchrl.data.NonTensorSpec", "reference/generated/torchrl.data.OneHot", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.QueryModule", "reference/generated/torchrl.data.RandomProjectionHash", "reference/generated/torchrl.data.RayReplayBuffer", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.SipHash", "reference/generated/torchrl.data.Stacked", "reference/generated/torchrl.data.StackedComposite", "reference/generated/torchrl.data.TED2Flat", "reference/generated/torchrl.data.TED2Nested", "reference/generated/torchrl.data.TensorDictMap", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorMap", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.Tree", "reference/generated/torchrl.data.Unbounded", "reference/generated/torchrl.data.UnboundedContinuous", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscrete", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.llm.ContentBase", "reference/generated/torchrl.data.llm.History", "reference/generated/torchrl.data.llm.TopKRewardSelector", "reference/generated/torchrl.data.replay_buffers.CompressedListStorage", "reference/generated/torchrl.data.replay_buffers.CompressedListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.AsyncEnvPool", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.ChessEnv", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.IsaacLabWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.LLMHashingEnv", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.OpenSpielEnv", "reference/generated/torchrl.envs.OpenSpielWrapper", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PendulumEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool", "reference/generated/torchrl.envs.RandomPolicy", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool", "reference/generated/torchrl.envs.TicTacToeEnv", "reference/generated/torchrl.envs.UnityMLAgentsEnv", "reference/generated/torchrl.envs.UnityMLAgentsWrapper", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_env_specs", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.exploration_type", "reference/generated/torchrl.envs.get_available_libraries", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.llm.ChatEnv", "reference/generated/torchrl.envs.llm.DatasetChatEnv", "reference/generated/torchrl.envs.llm.GSM8KEnv", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion", "reference/generated/torchrl.envs.llm.GSM8KRewardParser", "reference/generated/torchrl.envs.llm.IFEvalEnv", "reference/generated/torchrl.envs.llm.IFEvalScoreData", "reference/generated/torchrl.envs.llm.IfEvalScorer", "reference/generated/torchrl.envs.llm.LLMEnv", "reference/generated/torchrl.envs.llm.LLMHashingEnv", "reference/generated/torchrl.envs.llm.MLGymWrapper", "reference/generated/torchrl.envs.llm.make_gsm8k_env", "reference/generated/torchrl.envs.llm.make_mlgym", "reference/generated/torchrl.envs.llm.transforms.AddThinkingPrompt", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer", "reference/generated/torchrl.envs.llm.transforms.KLComputation", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter", "reference/generated/torchrl.envs.llm.transforms.RetrieveKL", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform", "reference/generated/torchrl.envs.llm.transforms.Tokenizer", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor", "reference/generated/torchrl.envs.make_composite_from_td", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.register_gym_spec_conversion", "reference/generated/torchrl.envs.set_exploration_type", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.step_mdp", "reference/generated/torchrl.envs.terminated_or_truncated", "reference/generated/torchrl.envs.transforms.ActionDiscretizer", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch", "reference/generated/torchrl.envs.transforms.ConditionalSkip", "reference/generated/torchrl.envs.transforms.Crop", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.Hash", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.LineariseRewards", "reference/generated/torchrl.envs.transforms.MultiAction", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.Stack", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.Timer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Tokenizer", "reference/generated/torchrl.envs.transforms.TrajCounter", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnaryTransform", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.VecNormV2", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.implement_for", "reference/generated/torchrl.modules.AdditiveGaussianModule", "reference/generated/torchrl.modules.BatchRenorm1d", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConsistentDropout", "reference/generated/torchrl.modules.ConsistentDropoutModule", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.EGreedyModule", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LLMMaskedCategorical", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.MultiAgentNetBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OneHotOrdinal", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.Ordinal", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.llm.ChatHistory", "reference/generated/torchrl.modules.llm.LLMOnDevice", "reference/generated/torchrl.modules.llm.LLMWrapperBase", "reference/generated/torchrl.modules.llm.LogProbs", "reference/generated/torchrl.modules.llm.Masks", "reference/generated/torchrl.modules.llm.Text", "reference/generated/torchrl.modules.llm.Tokens", "reference/generated/torchrl.modules.llm.TransformersWrapper", "reference/generated/torchrl.modules.llm.make_vllm_worker", "reference/generated/torchrl.modules.llm.stateless_init_process_group", "reference/generated/torchrl.modules.llm.vLLMWorker", "reference/generated/torchrl.modules.llm.vLLMWrapper", "reference/generated/torchrl.modules.recurrent_mode", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.set_recurrent_mode", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.get_primers_from_module", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.CrossQLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.GAILLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3BCLoss", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.group_optimizers", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.llm.GRPOLoss", "reference/generated/torchrl.objectives.llm.GRPOLossOutput", "reference/generated/torchrl.objectives.llm.MCAdvantage", "reference/generated/torchrl.objectives.llm.SFTLoss", "reference/generated/torchrl.objectives.llm.SFTLossOutput", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.PixelRenderTransform", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.set_auto_unwrap_transformed_env", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogScalar", "reference/generated/torchrl.trainers.LogValidationReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/llms", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/export", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/llm_browser", "tutorials/llm_wrappers", "tutorials/multi_task", "tutorials/multiagent_competitive_ddpg", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/knowledge_base/VIDEO_CUSTOMISATION.rst", "reference/generated/torchrl.auto_unwrap_transformed_env.rst", "reference/generated/torchrl.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.MultiProcessedWeightUpdater.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.RayWeightUpdater.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.VanillaWeightUpdater.rst", "reference/generated/torchrl.collectors.WeightUpdaterBase.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCWeightUpdater.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.llm.LLMCollector.rst", "reference/generated/torchrl.collectors.llm.RayLLMCollector.rst", "reference/generated/torchrl.collectors.llm.vLLMUpdater.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.AdaptiveKLController.rst", "reference/generated/torchrl.data.Binary.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BinaryToDecimal.rst", "reference/generated/torchrl.data.Bounded.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.Categorical.rst", "reference/generated/torchrl.data.Composite.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.ConstantKLController.rst", "reference/generated/torchrl.data.DensifyReward.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.Flat2TED.rst", "reference/generated/torchrl.data.H5Combine.rst", "reference/generated/torchrl.data.H5Split.rst", "reference/generated/torchrl.data.HashToInt.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MCTSForest.rst", "reference/generated/torchrl.data.MultiCategorical.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHot.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.Nested2TED.rst", "reference/generated/torchrl.data.NonTensor.rst", "reference/generated/torchrl.data.NonTensorSpec.rst", "reference/generated/torchrl.data.OneHot.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.QueryModule.rst", "reference/generated/torchrl.data.RandomProjectionHash.rst", "reference/generated/torchrl.data.RayReplayBuffer.rst", "reference/generated/torchrl.data.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.SipHash.rst", "reference/generated/torchrl.data.Stacked.rst", "reference/generated/torchrl.data.StackedComposite.rst", "reference/generated/torchrl.data.TED2Flat.rst", "reference/generated/torchrl.data.TED2Nested.rst", "reference/generated/torchrl.data.TensorDictMap.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorMap.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.Tree.rst", "reference/generated/torchrl.data.Unbounded.rst", "reference/generated/torchrl.data.UnboundedContinuous.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscrete.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.llm.ContentBase.rst", "reference/generated/torchrl.data.llm.History.rst", "reference/generated/torchrl.data.llm.TopKRewardSelector.rst", "reference/generated/torchrl.data.replay_buffers.CompressedListStorage.rst", "reference/generated/torchrl.data.replay_buffers.CompressedListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.FlatStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.H5StorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyStackStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.NestedStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageCheckpointerBase.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsembleCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorageCheckpointer.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.AsyncEnvPool.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.ChessEnv.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.IsaacLabWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.LLMHashingEnv.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.OpenSpielEnv.rst", "reference/generated/torchrl.envs.OpenSpielWrapper.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PendulumEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.ProcessorAsyncEnvPool.rst", "reference/generated/torchrl.envs.RandomPolicy.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.ThreadingAsyncEnvPool.rst", "reference/generated/torchrl.envs.TicTacToeEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsEnv.rst", "reference/generated/torchrl.envs.UnityMLAgentsWrapper.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_env_specs.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.exploration_type.rst", "reference/generated/torchrl.envs.get_available_libraries.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.llm.ChatEnv.rst", "reference/generated/torchrl.envs.llm.DatasetChatEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KEnv.rst", "reference/generated/torchrl.envs.llm.GSM8KPrepareQuestion.rst", "reference/generated/torchrl.envs.llm.GSM8KRewardParser.rst", "reference/generated/torchrl.envs.llm.IFEvalEnv.rst", "reference/generated/torchrl.envs.llm.IFEvalScoreData.rst", "reference/generated/torchrl.envs.llm.IfEvalScorer.rst", "reference/generated/torchrl.envs.llm.LLMEnv.rst", "reference/generated/torchrl.envs.llm.LLMHashingEnv.rst", "reference/generated/torchrl.envs.llm.MLGymWrapper.rst", "reference/generated/torchrl.envs.llm.make_gsm8k_env.rst", "reference/generated/torchrl.envs.llm.make_mlgym.rst", "reference/generated/torchrl.envs.llm.transforms.AddThinkingPrompt.rst", "reference/generated/torchrl.envs.llm.transforms.BrowserTransform.rst", "reference/generated/torchrl.envs.llm.transforms.DataLoadingPrimer.rst", "reference/generated/torchrl.envs.llm.transforms.KLComputation.rst", "reference/generated/torchrl.envs.llm.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.llm.transforms.MCPToolTransform.rst", "reference/generated/torchrl.envs.llm.transforms.PolicyVersion.rst", "reference/generated/torchrl.envs.llm.transforms.PythonInterpreter.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveKL.rst", "reference/generated/torchrl.envs.llm.transforms.RetrieveLogProb.rst", "reference/generated/torchrl.envs.llm.transforms.TemplateTransform.rst", "reference/generated/torchrl.envs.llm.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.llm.transforms.as_nested_tensor.rst", "reference/generated/torchrl.envs.llm.transforms.as_padded_tensor.rst", "reference/generated/torchrl.envs.make_composite_from_td.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerDecoder.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.register_gym_spec_conversion.rst", "reference/generated/torchrl.envs.set_exploration_type.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.step_mdp.rst", "reference/generated/torchrl.envs.terminated_or_truncated.rst", "reference/generated/torchrl.envs.transforms.ActionDiscretizer.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.ConditionalPolicySwitch.rst", "reference/generated/torchrl.envs.transforms.ConditionalSkip.rst", "reference/generated/torchrl.envs.transforms.Crop.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.Hash.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.LineariseRewards.rst", "reference/generated/torchrl.envs.transforms.MultiAction.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.Stack.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.Timer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Tokenizer.rst", "reference/generated/torchrl.envs.transforms.TrajCounter.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnaryTransform.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.VecNormV2.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.implement_for.rst", "reference/generated/torchrl.modules.AdditiveGaussianModule.rst", "reference/generated/torchrl.modules.BatchRenorm1d.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConsistentDropout.rst", "reference/generated/torchrl.modules.ConsistentDropoutModule.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.EGreedyModule.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LLMMaskedCategorical.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.MultiAgentNetBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OneHotOrdinal.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.Ordinal.rst", "reference/generated/torchrl.modules.OrnsteinUhlenbeckProcessModule.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.llm.ChatHistory.rst", "reference/generated/torchrl.modules.llm.LLMOnDevice.rst", "reference/generated/torchrl.modules.llm.LLMWrapperBase.rst", "reference/generated/torchrl.modules.llm.LogProbs.rst", "reference/generated/torchrl.modules.llm.Masks.rst", "reference/generated/torchrl.modules.llm.Text.rst", "reference/generated/torchrl.modules.llm.Tokens.rst", "reference/generated/torchrl.modules.llm.TransformersWrapper.rst", "reference/generated/torchrl.modules.llm.make_vllm_worker.rst", "reference/generated/torchrl.modules.llm.stateless_init_process_group.rst", "reference/generated/torchrl.modules.llm.vLLMWorker.rst", "reference/generated/torchrl.modules.llm.vLLMWrapper.rst", "reference/generated/torchrl.modules.recurrent_mode.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.set_recurrent_mode.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.get_primers_from_module.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.CrossQLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.GAILLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3BCLoss.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.group_optimizers.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.llm.GRPOLoss.rst", "reference/generated/torchrl.objectives.llm.GRPOLossOutput.rst", "reference/generated/torchrl.objectives.llm.MCAdvantage.rst", "reference/generated/torchrl.objectives.llm.SFTLoss.rst", "reference/generated/torchrl.objectives.llm.SFTLossOutput.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.PixelRenderTransform.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.set_auto_unwrap_transformed_env.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogScalar.rst", "reference/generated/torchrl.trainers.LogValidationReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/llms.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/export.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/llm_browser.rst", "tutorials/llm_wrappers.rst", "tutorials/multi_task.rst", "tutorials/multiagent_competitive_ddpg.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "Customising Video Renders", "auto_unwrap_transformed_env", "DataCollectorBase", "MultiProcessedWeightUpdater", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RayWeightUpdater", "SyncDataCollector", "VanillaWeightUpdater", "WeightUpdaterBase", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "DistributedWeightUpdater", "RPCDataCollector", "RPCWeightUpdater", "RayCollector", "submitit_delayed_launcher", "LLMCollector", "RayLLMCollector", "vLLMUpdater", "split_trajectories", "AdaptiveKLController", "Binary", "BinaryDiscreteTensorSpec", "BinaryToDecimal", "Bounded", "BoundedTensorSpec", "Categorical", "Composite", "CompositeSpec", "ConstantKLController", "DensifyReward", "DiscreteTensorSpec", "Flat2TED", "H5Combine", "H5Split", "HashToInt", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MCTSForest", "MultiCategorical", "MultiDiscreteTensorSpec", "MultiOneHot", "MultiOneHotDiscreteTensorSpec", "MultiStep", "Nested2TED", "NonTensor", "NonTensorSpec", "OneHot", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "QueryModule", "RandomProjectionHash", "RayReplayBuffer", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "RewardData", "RolloutFromModel", "SipHash", "Stacked", "StackedComposite", "TED2Flat", "TED2Nested", "TensorDictMap", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorMap", "TensorSpec", "TokenizedDatasetLoader", "Tree", "Unbounded", "UnboundedContinuous", "UnboundedContinuousTensorSpec", "UnboundedDiscrete", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "MinariExperienceReplay", "get_dataloader", "ContentBase", "History", "TopKRewardSelector", "CompressedListStorage", "CompressedListStorageCheckpointer", "FlatStorageCheckpointer", "H5StorageCheckpointer", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyStackStorage", "LazyTensorStorage", "ListStorage", "ListStorageCheckpointer", "NestedStorageCheckpointer", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageCheckpointerBase", "StorageEnsemble", "StorageEnsembleCheckpointer", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "TensorStorageCheckpointer", "Writer", "WriterEnsemble", "AsyncEnvPool", "BraxEnv", "BraxWrapper", "ChessEnv", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "IsaacLabWrapper", "JumanjiEnv", "JumanjiWrapper", "LLMHashingEnv", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "OpenSpielEnv", "OpenSpielWrapper", "ParallelEnv", "PendulumEnv", "PettingZooEnv", "PettingZooWrapper", "ProcessorAsyncEnvPool", "RandomPolicy", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "ThreadingAsyncEnvPool", "TicTacToeEnv", "UnityMLAgentsEnv", "UnityMLAgentsWrapper", "VmasEnv", "VmasWrapper", "check_env_specs", "check_marl_grouping", "exploration_type", "get_available_libraries", "gym_backend", "ChatEnv", "DatasetChatEnv", "GSM8KEnv", "GSM8KPrepareQuestion", "GSM8KRewardParser", "IFEvalEnv", "IFEvalScoreData", "IfEvalScorer", "LLMEnv", "LLMHashingEnv", "MLGymWrapper", "make_gsm8k_env", "make_mlgym", "AddThinkingPrompt", "BrowserTransform", "DataLoadingPrimer", "KLComputation", "KLRewardTransform", "MCPToolTransform", "PolicyVersion", "PythonInterpreter", "RetrieveKL", "RetrieveLogProb", "TemplateTransform", "Tokenizer", "as_nested_tensor", "as_padded_tensor", "make_composite_from_td", "DreamerDecoder", "DreamerEnv", "register_gym_spec_conversion", "set_exploration_type", "set_gym_backend", "step_mdp", "terminated_or_truncated", "ActionDiscretizer", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "ConditionalPolicySwitch", "ConditionalSkip", "Crop", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "Hash", "InitTracker", "KLRewardTransform", "LineariseRewards", "MultiAction", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "Stack", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "Timer", "ToTensorImage", "Tokenizer", "TrajCounter", "Transform", "TransformedEnv", "UnaryTransform", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "VecNormV2", "gSDENoise", "MultiStepTransform", "implement_for", "AdditiveGaussianModule", "BatchRenorm1d", "CEMPlanner", "ConsistentDropout", "ConsistentDropoutModule", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "EGreedyModule", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LLMMaskedCategorical", "LSTM", "LSTMCell", "LSTMModule", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "MultiAgentNetBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OneHotOrdinal", "OnlineDTActor", "Ordinal", "OrnsteinUhlenbeckProcessModule", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "ChatHistory", "LLMOnDevice", "LLMWrapperBase", "LogProbs", "Masks", "Text", "Tokens", "TransformersWrapper", "make_vllm_worker", "stateless_init_process_group", "vLLMWorker", "vLLMWrapper", "recurrent_mode", "reset_noise", "set_recurrent_mode", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "LMHeadActorValueOperator", "MultiStepActorWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "get_primers_from_module", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "CrossQLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "GAILLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3BCLoss", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "group_optimizers", "hold_out_net", "hold_out_params", "GRPOLoss", "GRPOLossOutput", "MCAdvantage", "SFTLoss", "SFTLossOutput", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "PixelRenderTransform", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "set_auto_unwrap_transformed_env", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogScalar", "LogValidationReward", "OptimizerHook", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "LLM Interface", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Exporting TorchRL modules", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "TorchRL LLM: Building Tool-Enabled Environments", "LLM Wrappers in TorchRL", "Task-specific policy in multi-task environments", "Competitive Multi-Agent Reinforcement Learning (DDPG) with TorchRL Tutorial", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 107, 108, 109, 110, 111, 115, 117, 118, 120, 122, 123, 124, 126, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 151, 152, 158, 159, 161, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 229, 235, 237, 238, 241, 245, 250, 251, 255, 256, 257, 258, 260, 269, 270, 271, 272, 273, 275, 276, 277, 280, 283, 284, 285, 287, 290, 294, 295, 297, 298, 299, 300, 302, 307, 308, 310, 313, 315, 316, 317, 321, 322, 324, 332, 337, 338, 340, 344, 346, 347, 348, 349, 350, 351, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 377, 381, 382, 383, 384, 385, 387, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 440, 442, 445, 449, 455, 456, 460, 461, 464, 471, 472, 473, 474, 477, 478, 479, 480, 484, 485, 488, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 502, 503, 505, 506], "open": [0, 5, 7, 62, 64, 71, 85, 100, 101, 108, 191, 288, 344, 347, 348, 349, 350, 353, 416, 419, 485, 496, 499, 500, 505], "sourc": [0, 1, 4, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "reinforc": [0, 3, 9, 156, 157, 185, 186, 227, 285, 292, 297, 298, 299, 300, 304, 332, 365, 382, 383, 385, 388, 389, 390, 392, 397, 398, 404, 405, 406, 407, 476, 478, 483, 485, 489, 490, 495, 497, 501, 504, 505], "learn": [0, 3, 7, 8, 9, 22, 56, 98, 114, 115, 140, 156, 157, 161, 164, 173, 185, 186, 192, 227, 285, 292, 297, 298, 299, 300, 304, 318, 325, 331, 332, 365, 382, 383, 384, 385, 388, 389, 390, 392, 396, 397, 398, 402, 403, 404, 405, 406, 407, 415, 476, 478, 480, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 503, 504, 505, 506], "rl": [0, 1, 2, 3, 5, 8, 10, 15, 16, 18, 21, 29, 95, 149, 158, 185, 227, 269, 325, 351, 355, 359, 368, 376, 382, 384, 399, 400, 402, 404, 415, 451, 475, 477, 478, 479, 480, 481, 484, 485, 486, 492, 495, 499, 500, 502, 503, 506], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 15, 16, 22, 23, 25, 65, 81, 137, 138, 139, 148, 159, 183, 192, 476, 477, 479, 480, 482, 484, 485, 486, 488, 489, 490, 492, 499, 500, 501, 506], "pytorch": [0, 1, 2, 3, 29, 32, 98, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 190, 193, 194, 195, 227, 272, 273, 292, 308, 313, 324, 325, 460, 475, 477, 479, 481, 484, 486, 487, 491, 495, 499, 500, 501, 505, 506], "you": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 18, 22, 23, 25, 29, 36, 43, 48, 56, 66, 67, 73, 78, 81, 101, 102, 134, 137, 140, 144, 148, 152, 155, 156, 157, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 227, 248, 276, 284, 285, 287, 292, 312, 313, 331, 346, 351, 355, 372, 415, 417, 418, 449, 450, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 108, 109, 114, 115, 117, 121, 122, 123, 128, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 150, 151, 152, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 219, 220, 221, 223, 224, 226, 227, 230, 231, 233, 235, 237, 238, 239, 242, 245, 249, 250, 251, 255, 256, 260, 263, 267, 268, 269, 270, 274, 275, 276, 277, 278, 280, 282, 284, 285, 287, 288, 291, 293, 294, 295, 297, 307, 308, 310, 311, 312, 313, 315, 317, 318, 319, 321, 322, 323, 325, 332, 341, 343, 344, 346, 347, 348, 349, 350, 351, 355, 359, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 440, 442, 449, 450, 455, 472, 473, 474, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "directli": [0, 4, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 95, 98, 102, 117, 134, 135, 136, 137, 140, 143, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 245, 246, 247, 251, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 280, 281, 283, 284, 285, 287, 372, 400, 407, 415, 417, 418, 474, 478, 485, 486, 488, 489, 499, 500, 501, 503], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 114, 115, 117, 120, 121, 122, 123, 124, 126, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 245, 246, 247, 248, 251, 253, 255, 256, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 330, 331, 332, 333, 334, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 398, 399, 400, 402, 403, 404, 405, 407, 408, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 440, 441, 442, 451, 457, 460, 463, 464, 468, 470, 471, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "pypi": [0, 2, 505], "see": [0, 1, 2, 3, 6, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 109, 115, 117, 122, 123, 134, 137, 140, 144, 147, 149, 151, 152, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 231, 233, 249, 255, 270, 273, 275, 276, 277, 280, 282, 284, 285, 286, 287, 292, 293, 294, 295, 308, 310, 311, 313, 315, 316, 322, 323, 324, 331, 333, 341, 342, 346, 351, 355, 358, 360, 362, 368, 371, 372, 384, 385, 396, 400, 402, 407, 415, 417, 418, 442, 449, 457, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 499, 500, 501, 503, 505, 506], "more": [0, 1, 2, 3, 4, 6, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 114, 115, 117, 128, 134, 137, 140, 143, 144, 145, 147, 148, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 273, 276, 280, 285, 286, 287, 288, 289, 290, 293, 304, 312, 313, 316, 324, 346, 351, 355, 359, 364, 365, 371, 372, 376, 382, 392, 400, 402, 415, 417, 418, 422, 427, 435, 449, 456, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 498, 499, 500, 501, 502, 505, 506], "about": [0, 3, 5, 7, 9, 22, 23, 25, 26, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 81, 83, 86, 87, 88, 89, 90, 98, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 198, 206, 346, 351, 355, 479, 480, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 503, 505, 506], "instruct": [0, 6, 7, 10, 28, 97, 101, 149, 187, 192, 237, 239, 478, 480, 484, 485, 486, 487, 496, 499, 500, 503], "dedic": [0, 1, 2, 3, 22, 23, 25, 27, 51, 70, 79, 80, 117, 164, 173, 360, 361, 362, 478, 479, 484, 489, 491, 492, 494, 498, 500], "section": [0, 2, 3, 4, 33, 140, 308, 313, 485, 488, 489, 494, 499, 500], "below": [0, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 86, 99, 102, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 233, 249, 255, 270, 275, 276, 277, 280, 282, 287, 294, 295, 308, 311, 313, 316, 322, 341, 346, 351, 355, 368, 371, 384, 402, 415, 417, 418, 457, 484, 485, 486, 487, 488, 489, 499, 501], "pip": [0, 2, 10, 488, 489, 490, 491, 492, 493, 494, 496, 500, 505, 506], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 48, 49, 51, 52, 54, 56, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 84, 85, 92, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 111, 114, 115, 116, 117, 120, 122, 123, 131, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 224, 226, 227, 228, 229, 230, 234, 235, 238, 242, 245, 250, 251, 253, 255, 256, 259, 260, 263, 264, 269, 270, 271, 274, 275, 277, 279, 280, 282, 283, 284, 285, 287, 288, 294, 295, 301, 302, 304, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 343, 344, 346, 347, 348, 349, 350, 351, 355, 359, 363, 365, 367, 368, 369, 370, 372, 375, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 446, 451, 457, 464, 470, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 493, 497, 498, 499, 500, 501, 502, 503, 505, 506], "python": [0, 1, 3, 5, 6, 7, 10, 15, 16, 27, 29, 30, 63, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 101, 117, 160, 176, 177, 185, 205, 217, 308, 309, 310, 313, 314, 315, 319, 320, 478, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "first": [0, 1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 108, 110, 115, 122, 123, 128, 130, 134, 137, 140, 143, 144, 145, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 223, 224, 227, 228, 232, 233, 242, 249, 251, 255, 256, 272, 273, 277, 280, 285, 288, 295, 302, 308, 310, 312, 313, 315, 316, 319, 320, 322, 324, 327, 359, 363, 364, 365, 368, 369, 371, 372, 384, 394, 399, 400, 402, 415, 418, 441, 442, 459, 478, 479, 483, 484, 485, 486, 487, 488, 489, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "low": [0, 3, 37, 40, 67, 78, 83, 86, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 198, 212, 220, 230, 237, 245, 248, 270, 278, 339, 340, 341, 363, 365, 368, 372, 375, 484, 485, 486, 488, 499, 500, 501, 505], "high": [0, 3, 9, 37, 40, 62, 64, 71, 79, 85, 86, 100, 101, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 192, 193, 194, 195, 198, 212, 220, 230, 237, 245, 248, 250, 270, 278, 339, 340, 341, 344, 347, 348, 349, 350, 363, 365, 368, 372, 375, 391, 405, 416, 419, 422, 427, 435, 484, 485, 486, 497, 499, 500, 501, 503, 505], "level": [0, 2, 3, 4, 28, 40, 41, 49, 63, 68, 70, 75, 103, 117, 143, 145, 201, 207, 227, 268, 276, 310, 312, 315, 391, 399, 405, 484, 485, 488, 492, 505], "abstract": [0, 1, 3, 8, 20, 82, 83, 95, 96, 132, 140, 252, 317, 426, 452, 461, 481, 486, 488, 501, 505], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 120, 121, 122, 123, 124, 126, 128, 130, 134, 137, 140, 141, 143, 144, 145, 151, 152, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 219, 220, 222, 223, 224, 226, 227, 230, 231, 233, 235, 236, 237, 238, 239, 241, 242, 245, 247, 248, 249, 250, 253, 255, 260, 263, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 289, 291, 292, 300, 302, 307, 308, 309, 310, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 325, 328, 333, 336, 344, 346, 347, 348, 349, 350, 351, 354, 355, 358, 363, 364, 367, 368, 369, 371, 372, 373, 374, 375, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 440, 449, 450, 457, 460, 470, 474, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "intend": [0, 7, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 226, 237, 343, 400, 479, 505], "effici": [0, 1, 4, 8, 17, 104, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 308, 312, 325, 385, 476, 478, 479, 484, 485, 486, 487, 488, 491, 492, 494, 498, 499, 500, 502, 503, 505], "modular": [0, 95, 202, 374, 478, 488, 503, 505], "document": [0, 2, 5, 7, 11, 22, 23, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 149, 152, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 287, 312, 346, 351, 355, 415, 417, 418, 475, 478, 485, 487, 488, 489, 492, 495, 505], "properli": [0, 1, 3, 29, 86, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 206, 207, 218, 233, 310, 315, 422, 478, 486, 493, 499, 500, 501, 505], "test": [0, 3, 5, 29, 103, 134, 135, 136, 137, 140, 144, 150, 151, 152, 156, 157, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 198, 200, 275, 280, 312, 455, 470, 486, 487, 488, 502, 505], "The": [0, 1, 3, 4, 5, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 114, 115, 117, 120, 122, 123, 124, 128, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 150, 151, 152, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 215, 218, 219, 220, 223, 224, 226, 227, 231, 232, 233, 235, 238, 239, 240, 245, 248, 249, 251, 253, 255, 260, 262, 263, 264, 267, 268, 269, 270, 272, 275, 276, 277, 280, 282, 283, 284, 285, 287, 289, 290, 291, 292, 297, 298, 299, 300, 301, 304, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 325, 329, 331, 332, 334, 335, 336, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 358, 359, 360, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 440, 442, 444, 447, 448, 449, 450, 451, 456, 470, 472, 473, 476, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 499, 500, 501, 502, 503, 505, 506], "code": [0, 3, 5, 7, 8, 15, 16, 67, 73, 134, 137, 140, 144, 149, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 202, 205, 255, 277, 280, 290, 308, 309, 313, 314, 368, 372, 374, 478, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506], "aim": [0, 2, 3, 7, 51, 74, 75, 255, 280, 282, 316, 463, 477, 479, 480, 484, 485, 505], "support": [0, 1, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 31, 43, 62, 64, 66, 71, 78, 85, 99, 100, 101, 108, 110, 124, 126, 130, 131, 133, 134, 135, 136, 137, 143, 145, 150, 159, 161, 164, 166, 170, 183, 191, 193, 199, 202, 209, 224, 227, 239, 245, 251, 270, 271, 274, 278, 285, 304, 329, 331, 340, 343, 344, 346, 347, 348, 349, 350, 351, 352, 355, 364, 365, 368, 371, 374, 392, 400, 415, 416, 418, 419, 422, 423, 424, 425, 447, 476, 479, 481, 486, 487, 489, 490, 496, 497, 500, 501, 503, 505], "research": [0, 7, 9, 156, 157, 290, 497, 505], "most": [0, 1, 2, 3, 7, 8, 15, 16, 56, 58, 114, 115, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 237, 283, 484, 486, 488, 489, 490, 491, 492, 493, 494, 501, 505, 506], "written": [0, 1, 2, 3, 29, 30, 45, 62, 63, 64, 66, 68, 69, 70, 71, 76, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 106, 108, 115, 117, 122, 123, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 191, 192, 193, 194, 195, 198, 218, 219, 220, 227, 239, 242, 247, 248, 263, 268, 271, 272, 277, 283, 287, 288, 293, 332, 344, 347, 348, 349, 350, 359, 368, 371, 372, 376, 382, 384, 399, 402, 404, 415, 416, 419, 421, 440, 441, 442, 478, 479, 480, 481, 484, 487, 488, 490, 498, 501, 505], "highli": [0, 2, 384, 402, 489, 505, 506], "wai": [0, 1, 2, 3, 4, 95, 98, 117, 128, 148, 186, 187, 190, 206, 227, 255, 258, 275, 276, 282, 283, 310, 313, 315, 402, 422, 423, 424, 425, 478, 479, 484, 485, 486, 488, 489, 491, 492, 498, 499, 500, 501, 502, 503, 505, 506], "easili": [0, 1, 2, 3, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 478, 480, 484, 485, 486, 489, 490, 491, 494, 499, 500, 505, 506], "swap": [0, 1, 3, 143, 283, 486, 488, 502, 505], "compon": [0, 1, 2, 3, 63, 67, 68, 69, 70, 79, 80, 95, 96, 97, 98, 103, 108, 109, 110, 111, 117, 124, 126, 130, 186, 304, 334, 364, 365, 370, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 418, 420, 456, 460, 478, 484, 485, 486, 487, 488, 490, 491, 494, 496, 498, 499, 500, 501, 502, 505], "transform": [0, 1, 4, 8, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 43, 51, 56, 63, 65, 68, 69, 70, 72, 79, 80, 81, 95, 96, 97, 98, 101, 102, 105, 106, 113, 117, 126, 131, 134, 137, 140, 141, 144, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 296, 297, 301, 304, 305, 310, 315, 330, 333, 334, 340, 342, 344, 347, 348, 349, 350, 351, 355, 363, 366, 367, 375, 378, 379, 381, 388, 401, 417, 418, 440, 442, 457, 474, 476, 483, 485, 487, 488, 490, 492, 493, 494, 495, 496, 502, 504], "them": [0, 2, 3, 7, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 36, 40, 41, 43, 48, 49, 63, 65, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 95, 96, 97, 98, 117, 128, 133, 134, 137, 140, 141, 144, 148, 152, 155, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 209, 235, 238, 245, 248, 270, 274, 277, 278, 284, 285, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 342, 343, 363, 365, 367, 370, 375, 378, 383, 385, 391, 398, 399, 403, 405, 407, 408, 423, 424, 425, 442, 478, 484, 485, 487, 488, 489, 490, 492, 493, 497, 498, 499, 500, 501, 502, 503, 505, 506], "write": [0, 2, 3, 8, 15, 16, 18, 21, 29, 32, 51, 56, 62, 63, 64, 65, 68, 69, 70, 71, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 102, 115, 117, 122, 126, 133, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 253, 254, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 283, 284, 287, 344, 347, 348, 349, 350, 359, 371, 372, 374, 376, 385, 386, 387, 389, 390, 391, 398, 403, 405, 407, 408, 416, 417, 419, 421, 426, 442, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504, 505, 506], "new": [0, 1, 2, 3, 4, 8, 15, 16, 18, 21, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 114, 115, 117, 121, 134, 137, 140, 144, 152, 159, 164, 165, 168, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 224, 263, 267, 276, 277, 284, 285, 287, 302, 308, 310, 315, 332, 344, 346, 347, 348, 349, 350, 351, 355, 371, 372, 377, 382, 383, 384, 387, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 416, 417, 418, 419, 420, 449, 478, 480, 484, 486, 489, 491, 497, 499, 500, 501, 505, 506], "ones": [0, 2, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 102, 122, 123, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 169, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 228, 231, 232, 235, 236, 238, 251, 255, 260, 267, 270, 276, 277, 280, 282, 285, 287, 292, 312, 319, 320, 331, 343, 346, 351, 355, 371, 382, 383, 384, 385, 386, 398, 399, 402, 403, 405, 407, 408, 415, 417, 418, 428, 478, 484, 486, 488, 497, 499, 500, 501, 503, 505, 506], "littl": [0, 1, 3, 81, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 277, 292, 382, 384, 399, 402, 404, 486, 487, 488, 492, 503, 505, 506], "effort": [0, 3, 501, 503, 505], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 120, 121, 122, 123, 124, 126, 128, 130, 131, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 161, 164, 165, 166, 167, 168, 169, 173, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 251, 254, 255, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 440, 441, 449, 450, 451, 453, 455, 457, 460, 462, 463, 464, 470, 474, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "repo": [0, 6, 97, 227, 271, 280, 477, 500, 505], "attempt": [0, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 122, 123, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 287, 292, 346, 351, 355, 372, 387, 390, 398, 415, 417, 418, 420, 480, 491, 505], "align": [0, 308, 313, 505], "exist": [0, 1, 2, 3, 4, 22, 27, 29, 30, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 100, 101, 102, 108, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 228, 236, 275, 276, 277, 287, 288, 302, 344, 346, 347, 348, 349, 350, 351, 355, 372, 385, 405, 415, 416, 417, 418, 419, 464, 474, 499, 500, 505, 506], "ecosystem": [0, 488, 492, 505], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 100, 101, 102, 108, 110, 114, 115, 117, 120, 122, 128, 130, 134, 137, 140, 141, 144, 148, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 227, 249, 268, 269, 270, 271, 272, 274, 275, 276, 277, 287, 289, 308, 310, 313, 315, 321, 323, 340, 344, 346, 347, 348, 349, 350, 351, 355, 365, 367, 372, 382, 385, 399, 400, 402, 404, 415, 416, 417, 418, 419, 422, 442, 478, 480, 484, 485, 486, 487, 488, 489, 492, 493, 496, 498, 499, 500, 501, 502, 503, 505, 506], "dataset": [0, 47, 51, 62, 63, 64, 65, 70, 71, 72, 77, 79, 80, 84, 85, 95, 96, 97, 98, 99, 100, 101, 107, 115, 117, 120, 122, 123, 161, 185, 186, 187, 190, 191, 192, 193, 196, 284, 344, 347, 348, 349, 350, 416, 419, 442, 476, 478, 484, 485, 489, 502, 503, 505, 506], "pillar": [0, 505], "environ": [0, 2, 5, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 67, 68, 73, 74, 75, 83, 85, 86, 87, 88, 89, 90, 102, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 220, 221, 223, 224, 226, 227, 228, 232, 233, 235, 236, 237, 238, 243, 249, 250, 251, 255, 256, 257, 260, 263, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 283, 284, 285, 287, 288, 291, 293, 310, 315, 317, 318, 351, 355, 367, 389, 393, 417, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 450, 451, 453, 455, 463, 464, 465, 466, 470, 471, 472, 473, 474, 476, 477, 479, 480, 483, 488, 490, 491, 492, 493, 495, 502, 503, 504], "model": [0, 3, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 31, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 100, 101, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 235, 255, 270, 280, 282, 286, 287, 294, 295, 296, 301, 303, 316, 317, 318, 322, 323, 330, 333, 342, 344, 346, 347, 348, 349, 350, 351, 352, 355, 360, 361, 362, 366, 371, 377, 379, 382, 383, 384, 385, 387, 388, 389, 390, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 415, 416, 417, 418, 419, 420, 460, 465, 466, 467, 476, 477, 480, 481, 483, 486, 489, 492, 495, 497, 499, 500, 501, 503, 504, 506], "data": [0, 3, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 180, 185, 186, 187, 190, 191, 192, 193, 194, 195, 197, 200, 201, 204, 206, 207, 209, 212, 219, 221, 224, 226, 227, 232, 235, 236, 238, 240, 242, 245, 247, 251, 257, 260, 267, 268, 274, 276, 277, 278, 283, 285, 287, 291, 292, 304, 307, 310, 315, 318, 321, 322, 332, 334, 343, 344, 346, 347, 348, 349, 350, 351, 353, 355, 358, 359, 364, 367, 368, 369, 371, 372, 374, 375, 376, 382, 383, 384, 385, 386, 387, 389, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 440, 442, 449, 451, 457, 460, 462, 465, 470, 472, 473, 474, 476, 479, 480, 481, 483, 487, 488, 489, 490, 491, 495, 496, 497, 501, 502, 503, 504, 506], "util": [0, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 32, 36, 43, 48, 56, 66, 67, 70, 72, 73, 78, 102, 122, 123, 134, 135, 136, 137, 140, 144, 150, 151, 152, 157, 164, 165, 166, 167, 168, 173, 174, 175, 181, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 255, 260, 270, 282, 287, 290, 293, 294, 295, 301, 308, 310, 313, 315, 346, 351, 355, 378, 379, 380, 381, 400, 415, 417, 418, 470, 476, 482, 484, 486, 488, 490, 491, 492, 500, 501, 503, 505, 506], "e": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 108, 110, 114, 115, 128, 130, 134, 137, 140, 141, 144, 145, 152, 164, 165, 168, 173, 174, 175, 178, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 226, 228, 231, 232, 233, 234, 242, 245, 248, 249, 251, 255, 263, 270, 272, 275, 276, 277, 280, 282, 287, 288, 308, 310, 311, 313, 315, 318, 322, 334, 340, 341, 344, 346, 347, 348, 349, 350, 351, 353, 355, 358, 363, 365, 367, 368, 370, 371, 372, 382, 384, 385, 386, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 440, 451, 463, 473, 478, 479, 480, 485, 486, 488, 490, 491, 493, 497, 499, 500, 502, 503, 505, 506], "g": [0, 1, 2, 3, 7, 8, 10, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 128, 134, 137, 140, 141, 144, 145, 152, 164, 165, 168, 173, 174, 175, 178, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 226, 228, 231, 232, 242, 245, 248, 251, 255, 263, 270, 272, 275, 276, 277, 280, 282, 287, 288, 308, 310, 311, 313, 314, 315, 318, 322, 340, 341, 344, 346, 347, 348, 349, 350, 351, 353, 355, 363, 368, 371, 372, 385, 405, 415, 416, 417, 418, 419, 421, 431, 432, 433, 434, 436, 437, 438, 439, 440, 473, 478, 479, 480, 485, 486, 488, 490, 493, 499, 500, 501, 502, 503, 505, 506], "collector": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 56, 63, 68, 69, 70, 72, 76, 79, 80, 95, 96, 97, 98, 102, 117, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 169, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 227, 260, 268, 276, 287, 292, 310, 315, 332, 346, 351, 355, 384, 399, 402, 415, 417, 457, 460, 462, 465, 466, 470, 472, 473, 476, 480, 481, 488, 503, 506], "contain": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 97, 98, 100, 101, 102, 107, 115, 117, 118, 120, 122, 123, 124, 129, 132, 133, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 227, 231, 235, 238, 245, 255, 267, 270, 275, 276, 277, 280, 282, 283, 284, 285, 287, 291, 294, 295, 308, 309, 312, 313, 314, 316, 318, 321, 322, 344, 346, 347, 348, 349, 350, 351, 355, 359, 364, 365, 368, 370, 371, 372, 376, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 446, 451, 463, 470, 471, 472, 473, 474, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 500, 501, 502, 503, 505, 506], "etc": [0, 2, 3, 7, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 247, 267, 277, 287, 288, 316, 322, 340, 346, 351, 355, 415, 417, 418, 478, 480, 485, 486, 492, 503, 505, 506], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 117, 121, 124, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 219, 220, 223, 227, 232, 235, 238, 239, 247, 250, 251, 267, 268, 270, 274, 275, 276, 277, 284, 285, 287, 289, 292, 294, 295, 316, 319, 321, 322, 323, 332, 343, 346, 351, 355, 367, 373, 374, 382, 384, 399, 402, 404, 407, 411, 412, 415, 417, 418, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 451, 460, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 505, 506], "few": [0, 2, 8, 123, 144, 195, 442, 451, 478, 486, 487, 490, 499, 500, 503, 505, 506], "depend": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 37, 62, 64, 86, 134, 137, 140, 143, 144, 145, 146, 152, 164, 165, 168, 170, 173, 174, 175, 178, 179, 185, 186, 187, 190, 192, 193, 194, 195, 235, 238, 351, 355, 372, 376, 402, 444, 478, 479, 484, 486, 487, 496, 499, 500, 501, 505, 506], "possibl": [0, 2, 3, 4, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 109, 115, 122, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 231, 255, 270, 275, 276, 277, 280, 282, 287, 294, 295, 308, 309, 313, 314, 346, 351, 355, 371, 402, 415, 417, 418, 440, 455, 460, 478, 479, 484, 486, 487, 488, 490, 492, 493, 499, 500, 501, 503, 505, 506], "standard": [0, 2, 3, 58, 137, 251, 262, 284, 285, 289, 290, 291, 305, 318, 324, 325, 330, 363, 384, 399, 402, 407, 408, 422, 423, 424, 425, 484, 485, 489, 490, 500, 503, 505], "numpi": [0, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 245, 273, 278, 288, 460, 488, 501, 503, 505, 506], "common": [0, 2, 3, 4, 83, 134, 144, 150, 221, 239, 360, 361, 362, 366, 382, 383, 384, 385, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 470, 477, 478, 479, 480, 481, 484, 486, 490, 493, 498, 499, 500, 501, 502, 505, 506], "openai": [0, 7, 33, 143, 145, 152, 170, 194, 486, 501, 505, 506], "gym": [0, 1, 3, 4, 8, 15, 16, 18, 21, 27, 28, 29, 30, 68, 102, 134, 137, 140, 141, 143, 144, 145, 146, 148, 149, 152, 156, 157, 159, 160, 164, 165, 168, 170, 173, 174, 175, 178, 179, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 223, 227, 230, 239, 246, 247, 251, 253, 258, 260, 263, 270, 276, 283, 284, 287, 288, 417, 470, 477, 484, 485, 486, 487, 489, 493, 494, 501, 502, 503], "onli": [0, 1, 2, 3, 4, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 108, 110, 114, 115, 117, 122, 123, 130, 134, 137, 138, 139, 140, 143, 144, 145, 146, 148, 151, 152, 159, 160, 164, 165, 166, 167, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 223, 227, 228, 230, 231, 232, 233, 235, 237, 238, 242, 245, 249, 251, 255, 256, 260, 267, 268, 269, 270, 271, 275, 276, 277, 280, 282, 284, 285, 287, 288, 292, 312, 313, 315, 319, 321, 322, 346, 351, 355, 359, 363, 364, 368, 369, 371, 372, 373, 374, 382, 384, 385, 386, 390, 391, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 415, 417, 418, 422, 423, 424, 425, 426, 442, 449, 464, 478, 480, 481, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 503, 505, 506], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 255, 256, 258, 259, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 334, 335, 336, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 355, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 444, 447, 449, 451, 453, 454, 455, 456, 457, 458, 460, 464, 470, 472, 473, 474, 478, 479, 487, 489, 492, 499, 500, 501, 503, 505], "On": [0, 3, 7, 22, 23, 25, 27, 40, 309, 314, 478, 479, 485, 499, 500], "end": [0, 2, 3, 15, 16, 21, 29, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 102, 106, 115, 117, 121, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 239, 245, 253, 268, 269, 275, 277, 287, 294, 295, 308, 309, 313, 314, 317, 346, 351, 355, 367, 385, 405, 415, 417, 418, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "come": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 51, 56, 128, 134, 137, 140, 144, 151, 152, 155, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 235, 238, 358, 359, 360, 361, 362, 368, 376, 382, 384, 399, 402, 404, 442, 484, 485, 486, 487, 491, 492, 493, 494, 499, 500, 503, 505, 506], "set": [0, 1, 2, 3, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 108, 109, 110, 111, 117, 121, 124, 130, 134, 137, 140, 142, 144, 145, 151, 152, 156, 157, 158, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 217, 219, 221, 223, 224, 227, 228, 231, 235, 238, 245, 246, 247, 248, 255, 260, 268, 269, 270, 271, 275, 276, 277, 280, 282, 284, 285, 287, 288, 308, 310, 312, 313, 315, 317, 319, 321, 322, 329, 331, 332, 340, 344, 346, 347, 348, 349, 350, 351, 355, 358, 363, 371, 372, 384, 385, 391, 396, 399, 400, 402, 405, 415, 416, 417, 418, 419, 422, 426, 442, 450, 451, 455, 457, 466, 474, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 490, 491, 492, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "re": [0, 2, 3, 8, 13, 22, 23, 25, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 102, 117, 121, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 242, 287, 315, 319, 320, 323, 346, 351, 355, 368, 372, 415, 417, 418, 449, 478, 481, 484, 486, 487, 489, 491, 496, 498, 499, 501, 505, 506], "usabl": [0, 481, 487, 505], "function": [0, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 100, 101, 102, 103, 108, 109, 110, 111, 117, 124, 126, 130, 134, 137, 140, 141, 144, 145, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 219, 223, 224, 235, 238, 245, 247, 274, 275, 277, 278, 284, 285, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 319, 320, 321, 322, 323, 326, 327, 328, 330, 332, 335, 336, 338, 341, 343, 344, 346, 347, 348, 349, 350, 351, 355, 360, 361, 362, 363, 365, 367, 368, 370, 371, 372, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 460, 470, 476, 479, 484, 487, 488, 489, 490, 493, 496, 498, 501, 503, 506], "cost": [0, 2, 39, 109, 111, 382, 384, 399, 402, 404, 480, 484, 485, 488, 499, 500, 501, 503], "return": [0, 2, 3, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 109, 115, 117, 118, 120, 122, 123, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 173, 174, 175, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 291, 292, 295, 296, 297, 298, 299, 300, 302, 304, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 328, 330, 333, 335, 336, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 359, 360, 361, 362, 363, 367, 368, 370, 371, 372, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 446, 450, 460, 463, 465, 470, 471, 472, 473, 474, 476, 478, 479, 481, 484, 485, 486, 488, 490, 491, 493, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "process": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 43, 48, 56, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 81, 84, 85, 95, 100, 101, 102, 103, 110, 114, 115, 118, 122, 130, 134, 137, 140, 141, 144, 148, 152, 155, 159, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 226, 227, 235, 238, 245, 270, 273, 275, 276, 284, 285, 287, 310, 315, 321, 322, 332, 344, 346, 347, 348, 349, 350, 351, 353, 354, 355, 365, 370, 384, 402, 415, 416, 417, 418, 419, 476, 478, 481, 484, 485, 487, 488, 489, 496, 497, 499, 500, 501, 502, 503, 505, 506], "good": [0, 1, 2, 4, 9, 114, 115, 164, 204, 478, 484, 486, 487, 488, 490, 500, 505, 506], "runtim": [0, 2, 3, 32, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 501], "perform": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 101, 102, 134, 137, 138, 139, 140, 143, 144, 145, 146, 151, 152, 164, 165, 168, 170, 173, 174, 175, 178, 179, 181, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 235, 238, 245, 250, 272, 275, 277, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 323, 326, 327, 330, 331, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 375, 378, 384, 385, 394, 402, 405, 415, 417, 418, 455, 460, 478, 480, 484, 485, 486, 487, 488, 489, 492, 494, 497, 498, 499, 500, 501, 506], "To": [0, 1, 2, 3, 4, 6, 7, 8, 9, 20, 22, 23, 25, 36, 43, 48, 56, 63, 66, 67, 68, 70, 72, 73, 78, 79, 80, 95, 97, 98, 102, 106, 115, 117, 122, 123, 126, 133, 134, 135, 136, 137, 140, 143, 144, 145, 150, 151, 152, 155, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 178, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 233, 268, 270, 284, 287, 293, 310, 315, 332, 346, 351, 355, 360, 361, 362, 372, 385, 391, 396, 400, 407, 415, 417, 418, 442, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 500, 501, 502, 503, 505, 506], "read": [0, 2, 3, 7, 32, 40, 41, 45, 49, 63, 65, 68, 69, 70, 72, 75, 76, 79, 80, 95, 96, 97, 98, 102, 103, 108, 109, 110, 111, 114, 117, 124, 126, 130, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 246, 247, 253, 254, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 280, 281, 283, 284, 287, 293, 328, 359, 360, 361, 362, 364, 367, 368, 371, 372, 374, 376, 377, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 417, 418, 420, 422, 423, 424, 425, 426, 442, 455, 460, 478, 479, 484, 485, 486, 488, 489, 490, 498, 499, 500, 501, 502, 505, 506], "philosophi": [0, 9], "capabl": [0, 1, 3, 7, 9, 11, 17, 27, 32, 185, 199, 478, 481, 484, 489, 492, 496, 498, 502, 506], "beyond": [0, 51, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 488], "api": [0, 1, 2, 3, 5, 32, 40, 41, 43, 49, 51, 66, 75, 78, 83, 137, 140, 166, 167, 170, 195, 197, 255, 282, 284, 285, 292, 346, 351, 355, 415, 418, 479, 480, 481, 488, 489, 490, 491, 492, 493, 497, 499, 500, 501, 503, 505, 506], "check": [0, 2, 3, 4, 5, 6, 7, 9, 15, 16, 18, 21, 22, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 91, 93, 102, 105, 106, 113, 122, 134, 137, 140, 141, 143, 144, 145, 152, 158, 164, 165, 168, 173, 174, 175, 180, 181, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 228, 233, 241, 247, 256, 270, 273, 277, 287, 288, 302, 346, 351, 354, 355, 359, 364, 365, 368, 369, 370, 371, 372, 385, 396, 407, 415, 417, 418, 442, 475, 478, 479, 480, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 505, 506], "paper": [0, 135, 136, 138, 139, 146, 150, 151, 156, 157, 159, 160, 170, 178, 179, 255, 280, 282, 295, 308, 333, 342, 389, 397, 407, 484, 486, 499, 500], "releas": [0, 4, 7, 10, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418], "sync": [0, 1, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 134, 204, 462, 470, 478, 481, 484], "so": [0, 1, 2, 3, 4, 6, 7, 10, 11, 36, 40, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 117, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 270, 275, 284, 287, 292, 344, 346, 347, 348, 349, 350, 351, 355, 373, 374, 415, 416, 417, 418, 419, 422, 442, 478, 484, 486, 487, 491, 494, 499, 500, 501, 506], "make": [0, 1, 2, 3, 4, 7, 11, 36, 40, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 78, 83, 85, 95, 97, 100, 101, 102, 117, 120, 124, 126, 133, 134, 137, 140, 144, 145, 148, 149, 151, 152, 154, 160, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 233, 240, 248, 251, 255, 256, 260, 264, 268, 272, 276, 280, 287, 290, 293, 308, 309, 310, 313, 314, 315, 321, 322, 324, 344, 346, 347, 348, 349, 350, 351, 355, 364, 372, 382, 384, 399, 402, 404, 415, 416, 417, 418, 419, 422, 423, 424, 425, 440, 457, 466, 474, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "sure": [0, 1, 3, 4, 7, 43, 102, 124, 137, 144, 148, 188, 189, 190, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 233, 260, 276, 287, 364, 417, 474, 479, 484, 486, 487, 488, 491, 499, 500, 501, 503, 505, 506], "alwai": [0, 2, 3, 15, 16, 25, 29, 36, 37, 43, 48, 56, 66, 67, 73, 78, 83, 86, 95, 99, 102, 105, 106, 113, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 247, 250, 272, 284, 285, 287, 312, 346, 351, 354, 355, 392, 400, 415, 417, 418, 479, 480, 485, 486, 487, 488, 499, 500, 501, 503], "enjoi": [0, 2, 3, 492], "latest": [0, 1, 2, 3, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 159, 162, 163, 166, 167, 457, 486, 499, 500, 501, 505], "featur": [0, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 36, 43, 58, 60, 66, 78, 83, 84, 98, 115, 122, 123, 134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 224, 227, 242, 245, 247, 253, 270, 271, 279, 284, 290, 294, 295, 305, 306, 308, 309, 310, 313, 314, 315, 316, 321, 324, 325, 346, 351, 355, 372, 379, 382, 384, 399, 402, 404, 415, 418, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 474, 478, 479, 480, 484, 485, 486, 487, 488, 490, 491, 492, 494, 497, 501, 503, 505, 506], "recent": [0, 7, 202, 283, 285, 288, 506], "version": [0, 1, 2, 3, 6, 14, 17, 19, 20, 24, 26, 29, 30, 31, 35, 36, 38, 41, 43, 44, 48, 49, 50, 53, 55, 56, 59, 61, 62, 64, 66, 67, 72, 73, 78, 87, 88, 89, 90, 102, 122, 134, 137, 140, 143, 144, 145, 146, 152, 159, 160, 164, 165, 166, 168, 170, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 227, 274, 283, 284, 285, 287, 288, 290, 310, 315, 323, 329, 346, 351, 355, 362, 382, 384, 399, 400, 402, 404, 405, 415, 417, 418, 422, 425, 476, 477, 479, 480, 484, 486, 487, 488, 489, 491, 494, 499, 500, 501, 502, 506], "although": [0, 1, 3, 8, 27, 36, 43, 48, 66, 67, 73, 78, 86, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 363, 365, 367, 370, 375, 378, 480, 481, 484, 485, 492, 503], "core": [0, 2, 3, 8, 29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 114, 115, 117, 185, 481, 487, 490, 505], "guarante": [0, 2, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 108, 109, 110, 111, 124, 126, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 284, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 372, 415, 416, 417, 418, 419, 492], "backward": [0, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 285, 287, 308, 309, 313, 314, 331, 346, 351, 355, 372, 382, 383, 385, 386, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 417, 418, 484, 486, 487, 488, 491, 492, 494, 499, 500, 501], "compat": [0, 2, 3, 7, 15, 16, 18, 32, 36, 43, 48, 56, 66, 67, 73, 78, 97, 102, 109, 111, 117, 120, 122, 123, 124, 128, 134, 137, 140, 144, 146, 152, 161, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 268, 280, 284, 285, 287, 288, 308, 309, 310, 313, 314, 315, 346, 351, 355, 369, 382, 383, 385, 386, 387, 389, 390, 391, 398, 400, 402, 403, 404, 405, 407, 408, 411, 415, 417, 418, 422, 478, 484, 487, 496, 503], "2": [0, 1, 2, 3, 8, 9, 10, 15, 16, 18, 27, 28, 29, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 60, 61, 63, 64, 65, 66, 67, 68, 70, 73, 75, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 101, 102, 108, 110, 114, 115, 117, 122, 123, 128, 130, 134, 135, 136, 137, 140, 141, 144, 150, 151, 152, 155, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 219, 223, 224, 226, 228, 231, 232, 233, 235, 236, 237, 238, 247, 248, 251, 253, 255, 257, 260, 263, 267, 268, 269, 270, 275, 276, 277, 280, 282, 284, 285, 287, 288, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 330, 331, 332, 340, 343, 346, 351, 352, 355, 363, 364, 365, 367, 371, 375, 376, 382, 383, 384, 385, 386, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 417, 418, 421, 422, 423, 424, 425, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 451, 478, 479, 480, 483, 484, 485, 486, 487, 488, 490, 491, 498, 499, 500, 501, 503, 504, 505, 506], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 21, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 114, 115, 117, 122, 123, 130, 134, 135, 136, 137, 140, 143, 144, 146, 147, 150, 151, 152, 158, 159, 160, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 328, 331, 332, 335, 336, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 354, 355, 359, 363, 365, 370, 371, 372, 374, 375, 378, 379, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 451, 458, 470, 474, 478, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "nightli": [0, 6], "via": [0, 1, 3, 4, 7, 8, 20, 25, 26, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 97, 98, 101, 109, 144, 164, 173, 193, 195, 248, 255, 258, 282, 346, 351, 355, 385, 388, 400, 415, 418, 480, 481, 484, 485, 486, 487, 490, 492, 503, 505, 506], "tensordict": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 120, 122, 123, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 251, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 292, 293, 303, 304, 307, 310, 315, 317, 318, 321, 322, 332, 333, 334, 342, 343, 344, 346, 347, 348, 349, 350, 351, 355, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 440, 441, 451, 455, 456, 457, 459, 460, 476, 478, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 506], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 66, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 108, 187, 199, 205, 247, 257, 275, 276, 285, 346, 351, 355, 360, 361, 362, 371, 390, 398, 407, 476, 484, 499, 501, 505], "willing": 0, "contribut": [0, 2, 319], "cd": [0, 7], "path": [0, 3, 6, 7, 36, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 117, 125, 131, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 255, 282, 287, 318, 344, 346, 347, 348, 349, 350, 351, 355, 415, 416, 417, 418, 419, 444, 449, 460, 481, 485, 488, 494, 499], "root": [0, 2, 3, 40, 41, 49, 51, 63, 68, 70, 75, 85, 95, 96, 97, 98, 105, 106, 113, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 227, 249, 271, 272, 310, 311, 315, 340, 341, 422, 480, 487, 489, 499, 500, 501, 503, 506], "http": [0, 2, 5, 6, 7, 10, 15, 16, 22, 23, 25, 33, 63, 81, 95, 98, 114, 115, 135, 136, 138, 139, 146, 148, 150, 151, 156, 157, 159, 160, 161, 162, 163, 166, 167, 170, 176, 177, 178, 179, 192, 227, 255, 280, 290, 296, 297, 298, 299, 300, 301, 304, 305, 306, 313, 318, 319, 320, 325, 326, 327, 331, 332, 333, 335, 336, 342, 365, 382, 383, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 422, 427, 435, 475, 495, 496, 502, 505], "github": [0, 2, 5, 6, 7, 10, 22, 23, 25, 33, 95, 98, 135, 136, 138, 139, 143, 146, 150, 151, 156, 157, 159, 160, 162, 163, 166, 167, 170, 176, 177, 178, 179, 224, 227, 280, 290, 490, 494, 496, 499, 500, 505], "com": [0, 2, 5, 6, 7, 10, 22, 23, 25, 33, 135, 136, 138, 139, 146, 148, 150, 151, 156, 157, 159, 160, 162, 163, 166, 167, 170, 176, 177, 178, 179, 227, 290, 496, 505], "setup": [0, 1, 7, 135, 136, 148, 150, 151, 176, 206, 207, 418], "py": [0, 2, 3, 33, 103, 143, 145, 217, 227, 302, 312, 333, 342, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "develop": [0, 3, 4, 7, 51, 148, 351, 355, 478, 484, 497, 505], "A": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 122, 124, 128, 129, 130, 131, 132, 134, 137, 140, 142, 144, 146, 147, 149, 152, 164, 165, 168, 169, 170, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 218, 220, 222, 223, 224, 226, 227, 230, 232, 233, 237, 243, 247, 249, 255, 256, 258, 265, 270, 272, 275, 276, 277, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 304, 307, 308, 309, 310, 313, 314, 315, 316, 318, 319, 320, 322, 323, 325, 331, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 363, 364, 365, 367, 368, 369, 372, 374, 375, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 411, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 440, 443, 444, 447, 449, 450, 453, 460, 462, 470, 476, 478, 480, 483, 484, 486, 488, 490, 491, 492, 495, 496, 501, 504, 506], "seri": [0, 2, 3, 7, 8, 60, 107, 118, 128, 129, 132, 133, 173, 250, 276, 442, 479, 480, 484, 485, 486, 493, 494, 499, 500, 503, 506], "quick": [0, 95, 488], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 97, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 226, 245, 248, 271, 276, 287, 290, 402, 417, 477, 479, 480, 484, 485, 486, 487, 490, 494, 496, 497, 499, 500, 501, 503, 505, 506], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 115, 117, 118, 120, 121, 122, 123, 128, 130, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 151, 152, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 219, 220, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 245, 247, 248, 249, 250, 251, 255, 256, 259, 260, 263, 264, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 282, 284, 285, 287, 288, 293, 294, 295, 307, 308, 309, 310, 312, 313, 314, 315, 316, 319, 320, 321, 322, 323, 332, 343, 344, 346, 347, 348, 349, 350, 351, 355, 359, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 394, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 436, 437, 438, 439, 440, 446, 449, 450, 456, 457, 460, 462, 464, 470, 474, 477, 478, 480, 484, 485, 486, 487, 488, 489, 491, 493, 494, 496, 498, 499, 500, 501, 503, 505, 506], "hurri": [0, 489], "last": [0, 1, 2, 3, 4, 15, 16, 18, 21, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 74, 75, 83, 85, 86, 87, 88, 89, 90, 97, 121, 122, 123, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 159, 160, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 198, 206, 212, 220, 223, 226, 231, 232, 242, 249, 251, 256, 269, 271, 273, 283, 288, 289, 294, 295, 307, 308, 310, 313, 315, 316, 319, 320, 326, 337, 340, 343, 363, 367, 372, 385, 422, 424, 425, 478, 485, 486, 487, 488, 489, 490, 496, 499, 500, 501, 502, 503, 505, 506], "item": [0, 2, 3, 8, 15, 30, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 109, 115, 117, 121, 128, 220, 241, 276, 285, 319, 320, 386, 387, 389, 418, 451, 478, 480, 481, 484, 486, 487, 491, 492, 496, 499, 500, 501, 503], "navig": [0, 199, 496, 500], "previou": [0, 3, 4, 10, 56, 63, 68, 69, 70, 72, 79, 80, 95, 96, 97, 98, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 219, 242, 270, 287, 308, 313, 336, 363, 478, 486, 487, 488, 489, 490, 494, 501, 506], "whenev": [0, 1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 70, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 102, 114, 115, 122, 123, 138, 139, 143, 145, 146, 156, 157, 170, 178, 179, 186, 187, 188, 189, 190, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 242, 246, 276, 277, 283, 287, 346, 351, 355, 400, 415, 417, 418, 422, 423, 424, 425, 440, 462, 479, 493, 496, 503], "want": [0, 1, 2, 3, 6, 7, 8, 18, 29, 43, 66, 78, 123, 186, 187, 190, 200, 227, 251, 331, 346, 351, 355, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 479, 484, 485, 486, 487, 488, 489, 491, 492, 493, 499, 500, 501, 502, 503, 505, 506], "ted": [0, 45, 57, 76, 77, 95, 97, 98, 105, 106, 113, 476, 483, 495, 504], "s": [0, 1, 2, 3, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 29, 30, 36, 40, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 83, 85, 95, 96, 97, 98, 100, 101, 102, 103, 117, 122, 123, 128, 134, 135, 136, 137, 140, 144, 148, 150, 151, 152, 156, 157, 159, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 231, 232, 245, 249, 255, 268, 270, 273, 274, 275, 276, 277, 280, 282, 284, 285, 287, 289, 292, 294, 295, 302, 307, 310, 315, 320, 321, 322, 325, 331, 333, 340, 342, 344, 346, 347, 348, 349, 350, 351, 355, 360, 362, 365, 367, 368, 371, 372, 375, 383, 384, 385, 390, 396, 398, 399, 400, 402, 405, 407, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 440, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506], "modul": [0, 1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 42, 43, 48, 56, 66, 67, 72, 73, 78, 102, 128, 134, 135, 136, 137, 140, 144, 152, 155, 158, 161, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 226, 231, 237, 239, 245, 247, 255, 256, 269, 270, 275, 276, 277, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 413, 415, 417, 418, 420, 422, 423, 424, 425, 426, 440, 460, 467, 470, 476, 480, 481, 483, 485, 486, 489, 491, 492, 493, 495, 497, 498, 499, 500, 501, 502, 503, 504], "optim": [0, 1, 2, 8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 102, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 291, 312, 318, 324, 325, 331, 340, 346, 351, 355, 383, 385, 400, 401, 402, 405, 412, 415, 417, 418, 455, 456, 460, 470, 478, 480, 481, 483, 486, 487, 488, 489, 490, 492, 495, 497, 499, 500, 501, 504], "collect": [0, 1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 51, 56, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 121, 134, 137, 140, 144, 152, 164, 165, 168, 170, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 200, 204, 224, 227, 242, 251, 255, 282, 332, 367, 383, 386, 389, 391, 403, 405, 407, 408, 442, 451, 457, 460, 462, 463, 464, 470, 478, 481, 483, 484, 487, 488, 489, 490, 491, 494, 495, 499, 500, 501, 502, 503, 504, 505, 506], "storag": [0, 1, 8, 15, 16, 18, 21, 29, 36, 43, 45, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 82, 85, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 122, 123, 125, 126, 127, 128, 130, 131, 134, 137, 140, 142, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 226, 227, 235, 238, 260, 287, 344, 346, 347, 348, 349, 350, 351, 355, 384, 399, 402, 415, 416, 417, 418, 419, 476, 478, 481, 483, 485, 486, 487, 488, 489, 491, 494, 495, 499, 500, 502, 504], "log": [0, 3, 4, 8, 11, 72, 201, 202, 206, 207, 302, 303, 304, 312, 319, 320, 328, 340, 341, 346, 351, 355, 364, 365, 368, 372, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 408, 415, 418, 420, 449, 453, 454, 455, 460, 470, 478, 479, 480, 481, 483, 484, 485, 486, 489, 490, 494, 495, 499, 500, 501, 504, 505], "your": [0, 1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 29, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 148, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 285, 287, 346, 351, 355, 372, 384, 402, 415, 417, 418, 450, 474, 476, 477, 479, 480, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 497, 499, 500, 503, 504, 505], "own": [0, 1, 15, 16, 21, 27, 28, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 442, 476, 480, 483, 485, 486, 489, 495, 499, 500, 501, 504], "train": [0, 1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 31, 33, 36, 39, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 84, 85, 95, 99, 100, 101, 102, 114, 115, 134, 137, 140, 144, 149, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 235, 243, 255, 269, 274, 277, 280, 282, 287, 289, 290, 292, 297, 299, 307, 312, 332, 344, 346, 347, 348, 349, 350, 351, 353, 355, 382, 383, 384, 385, 386, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 460, 462, 470, 476, 478, 479, 481, 483, 485, 489, 492, 493, 495, 502, 503, 504, 505, 506], "loop": [0, 1, 8, 18, 29, 62, 64, 71, 85, 100, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 289, 307, 331, 332, 344, 347, 348, 349, 350, 383, 385, 391, 398, 402, 403, 405, 407, 408, 416, 419, 422, 423, 424, 425, 460, 478, 480, 481, 483, 484, 485, 489, 491, 492, 493, 495, 498, 503, 504, 505], "ppo": [0, 1, 4, 8, 368, 372, 384, 399, 402, 415, 476, 479, 483, 484, 485, 488, 490, 491, 495, 499, 504], "pendulum": [0, 3, 15, 16, 18, 21, 27, 28, 29, 30, 68, 102, 128, 134, 137, 138, 139, 140, 141, 143, 144, 145, 152, 159, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 230, 231, 233, 240, 246, 247, 251, 258, 260, 264, 265, 268, 270, 271, 272, 275, 276, 277, 278, 284, 285, 287, 293, 310, 315, 417, 470, 479, 483, 485, 486, 489, 490, 491, 495, 504, 505, 506], "introduct": [0, 480, 483, 489, 495, 499, 500, 504, 506], "multi": [0, 1, 7, 9, 15, 16, 21, 36, 43, 48, 56, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 102, 105, 106, 113, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 248, 277, 287, 308, 310, 313, 315, 316, 321, 322, 323, 346, 351, 355, 367, 372, 415, 417, 418, 420, 422, 423, 424, 425, 476, 478, 483, 484, 485, 486, 487, 489, 490, 495, 501, 504, 505], "agent": [0, 9, 69, 74, 75, 149, 155, 156, 157, 162, 163, 166, 167, 171, 172, 176, 177, 178, 179, 181, 199, 248, 267, 268, 269, 319, 320, 321, 322, 323, 325, 333, 342, 384, 399, 402, 420, 476, 483, 489, 495, 501, 504], "env": [0, 1, 2, 5, 6, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 30, 36, 40, 43, 45, 48, 51, 56, 66, 67, 68, 72, 73, 76, 78, 85, 95, 96, 97, 98, 101, 102, 117, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 293, 310, 315, 317, 318, 344, 346, 347, 348, 349, 350, 351, 355, 367, 371, 400, 415, 417, 418, 440, 441, 442, 450, 464, 465, 466, 470, 472, 473, 474, 476, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 502, 503, 504], "us": [0, 1, 2, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 122, 123, 128, 130, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 251, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 301, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 330, 331, 332, 333, 334, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 435, 440, 442, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 468, 470, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 506], "pretrain": [0, 483, 495, 504], "recurr": [0, 2, 226, 308, 309, 310, 313, 315, 336, 358, 422, 483, 485, 490, 495, 503, 504], "dqn": [0, 2, 95, 220, 239, 295, 304, 364, 365, 382, 383, 385, 386, 387, 389, 391, 392, 393, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 415, 418, 420, 467, 476, 479, 483, 488, 490, 491, 494, 495, 504], "polici": [0, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 45, 56, 68, 76, 102, 134, 135, 136, 137, 140, 144, 152, 158, 164, 165, 168, 169, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 232, 237, 247, 249, 269, 272, 276, 287, 289, 292, 293, 304, 307, 310, 315, 321, 322, 325, 332, 334, 346, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 375, 382, 383, 384, 385, 386, 390, 391, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 417, 418, 455, 462, 465, 466, 470, 472, 473, 476, 479, 481, 483, 485, 489, 491, 492, 495, 497, 502, 503, 504, 505, 506], "replai": [0, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 56, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 102, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 128, 129, 133, 226, 227, 237, 256, 260, 270, 276, 287, 385, 386, 387, 389, 390, 391, 398, 403, 405, 407, 408, 417, 457, 460, 468, 470, 476, 478, 480, 481, 483, 488, 495, 501, 502, 504], "buffer": [0, 4, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 133, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 226, 227, 231, 236, 237, 245, 255, 256, 260, 270, 275, 276, 277, 280, 282, 287, 289, 332, 344, 346, 347, 348, 349, 350, 351, 355, 363, 371, 374, 384, 385, 386, 387, 389, 390, 391, 398, 399, 402, 403, 405, 407, 408, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 457, 460, 468, 470, 476, 478, 480, 481, 483, 488, 493, 495, 501, 502, 504, 506], "export": [0, 6, 7, 483, 495, 504], "llm": [0, 2, 29, 30, 31, 72, 84, 99, 100, 101, 102, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 312, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 415, 416, 417, 418, 419, 476, 483, 495, 504], "build": [0, 1, 2, 3, 7, 32, 36, 40, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 83, 95, 96, 97, 98, 102, 117, 134, 135, 136, 137, 140, 144, 145, 146, 150, 151, 152, 156, 157, 159, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 260, 284, 285, 287, 291, 318, 346, 351, 355, 366, 368, 372, 415, 417, 418, 460, 467, 468, 469, 478, 479, 480, 481, 483, 486, 487, 488, 490, 491, 492, 493, 495, 499, 500, 501, 502, 504, 505, 506], "tool": [0, 1, 2, 3, 5, 101, 185, 199, 203, 205, 478, 479, 480, 483, 487, 489, 495, 499, 501, 503, 504, 506], "enabl": [0, 2, 7, 8, 97, 108, 110, 121, 130, 185, 199, 224, 310, 315, 332, 346, 351, 355, 367, 440, 442, 455, 478, 483, 486, 489, 495, 499, 500, 501, 503, 504], "competit": [0, 3, 156, 157, 483, 495, 500, 504], "ddpg": [0, 297, 298, 299, 300, 386, 397, 406, 476, 479, 483, 485, 491, 495, 500, 504], "task": [0, 2, 3, 9, 72, 74, 75, 84, 134, 137, 138, 139, 140, 144, 147, 152, 156, 157, 164, 165, 166, 167, 168, 170, 173, 174, 175, 178, 179, 185, 186, 187, 190, 192, 193, 194, 195, 197, 255, 268, 277, 280, 282, 390, 398, 476, 483, 484, 485, 486, 487, 489, 490, 495, 496, 499, 500, 501, 504, 506], "specif": [0, 1, 2, 5, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 162, 163, 164, 165, 168, 173, 174, 175, 178, 185, 186, 187, 190, 193, 194, 195, 200, 215, 249, 270, 285, 301, 310, 315, 363, 382, 384, 400, 402, 404, 415, 418, 442, 460, 476, 480, 481, 483, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 503, 504, 505], "object": [0, 2, 3, 4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 33, 36, 40, 43, 48, 56, 58, 62, 64, 66, 67, 71, 73, 78, 83, 84, 85, 100, 101, 102, 103, 108, 109, 110, 111, 117, 120, 124, 126, 130, 133, 134, 137, 140, 144, 150, 152, 164, 165, 168, 169, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 235, 238, 239, 245, 248, 251, 255, 275, 276, 277, 280, 284, 285, 287, 310, 315, 318, 321, 322, 333, 340, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 368, 371, 372, 373, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 464, 465, 466, 469, 470, 474, 476, 479, 481, 483, 485, 486, 487, 488, 492, 494, 495, 497, 499, 500, 501, 503, 504, 506], "loss": [0, 3, 8, 64, 239, 312, 319, 331, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 415, 418, 420, 421, 422, 456, 460, 467, 470, 478, 480, 481, 483, 488, 489, 491, 492, 493, 495, 501, 503, 504], "trainer": [0, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 418, 420, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 483, 484, 495, 504], "exampl": [0, 1, 2, 4, 9, 10, 15, 16, 18, 21, 22, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 84, 85, 86, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 114, 115, 117, 122, 123, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 328, 330, 331, 332, 333, 334, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 440, 442, 450, 451, 452, 453, 454, 456, 457, 458, 459, 462, 470, 476, 479, 480, 481, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 504, 505, 506], "packag": [0, 6, 7, 10, 217, 476, 477, 496, 506], "batch": [0, 2, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 32, 40, 56, 58, 60, 63, 65, 68, 69, 70, 72, 79, 80, 81, 83, 95, 96, 97, 98, 99, 102, 108, 109, 110, 111, 115, 116, 117, 121, 122, 123, 128, 130, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 158, 159, 161, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 224, 227, 231, 233, 242, 249, 251, 253, 256, 260, 267, 270, 272, 276, 277, 279, 283, 284, 285, 287, 290, 302, 308, 309, 310, 312, 313, 314, 315, 319, 320, 321, 322, 323, 324, 328, 332, 333, 339, 343, 351, 355, 358, 367, 371, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 451, 454, 457, 458, 459, 460, 462, 472, 473, 474, 476, 478, 479, 480, 481, 485, 486, 487, 488, 489, 492, 494, 496, 498, 499, 500, 502, 505, 506], "size": [0, 2, 15, 16, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 121, 122, 123, 124, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 224, 226, 227, 228, 231, 234, 235, 238, 239, 240, 242, 245, 248, 249, 253, 255, 257, 258, 260, 264, 266, 267, 268, 270, 272, 273, 276, 277, 278, 279, 282, 284, 287, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 328, 329, 330, 331, 332, 333, 334, 335, 336, 339, 342, 343, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 442, 451, 457, 476, 478, 479, 480, 485, 486, 487, 488, 489, 490, 492, 496, 499, 500, 501, 506], "copi": [0, 2, 3, 14, 17, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 43, 44, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 108, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 223, 227, 245, 258, 269, 275, 276, 277, 284, 285, 287, 288, 310, 315, 323, 344, 346, 347, 348, 349, 350, 351, 355, 363, 385, 400, 405, 415, 416, 417, 418, 419, 422, 440, 476, 478, 480, 484, 485, 487, 489, 499, 503, 505], "weight": [0, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 63, 66, 67, 72, 73, 78, 102, 114, 115, 117, 120, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 245, 248, 255, 270, 275, 276, 277, 280, 282, 287, 308, 309, 310, 313, 314, 315, 321, 323, 325, 346, 351, 354, 355, 371, 382, 383, 384, 385, 391, 394, 402, 405, 407, 415, 417, 418, 462, 469, 476, 478, 479, 481, 484, 485, 486, 498, 501, 503, 505], "synchron": [0, 3, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 62, 64, 71, 85, 100, 101, 159, 191, 344, 347, 348, 349, 350, 416, 419, 472, 473, 476, 478, 485, 486, 499], "distribut": [0, 2, 3, 4, 9, 10, 14, 17, 20, 22, 23, 24, 25, 26, 27, 28, 31, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 137, 166, 167, 204, 247, 251, 285, 289, 291, 302, 303, 304, 305, 311, 312, 318, 319, 320, 328, 329, 330, 331, 335, 336, 339, 340, 341, 346, 351, 353, 355, 363, 364, 365, 368, 372, 373, 382, 383, 384, 385, 390, 391, 392, 398, 399, 402, 403, 404, 405, 407, 408, 415, 476, 478, 480, 481, 485, 486, 488, 490, 492, 499, 500, 501, 505, 506], "interoper": [0, 15, 16, 476], "run": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 43, 48, 56, 66, 67, 68, 73, 78, 95, 102, 115, 122, 123, 134, 135, 136, 137, 138, 139, 140, 143, 144, 150, 151, 152, 158, 159, 160, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 245, 250, 251, 267, 275, 276, 277, 284, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 372, 373, 374, 375, 378, 385, 391, 405, 415, 417, 418, 442, 449, 455, 472, 473, 474, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 490, 491, 492, 493, 494, 496, 499, 500, 501, 505], "asynchron": [0, 3, 9, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 344, 346, 347, 348, 349, 350, 351, 355, 371, 382, 415, 416, 417, 418, 419, 472, 476, 484, 485, 486], "singl": [0, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 40, 41, 43, 46, 48, 49, 51, 54, 56, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 85, 95, 96, 97, 98, 100, 101, 102, 109, 117, 123, 128, 134, 137, 140, 143, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 227, 228, 248, 255, 260, 270, 275, 277, 282, 287, 294, 295, 308, 309, 310, 313, 314, 315, 316, 322, 344, 346, 347, 348, 349, 350, 351, 355, 370, 374, 383, 384, 385, 387, 389, 391, 392, 398, 399, 402, 403, 405, 407, 408, 412, 415, 416, 417, 418, 419, 422, 423, 424, 425, 431, 432, 433, 434, 436, 437, 438, 439, 440, 474, 476, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 498, 499, 500, 501, 502, 503, 505], "node": [0, 2, 20, 22, 23, 25, 27, 28, 40, 41, 49, 51, 62, 64, 71, 75, 85, 100, 101, 152, 191, 194, 275, 344, 347, 348, 349, 350, 353, 416, 419, 476, 492, 505], "helper": [0, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 484, 485, 487, 499, 501], "compos": [0, 3, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 116, 117, 118, 119, 128, 129, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 232, 233, 245, 259, 275, 276, 277, 284, 287, 346, 351, 355, 366, 367, 385, 394, 405, 415, 417, 418, 442, 476, 484, 485, 486, 487, 488, 492, 496, 498, 500, 502, 503, 505, 506], "episod": [0, 3, 51, 95, 96, 97, 98, 115, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 223, 260, 263, 269, 291, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 476, 485, 489, 494, 499, 500, 503], "format": [0, 1, 3, 36, 43, 45, 48, 54, 55, 56, 57, 60, 61, 66, 67, 73, 76, 77, 78, 85, 95, 96, 97, 98, 101, 102, 105, 106, 113, 120, 128, 134, 137, 140, 144, 152, 164, 165, 166, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418, 442, 476, 478, 484, 485, 488, 489, 491, 493, 496, 505, 506], "tensorspec": [0, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 86, 87, 88, 89, 90, 91, 92, 93, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 169, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 220, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 242, 244, 246, 247, 248, 249, 251, 253, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 307, 332, 336, 359, 363, 364, 365, 368, 369, 370, 371, 372, 373, 375, 383, 385, 387, 390, 391, 403, 405, 407, 408, 417, 420, 476, 501], "tree": [0, 1, 51, 62, 64, 71, 100, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 227, 344, 347, 348, 349, 350, 416, 419, 476, 499, 503], "forest": [0, 51, 85, 476], "larg": [0, 3, 4, 39, 62, 64, 71, 85, 100, 101, 114, 115, 122, 123, 191, 235, 238, 280, 312, 344, 347, 348, 349, 350, 382, 384, 399, 402, 404, 415, 416, 419, 476, 485, 486, 497, 499, 500, 503], "languag": [0, 33, 72, 193, 476, 478, 497], "human": [0, 33, 98, 186, 476, 501], "feedback": [0, 186, 476, 478, 494, 505], "rlhf": [0, 186, 247, 415, 476, 478, 479], "spec": [0, 1, 2, 15, 16, 18, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 101, 102, 134, 135, 136, 137, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 247, 248, 249, 251, 253, 255, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 304, 307, 310, 315, 332, 334, 336, 344, 347, 348, 349, 350, 359, 363, 364, 365, 368, 369, 370, 371, 372, 374, 375, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 417, 420, 476, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 494, 496, 498, 499, 500, 505], "lock": [0, 40, 41, 49, 62, 64, 71, 75, 85, 100, 101, 134, 137, 140, 144, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 224, 233, 270, 284, 285, 344, 347, 348, 349, 350, 416, 419, 476, 480, 501], "method": [0, 1, 2, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 117, 122, 123, 124, 125, 126, 128, 130, 134, 137, 140, 143, 144, 145, 146, 151, 152, 164, 165, 168, 169, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 246, 247, 249, 251, 254, 255, 256, 257, 258, 259, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 291, 292, 293, 302, 307, 310, 315, 321, 322, 323, 344, 346, 347, 348, 349, 350, 351, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 379, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 396, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 426, 440, 441, 471, 476, 478, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 499, 501, 503, 506], "partial": [0, 2, 15, 16, 18, 21, 29, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 226, 227, 269, 270, 271, 368, 460, 476, 487], "step": [0, 1, 4, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 56, 72, 85, 95, 102, 105, 106, 113, 115, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 242, 243, 246, 247, 249, 251, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 283, 284, 287, 289, 290, 291, 305, 307, 308, 310, 313, 315, 317, 318, 331, 332, 367, 368, 372, 382, 393, 402, 417, 421, 422, 423, 424, 425, 428, 429, 430, 441, 444, 451, 455, 460, 476, 478, 481, 485, 487, 488, 490, 491, 493, 494, 497, 498, 501, 502, 505], "reset": [0, 1, 2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 117, 123, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 222, 223, 224, 227, 239, 242, 246, 250, 255, 263, 268, 269, 270, 271, 272, 275, 276, 277, 280, 283, 284, 287, 288, 293, 308, 310, 315, 323, 332, 346, 351, 355, 357, 367, 400, 415, 417, 418, 441, 476, 478, 480, 484, 485, 486, 487, 489, 492, 496, 498, 499, 500, 505], "vector": [0, 1, 8, 34, 60, 135, 136, 145, 150, 151, 155, 166, 167, 170, 178, 179, 237, 283, 285, 297, 299, 308, 309, 313, 314, 316, 422, 425, 435, 436, 437, 438, 439, 476, 479, 480, 484, 485, 487, 498, 499, 500, 501, 502, 506], "async": [0, 15, 16, 18, 21, 22, 23, 25, 27, 29, 68, 134, 168, 174, 283, 476, 478], "custom": [0, 1, 2, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 73, 78, 85, 98, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 280, 287, 321, 322, 346, 351, 355, 375, 381, 392, 402, 409, 415, 417, 418, 474, 476, 479, 484, 485, 486, 487, 490, 491, 493, 496, 499, 500], "nativ": [0, 1, 7, 9, 98, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 442, 476, 478, 487, 503], "auto": [0, 31, 110, 130, 140, 145, 222, 223, 277, 283, 332, 383, 385, 391, 401, 403, 405, 407, 408, 476, 478, 480, 499, 500], "dynam": [0, 2, 7, 15, 16, 18, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 212, 287, 390, 398, 476, 478, 486, 489, 501], "mask": [0, 1, 4, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 101, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 206, 207, 221, 256, 287, 292, 293, 304, 307, 312, 319, 320, 334, 346, 351, 355, 363, 364, 365, 369, 370, 391, 405, 415, 418, 457, 476, 485, 487, 488, 497, 506], "action": [0, 2, 8, 9, 15, 16, 18, 21, 27, 29, 30, 45, 51, 60, 68, 72, 76, 78, 85, 95, 96, 97, 98, 102, 114, 115, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 221, 224, 230, 231, 232, 235, 236, 237, 238, 239, 240, 242, 243, 245, 247, 249, 250, 251, 253, 257, 258, 260, 264, 268, 270, 274, 276, 277, 278, 279, 283, 287, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 310, 315, 316, 317, 318, 319, 320, 321, 330, 332, 333, 334, 336, 339, 340, 342, 346, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 372, 375, 376, 382, 383, 384, 385, 386, 387, 389, 390, 391, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 470, 474, 476, 478, 479, 481, 484, 485, 486, 488, 489, 490, 491, 496, 497, 498, 499, 500, 502, 505, 506], "record": [0, 2, 11, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 220, 247, 287, 346, 351, 355, 402, 415, 417, 418, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 470, 476, 485, 486, 490, 494, 499], "domain": [0, 2, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 199, 212, 237, 245, 270, 278, 359, 364, 365, 368, 369, 370, 371, 372, 373, 374, 379, 476, 486, 491, 496, 499, 500, 501, 505, 506], "interfac": [0, 1, 3, 134, 147, 161, 316, 324, 346, 351, 355, 476, 479, 480, 484, 486, 488, 493, 496, 497, 501, 503], "structur": [0, 1, 3, 7, 51, 58, 62, 63, 64, 70, 71, 72, 79, 80, 83, 84, 85, 100, 101, 109, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 192, 193, 194, 195, 200, 206, 207, 219, 235, 238, 270, 321, 332, 344, 346, 347, 348, 349, 350, 351, 355, 382, 391, 402, 405, 416, 419, 422, 423, 424, 425, 426, 476, 480, 484, 486, 487, 489, 492, 499, 500, 501, 502], "actor": [0, 3, 4, 27, 29, 30, 31, 68, 169, 206, 247, 291, 296, 297, 299, 304, 305, 307, 318, 330, 332, 334, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 415, 418, 420, 476, 480, 485, 487, 489, 491, 494, 499, 502, 505], "explor": [0, 1, 286, 289, 292, 307, 325, 332, 359, 364, 365, 368, 369, 370, 371, 372, 382, 400, 455, 465, 466, 470, 476, 478, 486, 487, 488, 489, 491, 492, 494, 499, 500, 501], "valu": [0, 1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 114, 115, 117, 122, 123, 128, 134, 137, 140, 144, 145, 152, 155, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 223, 225, 227, 228, 230, 233, 235, 236, 237, 238, 239, 245, 250, 251, 255, 256, 259, 260, 261, 263, 265, 267, 270, 271, 275, 276, 277, 282, 283, 284, 285, 287, 288, 289, 290, 293, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 310, 311, 312, 315, 316, 318, 319, 320, 321, 322, 324, 325, 328, 332, 333, 334, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 450, 451, 453, 454, 455, 456, 457, 460, 470, 476, 481, 485, 488, 491, 492, 493, 498, 499, 500, 501, 503, 505, 506], "gener": [0, 1, 2, 3, 7, 8, 9, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 66, 70, 72, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 117, 119, 121, 134, 137, 140, 141, 144, 152, 156, 157, 158, 161, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 221, 224, 231, 233, 235, 236, 240, 245, 247, 249, 251, 257, 258, 263, 264, 268, 270, 274, 276, 278, 283, 285, 287, 292, 293, 302, 310, 315, 319, 320, 328, 346, 351, 355, 359, 368, 372, 376, 377, 396, 403, 410, 415, 417, 418, 422, 427, 435, 445, 460, 476, 478, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "hook": [0, 2, 14, 17, 19, 20, 24, 26, 31, 36, 43, 45, 48, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 95, 96, 97, 98, 102, 117, 131, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 334, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 375, 378, 415, 417, 418, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 476], "planner": [0, 291, 318, 476], "torch": [0, 1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 117, 118, 121, 122, 123, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 245, 247, 248, 251, 253, 255, 257, 258, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 276, 277, 278, 280, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 451, 458, 459, 470, 476, 478, 479, 481, 484, 485, 486, 487, 488, 490, 491, 492, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "vmap": [0, 308, 309, 313, 314, 323, 343, 371, 374, 383, 385, 391, 398, 400, 403, 405, 407, 408, 415, 418, 422, 423, 424, 425, 476, 479], "random": [0, 1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 72, 74, 75, 83, 86, 87, 88, 89, 90, 116, 128, 134, 137, 140, 144, 152, 158, 164, 165, 168, 169, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 200, 220, 237, 250, 251, 270, 277, 293, 307, 308, 310, 313, 368, 371, 372, 379, 383, 400, 403, 415, 418, 455, 464, 476, 479, 484, 485, 486, 488, 489, 490, 492, 501, 502, 503, 505, 506], "sac": [0, 391, 403, 405, 476], "redq": [0, 403, 476], "crossq": [0, 385, 476], "iql": [0, 390, 398, 476, 484, 499, 500], "cql": [0, 383, 389, 476], "gail": [0, 396, 476], "dt": [0, 165, 332, 476, 501], "td3": [0, 407, 408, 476], "bc": [0, 5, 407, 476], "a2c": [0, 382, 476], "dreamer": [0, 213, 214, 305, 393, 394, 395, 476, 479], "checkpoint": [0, 70, 104, 106, 108, 112, 124, 125, 127, 131, 476, 503], "builder": [0, 192, 196, 476, 485, 506], "logger": [0, 3, 11, 440, 442, 444, 445, 446, 447, 448, 449, 454, 460, 470, 474, 476, 485, 499], "_util": [0, 3, 164, 288, 476, 488, 494], "implement_for": [0, 3, 476], "set_auto_unwrap_transformed_env": [0, 12, 277, 476], "auto_unwrap_transformed_env": [0, 450, 476], "thing": [0, 1, 3, 7, 8, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 276, 321, 322, 391, 405, 477, 486, 487, 488, 489, 490, 491, 492, 493, 499, 500, 503, 506], "consid": [0, 1, 2, 3, 8, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 29, 36, 40, 41, 43, 48, 49, 56, 63, 66, 67, 70, 73, 75, 78, 79, 80, 102, 108, 110, 122, 123, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 237, 284, 287, 302, 319, 321, 322, 339, 346, 351, 355, 383, 385, 398, 403, 405, 407, 408, 415, 417, 418, 422, 424, 425, 477, 478, 480, 484, 489, 490, 491, 501, 503], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 121, 122, 123, 124, 126, 130, 134, 135, 136, 137, 140, 141, 143, 144, 145, 151, 152, 155, 156, 157, 159, 161, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 218, 221, 223, 226, 227, 231, 232, 235, 237, 238, 247, 248, 250, 251, 255, 256, 263, 270, 272, 275, 276, 277, 280, 282, 283, 284, 285, 287, 288, 290, 291, 302, 304, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 331, 334, 340, 346, 351, 355, 367, 368, 371, 372, 374, 378, 383, 384, 385, 387, 391, 392, 398, 399, 400, 402, 403, 405, 407, 408, 409, 415, 417, 418, 420, 421, 422, 423, 424, 425, 440, 441, 442, 444, 447, 449, 457, 474, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 490, 492, 493, 499, 500, 501, 502, 503, 505, 506], "debug": [0, 6, 8, 51, 72, 85, 95, 96, 97, 98, 204, 272, 477, 506], "work": [0, 1, 2, 3, 4, 8, 24, 26, 36, 43, 48, 56, 66, 67, 70, 73, 78, 95, 96, 97, 98, 102, 108, 114, 115, 120, 122, 123, 126, 133, 134, 137, 140, 143, 144, 145, 148, 152, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 285, 287, 288, 294, 295, 316, 346, 351, 355, 365, 370, 375, 384, 399, 402, 415, 417, 418, 460, 477, 478, 479, 484, 485, 486, 487, 489, 492, 497, 498, 499, 500, 501, 502, 503, 505, 506], "habitat": [0, 3, 146, 477, 502], "lab": [0, 3, 138, 139, 146, 149, 477], "mujoco": [0, 6, 8, 170, 477, 484, 486, 487], "error": [0, 1, 3, 7, 10, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 71, 73, 74, 78, 85, 100, 101, 102, 108, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 176, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 256, 275, 287, 288, 344, 346, 347, 348, 349, 350, 351, 355, 391, 400, 405, 415, 416, 417, 418, 419, 477, 478, 480, 484, 486, 499, 500, 506], "solut": [0, 2, 3, 6, 7, 9, 27, 122, 477, 479, 481, 488, 505], "resourc": [0, 1, 13, 22, 23, 25, 27, 146, 199, 477, 478, 484, 486, 488, 499, 500], "issu": [0, 2, 3, 4, 5, 8, 68, 95, 98, 106, 108, 110, 114, 115, 122, 130, 134, 137, 140, 143, 144, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 227, 256, 271, 359, 364, 365, 368, 369, 370, 371, 372, 384, 402, 477, 478, 497, 505], "customis": [0, 477, 485, 493], "video": [0, 4, 9, 100, 442, 444, 447, 449, 455, 474, 476, 477, 494, 499, 500], "render": [0, 3, 8, 151, 178, 440, 442, 455, 477, 484, 485, 486, 488, 489, 493], "index": [0, 3, 7, 8, 10, 18, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 107, 108, 109, 110, 114, 115, 117, 118, 120, 122, 126, 128, 129, 130, 132, 133, 134, 137, 140, 144, 152, 156, 157, 162, 163, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 191, 193, 194, 195, 206, 218, 222, 227, 231, 237, 277, 312, 319, 320, 344, 347, 348, 349, 350, 367, 416, 419, 476, 489, 496, 498, 499, 500, 503, 505], "search": [0, 2, 40, 41, 49, 75, 85, 161, 219, 485], "page": [0, 7, 33, 199, 449, 491, 496], "import": [1, 2, 3, 4, 6, 10, 11, 15, 16, 18, 21, 27, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 114, 115, 117, 122, 123, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 221, 223, 224, 226, 227, 230, 232, 233, 239, 240, 245, 246, 247, 248, 251, 253, 255, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 276, 278, 282, 284, 285, 287, 288, 291, 293, 297, 298, 299, 300, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 318, 321, 322, 323, 332, 333, 334, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 440, 442, 453, 455, 470, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 505, 506], "syncdatacollector": [1, 2, 3, 15, 16, 19, 21, 22, 23, 25, 27, 29, 30, 45, 56, 76, 224, 227, 260, 292, 310, 315, 470, 473, 476, 484, 485, 486, 487, 488, 492, 494, 499, 500, 503], "currentmodul": 1, "somewhat": [1, 2, 200, 480, 490, 506], "equival": [1, 3, 27, 30, 31, 34, 35, 36, 39, 40, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 78, 79, 80, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 134, 135, 136, 137, 140, 143, 144, 145, 146, 149, 150, 151, 152, 159, 160, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 236, 239, 270, 272, 277, 287, 304, 313, 316, 334, 344, 346, 347, 348, 349, 350, 351, 355, 364, 365, 369, 370, 402, 415, 416, 417, 418, 419, 457, 492, 505, 506], "dataload": [1, 29, 99, 121, 123, 185, 186, 187, 190, 193, 200, 485, 492, 503], "except": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 241, 260, 269, 270, 271, 275, 277, 287, 289, 307, 308, 310, 313, 315, 328, 332, 344, 346, 347, 348, 349, 350, 351, 355, 382, 385, 400, 402, 405, 415, 416, 417, 418, 419, 442, 478, 479, 484, 485, 489, 497, 499, 503, 505, 506], "1": [1, 2, 3, 4, 8, 10, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 114, 115, 117, 122, 123, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 245, 247, 248, 249, 251, 253, 255, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 282, 284, 285, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 431, 432, 436, 437, 439, 440, 442, 451, 455, 457, 458, 470, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 494, 498, 499, 500, 501, 502, 503, 504, 505, 506], "thei": [1, 2, 3, 4, 8, 9, 15, 16, 18, 20, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 115, 117, 134, 137, 140, 143, 144, 145, 152, 155, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 226, 241, 247, 255, 264, 272, 276, 277, 282, 287, 315, 344, 346, 347, 348, 349, 350, 351, 355, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 457, 460, 478, 479, 480, 481, 484, 485, 486, 487, 488, 491, 498, 499, 500, 501, 502, 503, 505, 506], "over": [1, 2, 3, 4, 8, 15, 16, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 101, 102, 114, 115, 117, 121, 122, 123, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 237, 251, 263, 271, 285, 287, 319, 328, 331, 340, 343, 346, 351, 355, 374, 392, 394, 400, 415, 417, 418, 422, 428, 440, 463, 478, 479, 481, 484, 485, 486, 488, 489, 490, 491, 492, 499, 500, 501, 506], "non": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 30, 34, 36, 37, 38, 40, 41, 43, 48, 49, 50, 56, 58, 59, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 109, 111, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 224, 225, 227, 231, 242, 255, 267, 270, 276, 277, 278, 279, 280, 282, 285, 287, 293, 308, 310, 313, 315, 321, 344, 346, 347, 348, 349, 350, 351, 355, 371, 372, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 478, 479, 484, 487, 488, 499, 500, 501, 503, 506], "static": [1, 40, 41, 43, 49, 66, 72, 75, 78, 84, 115, 122, 123, 146, 165, 189, 195, 284, 288, 346, 351, 355, 398, 415, 418, 489, 501, 503], "like": [1, 2, 3, 4, 7, 11, 24, 27, 36, 40, 41, 43, 48, 49, 51, 56, 58, 63, 66, 67, 70, 73, 75, 78, 79, 80, 84, 102, 103, 111, 117, 123, 134, 137, 140, 141, 144, 146, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 239, 270, 273, 287, 308, 313, 322, 346, 351, 355, 366, 372, 382, 384, 399, 402, 403, 404, 415, 417, 418, 479, 480, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 503, 505, 506], "being": [1, 2, 3, 7, 8, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 36, 43, 48, 56, 66, 67, 73, 74, 78, 99, 102, 109, 111, 114, 115, 128, 131, 134, 137, 140, 143, 144, 145, 146, 151, 152, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 226, 235, 237, 238, 245, 250, 258, 270, 275, 276, 277, 287, 307, 310, 315, 332, 346, 351, 355, 384, 385, 399, 400, 402, 405, 415, 417, 418, 442, 457, 462, 472, 473, 474, 478, 479, 480, 484, 485, 486, 487, 492, 499, 500, 501, 503], "accept": [1, 2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 48, 56, 62, 64, 66, 67, 70, 71, 73, 78, 85, 86, 98, 99, 100, 101, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 222, 227, 231, 242, 245, 255, 263, 267, 270, 275, 276, 277, 278, 279, 280, 282, 287, 316, 343, 344, 346, 347, 348, 349, 350, 351, 355, 371, 372, 373, 385, 405, 415, 416, 417, 418, 419, 442, 481, 486, 489, 493, 503, 505, 506], "two": [1, 2, 3, 4, 8, 10, 36, 43, 48, 51, 52, 53, 54, 55, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 85, 102, 117, 121, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 232, 251, 255, 275, 282, 287, 300, 308, 310, 313, 315, 321, 322, 337, 340, 346, 351, 355, 372, 399, 407, 411, 415, 417, 418, 455, 460, 478, 480, 484, 485, 486, 487, 488, 489, 490, 492, 493, 497, 498, 499, 500, 501, 503, 505, 506], "main": [1, 2, 3, 5, 15, 16, 20, 25, 28, 32, 68, 141, 185, 227, 232, 372, 460, 478, 479, 480, 484, 485, 496, 497, 498, 505, 506], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 109, 110, 111, 114, 115, 117, 120, 121, 122, 123, 126, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 239, 240, 241, 243, 245, 246, 247, 249, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 293, 294, 295, 307, 308, 310, 313, 315, 316, 319, 320, 321, 322, 324, 332, 343, 344, 346, 347, 348, 349, 350, 351, 352, 355, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 410, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 430, 440, 441, 442, 447, 449, 453, 460, 463, 470, 471, 474, 484, 485, 486, 487, 488, 489, 490, 492, 499, 500, 501, 503, 505, 506], "list": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 101, 102, 109, 111, 117, 120, 121, 122, 123, 124, 126, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 225, 226, 230, 235, 236, 238, 247, 248, 251, 253, 255, 263, 265, 273, 274, 275, 276, 277, 279, 280, 282, 284, 287, 293, 294, 295, 297, 303, 306, 310, 315, 316, 319, 320, 326, 334, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 365, 367, 369, 370, 372, 374, 375, 376, 383, 385, 398, 400, 403, 405, 407, 408, 414, 415, 417, 418, 422, 425, 440, 441, 455, 457, 472, 473, 478, 480, 484, 486, 489, 490, 491, 492, 496, 497, 498, 499, 501, 502, 503, 505, 506], "constructor": [1, 2, 3, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 68, 70, 79, 80, 84, 114, 128, 134, 137, 140, 144, 152, 159, 164, 165, 168, 173, 174, 175, 178, 185, 186, 187, 190, 192, 193, 194, 195, 206, 207, 223, 227, 275, 294, 295, 316, 346, 351, 355, 358, 368, 372, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 422, 423, 424, 425, 426, 471, 474, 478, 479, 484, 485, 486, 489, 492, 499, 500, 503, 505], "iter": [1, 2, 3, 16, 18, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 111, 117, 121, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 240, 251, 264, 287, 288, 290, 292, 293, 294, 295, 316, 321, 322, 338, 346, 351, 355, 359, 364, 368, 369, 371, 373, 374, 376, 400, 414, 415, 417, 418, 455, 459, 460, 478, 480, 481, 484, 486, 487, 492, 494, 499, 500, 501], "execut": [1, 2, 3, 6, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 65, 67, 68, 69, 70, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 108, 109, 111, 117, 122, 123, 134, 135, 136, 137, 140, 141, 144, 145, 146, 148, 150, 151, 152, 158, 159, 164, 165, 168, 170, 173, 174, 175, 176, 185, 186, 187, 190, 193, 194, 195, 203, 205, 221, 232, 233, 249, 272, 277, 307, 308, 310, 313, 315, 323, 352, 358, 367, 373, 374, 400, 407, 415, 417, 418, 464, 474, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 499, 500, 503, 504, 505, 506], "queri": [1, 2, 3, 15, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 109, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 255, 280, 284, 287, 344, 346, 347, 348, 349, 350, 351, 355, 374, 415, 416, 417, 418, 419, 478, 480, 484, 491, 496, 501, 505], "defin": [1, 2, 3, 15, 16, 18, 20, 21, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 256, 269, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 321, 323, 326, 327, 330, 331, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 375, 378, 379, 387, 389, 400, 415, 417, 418, 422, 423, 424, 425, 426, 441, 471, 478, 479, 484, 485, 487, 491, 494, 501, 503, 506], "number": [1, 2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 115, 117, 120, 122, 123, 130, 134, 135, 136, 137, 140, 143, 144, 145, 150, 151, 152, 158, 159, 160, 161, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 237, 239, 240, 241, 243, 246, 247, 250, 251, 254, 256, 257, 258, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 283, 284, 287, 289, 290, 291, 294, 295, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 321, 322, 326, 327, 332, 333, 335, 336, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 359, 363, 367, 368, 371, 372, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 447, 449, 451, 453, 455, 460, 462, 463, 464, 472, 473, 474, 478, 479, 480, 484, 485, 486, 487, 489, 490, 492, 494, 499, 500, 501, 502, 503, 506], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 43, 44, 48, 51, 52, 53, 56, 66, 67, 73, 78, 84, 85, 102, 121, 123, 128, 134, 137, 140, 144, 145, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 287, 292, 308, 310, 315, 316, 324, 325, 346, 351, 355, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 423, 424, 425, 457, 478, 484, 486, 487, 488, 492, 493, 499, 500, 501, 503, 506], "deliv": [1, 2, 3, 18, 200, 484, 485, 489, 492, 505], "stack": [1, 2, 3, 7, 8, 15, 16, 18, 22, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 75, 78, 83, 85, 86, 87, 88, 89, 90, 93, 100, 101, 109, 114, 117, 134, 137, 140, 143, 144, 145, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 200, 206, 207, 210, 211, 227, 232, 249, 284, 308, 310, 313, 314, 315, 344, 347, 348, 349, 350, 367, 373, 374, 383, 385, 398, 403, 405, 407, 408, 416, 419, 422, 441, 451, 476, 478, 485, 488, 489, 496, 497, 498, 499, 501, 505], "user": [1, 2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 95, 97, 101, 102, 115, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 176, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 228, 245, 269, 275, 277, 287, 301, 346, 351, 355, 385, 402, 405, 407, 415, 417, 418, 442, 471, 478, 480, 481, 484, 485, 489, 491, 492, 497, 501, 505, 506], "reach": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 72, 121, 134, 137, 140, 144, 151, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 249, 268, 289, 307, 332, 484, 486, 494, 496, 499, 500, 505, 506], "done": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 74, 75, 76, 78, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 105, 106, 113, 115, 117, 122, 123, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 221, 223, 224, 227, 235, 236, 238, 239, 240, 245, 249, 250, 251, 253, 257, 258, 260, 262, 264, 267, 268, 270, 271, 274, 275, 276, 277, 278, 284, 287, 291, 308, 310, 315, 318, 340, 367, 382, 383, 384, 385, 386, 387, 389, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 478, 479, 480, 484, 486, 487, 488, 489, 491, 492, 494, 497, 498, 499, 500, 501, 503, 505, 506], "state": [1, 2, 3, 4, 15, 16, 18, 19, 20, 21, 29, 30, 36, 43, 45, 48, 51, 56, 63, 66, 67, 68, 69, 70, 72, 73, 76, 78, 79, 80, 85, 95, 96, 97, 98, 102, 103, 105, 106, 113, 117, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 158, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 223, 226, 227, 228, 230, 231, 233, 236, 239, 242, 245, 249, 251, 258, 268, 269, 274, 275, 276, 277, 278, 279, 284, 285, 287, 291, 296, 301, 305, 308, 309, 310, 313, 314, 315, 316, 318, 323, 326, 330, 333, 335, 336, 342, 346, 351, 355, 360, 367, 371, 377, 382, 384, 385, 389, 391, 399, 400, 402, 403, 404, 405, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 460, 474, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 506], "after": [1, 2, 3, 8, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 45, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 95, 100, 101, 102, 110, 117, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 152, 159, 160, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 290, 307, 308, 310, 315, 324, 344, 346, 347, 348, 349, 350, 351, 355, 364, 369, 385, 394, 405, 407, 415, 416, 417, 418, 419, 422, 478, 485, 486, 487, 488, 489, 490, 492, 494, 496, 499, 500, 501, 502, 503, 506], "predefin": [1, 198, 442, 485, 487, 492, 503, 505], "becaus": [1, 2, 3, 4, 7, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 72, 73, 78, 85, 95, 100, 101, 102, 109, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 239, 247, 268, 283, 287, 300, 322, 344, 346, 347, 348, 349, 350, 351, 355, 359, 364, 365, 367, 368, 369, 370, 371, 372, 382, 402, 415, 416, 417, 418, 419, 422, 479, 484, 485, 487, 488, 490, 491, 492, 496, 498, 499, 500, 501, 503, 506], "potenti": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 192, 193, 194, 195, 501, 503], "comput": [1, 3, 4, 8, 15, 17, 18, 27, 29, 36, 39, 43, 48, 56, 66, 67, 72, 73, 78, 102, 114, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 251, 265, 277, 281, 285, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 326, 327, 328, 330, 332, 335, 336, 338, 340, 341, 343, 346, 351, 355, 360, 363, 365, 367, 368, 370, 372, 375, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 464, 478, 480, 484, 486, 487, 488, 489, 490, 496, 497, 498, 499, 500, 502, 503], "heavi": [1, 8, 95, 503], "crucial": [1, 2, 3, 289, 307, 332, 390, 398, 400, 415, 478, 484, 485, 486, 487, 489, 491, 493, 499, 500, 501, 505, 506], "configur": [1, 8, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 28, 29, 72, 137, 186, 247, 296, 301, 330, 346, 384, 400, 402, 415, 418, 479, 484, 485, 486, 491, 497, 499, 500, 501], "hyperparamet": [1, 120, 287, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 484, 493, 501, 503], "appropri": [1, 3, 4, 7, 101, 107, 118, 128, 129, 132, 133, 152, 164, 173, 194, 195, 239, 471, 474, 478, 484, 493, 503], "paramet": [1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 124, 126, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 471, 472, 473, 474, 478, 479, 480, 484, 487, 488, 490, 494, 499, 500, 501, 502, 505], "take": [1, 2, 3, 8, 20, 32, 36, 43, 48, 51, 66, 67, 72, 73, 78, 103, 125, 131, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 192, 193, 194, 195, 198, 230, 232, 268, 271, 272, 276, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 321, 323, 326, 327, 330, 332, 335, 336, 338, 343, 354, 363, 365, 366, 367, 368, 370, 372, 375, 378, 381, 402, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 451, 462, 478, 479, 481, 484, 485, 486, 488, 489, 490, 491, 499, 500, 501, 503, 506], "consider": [1, 2, 3, 8, 143, 145, 276, 312, 478, 485, 499, 500, 503], "whether": [1, 2, 3, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 103, 108, 110, 117, 118, 130, 134, 137, 140, 144, 151, 152, 156, 157, 158, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 223, 232, 233, 235, 238, 269, 275, 277, 284, 285, 287, 294, 295, 310, 312, 315, 316, 346, 351, 352, 355, 367, 372, 376, 382, 383, 384, 385, 386, 387, 389, 391, 392, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 450, 474, 478, 484, 485, 486, 488, 489, 499, 500, 501, 505, 506], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 111, 115, 117, 122, 123, 124, 128, 131, 134, 137, 138, 139, 140, 143, 144, 145, 146, 151, 152, 155, 158, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 223, 224, 227, 230, 231, 232, 235, 236, 239, 240, 242, 247, 248, 249, 251, 256, 257, 258, 260, 263, 264, 268, 269, 271, 274, 276, 277, 278, 283, 284, 285, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 326, 327, 330, 332, 335, 336, 338, 343, 344, 346, 347, 348, 349, 350, 351, 355, 363, 365, 367, 368, 370, 371, 372, 375, 378, 382, 384, 385, 391, 397, 399, 400, 402, 403, 404, 405, 406, 407, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 442, 444, 450, 455, 456, 457, 460, 470, 472, 473, 474, 478, 479, 480, 481, 484, 485, 486, 487, 488, 490, 492, 493, 496, 498, 499, 500, 501, 502, 503, 505, 506], "occur": [1, 8, 16, 43, 66, 74, 75, 78, 85, 95, 134, 137, 140, 144, 146, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 219, 228, 240, 251, 256, 283, 290, 346, 351, 355, 359, 364, 365, 368, 369, 370, 371, 372, 394, 415, 418, 478, 488, 503, 506], "serial": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 76, 78, 79, 80, 95, 96, 97, 98, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 284, 285, 287, 346, 351, 355, 415, 417, 418, 478], "parallel": [1, 3, 8, 31, 134, 137, 140, 143, 144, 145, 152, 164, 165, 166, 167, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 277, 283, 310, 315, 352, 382, 471, 472, 473, 474, 478, 485, 486, 499, 500, 505], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 62, 64, 71, 83, 84, 85, 99, 100, 101, 102, 141, 159, 164, 173, 188, 189, 191, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 276, 284, 285, 287, 344, 347, 348, 349, 350, 352, 353, 354, 416, 417, 419, 472, 473, 474, 484, 485, 486, 505, 506], "multisyncdatacollector": [1, 16, 22, 23, 25, 27, 30, 292, 473, 476, 486, 492, 505], "split": [1, 15, 16, 18, 21, 22, 23, 25, 27, 40, 41, 47, 49, 62, 64, 75, 84, 95, 96, 97, 98, 99, 115, 122, 123, 155, 166, 167, 186, 308, 313, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 418, 420, 479, 481, 486, 490, 503, 505], "workload": 1, "across": [1, 3, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 67, 70, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 101, 115, 122, 123, 135, 136, 138, 139, 143, 145, 146, 148, 150, 151, 159, 160, 164, 170, 175, 275, 284, 285, 287, 310, 315, 321, 331, 332, 400, 415, 417, 418, 462, 476, 478, 479, 480, 484, 489, 493, 499, 500, 501], "aggreg": [1, 3, 36, 66, 95, 115, 128, 166, 167, 192, 219, 248, 285, 294, 295, 297, 298, 374, 478, 480, 500], "result": [1, 2, 3, 7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 36, 37, 43, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 85, 86, 95, 96, 97, 98, 100, 101, 102, 115, 117, 121, 122, 123, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 253, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 289, 292, 307, 308, 310, 313, 315, 316, 321, 334, 340, 344, 346, 347, 348, 349, 350, 351, 355, 363, 365, 370, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 462, 478, 480, 485, 487, 489, 490, 493, 494, 497, 501, 502, 505, 506], "final": [1, 2, 3, 4, 27, 51, 62, 64, 71, 72, 85, 100, 101, 187, 190, 191, 192, 198, 270, 283, 289, 307, 308, 310, 313, 315, 321, 332, 344, 347, 348, 349, 350, 366, 373, 416, 419, 422, 455, 479, 484, 485, 486, 488, 493, 494, 496, 499, 500, 501, 506], "multiasyncdatacollector": [1, 15, 21, 22, 23, 25, 27, 30, 292, 472, 476, 484, 485, 486, 492, 505], "sever": [1, 2, 3, 8, 36, 43, 48, 52, 56, 66, 67, 73, 78, 84, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 228, 230, 248, 277, 287, 346, 351, 355, 402, 415, 417, 418, 478, 484, 486, 488, 493, 494, 503, 506], "gather": [1, 3, 22, 25, 27, 51, 84, 99, 108, 110, 115, 122, 130, 206, 249, 256, 320, 323, 328, 346, 351, 355, 400, 415, 418, 421, 464, 477, 485, 486, 487, 492, 499, 500, 501, 503, 505, 506], "continu": [1, 2, 3, 9, 37, 40, 51, 86, 87, 88, 101, 123, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 212, 220, 245, 270, 278, 297, 298, 299, 300, 331, 332, 374, 379, 383, 406, 422, 427, 435, 479, 484, 486, 490, 499, 500, 503], "concomitantli": [1, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 193, 194, 195], "network": [1, 4, 8, 36, 43, 48, 56, 66, 67, 73, 78, 98, 102, 134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 294, 295, 297, 298, 299, 300, 303, 305, 306, 313, 316, 321, 322, 323, 325, 326, 327, 329, 331, 333, 335, 336, 337, 342, 346, 351, 355, 360, 361, 362, 363, 371, 375, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 413, 415, 417, 418, 420, 422, 423, 424, 425, 426, 469, 470, 479, 480, 481, 488, 491, 494, 498, 501, 506], "impli": [1, 85, 506], "mai": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 97, 100, 101, 102, 106, 109, 114, 115, 122, 134, 137, 140, 143, 144, 145, 146, 152, 164, 165, 168, 170, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 247, 251, 264, 275, 277, 279, 284, 285, 287, 290, 310, 315, 316, 321, 344, 346, 347, 348, 349, 350, 351, 355, 372, 384, 391, 399, 402, 405, 415, 416, 417, 418, 419, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 499, 500, 501, 502, 503, 506], "slightli": [1, 32, 95, 480, 487, 488, 499, 501, 502, 503, 506], "lag": [1, 484, 485, 486], "therefor": [1, 2, 3, 7, 63, 70, 79, 80, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 198, 260, 402, 417, 420, 488, 491, 499, 506], "fastest": 1, "price": [1, 2], "suitabl": [1, 2, 227, 415, 478], "where": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 34, 36, 43, 45, 47, 48, 51, 56, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 110, 115, 117, 122, 123, 128, 130, 131, 134, 137, 140, 144, 152, 155, 158, 161, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 219, 220, 221, 224, 227, 232, 239, 247, 255, 260, 263, 268, 269, 270, 271, 272, 276, 277, 279, 282, 283, 287, 289, 307, 308, 309, 310, 312, 313, 314, 315, 319, 320, 321, 329, 331, 332, 344, 346, 347, 348, 349, 350, 351, 355, 363, 368, 371, 372, 381, 382, 383, 384, 385, 390, 391, 392, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 478, 480, 481, 484, 485, 486, 488, 489, 496, 498, 499, 500, 501, 503, 506], "off": [1, 2, 4, 311, 341, 364, 405, 440, 455, 465, 479, 481, 484, 485, 486, 490, 491, 499, 500, 502, 505, 506], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 16, 18, 21, 22, 23, 25, 27, 30, 34, 35, 36, 37, 38, 39, 43, 44, 48, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 97, 101, 102, 108, 110, 115, 117, 122, 130, 134, 137, 140, 143, 144, 145, 149, 151, 152, 164, 165, 166, 167, 168, 173, 174, 175, 176, 178, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 235, 238, 242, 251, 269, 276, 277, 283, 287, 304, 308, 310, 312, 313, 315, 319, 322, 324, 346, 351, 355, 360, 362, 363, 365, 369, 382, 390, 392, 398, 402, 415, 417, 418, 455, 478, 479, 480, 481, 484, 485, 486, 487, 489, 490, 492, 493, 496, 499, 500, 501, 502, 503, 506], "remot": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 164, 173, 206, 285, 506], "rollout": [1, 2, 3, 11, 15, 16, 18, 21, 27, 29, 30, 32, 51, 72, 78, 85, 128, 134, 135, 136, 137, 140, 144, 146, 147, 150, 151, 152, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 178, 179, 180, 185, 186, 187, 190, 193, 194, 195, 200, 220, 221, 223, 224, 227, 230, 232, 233, 235, 238, 239, 240, 245, 247, 248, 253, 257, 258, 263, 264, 265, 268, 269, 271, 272, 275, 278, 284, 285, 287, 291, 292, 293, 310, 315, 318, 332, 367, 382, 440, 442, 464, 479, 484, 486, 487, 490, 491, 492, 493, 494, 502, 503, 505], "necessari": [1, 4, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 95, 98, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 264, 403, 422, 423, 424, 425, 426, 480, 484, 486, 490, 491, 492, 496, 497], "synchronis": [1, 141, 499, 500], "either": [1, 2, 5, 28, 34, 36, 43, 48, 56, 63, 66, 67, 68, 70, 72, 73, 78, 85, 99, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 249, 268, 269, 285, 287, 346, 351, 352, 355, 377, 400, 407, 408, 415, 417, 418, 446, 478, 481, 484, 485, 487, 499, 502, 503, 505, 506], "update_policy_weights_": [1, 13, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 30, 204, 478, 484, 500, 505], "update_at_each_batch": [1, 15, 16, 21], "true": [1, 2, 3, 4, 8, 11, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 114, 115, 117, 118, 120, 121, 122, 123, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 219, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 237, 240, 242, 245, 246, 247, 248, 249, 250, 251, 255, 256, 258, 259, 262, 263, 264, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 287, 288, 289, 290, 291, 294, 295, 297, 298, 299, 300, 306, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 355, 358, 359, 360, 361, 362, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 422, 423, 424, 425, 428, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 449, 450, 453, 454, 455, 457, 460, 474, 478, 479, 480, 481, 484, 485, 486, 487, 488, 490, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "second": [1, 2, 3, 8, 15, 16, 18, 21, 29, 32, 51, 52, 53, 54, 55, 95, 128, 164, 199, 203, 224, 272, 308, 310, 313, 315, 365, 384, 399, 402, 405, 442, 444, 447, 449, 459, 484, 486, 492, 499, 500, 501, 503, 505, 506], "devic": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 114, 122, 123, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 218, 220, 224, 231, 235, 236, 238, 239, 240, 245, 247, 248, 253, 254, 255, 257, 258, 260, 264, 267, 268, 270, 273, 276, 277, 278, 280, 282, 284, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 313, 314, 315, 316, 318, 321, 322, 324, 325, 330, 332, 333, 334, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 376, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 440, 457, 462, 468, 478, 479, 484, 485, 486, 487, 488, 499, 500, 501, 502, 505], "oper": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 109, 115, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 242, 247, 272, 274, 278, 285, 287, 303, 304, 309, 312, 314, 344, 346, 347, 348, 349, 350, 351, 355, 360, 361, 362, 364, 365, 366, 371, 377, 382, 384, 386, 387, 392, 399, 402, 404, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 460, 476, 478, 480, 481, 484, 485, 486, 487, 488, 489, 490, 498, 499, 500, 501, 506], "instanc": [1, 2, 3, 4, 7, 8, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 40, 43, 48, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 81, 83, 84, 85, 86, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 113, 115, 117, 122, 123, 130, 134, 137, 139, 140, 141, 143, 144, 145, 149, 152, 158, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 219, 251, 270, 277, 284, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 321, 322, 323, 326, 327, 330, 332, 335, 336, 338, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 383, 385, 387, 390, 391, 398, 400, 403, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 440, 442, 446, 450, 455, 464, 465, 466, 470, 472, 473, 478, 479, 480, 481, 484, 486, 487, 488, 489, 490, 496, 501, 503, 506], "cpu": [1, 2, 3, 8, 10, 15, 16, 18, 21, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 114, 117, 122, 130, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 224, 231, 235, 236, 238, 239, 240, 245, 248, 253, 255, 257, 258, 260, 264, 267, 268, 270, 276, 277, 278, 280, 282, 287, 291, 293, 303, 308, 309, 310, 313, 314, 315, 318, 324, 325, 332, 333, 334, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 379, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 440, 479, 484, 485, 486, 487, 499, 500, 501, 502, 505], "slower": [1, 499], "than": [1, 2, 3, 4, 8, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 33, 34, 36, 66, 85, 95, 97, 102, 115, 122, 123, 126, 128, 134, 137, 140, 144, 148, 152, 162, 163, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 232, 248, 249, 258, 285, 289, 300, 310, 312, 313, 315, 316, 343, 359, 364, 371, 372, 376, 400, 415, 417, 418, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 477, 478, 479, 480, 484, 485, 486, 488, 489, 491, 499, 500, 501, 503, 505, 506], "one": [1, 2, 3, 4, 5, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 95, 100, 101, 102, 105, 106, 107, 108, 113, 114, 115, 117, 118, 122, 123, 124, 126, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 224, 227, 230, 232, 233, 235, 236, 237, 238, 245, 248, 250, 251, 255, 260, 263, 266, 267, 269, 270, 271, 276, 277, 279, 282, 284, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 322, 323, 326, 327, 328, 329, 330, 332, 334, 335, 336, 338, 343, 344, 346, 347, 348, 349, 350, 351, 355, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 375, 376, 378, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 412, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 429, 430, 442, 444, 453, 455, 456, 460, 464, 474, 477, 478, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 498, 499, 500, 501, 502, 503, 506], "cuda": [1, 2, 3, 7, 15, 16, 18, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 134, 135, 136, 137, 140, 144, 146, 147, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 247, 254, 255, 270, 276, 277, 280, 282, 287, 308, 309, 313, 314, 346, 351, 355, 371, 415, 417, 418, 452, 484, 485, 486, 487, 499, 500, 502, 506], "multipl": [1, 2, 3, 5, 8, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 54, 66, 70, 79, 80, 81, 85, 101, 103, 110, 117, 118, 130, 134, 135, 136, 150, 151, 164, 173, 175, 192, 193, 200, 228, 230, 237, 246, 249, 250, 260, 263, 267, 268, 275, 284, 308, 313, 315, 321, 324, 325, 359, 364, 368, 369, 371, 372, 375, 384, 391, 399, 402, 412, 428, 474, 478, 479, 480, 481, 484, 485, 486, 489, 491, 492, 497, 499, 500, 501, 503, 505], "infer": [1, 3, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 206, 207, 227, 284, 319, 324, 352, 363, 368, 372, 389, 415, 418, 440, 478, 484, 486, 488, 492, 494, 497, 503, 505], "dispatch": [1, 3, 22, 23, 25, 27, 43, 66, 78, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 343, 346, 351, 355, 367, 415, 417, 418, 442, 484, 506], "avail": [1, 2, 3, 4, 6, 27, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 101, 115, 117, 121, 122, 123, 135, 136, 138, 139, 148, 150, 151, 156, 157, 162, 163, 164, 166, 167, 170, 176, 177, 178, 179, 197, 206, 220, 223, 226, 245, 247, 304, 334, 368, 372, 400, 415, 418, 442, 472, 473, 478, 484, 485, 486, 487, 488, 489, 490, 497, 499, 500, 501, 503, 506], "speed": [1, 2, 3, 4, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 480, 484, 485, 486, 487, 499, 500, 501, 503, 505], "avoid": [1, 2, 3, 36, 43, 48, 56, 66, 67, 73, 78, 98, 102, 108, 110, 122, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 227, 245, 275, 277, 284, 285, 287, 290, 340, 346, 351, 355, 359, 371, 376, 384, 385, 399, 402, 405, 415, 417, 418, 463, 478, 486, 488, 497, 500], "oom": [1, 3, 62, 64, 71, 85, 100, 101, 108, 110, 130, 191, 344, 347, 348, 349, 350, 416, 419], "choic": [1, 2, 58, 97, 164, 200, 479, 480, 484, 485, 491, 499, 500], "pass": [1, 2, 3, 4, 13, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 36, 40, 41, 43, 48, 49, 56, 58, 63, 66, 67, 68, 70, 72, 73, 75, 78, 79, 80, 83, 84, 95, 98, 101, 102, 106, 108, 110, 115, 117, 122, 123, 128, 130, 134, 137, 140, 141, 142, 144, 145, 152, 155, 159, 164, 165, 166, 167, 168, 173, 174, 175, 178, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 227, 233, 235, 238, 248, 249, 257, 258, 275, 276, 279, 284, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 321, 322, 323, 324, 326, 327, 330, 332, 333, 335, 336, 338, 342, 343, 346, 351, 352, 355, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 383, 384, 385, 398, 399, 400, 402, 403, 405, 407, 408, 415, 417, 418, 422, 423, 424, 425, 426, 440, 457, 460, 472, 473, 474, 478, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 498, 499, 500, 501, 503, 505, 506], "ie": [1, 2, 3, 22, 25, 28, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 74, 75, 78, 79, 83, 84, 86, 87, 88, 89, 90, 114, 123, 134, 137, 140, 144, 148, 152, 161, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 219, 220, 227, 242, 267, 270, 279, 284, 310, 315, 346, 351, 355, 363, 371, 415, 418, 479, 480, 485, 500], "store": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 40, 43, 46, 47, 48, 51, 56, 58, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 78, 79, 80, 81, 84, 85, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 114, 115, 117, 122, 128, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 245, 272, 283, 284, 285, 287, 289, 291, 292, 318, 332, 344, 346, 347, 348, 349, 350, 351, 355, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 449, 476, 478, 481, 484, 486, 487, 490, 492, 494, 499, 500, 502, 506], "while": [1, 2, 3, 7, 8, 15, 16, 18, 21, 29, 32, 36, 43, 48, 56, 66, 67, 68, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 260, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 375, 378, 384, 390, 391, 398, 399, 402, 405, 415, 417, 418, 478, 479, 480, 484, 486, 487, 490, 492, 493, 499, 500, 501, 502, 503, 505], "wait": [1, 13, 15, 16, 21, 22, 23, 24, 25, 27, 28, 68, 176, 198, 487, 501], "also": [1, 2, 3, 8, 9, 11, 15, 16, 20, 32, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 70, 71, 73, 78, 79, 80, 83, 85, 95, 98, 99, 100, 101, 102, 108, 109, 110, 115, 117, 122, 123, 128, 130, 134, 137, 140, 144, 151, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 218, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 237, 239, 240, 241, 243, 245, 246, 247, 251, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 287, 288, 294, 295, 308, 313, 316, 336, 344, 346, 347, 348, 349, 350, 351, 355, 367, 368, 373, 374, 375, 382, 383, 385, 386, 387, 389, 390, 391, 396, 398, 402, 405, 407, 415, 416, 417, 418, 419, 422, 429, 430, 440, 442, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 498, 499, 500, 501, 503, 505, 506], "impact": [1, 2, 3, 13, 22, 23, 25, 151, 235, 238, 290, 382, 384, 399, 402, 404, 415, 485, 487, 499, 500], "memori": [1, 3, 8, 27, 36, 39, 43, 48, 56, 62, 64, 66, 67, 68, 71, 73, 78, 84, 85, 95, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 113, 134, 135, 136, 137, 140, 141, 144, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 231, 255, 270, 276, 277, 280, 282, 284, 285, 287, 302, 312, 313, 314, 344, 346, 347, 348, 349, 350, 351, 355, 371, 415, 416, 417, 418, 419, 474, 476, 478, 481, 484, 485, 487, 499, 503, 505], "manag": [1, 3, 8, 13, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 29, 30, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 292, 310, 315, 358, 413, 414, 422, 423, 424, 425, 450, 455, 478, 479, 487, 488, 491, 496, 505], "kei": [1, 2, 7, 15, 16, 18, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 100, 101, 102, 105, 114, 115, 117, 120, 122, 123, 128, 134, 137, 140, 144, 150, 151, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 251, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 287, 289, 291, 293, 303, 304, 307, 310, 315, 317, 318, 332, 334, 344, 346, 347, 348, 349, 350, 351, 355, 359, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 440, 442, 454, 455, 456, 458, 459, 460, 464, 478, 480, 481, 484, 486, 487, 488, 489, 491, 496, 497, 498, 499, 500, 501, 503, 505, 506], "control": [1, 3, 5, 8, 18, 32, 33, 40, 41, 42, 49, 70, 75, 79, 80, 114, 115, 117, 122, 134, 137, 138, 139, 140, 144, 151, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 203, 206, 207, 218, 237, 297, 298, 299, 300, 310, 315, 317, 318, 332, 336, 343, 345, 371, 372, 373, 382, 384, 385, 399, 400, 402, 406, 415, 418, 422, 427, 435, 440, 450, 478, 479, 481, 484, 485, 486, 487, 488, 489, 490, 491, 499, 500, 501, 503, 505], "which": [1, 2, 3, 4, 7, 8, 14, 15, 16, 18, 20, 21, 22, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 99, 100, 101, 102, 105, 109, 117, 120, 121, 128, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 150, 151, 152, 156, 157, 159, 160, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 227, 228, 232, 235, 238, 243, 245, 247, 248, 250, 251, 255, 256, 258, 268, 270, 271, 274, 275, 276, 277, 278, 280, 284, 287, 288, 303, 308, 309, 310, 311, 313, 314, 315, 319, 320, 321, 322, 323, 329, 331, 341, 344, 346, 347, 348, 349, 350, 351, 355, 360, 361, 362, 363, 367, 368, 371, 372, 373, 374, 382, 383, 384, 385, 387, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 440, 442, 451, 456, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 496, 498, 499, 500, 501, 502, 503, 506], "storing_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 485, 500], "dure": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 35, 39, 40, 44, 52, 53, 54, 55, 60, 61, 63, 64, 67, 68, 69, 70, 72, 73, 79, 80, 84, 95, 96, 97, 98, 99, 106, 111, 114, 115, 117, 120, 122, 134, 137, 140, 141, 144, 151, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 197, 200, 204, 208, 209, 223, 224, 227, 230, 235, 238, 240, 242, 243, 245, 249, 253, 265, 267, 270, 272, 274, 275, 277, 278, 279, 284, 285, 287, 290, 292, 293, 310, 315, 322, 367, 384, 402, 415, 418, 422, 424, 425, 455, 460, 478, 480, 484, 485, 486, 487, 490, 491, 492, 494, 499, 500, 501, 503, 506], "heurist": [1, 4, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 289, 367, 372, 484, 488, 492, 506], "usual": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 97, 120, 128, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 275, 325, 402, 407, 415, 418, 421, 422, 423, 424, 425, 426, 441, 477, 478, 479, 480, 481, 484, 485, 486, 487, 490, 492, 493, 500, 503, 506], "same": [1, 2, 3, 4, 18, 20, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 97, 100, 101, 102, 121, 122, 123, 126, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 155, 159, 160, 164, 165, 166, 167, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 227, 235, 237, 238, 243, 245, 248, 249, 250, 251, 267, 275, 276, 277, 284, 287, 288, 294, 295, 309, 314, 316, 319, 320, 321, 322, 332, 340, 344, 346, 347, 348, 349, 350, 351, 355, 363, 375, 383, 385, 398, 400, 403, 405, 407, 408, 412, 415, 416, 417, 418, 419, 478, 480, 484, 485, 486, 489, 490, 492, 496, 497, 498, 499, 500, 502, 503, 506], "defaultbehavior": [1, 2, 3, 4, 15, 16, 27, 36, 43, 48, 56, 66, 67, 73, 78, 83, 85, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 228, 235, 238, 251, 256, 269, 277, 285, 287, 290, 310, 311, 315, 341, 346, 351, 355, 384, 390, 398, 402, 407, 415, 417, 418, 440, 450, 455, 479, 485, 487, 499, 500, 501, 503], "besid": 1, "those": [1, 2, 3, 5, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 209, 227, 232, 235, 238, 245, 251, 270, 271, 274, 278, 315, 331, 368, 372, 373, 374, 462, 472, 473, 479, 484, 485, 489, 490, 500, 501, 506], "choos": [1, 3, 11, 58, 134, 137, 155, 310, 315, 402, 476, 480, 484, 485, 486, 488, 499, 500, 503, 505], "follow": [1, 2, 3, 6, 7, 8, 11, 20, 36, 43, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 78, 83, 85, 95, 97, 98, 100, 101, 102, 115, 122, 123, 134, 135, 136, 137, 140, 143, 144, 145, 150, 151, 152, 158, 161, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 223, 227, 247, 255, 280, 284, 285, 287, 294, 295, 308, 310, 313, 315, 316, 344, 346, 347, 348, 349, 350, 351, 355, 365, 368, 369, 370, 381, 382, 383, 384, 385, 386, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 442, 460, 478, 479, 480, 481, 484, 485, 486, 487, 488, 491, 492, 498, 499, 500, 501, 503, 505, 506], "max_frames_per_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 463, 484, 486, 505], "frame": [1, 2, 11, 15, 16, 18, 21, 22, 23, 25, 27, 29, 56, 95, 103, 227, 243, 287, 289, 307, 332, 367, 441, 442, 444, 447, 449, 453, 455, 460, 463, 464, 484, 485, 486, 487, 490, 499, 500, 503, 505, 506], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 115, 116, 117, 121, 122, 124, 126, 130, 131, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 159, 160, 161, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 249, 251, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 318, 322, 323, 324, 326, 327, 330, 332, 335, 336, 338, 343, 344, 346, 347, 348, 349, 350, 351, 355, 363, 365, 367, 370, 371, 372, 374, 375, 378, 383, 384, 385, 391, 398, 399, 400, 402, 403, 405, 407, 408, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 440, 441, 444, 455, 478, 480, 481, 485, 486, 487, 488, 489, 490, 492, 493, 499, 500, 501, 503, 505, 506], "frames_per_batch": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 45, 56, 68, 76, 224, 227, 260, 310, 315, 463, 484, 485, 486, 487, 488, 492, 494, 499, 500, 503, 505], "each": [1, 2, 3, 4, 7, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 36, 40, 41, 43, 47, 48, 49, 51, 52, 54, 56, 57, 66, 67, 70, 72, 73, 75, 77, 78, 79, 85, 95, 97, 101, 102, 114, 115, 117, 120, 122, 123, 125, 128, 134, 137, 140, 141, 144, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 246, 248, 249, 255, 260, 263, 268, 269, 270, 271, 275, 276, 282, 284, 285, 287, 288, 289, 304, 307, 308, 309, 310, 313, 315, 321, 322, 326, 333, 334, 342, 346, 351, 355, 358, 364, 365, 370, 372, 374, 384, 399, 402, 415, 417, 418, 422, 428, 431, 432, 433, 434, 436, 437, 438, 439, 442, 455, 457, 472, 473, 478, 480, 484, 485, 486, 487, 490, 491, 492, 494, 499, 500, 501, 502, 503, 505, 506], "init_random_fram": [1, 15, 16, 18, 21, 22, 23, 25, 27, 463, 484, 485, 488, 494], "rand_step": [1, 2, 3, 45, 76, 134, 137, 138, 139, 140, 141, 143, 144, 145, 152, 153, 154, 158, 159, 160, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 246, 270, 284, 501, 505, 506], "reset_at_each_it": [1, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 484], "split_traj": [1, 15, 16, 18, 21, 22, 23, 25, 27, 97, 98, 484, 485, 486], "trajectori": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 43, 46, 47, 56, 57, 77, 79, 85, 95, 97, 98, 114, 115, 122, 123, 128, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 256, 268, 275, 287, 291, 315, 318, 332, 402, 417, 422, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 451, 476, 480, 484, 485, 486, 487, 489, 492, 494, 501, 505, 506], "pad": [1, 2, 3, 32, 65, 81, 97, 98, 101, 200, 201, 202, 206, 207, 209, 211, 227, 274, 294, 295, 297, 298, 315, 319, 320, 321, 346, 347, 348, 350, 351, 355, 415, 457, 497], "along": [1, 2, 3, 15, 16, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 72, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 100, 101, 102, 110, 115, 117, 122, 123, 128, 130, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 226, 227, 228, 249, 251, 253, 256, 263, 267, 273, 287, 315, 316, 319, 320, 325, 344, 346, 347, 348, 349, 350, 351, 355, 364, 368, 371, 372, 385, 400, 407, 415, 416, 417, 418, 419, 484, 485, 487, 489, 491, 499, 500, 501, 503, 505], "point": [1, 2, 3, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 102, 107, 114, 115, 118, 128, 129, 132, 133, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 287, 317, 346, 351, 355, 371, 381, 392, 415, 417, 418, 460, 477, 485, 486, 498, 499, 500, 501, 503, 505, 506], "boolean": [1, 3, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 115, 122, 123, 144, 195, 219, 223, 232, 256, 268, 312, 319, 320, 332, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 478, 481, 487], "repres": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 40, 41, 45, 49, 51, 58, 75, 76, 78, 79, 85, 98, 109, 134, 137, 138, 139, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 243, 256, 272, 284, 287, 304, 319, 320, 334, 340, 351, 364, 365, 369, 370, 411, 422, 457, 478, 479, 484, 486, 487, 488, 489, 490, 491, 499, 500], "valid": [1, 2, 3, 32, 62, 64, 65, 84, 85, 99, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 181, 185, 186, 187, 190, 193, 194, 195, 223, 256, 275, 277, 287, 289, 294, 295, 312, 316, 319, 320, 332, 384, 391, 399, 402, 405, 415, 422, 423, 424, 425, 457, 478, 481, 488, 506], "exploration_typ": [1, 15, 16, 18, 21, 22, 23, 25, 27, 455, 476, 479, 484, 485], "strategi": [1, 2, 3, 18, 101, 120, 155, 201, 220, 307, 320, 328, 355, 415, 478, 479, 481, 484, 485, 488, 490, 499, 500, 503, 505], "reset_when_don": [1, 15, 16, 18, 21], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 92, 100, 101, 102, 110, 114, 115, 117, 122, 123, 134, 137, 140, 144, 151, 152, 158, 164, 165, 166, 167, 168, 173, 174, 175, 178, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 226, 227, 233, 239, 247, 268, 269, 270, 275, 277, 283, 284, 285, 287, 288, 289, 294, 295, 310, 315, 319, 320, 321, 322, 331, 344, 345, 346, 347, 348, 349, 350, 351, 355, 364, 368, 369, 372, 375, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 408, 415, 416, 417, 418, 419, 420, 442, 460, 470, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 503, 505, 506], "organ": [1, 2, 496, 501, 503], "within": [1, 2, 3, 15, 16, 20, 21, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 109, 114, 115, 123, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 285, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 344, 346, 347, 348, 349, 350, 351, 355, 358, 363, 365, 367, 370, 372, 375, 378, 379, 387, 392, 407, 415, 416, 417, 418, 419, 420, 422, 440, 442, 479, 480, 485, 488, 489, 490, 491, 492, 493, 494, 499, 501, 505], "differ": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 102, 114, 117, 120, 134, 135, 136, 137, 140, 141, 144, 150, 151, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 227, 232, 236, 237, 248, 251, 258, 267, 275, 277, 279, 287, 288, 304, 308, 309, 313, 314, 316, 318, 321, 322, 323, 334, 346, 351, 355, 372, 398, 400, 402, 411, 415, 417, 418, 422, 423, 424, 428, 429, 430, 455, 460, 462, 472, 473, 478, 479, 480, 481, 484, 485, 486, 488, 489, 491, 493, 497, 498, 499, 500, 501, 502, 503, 505, 506], "how": [1, 2, 3, 11, 20, 22, 23, 25, 33, 36, 43, 48, 56, 63, 66, 67, 73, 78, 79, 102, 114, 115, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 248, 287, 323, 346, 351, 355, 368, 382, 384, 397, 399, 400, 402, 415, 417, 418, 442, 444, 460, 477, 478, 479, 484, 485, 486, 487, 488, 489, 490, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "tabl": [1, 36, 479, 485, 490], "summar": [1, 3, 501], "what": [1, 3, 8, 11, 42, 43, 63, 83, 95, 115, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 206, 207, 218, 239, 270, 275, 369, 385, 396, 400, 407, 415, 418, 477, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497, 499, 500, 501, 502, 503, 505, 506], "expect": [1, 2, 3, 4, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 84, 86, 87, 88, 89, 90, 98, 102, 115, 121, 122, 134, 137, 140, 144, 152, 158, 161, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 242, 244, 246, 247, 248, 249, 251, 253, 255, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 308, 309, 310, 313, 314, 315, 321, 322, 332, 346, 351, 355, 365, 371, 374, 382, 383, 384, 385, 386, 387, 389, 390, 391, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 412, 415, 417, 418, 420, 422, 464, 477, 479, 480, 481, 484, 486, 487, 489, 490, 491, 492, 496, 497, 499, 500, 501, 503, 506], "n": [1, 2, 3, 6, 7, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 101, 102, 114, 115, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 237, 242, 279, 287, 308, 309, 313, 318, 329, 331, 332, 346, 351, 355, 367, 372, 382, 383, 391, 400, 415, 417, 418, 421, 457, 478, 481, 485, 487, 488, 497, 503, 505, 506], "b": [1, 2, 3, 7, 8, 29, 32, 40, 41, 43, 49, 62, 64, 66, 70, 71, 72, 73, 75, 78, 79, 80, 85, 100, 101, 108, 109, 128, 137, 191, 203, 245, 278, 308, 309, 312, 313, 314, 321, 322, 324, 325, 333, 342, 344, 346, 347, 348, 349, 350, 351, 355, 375, 415, 416, 418, 419, 422, 423, 424, 425, 426, 428, 442, 485, 496, 503], "cat_result": [1, 15, 16], "na": [1, 187, 190, 205], "t": [1, 2, 3, 4, 6, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 105, 114, 115, 117, 121, 122, 123, 128, 134, 137, 140, 141, 143, 144, 152, 159, 160, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 243, 245, 246, 247, 254, 255, 256, 257, 258, 259, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 282, 283, 284, 287, 288, 308, 310, 312, 313, 315, 319, 332, 344, 346, 347, 348, 349, 350, 351, 355, 364, 371, 382, 402, 405, 406, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 428, 442, 449, 460, 462, 474, 477, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 498, 499, 500, 501, 502, 503, 505, 506], "p": [1, 2, 4, 114, 115, 117, 120, 141, 171, 172, 292, 293], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 15, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 36, 43, 48, 56, 66, 67, 73, 78, 95, 97, 98, 102, 123, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 235, 236, 238, 246, 255, 260, 264, 269, 270, 273, 275, 276, 277, 280, 282, 283, 285, 287, 288, 308, 311, 313, 316, 321, 336, 340, 341, 346, 351, 355, 371, 372, 374, 381, 382, 383, 385, 386, 387, 389, 390, 391, 398, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 462, 472, 473, 474, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 500, 501, 502, 503, 506], "case": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 74, 75, 79, 83, 85, 86, 87, 88, 89, 90, 95, 98, 100, 101, 105, 106, 113, 117, 128, 134, 137, 140, 143, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 191, 193, 194, 195, 206, 235, 236, 238, 246, 251, 270, 273, 277, 278, 288, 312, 315, 316, 322, 323, 344, 347, 348, 349, 350, 368, 371, 372, 374, 375, 381, 382, 383, 385, 386, 387, 389, 390, 391, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 422, 423, 424, 425, 442, 451, 462, 472, 473, 474, 476, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 493, 497, 499, 500, 501, 503, 505, 506], "dimens": [1, 3, 15, 16, 18, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 70, 71, 72, 74, 75, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 100, 101, 108, 109, 110, 115, 122, 123, 128, 130, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 191, 192, 193, 194, 195, 200, 211, 212, 220, 226, 227, 228, 242, 249, 251, 253, 256, 263, 266, 267, 270, 273, 279, 284, 285, 294, 295, 296, 301, 302, 310, 313, 315, 316, 319, 320, 321, 324, 325, 330, 333, 337, 338, 339, 340, 343, 344, 347, 348, 349, 350, 351, 355, 364, 367, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 474, 476, 478, 480, 484, 485, 486, 487, 489, 496, 499, 500, 501, 503], "time": [1, 2, 3, 4, 7, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 32, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 85, 95, 96, 97, 98, 101, 102, 105, 108, 117, 128, 134, 135, 136, 137, 140, 141, 144, 150, 151, 152, 155, 161, 164, 165, 166, 167, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 218, 226, 227, 228, 249, 256, 263, 270, 271, 272, 275, 277, 284, 287, 293, 305, 308, 313, 315, 332, 346, 351, 355, 358, 367, 372, 383, 384, 385, 391, 394, 398, 399, 400, 402, 403, 405, 407, 408, 415, 417, 418, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 460, 480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 503, 505, 506], "adapt": [1, 33, 221, 249, 268, 284, 290, 391, 399, 405, 478, 484, 488, 501], "equal": [1, 15, 16, 21, 36, 85, 95, 102, 115, 122, 123, 137, 159, 162, 163, 164, 173, 193, 250, 251, 294, 295, 308, 310, 313, 315, 316, 319, 320, 322, 384, 402, 406, 411, 415, 451, 472, 473, 484, 486, 502], "introduc": [1, 2, 114, 115, 164, 173, 308, 310, 313, 315, 332, 484, 499], "some": [1, 2, 3, 4, 7, 8, 9, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 70, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 97, 102, 103, 108, 110, 117, 128, 130, 134, 135, 136, 137, 140, 143, 144, 145, 150, 151, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 255, 270, 277, 280, 287, 297, 310, 338, 346, 351, 355, 372, 373, 374, 415, 417, 418, 442, 451, 463, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 499, 500, 501, 503, 505, 506], "confus": [1, 34, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 287, 346, 351, 355, 415, 417, 418], "other": [1, 2, 3, 4, 7, 8, 11, 15, 16, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 95, 97, 98, 100, 101, 102, 103, 108, 109, 110, 111, 117, 120, 121, 122, 123, 124, 126, 130, 134, 137, 140, 143, 144, 145, 149, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 230, 232, 236, 237, 257, 264, 270, 273, 280, 284, 285, 287, 292, 307, 308, 310, 315, 325, 344, 346, 347, 348, 349, 350, 351, 355, 358, 363, 365, 370, 372, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 416, 417, 418, 419, 420, 422, 440, 457, 472, 473, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 499, 500, 501, 502, 505, 506], "better": [1, 3, 8, 9, 15, 16, 32, 151, 185, 186, 187, 190, 192, 202, 310, 315, 355, 480, 486, 489, 501, 505], "consist": [1, 2, 3, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 247, 283, 287, 292, 295, 316, 346, 351, 355, 415, 417, 418, 478, 484, 485, 486, 497, 501, 502, 506], "interact": [1, 2, 3, 4, 5, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 196, 199, 277, 368, 372, 478, 484, 486, 488, 489, 490, 492, 499, 500, 501, 506], "keep": [1, 2, 3, 4, 7, 8, 16, 63, 70, 79, 80, 102, 117, 121, 128, 137, 164, 173, 204, 218, 251, 255, 282, 284, 285, 287, 332, 367, 384, 402, 415, 417, 442, 453, 460, 484, 485, 486, 487, 492, 493, 494, 500, 501, 503, 506], "separ": [1, 2, 4, 8, 15, 16, 18, 21, 22, 25, 27, 29, 32, 40, 41, 49, 70, 75, 79, 80, 95, 198, 227, 255, 282, 383, 386, 389, 391, 403, 405, 407, 408, 422, 478, 480, 484, 485, 490, 491, 499, 500, 503, 506], "interchang": [1, 321, 322, 486, 489, 493, 497, 502, 503], "between": [1, 2, 3, 4, 5, 15, 16, 17, 18, 21, 24, 27, 29, 30, 31, 33, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 85, 100, 101, 102, 103, 110, 114, 115, 117, 118, 121, 122, 123, 130, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 237, 250, 261, 272, 275, 277, 284, 285, 287, 294, 295, 303, 308, 310, 315, 316, 321, 322, 344, 346, 347, 348, 349, 350, 351, 353, 355, 365, 368, 372, 382, 384, 385, 386, 389, 390, 391, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 422, 455, 460, 478, 480, 484, 485, 487, 488, 492, 496, 497, 499, 500, 501, 503, 506], "wherea": [1, 2, 28, 29, 36, 43, 48, 56, 58, 66, 67, 73, 78, 102, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 159, 160, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 237, 275, 277, 287, 346, 351, 355, 385, 400, 405, 415, 417, 418, 481, 493], "correspond": [1, 2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 71, 73, 74, 75, 78, 79, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 245, 255, 270, 275, 277, 282, 284, 285, 287, 292, 307, 310, 313, 315, 319, 320, 332, 344, 346, 347, 348, 349, 350, 351, 355, 368, 372, 385, 387, 390, 391, 405, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 478, 479, 484, 485, 486, 488, 489, 491, 492, 493, 499, 500, 501, 502], "sub": [1, 2, 3, 15, 16, 21, 22, 23, 25, 27, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 95, 102, 122, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 256, 275, 276, 285, 287, 346, 351, 355, 373, 374, 415, 417, 418, 451, 460, 478, 479, 480, 484, 485, 486, 492, 498, 505, 506], "doesn": [1, 4, 36, 43, 48, 56, 66, 67, 73, 78, 102, 128, 134, 137, 140, 144, 152, 159, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 235, 238, 287, 288, 312, 346, 351, 355, 405, 415, 417, 418, 488, 489], "understood": [1, 484], "serv": [1, 3, 22, 25, 27, 146, 478, 503, 505, 506], "basi": [1, 128, 321, 503, 505], "we": [1, 2, 3, 5, 7, 9, 11, 30, 31, 32, 33, 36, 40, 43, 48, 51, 56, 63, 66, 67, 70, 72, 73, 78, 79, 80, 95, 97, 102, 108, 121, 123, 128, 134, 135, 136, 137, 140, 141, 144, 148, 150, 151, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 232, 247, 255, 258, 264, 275, 280, 283, 284, 285, 287, 288, 291, 315, 319, 321, 322, 323, 346, 351, 355, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 442, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 505, 506], "anoth": [1, 2, 3, 8, 14, 17, 19, 20, 24, 26, 31, 51, 78, 83, 101, 109, 115, 122, 134, 137, 140, 143, 144, 145, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 207, 224, 233, 235, 236, 238, 270, 276, 316, 368, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 418, 420, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 480, 484, 486, 487, 488, 490, 491, 498, 499, 500, 501, 506], "wise": [1, 249], "requir": [1, 3, 4, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 102, 109, 114, 115, 122, 123, 134, 137, 140, 144, 148, 152, 159, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 227, 231, 232, 245, 255, 267, 270, 275, 276, 277, 280, 282, 285, 287, 292, 310, 312, 315, 316, 323, 343, 346, 351, 355, 371, 372, 373, 374, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 440, 442, 444, 478, 479, 481, 484, 485, 486, 487, 489, 490, 491, 493, 496, 497, 499, 500, 501, 503, 505, 506], "op": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 35, 37, 38, 39, 44, 52, 53, 54, 55, 58, 59, 60, 61, 83, 86, 87, 88, 89, 90, 250, 283, 289, 292, 307, 442, 462], "sinc": [1, 2, 3, 4, 5, 7, 11, 29, 30, 31, 32, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 95, 102, 114, 115, 123, 128, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 170, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 233, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 321, 323, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 364, 365, 367, 369, 370, 375, 378, 415, 417, 418, 440, 442, 478, 480, 484, 485, 486, 487, 489, 490, 491, 496, 499, 501, 502, 503, 505, 506], "goal": [1, 3, 4, 95, 96, 97, 98, 152, 194, 269, 478, 484, 485, 486, 487, 496, 500, 501], "policy_devic": [1, 15, 16, 18, 21, 22, 23, 25, 27, 485], "explicitli": [1, 2, 3, 4, 39, 84, 105, 106, 113, 117, 223, 331, 368, 450, 480, 485, 487, 492, 499, 500, 503], "do": [1, 2, 3, 4, 7, 58, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 192, 193, 194, 195, 203, 205, 206, 207, 218, 220, 232, 256, 270, 275, 283, 284, 310, 315, 322, 324, 361, 372, 400, 415, 418, 422, 442, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 498, 499, 500, 501, 503, 505, 506], "deepcopi": [1, 323, 400, 415, 418, 499], "place": [1, 2, 3, 19, 33, 36, 40, 42, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 108, 110, 117, 120, 122, 130, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 223, 231, 239, 255, 270, 276, 277, 280, 282, 283, 284, 287, 323, 344, 346, 347, 348, 349, 350, 351, 355, 363, 367, 371, 415, 416, 417, 418, 419, 422, 457, 462, 463, 478, 480, 485, 486, 490, 493, 499, 500, 501, 503], "instanti": [1, 2, 3, 15, 16, 27, 29, 30, 62, 63, 64, 68, 69, 70, 71, 79, 80, 83, 85, 95, 96, 97, 98, 100, 101, 114, 115, 117, 148, 151, 191, 195, 223, 245, 270, 322, 344, 347, 348, 349, 350, 416, 419, 422, 423, 424, 425, 426, 440, 484, 485, 490, 491, 493, 499, 500, 501, 503, 506], "all": [1, 2, 3, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 100, 101, 102, 117, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 151, 152, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 216, 218, 220, 226, 227, 230, 231, 235, 236, 238, 241, 247, 250, 251, 255, 263, 265, 267, 270, 271, 276, 277, 280, 282, 284, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 326, 327, 330, 332, 335, 336, 338, 343, 344, 346, 347, 348, 349, 350, 351, 355, 358, 363, 365, 367, 370, 371, 372, 374, 375, 378, 379, 382, 383, 384, 385, 394, 398, 400, 402, 403, 404, 405, 407, 408, 412, 415, 416, 417, 418, 419, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 456, 460, 463, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 501, 503, 505, 506], "graph": [1, 3, 4, 8, 43, 66, 78, 135, 136, 150, 151, 202, 346, 351, 355, 413, 414, 415, 418, 484, 488, 501], "reli": [1, 2, 3, 11, 32, 67, 73, 270, 308, 309, 310, 313, 314, 315, 353, 382, 402, 422, 480, 484, 486, 488, 490, 492, 501, 506], "third": [1, 251, 272, 365, 499, 500], "parti": 1, "try": [1, 2, 4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 49, 62, 64, 71, 75, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419, 478, 484, 485, 486, 487, 488, 491, 492, 497, 499, 500, 501, 505, 506], "limit": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 202, 206, 207, 227, 247, 382, 384, 399, 400, 402, 404, 415, 418, 478, 480, 484, 485, 487, 499, 500, 501], "chart": 1, "show": [1, 2, 11, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 287, 322, 346, 351, 355, 415, 417, 418, 442, 484, 486, 487, 488, 496, 499, 500, 501, 503, 505], "decis": [1, 2, 3, 296, 301, 330, 363, 388, 401, 479, 487, 489, 490, 499, 500, 503, 506], "multiprocess": [1, 2, 3, 14, 15, 16, 22, 23, 25, 70, 79, 80, 95, 109, 111, 117, 134, 141, 142, 164, 168, 173, 284, 285, 484, 485, 486, 487, 492, 499, 500, 501, 502, 506], "ensur": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 36, 43, 48, 56, 63, 66, 67, 73, 78, 79, 85, 102, 114, 115, 121, 134, 137, 140, 144, 149, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 227, 255, 268, 277, 280, 284, 285, 287, 310, 315, 346, 351, 355, 364, 384, 399, 402, 415, 417, 418, 478, 479, 485, 486, 501, 503], "flexibl": [1, 2, 3, 9, 159, 185, 409, 478, 480, 481, 484, 488, 497, 503, 506], "extens": [1, 2, 63, 70, 79, 80, 123, 292, 478, 481, 503], "mechan": [1, 4, 14, 17, 19, 24, 26, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 287, 346, 351, 355, 415, 417, 418, 478, 485, 491, 501], "accommod": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 489, 490], "variou": [1, 2, 3, 14, 137, 276, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 409, 415, 418, 420, 442, 472, 473, 478, 484, 485, 486, 488, 489, 490, 491, 493, 499, 500, 503, 506], "deploy": [1, 488], "scenario": [1, 2, 19, 24, 26, 156, 157, 164, 178, 179, 232, 275, 415, 440, 478, 484, 490, 499, 500, 501], "facilit": [1, 2, 3, 7, 254, 255, 270, 280, 282, 360, 361, 362, 479, 484, 487, 490, 501], "weightupdaterbas": [1, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "These": [1, 2, 7, 51, 72, 131, 178, 255, 282, 285, 418, 478, 479, 480, 484, 486, 499, 500, 501, 503, 506], "base": [1, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 51, 63, 70, 73, 79, 80, 84, 114, 115, 119, 125, 128, 129, 131, 132, 134, 135, 136, 137, 140, 144, 148, 150, 151, 152, 158, 159, 160, 164, 165, 168, 173, 174, 175, 178, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 201, 202, 204, 206, 209, 210, 211, 218, 232, 236, 260, 274, 276, 280, 281, 310, 315, 321, 323, 346, 351, 355, 360, 366, 382, 383, 385, 386, 387, 389, 390, 391, 393, 398, 402, 403, 404, 405, 407, 408, 449, 460, 479, 480, 481, 484, 485, 487, 489, 490, 491, 493, 496, 497, 499, 500, 501, 503, 506], "implement": [1, 2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 68, 73, 74, 75, 78, 82, 83, 86, 87, 88, 89, 90, 102, 112, 114, 124, 125, 134, 137, 140, 144, 152, 158, 159, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 235, 236, 240, 243, 247, 249, 257, 258, 264, 268, 274, 276, 277, 278, 284, 285, 287, 288, 292, 294, 308, 309, 310, 311, 313, 314, 315, 339, 340, 341, 346, 351, 355, 382, 383, 385, 388, 389, 390, 396, 398, 400, 401, 402, 404, 405, 407, 415, 417, 418, 440, 451, 465, 478, 479, 481, 484, 485, 486, 487, 488, 499, 500, 501, 505], "logic": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 499], "allow": [1, 2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 36, 40, 41, 43, 48, 49, 56, 58, 60, 62, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 85, 95, 100, 101, 102, 109, 115, 117, 120, 122, 123, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 223, 224, 258, 285, 287, 288, 312, 316, 344, 346, 347, 348, 349, 350, 351, 355, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 409, 411, 415, 416, 417, 418, 419, 420, 478, 479, 481, 484, 486, 487, 488, 489, 490, 491, 497, 499, 500, 501, 503, 505, 506], "tailor": [1, 193, 478, 505], "need": [1, 2, 3, 4, 7, 8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 36, 42, 43, 48, 56, 62, 64, 66, 67, 73, 78, 83, 102, 124, 128, 134, 137, 140, 144, 148, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 230, 232, 233, 242, 248, 255, 258, 271, 275, 276, 277, 282, 284, 285, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 323, 324, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 368, 369, 370, 371, 375, 378, 381, 391, 404, 405, 415, 417, 418, 421, 426, 442, 460, 474, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 500, 501, 503, 505, 506], "handl": [1, 2, 3, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 31, 36, 43, 48, 56, 58, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 283, 284, 285, 287, 315, 316, 346, 351, 352, 355, 382, 400, 402, 415, 417, 418, 460, 472, 473, 478, 484, 485, 486, 487, 489, 491, 496, 500, 503], "well": [1, 2, 3, 8, 27, 32, 36, 43, 48, 56, 63, 65, 66, 67, 70, 73, 78, 79, 80, 83, 102, 115, 120, 124, 131, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 276, 277, 287, 288, 292, 297, 313, 335, 336, 346, 351, 355, 372, 400, 402, 407, 415, 417, 418, 422, 426, 478, 479, 484, 485, 487, 488, 489, 490, 491, 493, 502, 503, 505, 506], "server": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 478], "everi": [1, 3, 8, 15, 16, 17, 18, 21, 29, 30, 36, 40, 41, 43, 48, 49, 56, 58, 60, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 85, 95, 96, 97, 98, 102, 117, 124, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 268, 269, 284, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 321, 322, 323, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 375, 378, 384, 399, 400, 402, 415, 417, 418, 460, 481, 484, 485, 486, 487, 489, 490, 499, 500, 501], "even": [1, 2, 3, 4, 8, 11, 16, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 103, 108, 109, 110, 111, 115, 122, 124, 126, 130, 134, 137, 140, 141, 144, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 219, 223, 484, 486, 489, 496, 499, 500, 501, 506], "simplest": [1, 43, 66, 78, 128, 346, 351, 355, 375, 415, 418, 484, 486, 487, 490, 499, 500, 503, 506], "vanillaweightupdat": 1, "dict": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 56, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 106, 115, 117, 122, 123, 134, 137, 140, 141, 142, 143, 144, 145, 152, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 247, 270, 275, 277, 283, 284, 285, 287, 288, 294, 295, 296, 297, 298, 299, 300, 301, 306, 316, 330, 344, 346, 347, 348, 349, 350, 351, 355, 368, 372, 385, 391, 405, 407, 415, 416, 417, 418, 419, 442, 446, 447, 455, 460, 465, 466, 472, 473, 474, 479, 484, 485, 486, 503, 505, 506], "assum": [1, 2, 3, 6, 14, 15, 16, 17, 18, 24, 26, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 73, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 97, 98, 105, 106, 113, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 212, 226, 229, 234, 242, 255, 256, 263, 270, 277, 280, 282, 293, 310, 315, 343, 358, 375, 387, 391, 392, 405, 417, 420, 431, 432, 433, 434, 436, 437, 438, 439, 442, 484, 486, 498, 501], "divers": [1, 4, 164, 173], "abl": [1, 3, 51, 134, 155, 166, 167, 168, 174, 310, 315, 478, 484, 486, 487, 490, 498, 499, 500, 501, 503], "leav": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 70, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 191, 193, 194, 195, 219, 264, 344, 347, 348, 349, 350, 416, 419, 480, 484, 492, 503], "untouch": [1, 95, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 235, 236, 240, 247, 249, 257, 258, 264, 268, 274, 276, 278, 285, 287, 417], "particularli": [1, 2, 3, 103, 204, 312, 488, 505, 506], "benefici": [1, 2, 312], "involv": [1, 143, 145, 146, 156, 157, 170, 224, 227, 275, 310, 315, 478, 489, 491], "complex": [1, 2, 3, 14, 17, 19, 20, 24, 26, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418, 478, 484, 485, 489, 490], "architectur": [1, 4, 202, 301, 491, 499, 500, 505], "special": [1, 3, 87, 89, 195, 476, 478, 484, 487, 488, 506], "hardwar": [1, 3, 488], "By": [1, 2, 3, 14, 17, 18, 19, 20, 24, 26, 40, 41, 49, 60, 75, 102, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 156, 157, 164, 165, 166, 167, 168, 170, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 249, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 343, 372, 400, 415, 417, 418, 450, 455, 474, 478, 480, 484, 487, 499, 502, 503, 506], "retriev": [1, 2, 3, 14, 17, 20, 24, 26, 51, 62, 63, 64, 66, 68, 69, 70, 71, 79, 80, 85, 95, 96, 97, 98, 100, 101, 103, 117, 120, 122, 123, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 200, 201, 202, 206, 207, 218, 228, 236, 239, 251, 291, 294, 318, 344, 347, 348, 349, 350, 367, 368, 372, 375, 379, 382, 383, 384, 385, 387, 399, 402, 403, 405, 407, 408, 415, 416, 419, 420, 422, 423, 424, 425, 474, 481, 485, 486, 490, 501, 506], "appli": [1, 2, 3, 4, 14, 17, 18, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 101, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 246, 247, 248, 250, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 287, 292, 308, 313, 323, 340, 346, 351, 355, 364, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 401, 402, 403, 404, 405, 407, 408, 415, 417, 418, 422, 440, 456, 478, 481, 484, 485, 486, 492, 496, 499, 501, 505, 506], "seamless": [1, 2, 316, 478, 497], "integr": [1, 2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 300, 310, 315, 318, 346, 351, 355, 371, 415, 417, 418, 479, 489, 490, 492, 496, 499, 500, 501, 502], "infrastructur": [1, 3, 499, 500], "transit": [1, 36, 43, 48, 56, 66, 67, 73, 78, 97, 102, 115, 123, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 290, 292, 346, 351, 355, 377, 415, 417, 418, 484, 487, 489, 490, 492, 499, 501, 503], "sampl": [1, 4, 8, 9, 30, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 72, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 114, 115, 116, 117, 120, 121, 122, 123, 126, 128, 130, 134, 137, 140, 144, 152, 158, 161, 164, 165, 168, 173, 174, 175, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 283, 284, 285, 287, 289, 291, 302, 307, 311, 312, 318, 319, 320, 328, 330, 331, 332, 335, 340, 341, 346, 351, 355, 356, 359, 364, 365, 366, 368, 369, 370, 371, 372, 382, 383, 384, 385, 386, 387, 389, 399, 401, 402, 407, 408, 415, 417, 451, 457, 460, 463, 476, 479, 480, 484, 485, 486, 487, 488, 489, 490, 492, 494, 499, 500, 502, 505, 506], "attent": [1, 2, 8, 193, 227, 346, 351, 355, 415, 478, 484, 487, 497, 506], "given": [1, 2, 3, 15, 16, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 102, 115, 117, 122, 123, 134, 137, 140, 144, 152, 158, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 231, 237, 245, 251, 255, 270, 274, 276, 277, 278, 280, 282, 284, 285, 287, 289, 291, 293, 304, 305, 307, 308, 310, 312, 313, 315, 318, 323, 334, 338, 346, 351, 355, 359, 364, 365, 367, 370, 371, 372, 373, 374, 376, 381, 386, 387, 389, 400, 415, 417, 418, 421, 422, 423, 424, 425, 426, 428, 452, 455, 470, 478, 479, 480, 481, 484, 485, 486, 489, 490, 491, 492, 493, 500, 501, 506], "built": [1, 2, 3, 5, 7, 117, 135, 136, 143, 150, 151, 161, 162, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 409, 415, 418, 420, 468, 470, 471, 474, 478, 484, 485, 486, 487, 488, 491, 493, 496, 501, 503, 506], "flatten": [1, 29, 30, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 128, 191, 224, 242, 344, 347, 348, 349, 350, 416, 417, 419, 422, 457, 476, 478, 487, 500], "suffici": [1, 3, 4, 484], "preprocess": [1, 2, 84, 95, 96, 97, 98, 276, 485, 488], "popul": [1, 2, 3, 15, 16, 18, 27, 29, 30, 63, 68, 69, 70, 77, 79, 80, 95, 96, 97, 98, 117, 193, 246, 270, 302, 323, 400, 415, 418, 484, 486, 487, 490, 492, 501, 503], "replaybuff": [1, 2, 3, 15, 16, 18, 21, 27, 29, 30, 45, 63, 68, 69, 76, 79, 80, 95, 96, 97, 98, 102, 103, 108, 109, 114, 115, 116, 117, 122, 123, 132, 227, 256, 260, 287, 387, 392, 420, 468, 470, 476, 486, 488, 492, 494, 499, 500, 502, 503, 505], "lazytensorstorag": [1, 2, 15, 16, 18, 21, 29, 63, 70, 78, 79, 80, 114, 122, 123, 128, 260, 287, 486, 488, 494, 499, 500, 503], "lambda": [1, 2, 15, 16, 18, 21, 27, 28, 29, 30, 43, 51, 66, 70, 78, 85, 128, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 198, 217, 224, 232, 233, 245, 247, 270, 278, 285, 287, 288, 293, 343, 346, 351, 355, 364, 367, 368, 369, 393, 395, 396, 407, 415, 418, 422, 425, 433, 434, 438, 439, 440, 470, 478, 480, 484, 485, 488, 499, 500, 502, 503, 505, 506], "reshap": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 122, 128, 224, 310, 315, 316, 331, 440, 478, 486, 499, 500], "slice": [1, 2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 70, 74, 75, 83, 86, 87, 88, 89, 90, 95, 97, 115, 117, 122, 123, 220, 226, 227, 503], "recommend": [1, 2, 4, 7, 15, 16, 18, 21, 22, 23, 25, 27, 62, 63, 64, 70, 71, 79, 80, 85, 100, 101, 122, 128, 148, 185, 186, 187, 190, 191, 202, 227, 323, 344, 347, 348, 349, 350, 351, 353, 355, 384, 402, 416, 419, 478, 480, 492, 497, 499, 500], "achiev": [1, 2, 3, 4, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 269, 287, 293, 346, 351, 355, 368, 415, 417, 418, 457, 481, 484, 485, 486, 487, 488, 496, 499, 500, 501, 503, 505, 506], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 109, 111, 117, 128, 134, 137, 140, 141, 144, 148, 152, 164, 165, 166, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 224, 227, 232, 245, 255, 275, 276, 277, 280, 283, 284, 285, 287, 294, 295, 297, 298, 299, 300, 301, 302, 306, 310, 315, 316, 317, 321, 322, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 363, 371, 372, 379, 385, 387, 392, 403, 405, 415, 416, 417, 418, 419, 420, 442, 457, 464, 465, 466, 470, 472, 473, 478, 479, 484, 485, 486, 487, 488, 490, 493, 496, 497, 499, 500, 501, 502, 503, 505, 506], "multidimension": [1, 2, 79, 114, 115, 503], "slicesampl": [1, 2, 95, 115, 123, 227, 503], "sampler": [1, 2, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 102, 103, 108, 109, 110, 111, 114, 115, 116, 117, 120, 121, 122, 123, 124, 126, 128, 130, 227, 256, 331, 387, 392, 420, 484, 486, 499, 500, 503], "One": [1, 2, 3, 4, 8, 34, 35, 39, 40, 41, 44, 49, 54, 55, 60, 61, 75, 84, 128, 134, 135, 136, 164, 168, 173, 174, 227, 260, 280, 289, 328, 371, 375, 406, 411, 446, 484, 485, 503, 506], "must": [1, 2, 3, 7, 11, 15, 16, 18, 19, 20, 21, 22, 23, 25, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 102, 103, 108, 109, 110, 111, 115, 117, 122, 123, 124, 125, 126, 128, 130, 134, 135, 137, 140, 141, 144, 150, 152, 162, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 178, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 220, 223, 224, 227, 230, 232, 233, 239, 243, 245, 247, 249, 251, 253, 264, 267, 269, 270, 271, 274, 275, 277, 278, 279, 284, 287, 294, 295, 304, 310, 312, 315, 316, 319, 320, 321, 322, 334, 346, 351, 355, 359, 364, 365, 367, 368, 369, 370, 371, 372, 375, 376, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 406, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 444, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 478, 480, 484, 485, 486, 487, 490, 496, 498, 501, 503], "shape": [1, 2, 3, 15, 16, 18, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 100, 101, 103, 108, 109, 110, 114, 117, 122, 128, 130, 134, 137, 138, 139, 140, 143, 144, 145, 150, 151, 152, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 185, 186, 187, 190, 191, 192, 193, 194, 195, 198, 200, 201, 206, 207, 212, 218, 220, 224, 226, 228, 235, 238, 239, 240, 245, 247, 248, 251, 253, 257, 258, 260, 264, 267, 268, 270, 273, 278, 284, 286, 287, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 328, 329, 330, 331, 332, 333, 334, 339, 340, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 411, 415, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 451, 457, 460, 470, 478, 479, 480, 484, 485, 486, 487, 488, 490, 491, 494, 496, 497, 498, 499, 500, 502, 503, 505, 506], "clearli": [1, 2, 478], "practic": [1, 2, 3, 4, 5, 8, 29, 58, 95, 276, 311, 340, 341, 381, 477, 484, 485, 486, 487, 488, 491, 496, 499, 500, 502, 506], "dimension": [1, 63, 67, 70, 78, 79, 80, 193, 237, 310, 315, 422, 427, 435, 480, 500], "num_slic": [1, 2, 95, 115, 122, 123, 503], "4": [1, 2, 3, 7, 34, 36, 40, 41, 45, 49, 51, 54, 55, 56, 60, 63, 66, 68, 69, 70, 72, 73, 75, 76, 78, 79, 80, 95, 96, 97, 98, 102, 108, 109, 110, 114, 115, 117, 122, 123, 130, 134, 135, 136, 137, 138, 139, 140, 144, 150, 151, 152, 153, 154, 155, 158, 160, 164, 165, 168, 171, 172, 173, 174, 175, 185, 186, 187, 190, 192, 193, 194, 195, 220, 221, 223, 224, 227, 232, 233, 239, 260, 267, 268, 269, 275, 284, 285, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 313, 314, 316, 318, 319, 320, 321, 322, 326, 327, 328, 330, 331, 332, 333, 334, 342, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 440, 441, 478, 479, 483, 484, 485, 486, 487, 493, 499, 500, 501, 503, 504, 505, 506], "trajectory_kei": [1, 32, 122, 123], "traj_id": [1, 2, 3, 15, 16, 18, 29, 32, 45, 76, 224, 260, 492, 503], "total_fram": [1, 2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 45, 56, 68, 76, 224, 227, 260, 460, 463, 470, 481, 484, 485, 486, 487, 488, 492, 494, 499, 500, 503, 505], "dim": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 70, 71, 74, 75, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 122, 191, 211, 227, 228, 249, 253, 266, 267, 270, 279, 284, 314, 338, 343, 344, 347, 348, 349, 350, 367, 416, 419, 474, 478, 480, 485, 486, 488, 499, 501, 503], "ndim": [1, 2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 108, 110, 114, 115, 128, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 249, 287, 367], "parallelenv": [1, 2, 3, 15, 16, 18, 21, 25, 29, 30, 102, 128, 134, 137, 140, 144, 152, 159, 165, 166, 167, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 276, 285, 287, 310, 315, 417, 440, 471, 476, 484, 485, 486, 489, 498, 505, 506], "make_env": [1, 3, 164, 173, 179, 275, 284, 285, 440, 465, 466, 478, 484, 485, 505, 506], "regular": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 62, 64, 71, 85, 100, 101, 102, 114, 120, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 283, 284, 287, 290, 292, 303, 310, 315, 334, 344, 347, 348, 349, 350, 365, 369, 370, 371, 372, 392, 402, 416, 417, 418, 419, 462, 476, 481, 484, 485, 488, 489, 490, 494, 496, 503, 506], "behav": [1, 3, 146, 158, 308, 313, 328, 390, 398, 400, 415, 418, 488, 502], "accordingli": [1, 2, 3, 115, 189, 233, 249, 268, 269, 313, 369, 487], "3": [1, 2, 3, 6, 7, 10, 11, 15, 16, 18, 21, 27, 29, 30, 34, 35, 36, 39, 40, 41, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 103, 108, 110, 114, 115, 117, 122, 123, 128, 130, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 152, 155, 156, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 221, 223, 224, 227, 231, 232, 233, 237, 239, 240, 245, 247, 251, 253, 255, 257, 258, 260, 263, 264, 267, 268, 269, 270, 273, 275, 276, 277, 278, 280, 282, 285, 287, 288, 290, 291, 293, 294, 295, 297, 298, 299, 301, 304, 306, 308, 309, 310, 313, 314, 315, 316, 318, 319, 321, 322, 323, 328, 331, 333, 343, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 364, 365, 368, 370, 371, 374, 375, 376, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 459, 479, 481, 483, 484, 485, 486, 487, 489, 490, 492, 493, 499, 500, 501, 503, 504, 505, 506], "isn": [1, 2, 3, 8, 15, 16, 18, 21, 22, 23, 25, 27, 62, 64, 71, 85, 100, 101, 114, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 191, 193, 194, 195, 223, 239, 245, 344, 347, 348, 349, 350, 364, 371, 416, 419, 422, 490, 491, 493, 499, 500], "current": [1, 2, 3, 12, 14, 15, 16, 17, 24, 26, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 112, 115, 117, 123, 134, 137, 140, 144, 146, 152, 159, 162, 163, 164, 165, 168, 173, 174, 175, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 223, 224, 227, 245, 256, 269, 270, 271, 275, 276, 277, 285, 287, 305, 332, 336, 340, 344, 346, 347, 348, 349, 350, 351, 353, 355, 356, 367, 382, 384, 385, 392, 399, 402, 404, 405, 415, 416, 417, 418, 419, 422, 445, 478, 481, 484, 485, 486, 487, 491, 499, 500, 501, 503, 506], "fulli": [1, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 309, 312, 314, 346, 351, 355, 415, 417, 418, 485, 488, 491, 501, 503], "ani": [1, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 117, 118, 121, 123, 124, 126, 128, 129, 130, 132, 133, 134, 137, 140, 141, 144, 145, 152, 159, 164, 165, 166, 167, 168, 173, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 242, 243, 245, 246, 247, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 287, 293, 294, 295, 301, 302, 316, 325, 331, 344, 346, 347, 348, 349, 350, 351, 355, 363, 367, 371, 372, 373, 374, 382, 383, 384, 385, 386, 387, 389, 390, 391, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 422, 424, 425, 440, 442, 447, 460, 477, 478, 480, 484, 485, 486, 487, 488, 490, 491, 496, 499, 500, 501, 503, 505, 506], "consecut": [1, 3, 95, 121, 148, 315, 332, 442, 487, 489, 492, 500, 503, 506], "won": [1, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 141, 143, 144, 152, 159, 160, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 255, 282, 287, 344, 346, 347, 348, 349, 350, 351, 355, 382, 415, 416, 417, 418, 419, 460, 474, 485, 486, 489, 490], "therebi": [1, 33, 440, 480, 484, 485], "interrupt": [1, 2, 144, 195, 367, 428], "start": [1, 2, 3, 4, 5, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 33, 51, 68, 83, 84, 85, 95, 114, 115, 122, 123, 134, 137, 140, 141, 144, 149, 152, 155, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 234, 456, 483, 484, 485, 488, 495, 500, 501, 503, 504, 506], "get": [1, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 43, 49, 51, 62, 63, 64, 66, 67, 70, 71, 73, 75, 78, 85, 95, 97, 100, 101, 102, 108, 110, 115, 122, 123, 124, 126, 128, 130, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 201, 206, 207, 221, 226, 228, 232, 235, 237, 238, 247, 251, 256, 269, 270, 273, 277, 284, 285, 307, 312, 344, 346, 347, 348, 349, 350, 351, 355, 359, 368, 369, 372, 379, 415, 416, 418, 419, 422, 423, 424, 425, 426, 442, 446, 478, 479, 480, 483, 484, 485, 486, 487, 488, 495, 497, 499, 500, 501, 503, 504, 505, 506], "rid": [1, 43, 66, 78, 346, 351, 355, 415, 418], "natur": [1, 2, 3, 13, 22, 23, 25, 185, 478, 484, 490, 491, 492, 503], "background": [1, 13, 15, 16, 21, 22, 23, 25, 30, 503], "simpli": [1, 3, 6, 62, 64, 71, 84, 85, 100, 101, 126, 128, 133, 191, 197, 240, 264, 283, 344, 347, 348, 349, 350, 400, 415, 416, 418, 419, 422, 478, 479, 480, 484, 486, 491, 496, 499, 500, 506], "replay_buff": [1, 2, 8, 15, 16, 18, 21, 27, 29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 227, 457, 470, 484, 485, 486, 492, 499, 500, 503], "rb": [1, 2, 15, 16, 18, 21, 29, 45, 63, 68, 69, 70, 76, 79, 80, 95, 96, 97, 98, 102, 103, 109, 114, 115, 117, 122, 123, 128, 227, 260, 287, 485, 487, 488, 492, 494, 500, 502, 503, 505], "paus": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "sleep": [1, 15, 16, 18, 21, 29, 68, 141, 506], "10": [1, 2, 3, 7, 28, 32, 34, 35, 36, 39, 43, 44, 51, 52, 56, 63, 68, 69, 70, 72, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 102, 103, 108, 109, 110, 114, 117, 122, 123, 128, 130, 134, 135, 136, 137, 140, 141, 144, 150, 151, 152, 158, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 198, 200, 201, 203, 205, 220, 221, 224, 226, 227, 232, 233, 269, 271, 272, 273, 284, 285, 287, 291, 293, 296, 297, 299, 301, 303, 307, 308, 309, 310, 312, 313, 314, 315, 318, 319, 320, 330, 332, 343, 368, 372, 375, 379, 383, 387, 389, 396, 402, 403, 404, 408, 420, 422, 423, 424, 425, 428, 442, 451, 481, 484, 485, 486, 487, 488, 489, 490, 494, 499, 501, 503, 505, 506], "i": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 45, 48, 49, 56, 63, 66, 67, 70, 73, 75, 76, 78, 80, 81, 85, 102, 103, 104, 108, 110, 114, 115, 122, 123, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 233, 234, 249, 255, 260, 263, 275, 277, 282, 287, 309, 310, 314, 315, 334, 346, 351, 355, 358, 365, 367, 368, 370, 371, 372, 382, 384, 385, 386, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 417, 418, 422, 423, 424, 425, 451, 463, 478, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 499, 500, 501, 503, 505, 506], "rang": [1, 2, 3, 4, 8, 63, 68, 69, 70, 72, 79, 80, 95, 96, 97, 98, 102, 108, 110, 117, 128, 134, 137, 140, 141, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 192, 193, 194, 195, 200, 260, 273, 284, 287, 288, 309, 314, 331, 354, 399, 407, 408, 480, 481, 484, 486, 487, 488, 491, 492, 494, 499, 500, 501, 503, 505], "optim_step": [1, 291, 318, 488, 494], "rest": [1, 15, 16, 21, 43, 292, 479, 486, 487, 499, 501, 505], "multithread": [1, 2, 3, 63, 70, 79, 80, 95, 97, 98, 99, 159, 160, 492, 503], "mind": [1, 3, 95, 115, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 499, 500], "gil": 1, "relat": [1, 2, 3, 4, 10, 40, 63, 164, 190, 242, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 485, 494, 501], "restrict": [1, 2, 3, 480, 485, 496, 502, 503, 506], "hand": [1, 2, 3, 7, 27, 40, 499, 500, 501], "let": [1, 2, 3, 6, 7, 11, 32, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 81, 102, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 287, 321, 322, 346, 351, 355, 364, 415, 417, 418, 455, 478, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "child": [1, 20, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 485], "fill": [1, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 95, 144, 195, 223, 270, 283, 315, 422, 487, 501, 502], "truli": [1, 283, 505], "decoupl": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 484, 491, 505], "been": [1, 2, 3, 5, 7, 8, 12, 22, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 117, 121, 134, 137, 140, 144, 148, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 247, 268, 269, 276, 277, 308, 310, 313, 315, 323, 367, 382, 400, 402, 404, 415, 418, 484, 485, 486, 487, 498, 499, 500, 501, 503, 505, 506], "shut": [1, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 168, 174], "down": [1, 4, 13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 168, 174, 480, 487, 489], "async_shutdown": [1, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 68], "mean": [1, 2, 3, 4, 7, 15, 16, 17, 18, 21, 22, 23, 25, 27, 29, 62, 64, 71, 79, 83, 85, 95, 100, 101, 109, 114, 115, 122, 123, 128, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 198, 223, 251, 275, 284, 285, 289, 290, 291, 302, 305, 308, 310, 312, 313, 315, 318, 330, 331, 339, 340, 344, 347, 348, 349, 350, 368, 372, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 416, 418, 419, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 479, 480, 484, 485, 486, 488, 490, 499, 500, 501, 503, 506], "drastic": [1, 151, 164, 503], "load": [1, 2, 6, 7, 15, 16, 18, 21, 29, 30, 31, 36, 43, 45, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 117, 124, 125, 126, 130, 131, 134, 137, 139, 140, 144, 152, 164, 165, 168, 173, 174, 175, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 284, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 415, 416, 417, 418, 419, 460, 474, 478, 481, 484, 486, 488, 496, 497, 503], "factor": [1, 8, 11, 33, 43, 56, 260, 287, 289, 290, 307, 311, 325, 332, 340, 341, 383, 389, 392, 393, 395, 406, 428, 484, 485, 488, 490, 494, 499, 500, 503, 506], "signific": [1, 2, 3, 5, 8, 486, 505, 506], "understand": [1, 2, 8, 13, 22, 23, 25, 43, 478, 484, 485, 488, 489, 490, 496, 499, 500], "affect": [1, 3, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 233, 277, 285, 287, 346, 351, 355, 415, 417, 418, 422, 423, 424, 425, 499], "algorithm": [1, 2, 3, 8, 9, 13, 22, 23, 25, 158, 220, 267, 382, 402, 403, 405, 476, 480, 481, 484, 485, 486, 487, 488, 490, 491, 492, 493, 499, 500, 502, 503, 505], "legitim": [1, 480, 506], "unless": [1, 2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 105, 121, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 285, 287, 292, 346, 351, 355, 382, 383, 385, 398, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 486], "benchmark": [1, 2, 3, 9, 135, 136, 144, 150, 151, 195], "backend": [1, 3, 7, 15, 16, 18, 21, 22, 23, 27, 28, 29, 85, 134, 137, 140, 143, 144, 152, 164, 165, 168, 173, 174, 175, 184, 185, 186, 187, 190, 193, 194, 195, 217, 288, 478, 481, 484, 486, 487, 488, 489, 492, 493, 497, 501], "gloo": [1, 22, 23, 28], "nccl": [1, 22, 23, 353], "mpi": [1, 22, 23], "distributeddatacollector": [1, 24, 28, 476], "rpc": [1, 25, 26, 28, 29, 30, 69], "rpcdatacollector": [1, 26, 28, 476], "launcher": [1, 22, 23, 25, 28], "rai": [1, 17, 18, 27, 29, 30, 31, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 352, 354, 478], "submitit": [1, 22, 23, 25, 28], "mode": [1, 3, 6, 13, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 134, 137, 140, 144, 149, 152, 159, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 235, 238, 269, 277, 284, 285, 287, 292, 302, 310, 311, 312, 315, 320, 328, 339, 340, 341, 346, 351, 355, 358, 368, 372, 384, 400, 402, 415, 417, 418, 440, 450, 455, 478, 479, 480, 484, 485, 499, 500, 505, 506], "find": [1, 4, 6, 7, 22, 23, 25, 63, 65, 81, 122, 123, 198, 289, 313, 332, 454, 458, 484, 485, 488, 490, 491, 496, 499, 500], "folder": [1, 2, 62, 64, 71, 85, 100, 101, 178, 191, 227, 344, 347, 348, 349, 350, 416, 419, 485], "machin": [1, 2, 7, 22, 23, 25, 56, 148, 499, 500, 505], "wonder": 1, "why": [1, 2, 3, 218, 480, 499, 501, 506], "instead": [1, 2, 3, 4, 7, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 36, 39, 43, 48, 56, 66, 67, 68, 73, 78, 82, 85, 102, 114, 115, 134, 137, 140, 144, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 242, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 371, 375, 378, 382, 384, 385, 387, 390, 391, 392, 398, 399, 402, 403, 404, 405, 415, 417, 418, 420, 422, 426, 430, 474, 480, 488, 489, 490, 494, 501, 503, 506], "lower": [1, 2, 3, 27, 36, 37, 114, 115, 230, 284, 285, 335, 336, 375, 402, 486, 499, 501], "io": [1, 11, 95, 150, 151, 159, 162, 163, 176, 177, 313, 314, 488], "footprint": [1, 2, 503], "commun": [1, 2, 3, 24, 26, 152, 164, 168, 173, 194, 353, 477, 486, 506], "yet": [1, 135, 136, 150, 417, 502], "plai": [1, 3, 166, 167, 175, 185, 227, 485, 486, 491, 503, 506], "role": [1, 3, 101, 157, 185, 187, 190, 198, 206, 207, 351, 355, 418, 478, 485, 491, 497, 506], "opposit": [1, 499], "direct": [1, 2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 308, 313, 346, 351, 355, 400, 415, 417, 418, 485, 491, 497], "faster": [1, 2, 4, 32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 114, 159, 319, 422, 423, 424, 425, 487, 488, 499, 500], "share": [1, 3, 6, 8, 15, 16, 18, 21, 29, 32, 62, 64, 70, 71, 79, 80, 83, 85, 100, 101, 103, 106, 108, 109, 110, 111, 115, 117, 118, 122, 124, 126, 130, 141, 164, 173, 191, 267, 275, 284, 285, 310, 315, 321, 322, 344, 347, 348, 349, 350, 360, 361, 362, 382, 383, 384, 385, 386, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 416, 419, 474, 476, 479, 480, 486, 488, 494, 496, 497, 498, 499, 500, 505, 506], "among": [1, 3, 58, 166, 167, 275, 391, 405, 480, 499, 500], "prohibit": [1, 3, 18, 128], "slow": [1, 2, 3, 4, 11, 62, 64, 71, 85, 100, 101, 109, 122, 123, 191, 344, 347, 348, 349, 350, 416, 419], "compar": [1, 3, 128, 383, 385, 398, 403, 405, 407, 408, 455, 480, 484, 486, 488, 490, 491, 499, 500, 503, 506], "gpu": [1, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 108, 110, 130, 134, 137, 140, 144, 145, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 352, 355, 415, 417, 418, 484, 486, 487, 499, 500, 506], "driver": [1, 7], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 106, 108, 109, 110, 111, 114, 115, 117, 120, 122, 123, 126, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 156, 157, 159, 160, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 233, 236, 239, 240, 241, 243, 245, 246, 247, 249, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 293, 307, 310, 315, 319, 320, 321, 322, 332, 344, 346, 347, 348, 349, 350, 351, 355, 359, 363, 364, 367, 368, 369, 371, 372, 375, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 410, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 430, 440, 442, 447, 449, 460, 471, 484, 485, 486, 488, 490, 493, 499, 500, 503, 505, 506], "mani": [1, 2, 3, 4, 70, 135, 136, 138, 139, 140, 143, 145, 146, 150, 151, 159, 160, 170, 193, 198, 200, 270, 382, 384, 391, 399, 402, 415, 478, 479, 484, 485, 486, 488, 489, 490, 492, 494, 499, 500, 501, 503, 505, 506], "eg": [1, 2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 103, 108, 109, 110, 111, 124, 126, 130, 134, 137, 138, 139, 140, 143, 144, 145, 146, 148, 152, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 237, 268, 277, 288, 321, 344, 347, 348, 349, 350, 363, 416, 419, 442], "gymnasium": [1, 2, 3, 5, 15, 16, 18, 21, 29, 78, 134, 137, 140, 143, 144, 145, 149, 152, 153, 154, 164, 165, 168, 173, 174, 175, 184, 185, 186, 187, 190, 193, 194, 195, 217, 240, 264, 268, 283, 288, 485, 486, 488, 501, 505], "warn": [1, 3, 67, 73, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 284, 289, 307, 332, 450, 478, 485, 496, 497], "quickli": [1, 3, 485, 499, 500, 506], "becom": [1, 2, 3, 4, 27, 308, 313, 499, 500, 506], "quit": [1, 3, 11, 95, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 484, 485, 486, 488, 490, 499, 500, 506], "annoi": [1, 3], "filter": [1, 2, 3, 4, 84, 115, 122, 123, 382, 383, 385, 386, 390, 391, 398, 402, 403, 405, 489], "out": [1, 2, 3, 4, 5, 9, 14, 17, 19, 20, 24, 26, 27, 31, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 97, 100, 101, 102, 106, 115, 122, 123, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 267, 270, 287, 289, 308, 309, 313, 319, 320, 323, 324, 325, 344, 346, 347, 348, 349, 350, 351, 355, 359, 363, 364, 365, 368, 369, 370, 371, 372, 400, 413, 414, 415, 416, 417, 418, 419, 478, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 499, 500, 501, 503, 505, 506], "still": [1, 2, 3, 9, 43, 66, 78, 85, 86, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 275, 332, 346, 351, 355, 399, 400, 415, 418, 478, 480, 484, 485, 487, 498, 501, 503, 506], "wish": [1, 3, 11, 15, 16, 21, 217, 491, 503], "displai": [1, 3, 7, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 460, 481, 484, 485, 496, 500, 501], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 12, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 219, 220, 221, 223, 224, 227, 228, 231, 233, 235, 238, 239, 240, 242, 245, 246, 247, 249, 250, 251, 253, 255, 256, 257, 258, 260, 262, 263, 264, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 287, 288, 289, 290, 291, 293, 294, 295, 297, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 332, 333, 334, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 355, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 449, 450, 453, 454, 455, 457, 458, 460, 474, 478, 479, 480, 481, 484, 485, 486, 488, 493, 494, 496, 497, 498, 499, 500, 501, 502, 505, 506], "central": [2, 14, 20, 24, 26, 321, 322, 323, 484, 485, 489, 499, 500, 503], "part": [2, 3, 4, 8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 85, 95, 98, 102, 115, 134, 135, 137, 140, 144, 150, 152, 162, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 226, 251, 260, 263, 287, 346, 351, 355, 376, 415, 417, 418, 451, 474, 478, 480, 484, 486, 487, 488, 494, 499, 501, 506], "wide": [2, 3, 5, 505], "give": [2, 3, 7, 79, 101, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 384, 399, 402, 477, 480, 484, 485, 488, 499, 500, 501, 502, 505], "abil": [2, 400, 501, 503], "panel": [2, 486], "usag": [2, 3, 5, 7, 15, 16, 18, 21, 22, 23, 25, 27, 43, 66, 78, 97, 104, 106, 128, 186, 202, 204, 224, 227, 239, 292, 310, 315, 346, 351, 355, 385, 390, 398, 405, 409, 415, 418, 479, 484, 486, 487, 490, 491, 493, 499, 500, 503], "includ": [2, 3, 4, 7, 9, 27, 36, 43, 48, 56, 58, 66, 67, 73, 78, 83, 85, 95, 96, 97, 98, 102, 103, 105, 106, 108, 109, 110, 111, 113, 124, 126, 130, 134, 137, 140, 144, 152, 158, 162, 163, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 242, 245, 269, 275, 277, 284, 285, 287, 310, 315, 346, 351, 355, 382, 385, 391, 400, 405, 415, 417, 418, 463, 478, 479, 481, 484, 485, 486, 487, 488, 496, 497, 499, 500, 501, 503, 506], "almost": [2, 285, 319, 320, 487], "physic": [2, 6, 7, 106, 164, 165, 170, 481, 484, 499, 500, 501], "theori": 2, "crude": 2, "made": [2, 3, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 95, 102, 103, 108, 109, 110, 111, 124, 126, 130, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 270, 276, 287, 323, 332, 346, 351, 355, 387, 400, 415, 417, 418, 420, 484, 485, 487, 499, 500, 502, 503, 505], "liststorag": [2, 51, 63, 68, 70, 78, 79, 80, 109, 117, 503], "veri": [2, 3, 150, 151, 190, 485, 489, 492, 496, 499, 501, 503, 505, 506], "ineffici": [2, 4], "tensor": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 120, 122, 123, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 237, 238, 239, 240, 242, 245, 246, 248, 251, 253, 255, 256, 257, 258, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 378, 380, 382, 383, 385, 386, 387, 389, 390, 391, 394, 395, 398, 400, 402, 403, 404, 405, 407, 408, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 499, 500, 501, 505, 506], "contigu": [2, 3, 8, 37, 40, 48, 86, 109, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 212, 245, 248, 270, 278, 501, 503, 505], "tensorstorag": [2, 70, 78, 95, 96, 97, 98, 108, 114, 115, 128, 131, 492, 503], "lazymemmapstorag": [2, 45, 63, 68, 69, 70, 76, 79, 80, 95, 96, 97, 98, 115, 117, 122, 123, 226, 227, 484, 485, 487, 492, 499, 502, 503], "class": [2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 140, 141, 142, 143, 144, 145, 146, 151, 152, 155, 158, 161, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 472, 473, 474, 476, 479, 480, 481, 484, 485, 486, 487, 489, 490, 491, 492, 493, 496, 499, 500, 503, 506], "citizen": 2, "pytre": [2, 63, 68, 70, 79, 80, 111, 117, 131], "tupl": [2, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 106, 111, 115, 117, 122, 126, 128, 134, 137, 138, 139, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 245, 247, 251, 287, 293, 297, 303, 304, 310, 314, 315, 316, 323, 330, 333, 334, 344, 346, 347, 348, 349, 350, 351, 355, 364, 365, 369, 370, 375, 382, 383, 384, 385, 386, 390, 391, 393, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 422, 423, 424, 425, 454, 455, 458, 467, 496, 503, 505], "dictionari": [2, 14, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 36, 40, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 100, 101, 102, 115, 120, 122, 123, 134, 137, 140, 143, 144, 145, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 270, 275, 277, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 368, 372, 385, 391, 405, 407, 415, 416, 417, 418, 419, 455, 472, 473, 474, 481, 485, 486, 489, 491, 499, 501, 506], "nest": [2, 3, 32, 36, 40, 41, 43, 45, 47, 48, 49, 56, 57, 62, 64, 66, 67, 70, 71, 73, 75, 76, 77, 78, 85, 91, 100, 101, 102, 108, 109, 110, 113, 117, 130, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 219, 227, 268, 271, 275, 276, 287, 344, 346, 347, 348, 349, 350, 351, 355, 367, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 440, 450, 481, 485, 486, 488, 500, 501, 503, 505], "construct": [2, 3, 5, 32, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 95, 102, 117, 134, 137, 140, 141, 143, 144, 152, 164, 165, 166, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 235, 238, 285, 287, 310, 315, 336, 346, 351, 355, 372, 415, 417, 418, 460, 478, 479, 485, 486, 487, 490, 499, 501, 503, 506], "ram": [2, 143, 145, 493, 503], "prealloc": [2, 3, 164, 173, 501], "ve": [2, 72, 484, 487, 494, 496], "extend": [2, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 45, 51, 63, 66, 68, 69, 70, 76, 79, 80, 85, 95, 96, 97, 98, 102, 103, 107, 108, 111, 114, 115, 117, 118, 122, 123, 126, 128, 129, 132, 133, 185, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 226, 260, 276, 287, 290, 400, 415, 417, 418, 457, 476, 478, 480, 481, 484, 485, 486, 487, 488, 492, 494, 499, 500, 502, 503, 505], "here": [2, 3, 4, 7, 8, 9, 10, 15, 16, 27, 128, 134, 137, 138, 139, 140, 144, 148, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 205, 227, 275, 323, 449, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 494, 499, 500, 501, 503, 505, 506], "add": [2, 3, 4, 6, 27, 36, 40, 41, 43, 48, 49, 51, 56, 63, 66, 67, 68, 69, 70, 73, 75, 78, 79, 80, 95, 96, 97, 98, 101, 102, 103, 107, 109, 114, 117, 118, 128, 129, 132, 133, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 245, 247, 274, 277, 287, 310, 315, 324, 346, 351, 355, 366, 382, 415, 417, 418, 456, 478, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 500, 501, 503, 505], "string": [2, 22, 23, 25, 36, 43, 48, 51, 56, 58, 65, 66, 67, 73, 78, 84, 85, 99, 102, 109, 134, 137, 140, 144, 152, 156, 162, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 245, 255, 268, 274, 282, 287, 310, 315, 346, 351, 355, 364, 367, 368, 369, 381, 415, 417, 418, 441, 459, 478, 480, 484, 486, 487, 496, 503], "element": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 32, 34, 51, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 78, 79, 80, 83, 85, 95, 96, 97, 98, 100, 101, 103, 108, 109, 110, 111, 114, 115, 117, 122, 123, 128, 130, 134, 137, 140, 144, 152, 161, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 192, 193, 194, 195, 200, 220, 227, 232, 233, 256, 265, 269, 270, 285, 289, 294, 295, 308, 309, 313, 344, 347, 348, 349, 350, 358, 359, 364, 367, 371, 372, 376, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 416, 418, 419, 422, 451, 478, 480, 484, 486, 490, 492, 496, 503, 506], "30": [2, 3, 70, 78, 98, 102, 122, 123, 199, 223, 250, 335, 336, 440, 444, 447, 449, 492, 497, 500, 501, 503], "none": [2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 120, 122, 123, 124, 126, 128, 130, 134, 137, 140, 141, 143, 144, 152, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 242, 244, 245, 247, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 469, 470, 472, 473, 474, 478, 479, 481, 484, 485, 487, 488, 497, 501, 503, 505], "int": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 122, 123, 124, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 173, 174, 175, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 220, 222, 223, 224, 226, 227, 228, 229, 231, 234, 237, 242, 243, 245, 249, 250, 251, 253, 255, 256, 259, 266, 267, 268, 271, 274, 275, 277, 279, 282, 287, 289, 290, 291, 294, 295, 296, 297, 299, 301, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 363, 364, 365, 367, 368, 370, 372, 382, 383, 384, 391, 393, 394, 399, 400, 401, 402, 403, 407, 408, 415, 416, 417, 418, 419, 422, 424, 425, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 447, 449, 451, 452, 453, 455, 457, 460, 462, 472, 473, 474, 488, 501, 503], "entri": [2, 3, 15, 16, 21, 32, 36, 40, 41, 43, 45, 48, 49, 51, 56, 62, 64, 65, 66, 67, 71, 73, 75, 76, 78, 84, 85, 92, 97, 98, 100, 101, 102, 122, 123, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 156, 157, 164, 165, 168, 170, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 223, 227, 229, 230, 233, 234, 235, 236, 238, 239, 242, 246, 248, 249, 251, 253, 255, 258, 260, 263, 265, 267, 268, 269, 270, 272, 275, 277, 279, 282, 284, 287, 310, 312, 319, 320, 344, 346, 347, 348, 349, 350, 351, 355, 363, 364, 367, 369, 370, 383, 385, 405, 415, 416, 417, 418, 419, 422, 423, 424, 425, 479, 484, 486, 487, 489, 490, 491, 493, 499, 500, 501, 502, 503, 505, 506], "onto": [2, 8, 60, 62, 64, 71, 85, 100, 101, 191, 212, 236, 289, 332, 344, 347, 348, 349, 350, 359, 364, 365, 368, 369, 370, 371, 372, 416, 419, 422, 487, 501], "__setitem__": 2, "indic": [2, 3, 8, 15, 16, 17, 18, 21, 22, 23, 25, 27, 32, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 107, 114, 115, 117, 118, 120, 121, 122, 123, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 159, 160, 164, 165, 168, 170, 173, 174, 175, 178, 179, 185, 186, 187, 190, 191, 193, 194, 195, 219, 220, 227, 228, 232, 268, 269, 270, 271, 277, 285, 287, 288, 294, 295, 312, 316, 319, 320, 322, 332, 344, 347, 348, 349, 350, 367, 369, 370, 378, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 418, 419, 420, 464, 474, 477, 478, 481, 486, 487, 488, 492, 493, 494, 501, 503, 506], "without": [2, 3, 7, 9, 14, 15, 16, 17, 18, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 95, 97, 100, 101, 102, 117, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 235, 238, 273, 276, 287, 308, 309, 313, 314, 344, 346, 347, 348, 349, 350, 351, 353, 355, 361, 362, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 470, 477, 479, 484, 485, 486, 488, 489, 490, 491, 492, 496, 497, 499, 500, 501, 503, 506], "updat": [2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 40, 42, 43, 48, 51, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 114, 115, 117, 134, 137, 140, 144, 152, 158, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 221, 223, 224, 235, 237, 238, 245, 257, 268, 269, 275, 277, 281, 284, 285, 287, 289, 291, 292, 307, 308, 318, 323, 332, 344, 346, 347, 348, 349, 350, 351, 354, 355, 368, 369, 370, 371, 372, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 455, 460, 462, 465, 466, 469, 470, 476, 478, 481, 485, 486, 487, 488, 491, 494, 499, 500, 501, 503, 506], "length": [2, 25, 34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 72, 74, 75, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 99, 101, 115, 122, 123, 126, 134, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 207, 220, 227, 248, 256, 284, 291, 294, 295, 297, 299, 301, 308, 312, 313, 316, 318, 321, 322, 346, 351, 355, 359, 371, 376, 417, 418, 451, 457, 478, 484, 486, 487, 492, 494, 496, 501, 503, 506], "cursor": [2, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "afterward": [2, 36, 43, 48, 66, 67, 73, 78, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 363, 365, 367, 370, 375, 378, 499, 506], "tell": [2, 3, 4, 7, 134, 166, 167, 275, 484, 487, 492, 499, 500], "our": [2, 3, 7, 8, 11, 22, 51, 70, 227, 232, 442, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 502, 503, 505], "far": [2, 63, 68, 69, 70, 72, 79, 80, 95, 96, 97, 98, 117, 190, 311, 340, 341, 478, 494, 501, 506], "empti": [2, 3, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 111, 117, 134, 137, 140, 144, 151, 152, 161, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 235, 238, 255, 257, 271, 277, 280, 282, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 371, 405, 415, 416, 417, 418, 419, 446, 484, 501], "64": [2, 3, 62, 64, 71, 85, 95, 100, 101, 117, 191, 227, 259, 297, 298, 306, 310, 315, 322, 323, 333, 344, 347, 348, 349, 350, 416, 419, 420, 484, 485, 486, 487, 488, 490, 494, 498, 501, 503, 505, 506], "dtype": [2, 3, 15, 16, 18, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 108, 109, 110, 114, 115, 122, 123, 130, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 215, 218, 219, 220, 221, 224, 225, 231, 232, 235, 236, 237, 238, 239, 240, 245, 247, 248, 251, 253, 255, 257, 258, 260, 264, 267, 268, 270, 272, 273, 276, 277, 278, 280, 282, 287, 291, 293, 303, 304, 308, 309, 310, 312, 313, 314, 315, 318, 324, 325, 332, 333, 334, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 376, 379, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 478, 479, 488, 496, 497, 498, 501, 503, 505, 506], "unit8": 2, "img": 2, "randint": [2, 84, 117, 200, 273, 312, 503], "255": [2, 117, 273, 503], "uint8": [2, 3, 40, 62, 64, 71, 85, 95, 100, 101, 138, 139, 156, 157, 191, 239, 245, 253, 273, 344, 347, 348, 349, 350, 416, 419, 485, 503], "next": [2, 3, 4, 8, 15, 16, 18, 30, 32, 40, 41, 43, 45, 47, 49, 51, 56, 63, 68, 69, 70, 72, 75, 76, 78, 79, 80, 85, 95, 96, 97, 98, 99, 102, 105, 106, 113, 115, 117, 122, 123, 128, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 152, 156, 157, 158, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 190, 193, 194, 195, 198, 200, 201, 203, 205, 206, 212, 218, 220, 223, 224, 226, 227, 232, 233, 235, 238, 239, 240, 245, 246, 247, 248, 249, 253, 257, 258, 260, 263, 264, 268, 270, 272, 275, 278, 283, 284, 285, 287, 291, 309, 310, 314, 315, 318, 336, 367, 377, 379, 382, 383, 385, 386, 387, 389, 390, 391, 392, 398, 402, 403, 404, 405, 407, 408, 417, 418, 420, 421, 422, 423, 424, 425, 426, 442, 454, 455, 458, 478, 485, 487, 488, 490, 494, 496, 501, 502, 505, 506], "ask": [2, 3, 8, 95, 115, 122, 123, 442, 486, 487, 489, 490, 499, 500, 502, 506], "automat": [2, 3, 5, 12, 20, 37, 51, 83, 86, 101, 108, 110, 117, 123, 130, 134, 135, 136, 137, 140, 143, 144, 145, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 189, 190, 193, 194, 195, 204, 223, 235, 238, 251, 270, 283, 285, 294, 310, 315, 346, 351, 353, 355, 359, 367, 368, 372, 440, 450, 478, 479, 484, 486, 489, 490, 499, 500, 501, 503, 505], "look": [2, 3, 5, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 115, 134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 245, 255, 256, 280, 287, 292, 346, 351, 355, 368, 372, 373, 374, 415, 417, 418, 480, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 501, 502, 503, 505, 506], "lead": [2, 3, 4, 8, 10, 29, 32, 40, 41, 49, 56, 63, 70, 75, 85, 97, 114, 121, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 270, 288, 311, 333, 340, 341, 358, 484, 487, 488, 499, 500, 501, 503, 505], "match": [2, 3, 6, 8, 15, 16, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 105, 117, 126, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 242, 244, 246, 247, 248, 249, 251, 253, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 294, 295, 302, 310, 315, 316, 321, 322, 339, 346, 351, 355, 359, 363, 364, 368, 369, 371, 372, 375, 376, 383, 384, 385, 391, 399, 401, 402, 403, 405, 415, 417, 418, 457, 462, 478, 479, 480, 484, 486, 488, 498, 500, 501, 503, 506], "don": [2, 3, 4, 6, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 185, 227, 276, 319, 485, 486, 488, 492, 503, 505, 506], "throw": [2, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 344, 346, 347, 348, 349, 350, 351, 355, 415, 416, 417, 418, 419, 506], "rb_td": 2, "batch_siz": [2, 3, 8, 15, 16, 18, 29, 32, 40, 43, 45, 51, 58, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 110, 114, 115, 116, 117, 122, 123, 128, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 219, 220, 224, 226, 227, 231, 235, 238, 239, 240, 245, 253, 257, 258, 260, 264, 267, 268, 270, 276, 277, 278, 287, 291, 293, 301, 302, 303, 304, 307, 310, 315, 318, 332, 333, 334, 342, 343, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 442, 451, 457, 478, 479, 480, 484, 485, 486, 487, 492, 496, 497, 499, 500, 501, 503, 505, 506], "max": [2, 32, 60, 64, 79, 84, 99, 114, 115, 128, 151, 192, 237, 271, 332, 383, 384, 385, 391, 401, 403, 405, 415, 478, 484, 486, 487, 488, 494], "label": [2, 64, 65, 72, 84, 85, 484, 499, 503], "100": [2, 15, 16, 18, 21, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 81, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 108, 110, 117, 122, 123, 128, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 230, 232, 239, 251, 260, 265, 268, 287, 312, 319, 320, 321, 346, 351, 355, 365, 367, 415, 417, 418, 442, 452, 470, 485, 486, 488, 489, 491, 494, 498, 499, 500, 501, 503, 505, 506], "rb_pytre": 2, "randn": [2, 3, 63, 66, 68, 69, 70, 79, 80, 95, 96, 97, 98, 103, 108, 109, 110, 115, 117, 122, 123, 130, 134, 201, 212, 226, 251, 293, 296, 297, 301, 303, 304, 308, 309, 312, 313, 314, 319, 320, 321, 328, 330, 334, 359, 360, 361, 362, 363, 364, 368, 369, 371, 374, 375, 376, 382, 383, 385, 386, 387, 389, 390, 391, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 422, 423, 424, 425, 459, 479, 488, 503, 505, 506], "c": [2, 3, 6, 7, 15, 16, 18, 21, 29, 40, 43, 62, 64, 66, 70, 71, 78, 79, 80, 85, 100, 101, 109, 191, 251, 273, 278, 312, 313, 314, 344, 346, 347, 348, 349, 350, 351, 355, 415, 416, 418, 419, 485, 503], "zero": [2, 3, 4, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 108, 110, 114, 115, 117, 122, 123, 128, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 224, 226, 228, 232, 235, 237, 238, 251, 257, 260, 267, 285, 287, 290, 291, 298, 299, 300, 306, 307, 308, 309, 310, 313, 314, 315, 319, 320, 322, 323, 332, 333, 342, 344, 346, 347, 348, 349, 350, 351, 355, 370, 372, 378, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 487, 488, 497, 503, 505, 506], "assert": [2, 3, 6, 18, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 117, 128, 134, 137, 140, 144, 147, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 191, 193, 194, 195, 198, 212, 217, 220, 224, 227, 230, 235, 238, 247, 258, 265, 277, 284, 293, 322, 343, 344, 347, 348, 349, 350, 416, 418, 419, 422, 423, 424, 425, 450, 451, 459, 478, 492, 498, 503, 506], "len": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 108, 110, 117, 130, 200, 253, 294, 295, 316, 322, 418, 484, 488, 492, 494, 499, 501, 502, 503, 505], "ambigu": [2, 63, 68, 70, 117], "signatur": [2, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 51, 56, 63, 66, 67, 68, 70, 73, 78, 85, 102, 117, 126, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 224, 231, 245, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418, 480, 484, 488, 489, 501], "deal": [2, 3, 63, 68, 70, 117, 400, 415, 418, 480, 484, 486, 500, 503], "interpret": [2, 3, 63, 68, 70, 117, 478, 485], "put": [2, 63, 68, 70, 117, 144, 156, 157, 175, 178, 179, 284, 449, 474, 478, 479, 485, 486, 487, 489, 496, 499, 501], "solv": [2, 4, 7, 9, 10, 63, 68, 70, 117, 198, 477, 484, 485, 486, 492, 494, 499, 500, 501, 503], "clear": [2, 3, 11, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 117, 134, 135, 136, 137, 140, 144, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 312, 346, 351, 355, 415, 417, 418, 452, 489, 492, 497], "cut": [2, 63, 68, 70, 117], "distinct": [2, 3, 63, 68, 70, 117, 224, 227, 478, 491, 498], "view": [2, 3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 287, 304, 308, 313, 316, 346, 351, 355, 415, 417, 418, 478, 489, 501, 503, 505, 506], "through": [2, 3, 4, 5, 8, 15, 16, 18, 20, 21, 22, 25, 27, 29, 30, 40, 41, 49, 63, 67, 68, 69, 70, 73, 75, 79, 80, 85, 95, 96, 97, 98, 117, 134, 135, 136, 137, 140, 143, 144, 145, 148, 150, 151, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 199, 223, 233, 235, 238, 256, 288, 293, 316, 333, 367, 368, 372, 373, 374, 378, 381, 400, 422, 423, 424, 425, 450, 479, 480, 484, 485, 486, 489, 491, 498, 499, 500, 501, 502, 503, 506], "collate_fn": [2, 63, 68, 69, 70, 78, 79, 80, 95, 96, 97, 98, 117, 185, 186, 187, 190, 503, 505], "__init__": [2, 3, 7, 102, 140, 158, 176, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 291, 302, 304, 308, 313, 318, 352, 376, 383, 385, 386, 391, 398, 403, 405, 407, 408, 417, 481, 501, 506], "major": 2, "worri": [2, 81, 506], "though": [2, 4, 11, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 316, 486, 499, 500], "too": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 66, 72, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 250, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 311, 340, 341, 346, 351, 355, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 485, 490, 493, 501, 503, 506], "latter": [2, 22, 23, 25, 36, 43, 48, 56, 66, 67, 73, 78, 97, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 375, 378, 402, 415, 417, 418, 472, 473], "inv": [2, 3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 230, 237, 240, 245, 253, 260, 265, 267, 272, 276, 279, 287, 417, 501], "obvious": [2, 488], "ignor": [2, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 73, 74, 75, 78, 81, 83, 86, 87, 88, 89, 90, 102, 106, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 237, 240, 264, 273, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 319, 320, 323, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 375, 378, 415, 417, 418, 422, 496, 497, 503], "thread": [2, 3, 15, 16, 18, 21, 29, 30, 62, 64, 71, 85, 100, 101, 134, 135, 136, 150, 151, 164, 173, 174, 191, 285, 344, 347, 348, 349, 350, 416, 419], "prefetch": [2, 63, 70, 79, 80, 95, 97, 98, 99, 484, 485, 487, 503], "advis": [2, 11, 493, 506], "techniqu": [2, 8, 164, 173, 485, 488, 492, 503], "real": [2, 5, 372, 480, 487, 488, 501, 502], "life": [2, 239, 502], "adopt": [2, 3, 5, 484, 506], "throughput": [2, 9, 151, 484], "constant": [2, 11, 42, 114, 115, 227, 251, 269, 481, 484, 486, 487, 506], "throughout": [2, 3, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 418, 420, 486, 499, 506], "further": [2, 3, 5, 33, 418, 484, 486, 488, 489], "refin": [2, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 478], "coupl": [2, 384, 402, 487, 490, 491, 501, 503], "first_elt": 2, "128": [2, 95, 97, 123, 135, 136, 150, 151, 298, 301, 485, 487, 488, 494, 499, 502, 503], "wa": [2, 3, 5, 7, 40, 41, 43, 49, 51, 63, 66, 68, 69, 70, 75, 78, 79, 80, 85, 95, 96, 97, 98, 104, 115, 117, 121, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 219, 227, 245, 277, 313, 346, 351, 355, 382, 384, 397, 399, 402, 404, 406, 415, 428, 480, 485, 486, 489, 490, 498, 499, 503, 505], "print": [2, 3, 6, 7, 15, 16, 18, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 114, 115, 117, 122, 123, 128, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 178, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 217, 218, 219, 220, 223, 224, 227, 228, 232, 233, 235, 236, 237, 238, 246, 251, 257, 258, 260, 263, 268, 270, 271, 272, 273, 284, 285, 287, 294, 295, 297, 298, 299, 300, 301, 304, 306, 307, 310, 315, 316, 319, 320, 321, 322, 328, 331, 332, 334, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 374, 376, 379, 400, 415, 416, 417, 418, 419, 440, 470, 478, 479, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "influenti": 2, "latenc": [2, 3], "especi": [2, 3, 7, 8, 228, 346, 351, 355], "larger": [2, 4, 78, 310, 315, 390, 398, 505], "volum": 2, "due": [2, 3, 5, 13, 22, 23, 25, 32, 384, 402, 491, 502, 503, 506], "memorymappedtensor": [2, 45, 62, 64, 76, 84, 95, 96, 97, 98, 108, 444, 492], "specifi": [2, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 117, 134, 137, 140, 144, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 234, 235, 236, 238, 263, 266, 269, 274, 278, 279, 287, 288, 291, 313, 346, 351, 353, 355, 371, 372, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 415, 417, 418, 449, 479, 484, 486, 487, 488, 492, 496, 499], "file": [2, 6, 7, 8, 62, 64, 71, 85, 95, 97, 98, 100, 101, 106, 178, 191, 344, 347, 348, 349, 350, 416, 419, 441, 442, 444, 460, 481, 483, 485, 499, 503, 504], "locat": [2, 7, 62, 64, 71, 84, 85, 95, 96, 97, 98, 100, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 215, 234, 239, 251, 262, 285, 311, 340, 341, 344, 347, 348, 349, 350, 416, 419, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 484, 485, 486, 493, 499, 500, 503], "improv": [2, 4, 11, 192, 243, 382, 480, 488, 499, 500, 503], "failur": [2, 4, 192, 384, 402, 415, 478], "recoveri": 2, "were": [2, 7, 15, 16, 18, 20, 21, 22, 23, 25, 27, 69, 79, 80, 95, 96, 97, 98, 164, 173, 245, 384, 402, 478, 486, 499, 503], "found": [2, 3, 6, 7, 10, 15, 16, 18, 21, 27, 32, 36, 40, 41, 43, 48, 49, 51, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 95, 97, 98, 100, 101, 102, 122, 123, 134, 137, 138, 139, 140, 143, 144, 145, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 221, 227, 248, 260, 263, 271, 284, 285, 287, 307, 321, 322, 344, 346, 347, 348, 349, 350, 351, 355, 368, 372, 399, 400, 402, 415, 416, 417, 418, 419, 478, 480, 484, 485, 487, 488, 489, 491, 493, 496, 501, 503, 505], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "applic": [2, 185, 405, 420, 478, 489, 490, 501], "bandwidth": 2, "primari": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 152, 194, 492], "concern": [2, 478, 491], "transfer": [2, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 372], "sensori": [2, 103], "observ": [2, 3, 8, 15, 16, 18, 21, 27, 29, 30, 33, 45, 51, 56, 68, 76, 78, 85, 95, 96, 97, 98, 102, 103, 105, 106, 113, 115, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 213, 218, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 244, 245, 246, 247, 249, 251, 252, 253, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 287, 293, 296, 297, 298, 299, 300, 301, 304, 307, 310, 315, 321, 326, 327, 330, 331, 332, 334, 335, 359, 360, 361, 362, 363, 364, 367, 368, 369, 376, 377, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 398, 399, 402, 403, 404, 405, 407, 408, 417, 420, 422, 423, 424, 425, 426, 440, 442, 470, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 491, 493, 494, 498, 499, 500, 501, 503, 505, 506], "imag": [2, 3, 4, 7, 11, 100, 103, 227, 229, 232, 234, 255, 273, 282, 316, 440, 442, 484, 485, 488, 489, 493, 500, 502, 506], "audio": [2, 100], "text": [2, 29, 65, 72, 81, 98, 100, 101, 102, 152, 185, 186, 187, 189, 190, 192, 193, 194, 202, 203, 205, 206, 207, 308, 309, 313, 314, 332, 346, 351, 355, 417, 418, 478, 486, 496], "compressedliststorag": [2, 104], "save": [2, 3, 8, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 117, 124, 125, 126, 130, 131, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 283, 287, 344, 346, 347, 348, 349, 350, 351, 355, 415, 416, 417, 418, 419, 441, 442, 444, 449, 460, 481, 488, 492, 493, 494, 499, 500], "decompress": [2, 103], "ratio": [2, 15, 16, 21, 72, 384, 402, 484, 486], "10x": 2, "maintain": [2, 3, 5, 9, 42, 58, 202, 227, 285, 391, 405, 478, 501], "full": [2, 3, 101, 102, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 201, 202, 206, 207, 292, 310, 315, 344, 347, 349, 350, 351, 355, 365, 372, 451, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "fidel": 2, "It": [2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 109, 117, 120, 128, 133, 134, 137, 140, 144, 146, 152, 158, 159, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 221, 224, 226, 227, 239, 245, 247, 251, 256, 269, 275, 277, 283, 285, 287, 289, 297, 299, 305, 307, 321, 322, 331, 332, 333, 335, 336, 342, 343, 346, 351, 355, 365, 367, 370, 372, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 406, 408, 415, 417, 418, 420, 421, 422, 440, 449, 455, 477, 478, 479, 480, 484, 485, 487, 488, 489, 499, 500, 501, 502, 503, 505, 506], "zstd": [2, 103], "lossless": 2, "seamlessli": [2, 3, 185, 204, 478, 497, 501], "max_siz": [2, 51, 63, 70, 78, 79, 80, 95, 96, 97, 98, 103, 108, 109, 110, 111, 122, 123, 124, 128, 130, 486, 492], "1000": [2, 4, 18, 29, 51, 70, 78, 103, 108, 109, 114, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 284, 289, 307, 312, 331, 332, 368, 372, 397, 484, 485, 486, 487, 488, 490, 492, 494, 497, 501, 502, 503], "compression_level": [2, 103], "32": [2, 28, 40, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 123, 144, 151, 171, 172, 178, 179, 195, 227, 245, 294, 295, 296, 297, 298, 300, 301, 306, 316, 321, 322, 326, 327, 330, 333, 342, 420, 440, 485, 487, 488, 490, 491, 501, 502, 503, 505, 506], "84": [2, 95, 103, 122, 259, 487, 488], "atari": [2, 3, 4, 95, 97, 98, 103, 227, 295, 442, 488, 493, 506], "ob": [2, 3, 4, 8, 32, 40, 41, 49, 51, 63, 68, 69, 70, 75, 78, 79, 80, 85, 95, 96, 97, 98, 103, 114, 117, 122, 123, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 212, 218, 221, 223, 232, 235, 236, 238, 251, 265, 267, 273, 297, 298, 299, 300, 321, 322, 323, 369, 376, 383, 385, 386, 391, 398, 403, 405, 407, 408, 422, 423, 424, 425, 478, 485, 488, 498, 499, 501, 503, 505, 506], "16": [2, 3, 15, 16, 21, 29, 36, 43, 48, 56, 66, 67, 73, 78, 102, 115, 123, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 287, 346, 351, 355, 415, 417, 418, 487, 503], "adjust": [2, 11, 270, 484, 499, 500, 501], "fast": [2, 7, 9, 109, 135, 136, 218, 258, 403, 484, 485, 486, 505], "less": [2, 24, 114, 115, 159, 343, 472, 473, 480, 486, 487, 503, 505], "22": [2, 29, 103, 122, 123, 283], "def": [2, 3, 28, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 117, 134, 137, 140, 141, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 217, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 283, 284, 285, 287, 288, 291, 304, 308, 309, 313, 314, 318, 323, 346, 351, 355, 367, 368, 376, 383, 385, 386, 391, 398, 400, 403, 405, 407, 408, 415, 417, 418, 440, 450, 478, 480, 481, 484, 485, 488, 496, 498, 499, 500, 501, 503, 505, 506], "my_compress": 2, "simpl": [2, 3, 9, 19, 20, 36, 43, 48, 56, 60, 66, 67, 73, 78, 83, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 297, 346, 351, 355, 367, 372, 387, 389, 400, 404, 415, 417, 418, 422, 478, 480, 484, 485, 486, 489, 490, 491, 497, 499, 500, 503, 506], "my_decompress": 2, "compressed_tensor": 2, "metadata": [2, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 95, 97, 104, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 385, 391, 405, 407, 486, 489, 491, 492, 499, 500, 506], "compression_fn": [2, 103], "decompression_fn": [2, 103], "zstandard": 2, "instal": [2, 3, 5, 10, 22, 23, 25, 67, 78, 97, 134, 137, 140, 144, 149, 152, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 185, 186, 187, 190, 192, 193, 194, 195, 444, 460, 477, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 499, 500, 506], "compressed_replay_buffer_exampl": 2, "long": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 74, 75, 83, 86, 87, 88, 89, 90, 108, 115, 162, 163, 237, 275, 290, 313, 314, 390, 487, 488, 492, 503], "sharabl": [2, 164, 173], "collabor": 2, "rather": [2, 4, 126, 162, 163, 193, 200, 258, 285, 479, 480, 484, 485, 486, 489, 491, 499, 500, 503], "incur": [2, 135, 136, 150, 151], "transmiss": 2, "overhead": [2, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 312, 372], "content": [2, 3, 8, 18, 40, 41, 49, 62, 63, 64, 70, 71, 75, 79, 80, 85, 100, 101, 121, 122, 123, 134, 137, 140, 143, 144, 145, 152, 159, 164, 165, 168, 173, 174, 175, 185, 186, 187, 189, 190, 191, 193, 194, 195, 199, 206, 207, 257, 294, 295, 316, 321, 322, 344, 347, 348, 349, 350, 351, 355, 368, 400, 415, 416, 418, 419, 478, 486, 496, 497, 501, 505], "map": [2, 3, 8, 14, 17, 19, 24, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 108, 113, 114, 115, 134, 137, 140, 144, 152, 155, 156, 157, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 220, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 251, 253, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 283, 284, 285, 287, 304, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 364, 368, 369, 371, 372, 374, 375, 376, 377, 384, 385, 399, 402, 405, 415, 416, 417, 418, 419, 420, 422, 455, 476, 479, 480, 484, 485, 486, 487, 490, 491, 502], "writer": [2, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 103, 107, 110, 115, 117, 118, 122, 128, 129, 130, 133, 486, 503], "tensordictroundrobinwrit": [2, 80, 117], "goe": [2, 4, 85, 166, 167, 484, 486, 499, 500, 506], "prioritizedsampl": [2, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 115, 117, 387, 392, 420, 484, 503], "access": [2, 3, 7, 8, 11, 29, 30, 36, 43, 48, 56, 63, 66, 67, 73, 78, 98, 102, 109, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 227, 255, 276, 280, 287, 346, 351, 355, 415, 417, 418, 474, 477, 484, 489, 499, 500, 501, 503, 505], "tensordictreplaybuff": [2, 63, 68, 69, 70, 79, 95, 96, 97, 98, 114, 115, 117, 122, 123, 128, 226, 227, 457, 470, 476, 484, 485, 487, 503], "mp": [2, 22, 23, 25, 95, 96, 97, 98, 141, 284, 285], "td": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 40, 43, 45, 51, 62, 63, 64, 66, 68, 69, 70, 71, 76, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 108, 114, 115, 117, 128, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 150, 151, 152, 153, 154, 162, 163, 164, 165, 168, 169, 173, 174, 175, 176, 177, 185, 186, 187, 190, 191, 193, 194, 195, 198, 200, 218, 221, 224, 226, 228, 232, 233, 235, 236, 237, 238, 246, 247, 248, 249, 251, 260, 263, 267, 270, 273, 277, 284, 291, 293, 303, 304, 307, 317, 318, 332, 333, 334, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 368, 369, 371, 374, 376, 391, 405, 415, 416, 418, 419, 420, 423, 424, 425, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 451, 459, 478, 479, 480, 484, 485, 487, 500, 501, 502, 505], "__name__": [2, 3, 15, 16, 18, 21, 28, 29, 68, 141, 285, 440, 485, 505], "__main__": [2, 3, 15, 16, 18, 21, 28, 29, 68, 141, 285, 440, 505], "21": [2, 51, 85, 122, 123, 164, 166, 167, 173, 232, 483, 504], "proc": 2, "target": [2, 4, 8, 27, 33, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 269, 287, 331, 346, 351, 355, 371, 372, 382, 383, 384, 385, 386, 387, 389, 391, 392, 395, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 463, 469, 470, 480, 481, 487, 488, 494, 499, 501], "arg": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 51, 53, 55, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 108, 109, 110, 111, 115, 117, 122, 123, 124, 126, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 245, 246, 247, 249, 254, 255, 256, 257, 258, 260, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 287, 289, 291, 293, 294, 295, 302, 303, 307, 310, 315, 316, 317, 318, 332, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 449, 453, 457, 460, 474, 485, 488, 496], "join": [2, 141, 200, 476, 485, 486, 488, 499], "now": [2, 3, 7, 63, 70, 79, 80, 117, 162, 163, 164, 202, 227, 264, 322, 478, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 498, 499, 500, 502, 503, 506], "20": [2, 51, 78, 84, 85, 122, 123, 128, 134, 137, 140, 144, 148, 152, 162, 163, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 269, 287, 306, 308, 309, 313, 314, 331, 363, 451, 487, 497, 503, 506], "_data": [2, 501], "difficult": [2, 4, 164, 493], "pai": [2, 8, 227, 484], "word": [2, 3, 11, 72, 95, 97, 98, 400, 415, 418, 484, 492, 501, 506], "1m": [2, 95, 463, 484, 486, 487], "doe": [2, 3, 19, 22, 36, 43, 48, 56, 62, 63, 64, 66, 67, 71, 73, 78, 79, 84, 85, 95, 97, 100, 101, 102, 105, 106, 113, 115, 122, 124, 126, 133, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 285, 287, 292, 301, 302, 308, 309, 310, 313, 314, 315, 324, 331, 343, 344, 346, 347, 348, 349, 350, 351, 355, 363, 373, 374, 382, 384, 392, 399, 400, 402, 415, 416, 417, 418, 419, 421, 460, 478, 480, 481, 484, 485, 486, 487, 489, 492, 499, 501, 503, 506], "howev": [2, 3, 5, 7, 36, 43, 48, 56, 66, 67, 73, 78, 102, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 245, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 283, 284, 287, 346, 351, 355, 382, 384, 385, 399, 402, 404, 405, 415, 417, 418, 478, 479, 484, 485, 487, 488, 491, 501, 503, 506], "capac": [2, 63, 70, 79, 80, 108, 110, 114, 115, 122, 130, 486, 492], "There": [2, 3, 10, 117, 187, 276, 292, 310, 315, 382, 402, 479, 480, 481, 486, 487, 488, 490, 492, 499, 500, 501, 503, 505, 506], "circumv": 2, "account": [2, 108, 110, 130, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 223, 233, 319, 320, 479, 485, 487, 503, 506], "convent": [2, 3, 95, 97, 98, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 346, 480, 484, 487, 499, 500, 501], "overridden": [2, 3, 14, 17, 19, 20, 24, 26, 36, 43, 48, 66, 67, 73, 78, 95, 98, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 363, 365, 367, 370, 375, 378, 422, 424, 425, 487, 499], "dim_extend": [2, 63, 70, 79, 80], "obtain": [2, 3, 7, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 72, 74, 75, 83, 86, 87, 88, 89, 90, 95, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 207, 226, 255, 269, 282, 291, 293, 331, 333, 457, 484, 486, 489, 490, 491, 499, 500], "counterpart": [2, 3, 227], "desir": [2, 3, 11, 15, 16, 18, 21, 29, 36, 39, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 222, 224, 231, 233, 251, 253, 255, 256, 270, 276, 277, 280, 282, 287, 294, 295, 302, 316, 322, 346, 351, 355, 359, 364, 365, 368, 369, 370, 371, 372, 415, 417, 418, 479, 484, 488, 496, 499, 500, 501, 503], "diversifi": 2, "offer": [2, 3, 7, 134, 135, 136, 137, 140, 144, 150, 151, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 275, 440, 478, 479, 484, 485, 488, 489, 491, 492, 499, 501, 503, 506], "accomplish": [2, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 489, 496], "__especially__": 2, "offlin": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 95, 96, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 383, 389, 390, 398, 407, 417, 449, 481, 489, 502, 503], "docstr": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 489, 490], "detail": [2, 3, 5, 6, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 117, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 273, 277, 287, 292, 304, 308, 313, 323, 331, 346, 351, 355, 365, 382, 392, 400, 402, 415, 417, 418, 477, 478, 481, 485, 488, 492, 498, 503], "happi": [2, 488], "concaten": [2, 8, 15, 16, 27, 51, 52, 54, 85, 193, 227, 228, 251, 267, 313, 316, 374, 478, 484, 485, 490, 499, 500, 501, 503, 506], "schedul": [2, 4, 7, 72, 455, 486, 501], "transformedenv": [2, 3, 11, 12, 56, 102, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 224, 227, 230, 231, 233, 235, 238, 239, 240, 246, 247, 248, 250, 251, 253, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 271, 275, 276, 284, 287, 310, 315, 367, 417, 442, 450, 478, 484, 485, 486, 487, 488, 489, 493, 494, 498, 499, 500, 501, 502, 503, 505, 506], "stepcount": [2, 51, 56, 102, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 233, 275, 276, 277, 287, 293, 417, 478, 484, 485, 486, 487, 488, 489, 494, 499, 500, 505], "gymenv": [2, 3, 5, 11, 15, 16, 18, 21, 27, 28, 29, 30, 45, 51, 56, 68, 76, 78, 102, 128, 134, 137, 140, 141, 144, 146, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 223, 224, 227, 230, 231, 232, 233, 239, 245, 246, 247, 251, 253, 258, 259, 260, 263, 265, 269, 270, 271, 272, 275, 276, 277, 278, 284, 285, 287, 293, 310, 315, 367, 417, 440, 442, 470, 476, 479, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 502, 503, 505, 506], "randompolici": [2, 15, 16, 18, 21, 22, 23, 25, 27, 28, 29, 56, 227, 260, 476, 492, 503], "cartpol": [2, 3, 11, 45, 56, 76, 78, 134, 137, 138, 139, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 223, 224, 227, 232, 263, 269, 284, 287, 367, 440, 485, 487, 490, 492, 493, 494, 503, 506], "v1": [2, 3, 11, 15, 16, 18, 21, 27, 28, 29, 30, 45, 56, 68, 76, 78, 97, 98, 102, 128, 134, 137, 140, 141, 143, 144, 145, 150, 151, 152, 159, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 224, 227, 230, 232, 233, 240, 246, 247, 251, 258, 260, 263, 264, 265, 268, 269, 270, 271, 272, 275, 276, 278, 284, 285, 287, 293, 310, 315, 367, 411, 417, 431, 432, 433, 434, 436, 437, 438, 439, 440, 479, 485, 487, 489, 490, 491, 492, 493, 494, 501, 503, 505, 506], "action_spec": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 56, 102, 134, 135, 136, 137, 140, 144, 150, 151, 152, 158, 164, 165, 166, 167, 168, 169, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 224, 227, 231, 235, 236, 238, 247, 251, 257, 260, 276, 277, 278, 279, 287, 291, 304, 318, 334, 336, 359, 364, 368, 369, 383, 385, 387, 389, 403, 405, 407, 408, 417, 470, 479, 484, 485, 486, 487, 488, 490, 491, 492, 494, 498, 499, 500, 501, 502, 503, 505, 506], "8": [2, 3, 6, 7, 40, 41, 49, 56, 70, 75, 78, 95, 96, 97, 98, 114, 115, 122, 123, 134, 135, 136, 137, 138, 139, 140, 144, 152, 162, 163, 164, 165, 168, 173, 174, 175, 176, 185, 186, 187, 190, 193, 194, 195, 220, 223, 232, 233, 269, 272, 278, 285, 294, 295, 297, 298, 306, 316, 360, 361, 362, 368, 371, 374, 398, 484, 485, 501, 503, 505], "traj_kei": [2, 115, 122, 123, 503], "truncated_kei": [2, 115, 122, 123, 260, 268], "strict_length": [2, 95, 115, 122, 123, 442], "enumer": [2, 15, 16, 18, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 76, 78, 80, 83, 86, 87, 88, 89, 90, 102, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 409, 415, 417, 418, 480, 484, 485, 486, 487, 494, 499, 503, 505], "break": [2, 5, 15, 16, 18, 21, 27, 29, 36, 43, 48, 56, 66, 67, 68, 70, 73, 78, 80, 95, 98, 99, 102, 115, 122, 123, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 227, 260, 284, 285, 287, 310, 315, 340, 346, 351, 355, 415, 417, 418, 442, 485, 488, 492, 494, 503, 505], "step_count": [2, 15, 16, 18, 56, 134, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 233, 268, 287, 486, 487, 488, 489, 494], "33": [2, 36, 40, 43, 48, 56, 66, 67, 73, 78, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 294, 295, 316, 346, 351, 355, 415, 417, 418], "34": [2, 294, 295, 316], "35": [2, 294, 295, 316, 497], "36": [2, 187], "37": [2, 226], "38": [2, 7, 51], "39": [2, 98, 150, 151], "40": [2, 78, 150, 151], "41": [2, 122], "11": [2, 10, 32, 51, 60, 78, 84, 85, 108, 109, 110, 114, 123, 130, 141, 220, 232, 273, 287, 291, 318], "12": [2, 7, 10, 51, 78, 108, 110, 123, 130, 150, 151, 164, 171, 172, 173, 187, 232, 285, 287, 442, 503], "13": [2, 5, 78, 122, 123, 170, 232, 283, 285, 287, 288], "14": [2, 6, 78, 95, 96, 97, 98, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 232, 251, 287, 288], "15": [2, 32, 95, 96, 97, 98, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 232, 287, 332, 363, 393, 503], "17": [2, 11, 122, 123, 144, 164, 195, 220, 232, 287], "could": [2, 3, 4, 6, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 372, 415, 417, 418, 478, 485, 486, 493, 499, 500, 502, 506], "sai": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 321, 346, 351, 355, 415, 417, 418, 499, 502, 506], "interleav": 2, "cannot": [2, 3, 4, 7, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 54, 60, 70, 79, 80, 103, 110, 111, 115, 118, 122, 123, 130, 134, 137, 140, 143, 144, 145, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 235, 238, 256, 263, 275, 321, 322, 369, 382, 385, 402, 485, 486, 487, 488, 499, 500, 501], "suggest": [2, 420, 484, 500], "serialenv": [2, 3, 134, 137, 140, 144, 152, 164, 165, 168, 174, 175, 185, 186, 187, 190, 193, 194, 195, 270, 285, 287, 293, 367, 476, 505, 506], "squeez": [2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 102, 223, 224, 227, 232, 266, 269, 294, 295, 337, 338, 484, 488, 501, 503], "6": [2, 3, 7, 15, 16, 18, 21, 29, 30, 32, 51, 56, 70, 73, 78, 85, 95, 114, 115, 123, 138, 139, 144, 164, 171, 172, 187, 195, 220, 223, 232, 233, 251, 253, 269, 275, 285, 293, 294, 295, 297, 298, 299, 302, 306, 309, 316, 321, 322, 323, 326, 339, 367, 368, 376, 478, 485, 488, 505], "5": [2, 3, 15, 16, 18, 21, 29, 32, 39, 40, 41, 49, 51, 52, 53, 54, 55, 56, 60, 63, 68, 70, 73, 75, 78, 79, 80, 95, 101, 102, 103, 117, 122, 123, 128, 134, 137, 140, 141, 144, 150, 151, 152, 156, 157, 159, 164, 165, 168, 171, 172, 173, 174, 175, 178, 179, 185, 187, 190, 192, 193, 194, 195, 198, 203, 205, 220, 223, 224, 226, 232, 233, 248, 260, 267, 268, 269, 275, 285, 287, 290, 291, 292, 293, 294, 295, 297, 298, 303, 304, 305, 306, 308, 311, 312, 313, 316, 318, 321, 322, 326, 331, 334, 340, 341, 352, 363, 364, 367, 369, 375, 399, 402, 404, 407, 408, 440, 478, 479, 483, 484, 485, 488, 490, 494, 499, 500, 501, 503, 504, 505, 506], "7": [2, 3, 6, 10, 43, 51, 56, 60, 63, 70, 78, 79, 114, 115, 123, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 192, 193, 194, 195, 220, 223, 232, 233, 269, 272, 285, 291, 293, 294, 295, 298, 316, 318, 321, 428, 484, 503, 505], "9": [2, 3, 7, 32, 36, 51, 56, 63, 70, 78, 79, 85, 115, 123, 128, 138, 139, 155, 166, 167, 175, 220, 223, 232, 233, 269, 272, 277, 284, 285, 287, 319, 320, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 409, 415, 418, 420, 450, 480, 484, 485, 499, 500], "18": [2, 51, 122, 123, 171, 172, 178, 179, 275, 287, 322], "19": [2, 122, 123, 128, 232, 287], "independ": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 164, 173, 242, 249, 270, 279, 292, 322, 358, 382, 402, 480, 481, 484, 485, 500, 503, 505], "congruent": 2, "name": [2, 3, 6, 7, 18, 31, 36, 40, 41, 43, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 84, 85, 95, 99, 100, 101, 102, 134, 135, 137, 138, 140, 144, 150, 152, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 170, 173, 174, 175, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 219, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 237, 239, 240, 241, 243, 245, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 283, 284, 287, 288, 310, 315, 344, 346, 347, 348, 349, 350, 351, 352, 355, 364, 369, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 440, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 478, 481, 484, 485, 486, 487, 488, 491, 492, 493, 496, 499, 500, 501, 502, 506], "randomcroptensordict": [2, 484], "unlik": [2, 34, 70, 79, 80, 121, 144, 156, 157, 178, 179, 195, 290, 292, 367, 392, 402, 442, 479, 485, 488, 490, 492, 505], "stop": [2, 3, 15, 16, 18, 21, 27, 29, 72, 115, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 486, 492, 499, 500, 505, 506], "signal": [2, 3, 15, 16, 18, 21, 32, 51, 95, 97, 98, 115, 122, 123, 128, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 192, 193, 194, 195, 219, 227, 233, 239, 248, 268, 271, 480, 484, 486, 499, 500, 503, 506], "disk": [2, 3, 51, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 95, 96, 97, 98, 100, 101, 104, 108, 117, 191, 344, 347, 348, 349, 350, 416, 419, 460, 481, 484, 485, 487, 488, 492, 493, 499, 503], "dump": [2, 3, 11, 45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 85, 95, 96, 97, 98, 100, 101, 103, 104, 106, 108, 109, 110, 111, 117, 124, 126, 130, 191, 344, 347, 348, 349, 350, 416, 419, 440, 441, 442, 493, 494, 499], "json": [2, 203, 496], "anticip": [2, 235, 238], "compli": [2, 292, 479], "back": [2, 14, 17, 20, 24, 26, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 97, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 209, 274, 283, 323, 359, 364, 365, 368, 369, 370, 371, 372, 478, 486, 488, 499, 500, 501, 503], "exact": [2, 3, 32, 164, 313], "statu": [2, 3, 24, 140, 202], "prioriti": [2, 4, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 103, 108, 109, 110, 111, 114, 115, 117, 124, 126, 130, 385, 386, 387, 389, 390, 391, 392, 398, 403, 405, 407, 408, 420, 481, 484, 485, 503], "heap": 2, "under": [2, 3, 4, 27, 36, 40, 41, 43, 48, 49, 51, 56, 66, 67, 72, 73, 75, 78, 95, 97, 98, 102, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 248, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 292, 346, 351, 355, 359, 364, 365, 368, 369, 370, 371, 372, 400, 415, 417, 418, 422, 423, 424, 425, 426, 442, 478, 480, 484, 485, 490, 499, 501, 506], "hood": [2, 3, 27, 95, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 292, 501], "naiv": [2, 280, 489], "just": [2, 3, 4, 85, 126, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 155, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 185, 186, 187, 190, 193, 194, 195, 219, 223, 230, 270, 288, 322, 451, 478, 481, 484, 485, 486, 487, 488, 489, 490, 492, 496, 499, 500, 501, 503, 505, 506], "public": [2, 69, 125, 255, 282], "serializ": [2, 30], "consum": [2, 121, 123, 367, 485, 486, 492, 500, 503], "much": [2, 3, 8, 15, 16, 21, 63, 79, 114, 115, 164, 173, 399, 402, 486, 488, 489, 493, 499, 500, 501, 503, 506], "duplic": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 121, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 383, 385, 387, 392, 398, 400, 403, 405, 407, 408, 415, 417, 418, 420], "plu": [2, 15, 16, 21, 72, 164, 173, 478, 501], "three": [2, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 66, 99, 185, 385, 478, 479, 481, 486, 488, 489, 490, 499, 500, 501, 503, 506], "flatstoragecheckpoint": 2, "discard": [2, 3, 84, 97, 98, 144, 218, 280, 441, 503, 506], "At": [2, 272, 307, 317, 485, 486, 487, 492, 498, 501, 502], "correct": [2, 4, 62, 64, 71, 85, 100, 101, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 197, 198, 201, 227, 247, 312, 344, 347, 348, 349, 350, 415, 416, 419, 463, 486, 487, 496], "addit": [2, 3, 4, 14, 17, 24, 26, 36, 43, 48, 56, 58, 66, 67, 73, 78, 85, 97, 101, 102, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 178, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 231, 255, 270, 274, 276, 277, 280, 282, 287, 289, 308, 346, 351, 352, 355, 363, 367, 371, 381, 384, 400, 402, 415, 417, 418, 422, 440, 442, 480, 484, 485, 488, 489, 499, 500, 503], "nestedstoragecheckpoint": 2, "represent": [2, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 102, 109, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 255, 280, 282, 287, 346, 351, 355, 382, 402, 415, 417, 418, 478, 484, 501, 502, 506], "appar": [2, 3, 453], "h5storagecheckpoint": 2, "h5db": 2, "space": [2, 9, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 101, 105, 106, 113, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 212, 215, 220, 230, 237, 245, 248, 270, 278, 289, 295, 301, 304, 321, 327, 332, 334, 359, 364, 365, 368, 369, 370, 371, 372, 374, 375, 376, 379, 382, 387, 389, 390, 391, 402, 407, 408, 420, 479, 480, 485, 486, 487, 488, 489, 490, 491, 499, 500, 501, 506], "assumpt": [2, 3, 83, 501, 503], "accur": [2, 7, 97, 478, 485, 501, 503], "truncat": [2, 3, 15, 16, 18, 21, 45, 47, 51, 56, 57, 65, 76, 78, 81, 84, 95, 96, 97, 98, 101, 105, 106, 113, 115, 122, 123, 134, 137, 138, 139, 140, 143, 144, 145, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 176, 178, 179, 185, 186, 187, 190, 193, 194, 195, 200, 219, 220, 239, 240, 245, 250, 257, 260, 264, 268, 270, 277, 278, 287, 310, 315, 341, 367, 422, 428, 484, 486, 489, 499, 506], "marl": [2, 155, 181, 227, 267, 271, 321, 322, 323, 391, 405, 480, 489, 499, 500], "extra": [2, 10, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 227, 284, 285, 287, 346, 351, 355, 415, 417, 418, 449, 478, 479, 486, 487, 503], "fail": [2, 7, 28, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 206, 221], "concret": [2, 484, 486, 496], "set_se": [2, 3, 15, 16, 18, 21, 27, 29, 30, 45, 51, 56, 76, 78, 134, 135, 136, 137, 140, 144, 150, 151, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 223, 232, 233, 251, 258, 263, 269, 271, 277, 287, 478, 488, 492, 494, 501, 505, 506], "manual_se": [2, 3, 34, 45, 52, 53, 63, 70, 76, 78, 79, 80, 109, 122, 123, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 221, 223, 232, 233, 237, 251, 260, 263, 269, 271, 285, 287, 307, 319, 320, 328, 331, 332, 359, 365, 372, 375, 382, 383, 385, 386, 390, 398, 405, 488, 492, 494, 499, 500, 501, 505, 506], "200": [2, 15, 16, 18, 27, 36, 43, 45, 48, 56, 66, 67, 68, 73, 76, 78, 95, 102, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 260, 287, 297, 298, 305, 335, 336, 346, 351, 355, 415, 417, 418, 440, 442, 484, 487, 488, 492, 494, 503], "rb_test": 2, "_storag": [2, 502, 503], "102": 2, "path_to_save_dir": 2, "assert_allclose_td": 2, "altern": [2, 4, 29, 39, 62, 64, 71, 85, 100, 101, 159, 185, 191, 232, 275, 301, 319, 320, 321, 344, 347, 348, 349, 350, 381, 385, 416, 419, 440, 478, 484, 486, 488, 499, 500], "state_dict": [2, 15, 16, 18, 21, 27, 29, 30, 31, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 103, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 284, 285, 287, 321, 322, 344, 346, 347, 348, 349, 350, 351, 355, 385, 405, 415, 416, 417, 418, 419, 474, 478, 481, 484, 485, 506], "load_state_dict": [2, 15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 103, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 284, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 385, 405, 415, 416, 417, 418, 419, 481, 484], "drawback": 2, "struggl": 2, "big": [2, 486, 492, 503, 506], "sequenti": [2, 9, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 226, 247, 287, 346, 351, 355, 358, 360, 361, 362, 368, 373, 374, 379, 382, 383, 385, 391, 398, 402, 403, 404, 405, 407, 415, 417, 418, 479, 486, 487, 490, 500, 501, 502, 505, 506], "known": [2, 3, 5, 7, 8, 78, 144, 195, 270, 429, 430, 484, 485, 489], "indiffer": 2, "heavili": [2, 11], "smooth": [2, 290, 484, 485, 491], "essenti": [2, 3, 13, 22, 23, 25, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 418, 420, 478, 485, 489, 499, 501, 503], "purpos": [2, 3, 7, 11, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 308, 382, 384, 396, 399, 402, 404, 415, 470, 484, 486, 487, 488, 491, 493, 499, 500, 502, 506], "guid": [2, 11, 166, 167, 171, 172, 269, 477, 484, 500, 505], "explan": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 292, 346, 351, 355, 415, 417, 418], "effect": [2, 3, 18, 29, 30, 36, 40, 43, 48, 56, 63, 66, 67, 68, 70, 73, 78, 79, 80, 95, 102, 114, 115, 117, 120, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 227, 233, 277, 287, 292, 346, 351, 355, 384, 402, 415, 417, 418, 460, 478, 479, 484, 490, 499, 503, 506], "realm": [2, 490], "As": [2, 3, 4, 56, 70, 79, 80, 83, 95, 117, 134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 260, 302, 372, 422, 479, 484, 485, 486, 487, 488, 489, 491, 492, 499, 500, 501, 502, 503, 505, 506], "practition": 2, "often": [2, 3, 8, 323, 384, 397, 400, 402, 415, 418, 460, 484, 485, 489, 491, 501, 503, 506], "encount": [2, 4, 249, 367, 477, 485, 490, 501], "situat": [2, 156, 157, 193, 200], "sometim": [2, 3, 83, 487, 506], "variabl": [2, 3, 4, 7, 8, 20, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 73, 74, 75, 83, 86, 87, 88, 89, 90, 95, 98, 101, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 156, 157, 160, 161, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 190, 193, 194, 195, 200, 207, 272, 276, 285, 308, 309, 310, 313, 314, 315, 318, 346, 351, 355, 360, 361, 362, 400, 403, 450, 478, 481, 485, 497], "immedi": [2, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 421, 499, 500], "199": 2, "info": [2, 3, 15, 16, 63, 68, 69, 70, 79, 80, 85, 95, 96, 97, 98, 114, 115, 117, 120, 122, 123, 134, 137, 138, 139, 140, 143, 144, 145, 146, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 190, 193, 194, 195, 245, 278, 280, 283, 286, 449, 478, 489, 494, 496, 499, 500, 503, 505], "glanc": [2, 489], "seem": [2, 484, 487, 489], "togeth": [2, 3, 11, 15, 16, 18, 21, 22, 23, 25, 27, 51, 66, 72, 74, 75, 109, 134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 256, 267, 276, 308, 310, 313, 315, 342, 360, 361, 362, 377, 478, 479, 485, 487, 489, 499], "omit": [2, 152, 194, 289, 307, 332, 456, 486, 491, 501, 503], "proper": [2, 3, 4, 6, 7, 202, 422, 423, 424, 425, 478, 485, 486, 496, 499, 500, 501, 503], "imposs": [2, 3, 70, 79, 80, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 382, 384, 399, 402, 404], "determin": [2, 3, 17, 51, 63, 79, 85, 97, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 189, 190, 193, 194, 195, 198, 255, 282, 321, 332, 346, 351, 355, 385, 415, 485, 490, 499, 500], "complic": [2, 43, 66, 78, 346, 351, 355, 415, 418, 501, 503, 506], "matter": [2, 42, 492], "inconsist": [2, 506], "miss": [2, 3, 4, 6, 7, 36, 40, 43, 48, 51, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 245, 275, 277, 283, 287, 288, 346, 351, 355, 373, 374, 382, 385, 405, 415, 417, 418, 477, 484, 487, 497], "elimin": [2, 3, 489], "upon": [2, 3, 8, 20, 499, 501], "canon": 2, "definit": [2, 60, 124, 321, 496], "markov": [2, 3, 489, 506], "mdp": [2, 218, 489, 501], "context": [2, 3, 5, 8, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 117, 123, 134, 137, 140, 141, 144, 152, 161, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 270, 279, 287, 292, 310, 315, 322, 324, 346, 351, 355, 358, 363, 413, 414, 415, 417, 418, 422, 423, 424, 425, 427, 435, 442, 450, 455, 478, 479, 480, 484, 485, 486, 487, 488, 499, 500, 501, 502, 503, 505], "condit": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 84, 86, 87, 88, 89, 90, 193, 198, 232, 233, 269, 284, 364, 365, 367, 369, 370, 381, 478, 480, 484, 499, 501, 503], "complet": [2, 7, 9, 24, 29, 30, 115, 121, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 192, 193, 194, 195, 199, 227, 268, 417, 477, 478, 480, 484, 486, 489, 496, 497, 498], "termin": [2, 3, 7, 15, 16, 18, 21, 29, 45, 47, 51, 56, 57, 68, 72, 76, 78, 95, 96, 97, 98, 105, 106, 113, 122, 134, 137, 138, 139, 140, 143, 144, 145, 150, 151, 152, 156, 157, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 190, 193, 194, 195, 200, 219, 220, 223, 224, 239, 245, 257, 270, 278, 287, 291, 310, 315, 318, 367, 373, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 478, 484, 485, 486, 496, 499, 500, 501, 505, 506], "reward": [2, 3, 15, 16, 18, 42, 43, 45, 47, 51, 56, 57, 62, 71, 72, 76, 78, 84, 85, 95, 96, 97, 98, 99, 102, 114, 115, 128, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 220, 221, 224, 225, 230, 231, 235, 236, 238, 239, 240, 245, 247, 248, 249, 253, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 274, 276, 277, 278, 279, 281, 282, 284, 285, 287, 291, 310, 318, 363, 367, 377, 382, 383, 385, 386, 387, 389, 390, 391, 394, 398, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 453, 454, 455, 458, 474, 480, 481, 484, 485, 486, 487, 488, 489, 493, 496, 497, 499, 500, 501, 505, 506], "imit": [2, 3, 396], "inform": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 114, 115, 134, 137, 140, 141, 144, 147, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 293, 294, 295, 316, 322, 344, 346, 347, 348, 349, 350, 351, 355, 415, 416, 417, 418, 419, 479, 480, 481, 484, 485, 486, 487, 488, 489, 496, 499, 500, 501, 503, 505], "stateless": [2, 3, 30, 51, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 224, 233, 285, 353, 354, 400, 415, 418, 440, 484, 489, 501, 506], "simul": [2, 3, 5, 7, 8, 83, 135, 136, 137, 146, 150, 151, 170, 178, 179, 185, 214, 291, 318, 478, 479, 484, 486, 488, 489, 493, 497, 499, 500], "furthermor": [2, 499, 500], "certain": [2, 4, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 84, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 232, 233, 243, 268, 277, 287, 307, 309, 314, 346, 351, 355, 399, 415, 417, 418, 478, 484, 485, 486, 488, 494, 499, 500, 506], "composit": [2, 3, 34, 35, 37, 38, 39, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 92, 101, 102, 120, 126, 133, 134, 137, 140, 142, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 219, 221, 224, 235, 236, 237, 238, 240, 245, 247, 249, 257, 258, 264, 268, 270, 274, 275, 276, 278, 285, 287, 289, 291, 318, 359, 368, 372, 374, 375, 379, 382, 402, 417, 476, 478, 484, 486, 490, 496, 501], "uniform": [2, 63, 79, 114, 115, 346, 351, 355, 499], "unambigu": 2, "distinguish": [2, 3, 70, 79, 80, 156, 157, 178, 179], "happen": [2, 3, 24, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 288, 332, 485, 488, 491, 492, 493, 502, 506], "everyth": [2, 192, 485, 486, 487, 493, 494], "belong": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 95, 283, 284, 372, 484, 492, 500], "rule": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 235, 238, 287, 346, 351, 355, 372, 415, 417, 418, 479, 486], "field": [2, 3, 15, 16, 18, 21, 29, 30, 32, 36, 40, 43, 45, 48, 51, 56, 62, 64, 65, 66, 67, 71, 72, 73, 76, 78, 79, 80, 81, 83, 84, 85, 95, 96, 97, 98, 100, 101, 102, 108, 109, 110, 114, 122, 130, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 224, 235, 238, 239, 240, 245, 253, 257, 258, 260, 264, 267, 268, 270, 275, 277, 278, 287, 291, 293, 303, 304, 310, 315, 318, 332, 333, 334, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 464, 477, 478, 479, 485, 497, 501], "taken": [2, 3, 34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 220, 259, 319, 320, 480, 484, 486, 487, 490, 499, 500, 501], "is_shar": [2, 3, 15, 16, 18, 29, 32, 40, 43, 45, 51, 62, 64, 65, 66, 71, 72, 76, 78, 79, 80, 81, 84, 85, 95, 96, 97, 98, 99, 100, 101, 108, 109, 110, 114, 122, 130, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 150, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 190, 191, 193, 194, 195, 200, 218, 220, 224, 235, 238, 239, 240, 245, 253, 257, 258, 260, 264, 267, 268, 270, 278, 284, 291, 293, 303, 304, 310, 315, 318, 332, 333, 334, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 416, 418, 419, 420, 479, 501], "envbas": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 51, 85, 102, 134, 137, 141, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 221, 224, 235, 238, 250, 257, 258, 276, 277, 284, 287, 291, 310, 315, 317, 318, 367, 417, 455, 464, 465, 466, 470, 472, 473, 474, 476, 489], "brought": [2, 486, 487, 490], "step_mdp": [2, 3, 40, 41, 49, 75, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 310, 315, 476, 487, 489, 501, 505, 506], "count": [2, 3, 15, 16, 18, 21, 29, 51, 56, 85, 140, 141, 232, 268, 275, 285, 332, 455, 460, 463, 478, 484, 485, 486, 487, 503, 506], "trigger": [2, 7, 43, 66, 78, 193, 285, 346, 351, 355, 415, 418], "turn": [2, 22, 23, 25, 27, 30, 40, 41, 49, 62, 64, 67, 71, 73, 75, 85, 100, 101, 102, 137, 151, 164, 175, 185, 191, 232, 244, 276, 279, 283, 344, 347, 348, 349, 350, 364, 415, 416, 419, 422, 440, 455, 478, 480, 484, 485, 487, 490, 501, 502], "retain": [2, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 478], "regard": [2, 97, 304, 365, 382, 392, 402, 484, 486, 501], "expand": [2, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 108, 122, 123, 191, 224, 270, 302, 344, 347, 348, 349, 350, 371, 374, 383, 385, 398, 400, 403, 405, 407, 408, 415, 416, 418, 419, 499, 500, 501, 503, 505], "recur": [2, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 422, 423, 424, 425, 426, 490], "anyth": [2, 4, 15, 16, 18, 21, 22, 23, 25, 27, 480], "els": [2, 135, 136, 200, 224, 308, 309, 313, 314, 326, 478, 479, 481, 484, 485, 486, 487, 496, 497, 499, 500, 501, 502], "repetit": [2, 486, 489, 492], "embed": [2, 255, 280, 281, 282, 297, 333, 359, 360, 361, 362, 371, 372, 376, 502], "strictli": [2, 3, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 248, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418, 484, 486], "enforc": [2, 36, 40, 43, 48, 56, 66, 67, 73, 78, 102, 121, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 287, 346, 351, 352, 355, 373, 384, 385, 402, 405, 415, 417, 418, 501], "n_action": [2, 367, 383, 385, 387, 389, 401, 405], "rightmost": [2, 480], "n_ob": [2, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 247, 367, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 491], "estim": [2, 4, 95, 115, 122, 123, 185, 186, 187, 190, 193, 200, 239, 247, 297, 340, 360, 361, 362, 382, 383, 384, 385, 386, 387, 389, 391, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 415, 418, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 478, 480, 485, 486, 490, 491, 499, 500], "subsequ": [2, 36, 43, 48, 56, 66, 67, 73, 78, 95, 96, 97, 98, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 287, 346, 351, 355, 415, 417, 418, 487, 499], "proce": [2, 499], "state_valu": [2, 361, 362, 376, 384, 390, 398, 399, 402, 403, 405, 422, 423, 424, 425, 427, 429, 431, 433, 435, 436, 438, 479, 484, 500], "f": [2, 15, 16, 18, 21, 29, 102, 135, 136, 144, 150, 151, 195, 201, 205, 206, 207, 272, 288, 314, 381, 418, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 478, 484, 485, 486, 487, 494, 497, 499, 500, 501, 503, 506], "next_state_valu": [2, 407, 408, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 476], "broadcast": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 302, 391, 405, 478], "left": [2, 58, 95, 97, 102, 115, 122, 188, 189, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 232, 234, 235, 236, 240, 247, 249, 255, 257, 258, 264, 268, 271, 274, 276, 278, 280, 282, 285, 287, 307, 319, 321, 346, 417, 485, 486, 488, 492, 493], "would": [2, 3, 36, 43, 48, 56, 66, 67, 72, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 308, 310, 313, 315, 316, 321, 346, 351, 355, 372, 415, 417, 418, 480, 481, 485, 486, 487, 489, 491, 492, 501, 503, 505, 506], "best": [2, 5, 9, 148, 310, 315, 402, 499, 500, 503, 505], "bug": [2, 4], "worst": [2, 485], "twice": [2, 8, 123], "feasibl": 2, "mostli": [2, 3, 21, 331, 442, 480, 493, 503, 506], "eas": [2, 3, 499, 500], "flat": [2, 128, 422], "manner": [2, 144, 195, 203, 255, 280, 479, 484, 485, 486, 492, 498, 501, 503], "ted2flat": [2, 45, 476], "flat2t": [2, 476], "unflatten": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 224, 367], "deseri": [2, 3, 45], "posit": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 115, 117, 134, 137, 138, 139, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 242, 243, 245, 266, 267, 268, 271, 275, 277, 279, 287, 312, 346, 351, 355, 385, 405, 415, 417, 418, 478, 480, 486, 499, 500, 501, 503], "both": [2, 3, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 117, 134, 137, 140, 141, 143, 144, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 176, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 220, 227, 245, 258, 274, 275, 277, 287, 294, 295, 310, 314, 315, 316, 321, 322, 346, 351, 355, 360, 361, 362, 365, 370, 382, 384, 385, 386, 390, 391, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 422, 455, 478, 479, 484, 486, 488, 489, 491, 496, 497, 499, 500, 501, 502, 503, 506], "mark": [2, 3, 18, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 272, 310, 315, 422, 424, 425, 478, 492, 503], "identifi": [2, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 65, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 192, 193, 194, 195, 206, 207, 478, 496], "abov": [2, 3, 7, 36, 43, 48, 56, 66, 67, 73, 78, 86, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 276, 287, 311, 340, 341, 346, 351, 355, 381, 415, 417, 418, 478, 480, 481, 484, 486, 488, 489, 490, 499, 500, 501, 506], "output": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 36, 43, 48, 51, 56, 63, 66, 67, 70, 73, 78, 79, 80, 83, 85, 95, 97, 98, 101, 102, 115, 122, 123, 134, 137, 138, 139, 140, 143, 144, 145, 146, 151, 152, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 224, 225, 227, 230, 231, 233, 234, 235, 236, 238, 240, 242, 245, 247, 249, 251, 255, 257, 258, 263, 264, 267, 268, 271, 272, 274, 276, 277, 278, 280, 282, 283, 285, 287, 289, 294, 295, 296, 297, 298, 301, 303, 304, 305, 308, 309, 310, 313, 314, 315, 316, 321, 322, 329, 331, 332, 334, 343, 346, 351, 355, 359, 360, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 426, 440, 442, 451, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 493, 496, 497, 498, 499, 500, 501, 502, 505, 506], "typic": [2, 3, 4, 8, 13, 14, 17, 18, 19, 22, 23, 24, 25, 26, 29, 36, 43, 48, 56, 66, 67, 73, 78, 85, 98, 102, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 239, 269, 287, 329, 331, 346, 351, 355, 368, 383, 385, 400, 402, 405, 415, 417, 418, 478, 479, 480, 481, 486, 488, 489, 491, 492, 497, 499, 500, 501], "grumodul": [2, 226, 270, 358, 379, 487], "lstmmodul": [2, 310, 358, 487, 488], "skip": [2, 3, 17, 36, 43, 48, 56, 66, 67, 73, 78, 95, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 233, 243, 245, 249, 275, 277, 287, 346, 351, 355, 368, 372, 385, 400, 405, 415, 417, 418, 422, 423, 424, 425, 441, 442, 453, 455, 478, 484, 485, 497, 501], "accumul": [2, 8, 287], "upcom": [2, 400, 415, 418, 431, 432, 433, 434, 436, 437, 438, 439, 484], "popular": [2, 3, 479, 487, 491, 500], "rainbow": 2, "multistep": [2, 15, 16, 18, 21, 22, 23, 25, 27, 29, 287, 476, 485], "shift": [2, 45, 47, 56, 57, 76, 105, 106, 113, 378, 422, 423, 424, 425, 486], "approxim": [2, 500, 506], "intens": [2, 3, 8, 312], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 15, 21, 227, 301, 330, 382, 388, 401, 402, 451, 474, 486, 487, 500, 503], "2x": 2, "small": [2, 114, 115, 123, 280, 285, 290, 484, 486, 488, 499, 500, 506], "clearer": [2, 488, 490], "lazi": [2, 3, 74, 75, 92, 93, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 255, 280, 294, 321, 324, 373, 374, 484, 485, 490, 492, 498, 503, 506], "certainli": 2, "welcom": [2, 478, 489], "wrapper": [2, 3, 21, 62, 64, 71, 72, 79, 80, 85, 100, 101, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 185, 186, 187, 190, 191, 193, 194, 195, 200, 202, 283, 288, 292, 293, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 363, 367, 372, 377, 416, 419, 422, 447, 448, 449, 474, 476, 483, 486, 487, 489, 495, 496, 499, 500, 502, 504, 505, 506], "around": [2, 5, 7, 21, 79, 80, 134, 137, 140, 144, 152, 158, 164, 165, 168, 169, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 292, 331, 345, 367, 372, 422, 478, 484, 485, 496, 500, 506], "selecttransform": [2, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "excludetransform": [2, 264, 503], "promptli": 2, "virtual": [2, 3, 143], "respons": [2, 3, 8, 15, 16, 18, 20, 22, 25, 27, 29, 30, 115, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 189, 190, 192, 193, 194, 195, 198, 203, 205, 344, 347, 349, 350, 351, 355, 415, 418, 460, 491, 492, 496, 497, 506], "d4rl": [2, 97], "repositori": [2, 7, 98, 178, 179, 499, 500], "wheel": [2, 486], "publish": 2, "openml": [2, 161], "scikit": [2, 161], "panda": 2, "raw": [2, 3, 4, 72, 103, 209, 245, 274, 278, 311, 340, 341, 485, 488, 492, 501], "go": [2, 3, 7, 109, 155, 164, 233, 256, 260, 363, 428, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "modifi": [2, 3, 7, 8, 36, 43, 48, 56, 66, 67, 73, 78, 84, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 227, 231, 233, 242, 245, 247, 255, 270, 276, 277, 280, 282, 285, 287, 323, 332, 346, 351, 355, 363, 371, 372, 415, 417, 418, 463, 478, 480, 484, 485, 486, 488, 489, 499, 500, 501], "fly": [2, 227, 284, 399, 478, 480, 486, 501, 503, 506], "least": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 115, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 230, 493, 506], "pre": [2, 7, 28, 36, 43, 48, 56, 66, 67, 73, 78, 84, 102, 110, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 255, 274, 280, 282, 287, 346, 351, 355, 415, 417, 418, 478, 506], "conisder": 2, "per": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 30, 102, 114, 115, 122, 128, 148, 150, 151, 164, 166, 167, 207, 230, 249, 263, 294, 295, 305, 307, 321, 322, 367, 442, 444, 447, 449, 460, 472, 473, 478, 484, 485, 486, 487, 488, 490, 491, 494, 499, 500, 503, 505], "pipelin": [2, 3, 7, 144, 195, 478, 479, 480, 486], "replac": [2, 3, 6, 7, 36, 43, 48, 56, 66, 67, 73, 78, 95, 102, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 223, 237, 239, 246, 284, 285, 287, 307, 346, 351, 355, 383, 385, 391, 398, 403, 405, 407, 408, 415, 417, 418, 422, 423, 424, 425, 479, 499, 503, 505], "onc": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 249, 260, 270, 277, 287, 289, 332, 344, 346, 347, 348, 349, 350, 351, 355, 367, 415, 416, 417, 418, 419, 458, 479, 481, 485, 486, 487, 490, 493, 501, 503, 506], "produc": [2, 3, 40, 41, 49, 51, 75, 122, 220, 223, 224, 294, 295, 316, 322, 328, 360, 362, 363, 372, 422, 442, 478, 486, 487, 488, 489, 490, 492, 503, 506], "download": [2, 7, 10, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 95, 97, 98, 148, 255, 282, 442, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "forc": [2, 3, 6, 7, 15, 16, 21, 22, 23, 25, 27, 95, 98, 165, 485, 499, 500, 501], "robosetexperiencereplai": [2, 122, 123], "fk1": 2, "v4": [2, 144, 164, 195, 220, 259, 431, 432, 433, 434, 436, 437, 438, 439, 484, 486, 502, 505], "expert": 2, "fk1_microopenrandom_v2d": 2, "func": [2, 95, 96, 97, 98, 286], "obs_norm": 2, "norm": [2, 4, 8, 135, 136, 290, 460, 478, 484, 485, 486, 499, 500, 501], "num_work": [2, 24, 26, 62, 64, 84, 95, 96, 97, 98, 99, 159, 164, 173, 484, 485], "os": [2, 64, 84, 99, 485, 497], "cpu_count": [2, 64, 84, 99], "num_chunk": [2, 95, 96, 97, 98], "mp_start_method": [2, 95, 96, 97, 98, 164, 173, 275, 485, 505], "fork": [2, 5, 95, 96, 97, 98, 484, 485, 486, 487, 499, 500, 502, 505], "recreat": [2, 501], "customari": 2, "moreov": [2, 3], "fine": [2, 3, 33, 70, 79, 80, 115, 117, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 224, 247, 418, 478, 488, 492, 502], "grain": [2, 3, 70, 79, 80, 115, 117, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 224], "nomenclatur": 2, "compact": [2, 51, 76, 105, 106, 113], "propos": [2, 227, 239, 292, 317, 397, 406, 479, 487, 503], "replaybufferensembl": [2, 95, 120, 126, 133], "primit": [2, 3, 4, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 478], "individu": [2, 4, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 84, 102, 115, 117, 128, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 285, 287, 346, 351, 355, 384, 399, 402, 415, 417, 418, 484, 500], "dummi": [2, 3, 175, 200, 440, 484, 488, 492, 506], "semant": [2, 74, 75, 143, 145, 502], "ident": [2, 3, 15, 16, 18, 56, 62, 64, 70, 71, 78, 79, 80, 85, 100, 101, 108, 117, 122, 134, 137, 140, 143, 144, 145, 152, 159, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 192, 193, 194, 195, 239, 267, 276, 285, 290, 321, 322, 344, 347, 348, 349, 350, 383, 385, 398, 403, 405, 407, 408, 416, 419, 422, 423, 424, 425, 472, 473, 485, 489, 499, 500], "another_kei": [2, 117], "renam": [2, 3, 62, 64, 71, 85, 100, 101, 117, 186, 191, 218, 258, 260, 344, 347, 348, 349, 350, 416, 419, 484], "resiz": [2, 3, 117, 227, 485, 487, 488, 489, 503, 506], "comops": 2, "totensorimag": [2, 3, 117, 227, 259, 485, 487, 488, 503, 505, 506], "renametransform": [2, 3, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227], "rb0": [2, 117], "in_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 66, 68, 78, 95, 96, 97, 98, 102, 117, 134, 135, 136, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 291, 293, 303, 310, 315, 318, 333, 342, 343, 346, 351, 355, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 374, 375, 376, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 396, 398, 399, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 441, 442, 470, 479, 484, 485, 486, 487, 488, 490, 491, 494, 497, 498, 499, 500, 501, 502, 503, 505, 506], "pixel": [2, 3, 7, 40, 117, 137, 138, 139, 143, 145, 146, 170, 227, 229, 234, 239, 242, 244, 251, 253, 255, 259, 273, 280, 282, 297, 326, 327, 440, 442, 484, 485, 487, 488, 493, 499, 502, 503, 505, 506], "rb1": [2, 117], "out_kei": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 51, 66, 68, 78, 95, 96, 97, 98, 102, 117, 134, 135, 136, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 291, 293, 303, 304, 310, 315, 318, 333, 334, 342, 343, 346, 351, 355, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 379, 382, 383, 384, 385, 390, 391, 396, 398, 399, 402, 403, 404, 405, 407, 415, 417, 418, 420, 422, 423, 424, 425, 440, 442, 455, 470, 479, 484, 485, 486, 487, 488, 490, 494, 497, 498, 499, 500, 501, 502, 503, 505, 506], "pixels33": [2, 117], "data0": [2, 109, 117], "244": [2, 117, 255, 282], "data1": [2, 109, 117, 505], "_": [2, 8, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 109, 117, 137, 141, 148, 178, 179, 200, 228, 235, 237, 238, 247, 251, 258, 273, 284, 287, 331, 359, 371, 372, 376, 381, 382, 383, 385, 386, 390, 391, 398, 402, 403, 405, 407, 408, 422, 423, 424, 425, 444, 484, 485, 486, 487, 488, 494, 499, 500, 501, 503, 505], "parent": [2, 3, 27, 36, 43, 47, 48, 56, 58, 66, 67, 73, 78, 83, 85, 96, 102, 117, 126, 133, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 224, 227, 228, 231, 232, 233, 236, 239, 242, 243, 249, 251, 255, 263, 268, 269, 270, 271, 275, 276, 279, 280, 287, 310, 315, 346, 351, 355, 360, 379, 400, 402, 415, 417, 418, 426, 440, 442, 484, 492, 501, 505, 506], "basic": [2, 3, 19, 158, 185, 478, 479, 486, 491, 492, 494, 499, 505, 506], "properti": [2, 3, 14, 17, 19, 20, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 117, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 275, 276, 277, 284, 285, 287, 302, 311, 312, 319, 320, 324, 328, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 355, 367, 382, 385, 400, 402, 404, 405, 415, 416, 417, 418, 419, 490, 492, 501, 503], "input": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 78, 81, 83, 85, 86, 87, 88, 89, 90, 100, 101, 102, 109, 111, 125, 131, 134, 137, 140, 144, 152, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 292, 293, 294, 295, 297, 298, 299, 300, 303, 304, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 332, 334, 335, 336, 337, 338, 340, 343, 344, 346, 347, 348, 349, 350, 351, 355, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 381, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 454, 458, 463, 470, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 496, 499, 500, 501, 505, 506], "send": [2, 3, 8, 20, 31, 168, 174, 449, 476, 505], "receiv": [2, 3, 14, 17, 19, 20, 24, 26, 31, 36, 43, 48, 56, 66, 67, 72, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 276, 277, 285, 287, 316, 346, 351, 355, 415, 417, 418, 428, 476, 478, 480, 484, 486, 491, 498, 501], "spawn": [2, 3, 4, 22, 28, 148, 159, 164, 173, 275, 485, 499, 500], "check_env_spec": [2, 3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 220, 245, 257, 278, 440, 476, 486, 499, 500, 501], "saniti": [2, 3, 7, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 486], "make_composite_from_td": [2, 83, 476, 501], "fall": [2, 4, 14, 17, 20, 24, 26, 31, 97], "categori": [2, 40, 479, 481], "bound": [2, 3, 4, 27, 36, 38, 40, 43, 48, 56, 66, 67, 73, 78, 86, 102, 134, 137, 140, 144, 152, 164, 165, 168, 169, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 230, 250, 284, 287, 289, 307, 332, 335, 336, 346, 351, 355, 359, 364, 365, 368, 369, 370, 371, 372, 375, 382, 383, 385, 386, 398, 402, 403, 405, 407, 408, 415, 417, 418, 476, 479, 484, 485, 486, 488, 499, 501, 505, 506], "unbound": [2, 3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 70, 71, 74, 75, 83, 85, 87, 88, 89, 90, 100, 101, 117, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 200, 212, 221, 224, 235, 238, 257, 270, 291, 318, 344, 347, 348, 349, 350, 359, 371, 374, 376, 404, 416, 419, 476, 478, 496, 501, 503], "boundeddiscret": [2, 37, 40], "boundedcontinu": [2, 28, 37, 40, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 245, 248, 278], "unboundeddiscret": [2, 86, 165, 245, 476], "unboundedcontinu": [2, 86, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 212, 257, 270, 374, 379, 476], "implicitli": 2, "onehot": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 61, 74, 75, 83, 86, 87, 88, 89, 90, 135, 136, 143, 145, 146, 149, 150, 151, 159, 160, 162, 163, 170, 176, 177, 304, 334, 364, 369, 387, 389, 390, 391, 420, 476, 479], "multionehot": [2, 52, 53, 55, 387, 390, 391, 420, 476], "multicategor": [2, 53, 54, 55, 476], "binari": [2, 3, 7, 35, 36, 60, 176, 221, 225, 304, 334, 364, 365, 369, 370, 387, 390, 391, 420, 476, 496], "concept": [2, 3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 331, 478, 485, 496, 503], "arbitrari": [2, 3, 34, 60, 70, 134, 137, 140, 144, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 223, 480, 484, 485, 501, 503], "combin": [2, 4, 46, 67, 115, 201, 206, 207, 407, 478, 485, 488, 493, 503, 505], "nevertheless": [2, 3, 486, 489, 503], "otherwis": [2, 3, 12, 15, 16, 18, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 115, 117, 122, 123, 134, 135, 136, 137, 140, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 228, 232, 233, 237, 245, 251, 269, 270, 271, 275, 276, 277, 284, 287, 288, 290, 292, 308, 311, 313, 321, 322, 340, 341, 344, 346, 347, 348, 349, 350, 351, 355, 358, 364, 369, 372, 375, 383, 385, 394, 400, 401, 405, 415, 416, 417, 418, 419, 422, 424, 425, 455, 457, 480, 481, 484, 485, 486, 487, 496, 501, 506], "similarli": [2, 3, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 121, 126, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 249, 287, 321, 346, 351, 355, 373, 374, 390, 398, 415, 417, 418, 422, 478, 506], "possess": [2, 83, 97], "unsqueez": [2, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 115, 212, 221, 224, 227, 228, 273, 279, 478, 484, 487, 488, 499, 500, 501], "move": [2, 4, 36, 43, 48, 56, 66, 67, 73, 78, 83, 102, 109, 111, 134, 137, 140, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 220, 231, 236, 255, 270, 276, 277, 280, 282, 284, 285, 287, 316, 346, 351, 355, 371, 415, 417, 418, 458, 484, 485, 487, 489, 506], "unbind": [2, 62, 63, 64, 70, 71, 79, 80, 85, 100, 101, 191, 249, 344, 347, 348, 349, 350, 367, 416, 418, 419, 478], "said": [2, 486], "neg": [2, 8, 15, 16, 18, 21, 22, 23, 25, 27, 63, 66, 79, 83, 114, 115, 197, 227, 242, 256, 267, 279, 384, 393, 399, 402, 422, 424, 425, 480, 486, 499, 500, 501], "seen": [2, 3, 22, 23, 25, 27, 40, 41, 49, 75, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 236, 480, 484, 485, 487, 491, 499, 500, 503], "predict": [2, 3, 56, 72, 303, 305, 317, 318, 363, 377, 382, 384, 389, 392, 394, 395, 399, 402, 404, 415, 421, 484, 485, 491], "deprec": [2, 32, 35, 36, 38, 41, 43, 44, 48, 49, 50, 53, 55, 56, 59, 61, 66, 67, 73, 78, 88, 90, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 284, 287, 346, 351, 355, 382, 384, 385, 387, 390, 391, 392, 398, 399, 402, 403, 404, 405, 415, 417, 418, 420, 422, 423, 424, 425, 430, 506], "mont": [2, 185, 186, 187, 190, 193, 200, 382, 384, 399, 402, 415, 417, 478, 484], "carlo": [2, 185, 186, 187, 190, 193, 200, 382, 384, 399, 402, 415, 417, 478, 484], "mct": [2, 51], "act": [2, 3, 4, 122, 123, 166, 167, 277, 303, 322, 383, 385, 386, 398, 403, 405, 407, 408, 487, 488, 499, 500, 503, 505], "tradit": [2, 312, 491, 499], "integ": [2, 15, 16, 18, 21, 29, 30, 32, 48, 52, 54, 56, 60, 66, 67, 72, 73, 85, 115, 122, 123, 124, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 193, 194, 195, 203, 204, 220, 223, 239, 243, 251, 268, 285, 294, 295, 316, 321, 322, 385, 390, 398, 405, 480, 488, 503], "advanc": [2, 3, 27, 63, 70, 79, 80, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 478, 489, 492, 503], "rebuild": [2, 51], "initi": [2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 39, 43, 44, 48, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 117, 128, 134, 137, 140, 144, 152, 162, 163, 164, 165, 168, 173, 174, 175, 176, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 226, 245, 251, 255, 270, 277, 280, 285, 286, 287, 288, 289, 290, 291, 307, 308, 309, 313, 314, 318, 321, 322, 323, 324, 325, 332, 344, 346, 347, 348, 349, 350, 351, 353, 354, 355, 367, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 474, 478, 479, 480, 484, 485, 487, 489, 490, 492, 496, 499, 501, 506], "pair": [2, 3, 56, 62, 64, 66, 71, 78, 85, 97, 100, 101, 134, 137, 138, 139, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 260, 270, 275, 310, 344, 347, 348, 349, 350, 360, 368, 372, 391, 400, 405, 415, 416, 418, 419, 422, 423, 424, 425, 426, 479, 480, 484, 485, 486, 490, 491, 498, 501, 506], "term": [2, 72, 109, 201, 206, 247, 313, 314, 324, 325, 381, 382, 391, 462, 485, 486, 489, 490, 500], "pseudocod": [2, 3, 478], "next_stat": [2, 480], "associ": [2, 3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 48, 49, 51, 56, 62, 64, 66, 67, 68, 71, 73, 75, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 276, 287, 335, 344, 346, 347, 348, 349, 350, 351, 354, 355, 415, 416, 417, 418, 419, 474, 484, 503], "sens": [2, 4, 62, 64, 71, 85, 100, 101, 191, 200, 227, 344, 347, 348, 349, 350, 416, 419, 492, 501], "hard": [2, 3, 7, 128, 138, 139, 164, 397, 478, 485, 506], "know": [2, 3, 4, 9, 63, 70, 79, 80, 143, 145, 289, 400, 403, 415, 418, 455, 484, 485, 486, 487, 488, 489, 490, 491, 492, 499, 500, 503], "next_td": [2, 201, 206], "Of": [2, 3, 7, 477, 501, 506], "cours": [2, 3, 4, 477, 501, 506], "handi": [2, 3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 493], "undertaken": [2, 85, 480, 501], "link": [2, 6, 7, 140, 485, 494], "hash": [2, 48, 51, 66, 67, 73, 78, 85, 137, 152, 194], "past": [2, 4, 227, 367, 485, 503], "node_map": [2, 51], "_index": [2, 66, 78], "Then": [2, 7, 15, 16, 18, 21, 22, 23, 25, 27, 190, 198, 283, 486, 498], "track": [2, 3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 80, 114, 115, 121, 137, 193, 204, 263, 272, 284, 285, 287, 332, 367, 417, 447, 453, 476, 485, 487, 489, 492, 500, 501, 503], "next_data": [2, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "data_map": [2, 51], "form": [2, 15, 16, 21, 36, 43, 48, 56, 63, 66, 67, 70, 73, 78, 79, 80, 95, 97, 98, 102, 105, 106, 113, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 285, 287, 308, 310, 313, 315, 346, 351, 355, 372, 381, 382, 384, 399, 402, 415, 417, 418, 460, 478, 479, 490], "figur": [2, 3, 85, 152, 194, 484, 486, 487, 500, 501, 506], "flowchart": 2, "o": [2, 36, 43, 48, 56, 66, 67, 73, 78, 102, 104, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 314, 346, 351, 355, 415, 417, 418], "get_tre": [2, 51, 85], "vertex": [2, 85], "longer": [2, 85, 202, 288, 485, 494, 499, 500, 503], "vertic": [2, 85], "branch": [2, 51, 85], "repeat": [2, 85, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 159, 160, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 196, 200, 275, 291, 302, 478, 486, 499, 500, 501], "depth": [2, 70, 83, 134, 137, 140, 144, 152, 158, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 291, 294, 295, 297, 298, 299, 300, 305, 306, 316, 318, 321, 322, 323, 326, 327, 364, 479, 485, 489, 491, 492, 498, 499, 500, 503], "until": [2, 3, 7, 27, 29, 102, 151, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 271, 276, 287, 417, 450, 486, 487, 494, 499, 500], "anymor": [2, 62, 64, 71, 85, 100, 101, 191, 277, 344, 347, 348, 349, 350, 371, 416, 419], "remov": [2, 6, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 92, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 257, 266, 287, 344, 346, 347, 348, 349, 350, 351, 355, 400, 415, 416, 417, 418, 419, 499, 500, 505, 506], "futur": [2, 4, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 105, 106, 113, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 255, 275, 277, 282, 287, 316, 344, 346, 347, 348, 349, 350, 351, 355, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 477, 478], "utmost": 2, "post": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 73, 78, 98, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 478], "grpo": [2, 193, 200, 415, 476], "commonli": [2, 115, 122, 123, 506], "emploi": [2, 325], "scarc": 2, "address": [2, 31, 353, 478, 503], "subdomain": 2, "extern": [2, 3, 235, 238, 285, 353, 496, 499, 506], "token": [2, 29, 64, 65, 72, 81, 84, 99, 101, 102, 152, 185, 186, 187, 189, 190, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 312, 346, 351, 355, 415, 418, 496, 497], "dm": [3, 484, 506], "experi": [3, 63, 70, 79, 80, 95, 97, 98, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 444, 445, 446, 447, 448, 449, 477, 485, 486, 488, 492, 493, 499, 500, 503], "box": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 143, 145, 323, 400, 415, 418, 496], "lib": [3, 5, 6, 7, 9, 10, 15, 16, 18, 21, 27, 28, 29, 30, 68, 102, 134, 137, 140, 141, 144, 149, 152, 156, 157, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 230, 239, 246, 247, 251, 253, 258, 260, 263, 270, 276, 283, 284, 287, 417, 440, 470, 484, 485, 486, 487, 498, 500, 502, 503, 505, 506], "hope": [3, 11], "nn": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 33, 36, 42, 43, 48, 56, 66, 67, 68, 72, 73, 78, 102, 134, 135, 136, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 232, 237, 239, 247, 255, 270, 276, 277, 280, 282, 287, 291, 293, 294, 295, 297, 298, 299, 300, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 318, 320, 321, 322, 323, 332, 333, 334, 342, 346, 351, 355, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 374, 376, 379, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 470, 479, 480, 484, 485, 486, 487, 488, 490, 491, 494, 498, 499, 500, 501, 502, 505], "organis": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 277, 485], "attribut": [3, 4, 7, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 117, 134, 137, 140, 143, 144, 145, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 239, 249, 255, 277, 280, 284, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 372, 382, 383, 385, 386, 387, 389, 391, 392, 393, 396, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 484, 487, 501], "live": [3, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 117, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 239, 287, 346, 351, 355, 415, 417, 418], "actual": [3, 4, 7, 14, 17, 19, 20, 24, 26, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 95, 97, 98, 100, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 283, 344, 347, 348, 349, 350, 416, 419, 463, 478, 480, 484, 486, 488, 499, 500, 501], "care": [3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 363, 365, 367, 370, 375, 378, 442, 484, 486, 488, 499, 500, 501, 503], "parametr": [3, 325, 372, 383, 385, 390, 398, 405, 484, 486], "observation_spec": [3, 51, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 221, 224, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 242, 244, 245, 246, 247, 251, 253, 255, 257, 259, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 283, 284, 285, 287, 291, 310, 315, 318, 417, 464, 470, 484, 486, 491, 498, 499, 500, 501, 506], "state_spec": [3, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 231, 236, 251, 276, 278, 279, 287, 291, 318, 417, 501, 506], "reward_spec": [3, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 224, 225, 230, 231, 235, 236, 238, 248, 257, 261, 262, 263, 265, 267, 274, 276, 278, 279, 285, 287, 291, 318, 417, 478, 486, 496, 499, 500, 501, 506], "done_spec": [3, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 235, 236, 238, 239, 257, 267, 274, 276, 278, 287, 417, 499, 500, 501, 506], "flag": [3, 8, 43, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 189, 190, 192, 193, 194, 195, 198, 246, 332, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 479, 499, 500, 501, 502], "input_spec": [3, 85, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 224, 231, 235, 236, 237, 249, 253, 257, 258, 263, 264, 267, 268, 269, 270, 274, 276, 277, 278, 281, 287, 417, 486, 501], "full_action_spec": [3, 85, 134, 137, 140, 144, 152, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 185, 186, 187, 190, 193, 194, 195, 220, 236, 291, 318, 499, 500], "full_state_spec": [3, 51, 85, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 220, 236, 291, 318], "output_spec": [3, 85, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 235, 236, 240, 247, 249, 257, 258, 264, 268, 274, 276, 277, 278, 285, 287, 417, 501], "full_observation_spec": [3, 85, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 193, 194, 195, 291, 318], "full_reward_spec": [3, 85, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 224, 236, 257, 499, 500], "full_done_spec": [3, 85, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 219, 224, 236, 257, 499, 500], "carri": [3, 27, 54, 84, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 270, 285, 400, 415, 418, 485, 487, 499, 500, 501, 503], "nontensor": [3, 59, 101, 190, 195, 245, 278, 476], "spec_lock": [3, 140], "modif": [3, 5, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 242, 245, 287, 346, 351, 355, 400, 415, 417, 418, 478, 480, 486, 501], "children": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 85, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "unlock": [3, 40, 41, 49, 62, 64, 71, 75, 85, 100, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 344, 347, 348, 349, 350, 416, 419], "set_spec_lock_": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "reason": [3, 4, 8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 255, 280, 287, 315, 346, 351, 355, 415, 417, 418, 478, 480, 484, 485, 486, 491, 492, 499, 501, 503], "easi": [3, 5, 11, 95, 134, 137, 138, 139, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 307, 332, 478, 479, 480, 484, 485, 486, 497, 500, 502, 503, 505, 506], "cach": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 74, 75, 83, 84, 86, 87, 88, 89, 90, 95, 97, 98, 99, 115, 122, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 223, 235, 238, 255, 276, 277, 282, 292, 312, 452, 478], "principl": [3, 478], "new_spec": 3, "eras": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 115, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 277], "relock": 3, "previous": [3, 4, 51, 98, 486, 506], "importantli": [3, 368, 372], "action_s": 3, "help": [3, 4, 36, 43, 48, 56, 66, 67, 73, 78, 83, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 239, 287, 346, 351, 355, 382, 384, 399, 402, 404, 415, 417, 418, 477, 480, 484, 485, 486, 487, 496, 497, 499, 500], "With": [3, 150, 151, 155, 269, 481, 485, 496, 498, 499, 500, 503, 506], "necessarili": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 506], "present": [3, 29, 36, 43, 48, 56, 62, 63, 64, 66, 67, 68, 70, 71, 73, 78, 83, 85, 95, 97, 100, 101, 102, 114, 115, 117, 121, 134, 137, 140, 143, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 219, 240, 260, 264, 270, 275, 277, 287, 295, 296, 297, 298, 299, 300, 306, 310, 313, 315, 325, 330, 332, 344, 346, 347, 348, 349, 350, 351, 355, 367, 371, 372, 373, 374, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 474, 478, 481, 484, 494, 498, 499, 500, 503, 505], "0s": [3, 95, 270, 487], "step_and_maybe_reset": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 478, 489, 496], "done_kei": [3, 32, 43, 45, 47, 51, 57, 76, 102, 105, 106, 113, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 223, 227, 239, 260, 268, 287, 417, 499, 500], "assign": [3, 4, 15, 16, 21, 31, 36, 37, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 86, 100, 101, 102, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 344, 346, 347, 348, 349, 350, 351, 353, 355, 385, 386, 387, 389, 405, 415, 416, 417, 418, 419, 486, 490, 496, 499, 500, 503], "_reset": [3, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 219, 221, 223, 224, 227, 235, 238, 246, 257, 272, 291, 318, 499], "data_": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "append": [3, 8, 11, 51, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 101, 117, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 197, 200, 206, 223, 230, 231, 249, 260, 270, 277, 283, 309, 310, 314, 315, 364, 369, 478, 484, 485, 486, 487, 488, 496, 499, 500, 501, 502, 503, 505], "seed": [3, 15, 16, 18, 21, 27, 29, 30, 70, 79, 80, 117, 134, 137, 140, 144, 152, 158, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 180, 185, 186, 187, 190, 193, 194, 195, 196, 221, 224, 235, 238, 245, 257, 277, 440, 460, 499], "determinist": [3, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 231, 255, 270, 276, 277, 280, 282, 287, 296, 305, 326, 336, 346, 351, 355, 359, 368, 371, 372, 375, 383, 384, 400, 402, 415, 417, 418, 455, 479, 484, 485, 486, 487, 488, 490, 491, 494, 499, 501, 505, 506], "preced": [3, 56, 137, 227, 487], "risk": [3, 256], "overlap": [3, 79, 128], "reproduc": [3, 67, 73, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 227, 245, 484, 486, 488, 500], "maximum": [3, 4, 13, 15, 16, 17, 18, 21, 22, 23, 25, 27, 34, 56, 62, 64, 65, 72, 78, 81, 84, 85, 86, 99, 103, 108, 109, 110, 111, 114, 115, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 237, 261, 268, 269, 271, 290, 339, 340, 341, 375, 383, 385, 390, 391, 398, 400, 401, 405, 415, 418, 442, 457, 478, 479, 484, 485, 486, 487, 490, 499, 500, 503], "max_step": [3, 11, 128, 134, 137, 140, 144, 152, 156, 157, 158, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 198, 268, 275, 287, 440, 489, 490, 491, 493, 494, 499, 500, 505, 506], "tensordictmodul": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 43, 66, 68, 72, 78, 134, 135, 136, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 226, 232, 247, 293, 304, 310, 315, 318, 333, 334, 342, 343, 346, 351, 355, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 375, 377, 379, 383, 385, 386, 390, 391, 393, 394, 395, 396, 398, 400, 403, 405, 407, 408, 415, 418, 420, 421, 422, 423, 424, 425, 455, 470, 476, 484, 486, 487, 491, 494, 498, 499, 500, 501, 502, 506], "trail": [3, 58, 192, 284, 496], "treat": [3, 56, 480, 490, 491], "brief": [3, 478, 486, 489, 491, 503], "deliveri": 3, "metaclass": [3, 140, 145], "flank": [3, 480, 487], "dual": 3, "refer": [3, 7, 8, 9, 11, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 134, 137, 140, 143, 144, 145, 149, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 245, 275, 276, 277, 284, 287, 291, 304, 305, 318, 319, 320, 321, 322, 323, 326, 327, 335, 336, 346, 351, 355, 362, 365, 382, 385, 392, 393, 394, 395, 402, 405, 415, 417, 418, 422, 427, 435, 478, 483, 484, 486, 488, 490, 491, 492, 493, 499, 500, 503], "union": [3, 25, 36, 40, 41, 43, 48, 49, 50, 54, 55, 56, 58, 60, 61, 66, 67, 73, 74, 75, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 321, 342, 346, 351, 355, 389, 391, 403, 415, 417, 418, 471, 474], "assess": [3, 15, 16, 18, 21, 22, 23, 25, 27, 40, 41, 49, 75, 156, 157, 181, 190, 484], "split_trajectori": [3, 15, 16, 18, 21, 22, 23, 25, 27, 95, 115, 122, 123, 476], "adjac": [3, 32, 242, 367], "junction": 3, "inittrack": [3, 310, 315, 367, 484, 487], "tutori": [3, 165, 199, 475, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 506], "scratch": [3, 8, 485, 501], "mere": [3, 21, 488], "batch_lock": [3, 134, 137, 140, 142, 144, 152, 164, 168, 173, 174, 185, 186, 187, 190, 193, 194, 195, 224, 270, 277, 501], "contrast": [3, 308, 331, 397, 503], "notabl": 3, "braxenv": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 258, 476, 489], "jumanjienv": [3, 476], "straightforward": [3, 19, 478, 484, 485, 489, 490, 491, 492, 503], "merg": [3, 63, 70, 79, 80, 95, 97, 98, 501], "correctli": [3, 7, 36, 43, 48, 56, 66, 67, 73, 78, 102, 103, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 478], "silent": [3, 36, 43, 48, 66, 67, 73, 78, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 363, 365, 367, 370, 375, 378], "_step": [3, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 417], "temporari": [3, 484], "hold": [3, 276, 413, 414, 417, 478, 501, 503], "arm": 3, "unbatch": [3, 308, 313], "captur": [3, 289, 307, 332, 478, 488], "base_env": [3, 134, 136, 137, 140, 144, 145, 151, 152, 163, 164, 165, 168, 173, 174, 175, 177, 185, 186, 187, 190, 193, 194, 195, 220, 221, 224, 230, 232, 233, 235, 237, 238, 247, 253, 257, 259, 265, 268, 270, 271, 275, 277, 287, 442, 450, 478, 484, 485, 486, 488, 499, 502, 505, 506], "break_when_all_don": [3, 134, 137, 140, 144, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "conditionalskip": 3, "programmat": 3, "pretti": [3, 484, 489, 493, 503], "likewis": 3, "break_when_any_don": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 223, 275, 287, 293, 367, 500], "te": 3, "paragraph": 3, "deep": [3, 9, 227, 248, 297, 298, 299, 300, 303, 332, 382, 385, 397, 405, 406, 484, 499], "dive": 3, "gym3": 3, "envpool": [3, 159, 160], "simultan": [3, 25, 151, 159, 160, 164, 173, 478, 501], "advantag": [3, 8, 193, 200, 306, 382, 384, 399, 402, 404, 415, 417, 422, 423, 424, 425, 426, 427, 429, 431, 433, 435, 436, 438, 478, 480, 481, 484, 485, 486, 487, 500, 501, 506], "scale": [3, 4, 33, 97, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 192, 193, 194, 195, 227, 247, 251, 262, 269, 273, 284, 285, 290, 305, 311, 335, 336, 340, 341, 360, 361, 362, 368, 372, 374, 382, 383, 385, 398, 402, 403, 404, 405, 458, 464, 474, 479, 484, 485, 486, 487, 490, 500, 505], "varieti": [3, 11], "inherit": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 317, 321, 322, 400, 481, 486, 499, 500], "from_pixel": [3, 11, 135, 136, 138, 139, 143, 145, 146, 150, 151, 170, 227, 259, 440, 442, 484, 485, 487, 489, 493, 494, 502, 503, 505, 506], "81": [3, 122], "d": [3, 43, 63, 66, 70, 78, 79, 80, 99, 114, 115, 290, 308, 313, 346, 351, 355, 368, 372, 415, 418, 505], "privat": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 283, 501, 506], "absenc": 3, "total": [3, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 34, 52, 54, 60, 62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 95, 96, 97, 98, 100, 101, 102, 117, 123, 128, 187, 191, 198, 232, 344, 347, 348, 349, 350, 353, 384, 399, 402, 415, 416, 419, 451, 453, 455, 460, 463, 464, 483, 484, 485, 486, 487, 491, 499, 500, 502, 503, 504, 505], "accord": [3, 15, 16, 18, 21, 22, 23, 25, 27, 51, 62, 64, 71, 72, 85, 100, 101, 117, 120, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 176, 177, 185, 186, 187, 190, 191, 193, 194, 195, 251, 262, 311, 324, 335, 340, 341, 344, 347, 348, 349, 350, 416, 419, 420, 479, 480, 490, 491, 499, 501, 503], "inner": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 237, 277, 481, 485, 486, 500, 506], "kept": [3, 24, 26, 32, 121, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 218, 237, 264, 311, 340, 341, 491, 499], "wherev": 3, "lost": [3, 8, 283], "intern": [3, 51, 82, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 285, 482], "face": [3, 5, 8, 9, 351, 478, 489, 497, 506], "NOT": [3, 105, 106, 113, 123, 256], "right": [3, 6, 7, 32, 72, 115, 122, 195, 232, 351, 355, 485, 486, 488, 500, 501, 506], "preliminari": 3, "warranti": 3, "preclud": 3, "presenc": [3, 43, 66, 78, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 346, 351, 355, 415, 418, 491], "annihil": 3, "supersed": [3, 32], "pettingzoowrapp": [3, 476], "group": [3, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 66, 74, 75, 83, 86, 87, 88, 89, 90, 95, 102, 134, 137, 140, 144, 152, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 190, 193, 194, 195, 200, 248, 267, 353, 354, 412, 478, 479, 485, 490, 492, 500, 503], "__not__": [3, 368, 383, 385, 398, 403, 405, 407, 408], "constrain": [3, 247, 310, 315, 402, 506], "li": 3, "fact": [3, 7, 8, 478, 484, 486, 489, 499, 500, 501, 502, 503, 506], "meaning": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 192], "perfectli": [3, 481, 484, 488, 501], "meaningless": 3, "val": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 186, 285, 450, 491, 505], "agent0": [3, 488], "agent1": 3, "overrid": [3, 14, 17, 19, 20, 24, 26, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 70, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 95, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 287, 302, 346, 351, 355, 415, 417, 418, 442, 474, 479, 496], "bool": [3, 12, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 114, 115, 117, 118, 120, 121, 122, 123, 124, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 218, 219, 220, 221, 223, 224, 227, 228, 232, 233, 235, 237, 238, 239, 240, 242, 245, 247, 249, 250, 251, 253, 255, 257, 258, 260, 262, 263, 264, 267, 268, 270, 273, 274, 275, 277, 278, 279, 280, 282, 284, 285, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 355, 358, 359, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 428, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 449, 450, 453, 454, 455, 457, 458, 460, 474, 478, 485, 486, 488, 496, 497, 501, 505, 506], "500": [3, 484, 485], "note": [3, 4, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 219, 235, 238, 275, 284, 285, 287, 292, 308, 310, 312, 313, 315, 332, 346, 351, 355, 368, 372, 384, 392, 402, 415, 417, 418, 476, 480, 485, 488, 490, 496, 498, 499, 500, 506], "launch": [3, 15, 16, 21, 22, 23, 25, 28, 95, 164, 173], "bottleneck": [3, 8, 115, 122, 123], "great": [3, 7, 8, 488, 497, 499, 505], "speedup": [3, 8, 499, 506], "precis": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 218, 235, 238, 309, 314, 484, 486], "misspecifi": 3, "caus": [3, 7, 8, 15, 16, 18, 108, 110, 114, 115, 130, 134, 137, 140, 144, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 256, 415, 506], "breakag": 3, "rais": [3, 13, 15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 98, 100, 101, 102, 108, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 176, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 241, 250, 260, 269, 270, 271, 275, 277, 284, 287, 289, 307, 332, 344, 346, 347, 348, 349, 350, 351, 355, 385, 400, 405, 415, 416, 417, 418, 419, 450, 484, 486, 499, 500, 503], "mismatch": [3, 66, 384, 402, 415, 485], "subprocess": [3, 15, 16, 21, 141, 164, 173], "multithreadedenv": [3, 476], "underneath": 3, "higher": [3, 4, 114, 115, 192, 201, 207, 230, 375, 418, 484, 485, 486, 499, 503, 506], "cover": [3, 143, 145, 312, 477, 486, 489, 492, 493, 501, 505], "type": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 117, 134, 137, 140, 144, 152, 155, 158, 161, 164, 165, 166, 167, 168, 173, 174, 175, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 215, 216, 218, 224, 227, 231, 235, 236, 239, 240, 245, 247, 249, 255, 257, 258, 264, 268, 270, 274, 275, 276, 277, 278, 280, 282, 284, 285, 287, 289, 294, 295, 316, 321, 322, 325, 333, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 364, 368, 371, 372, 379, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 410, 412, 415, 416, 417, 418, 419, 420, 428, 440, 472, 476, 479, 484, 485, 486, 488, 492, 496, 499, 500, 501, 503, 506], "classic": [3, 149, 158, 167, 478, 485], "benchmark_batched_env": 3, "significantli": [3, 13, 22, 23, 25, 103, 122, 123, 227, 384, 402, 415, 480, 484, 485, 491, 500], "asyncenvpool": [3, 29, 168, 174], "pool": [3, 95, 96, 97, 98, 134, 168, 174, 271], "concurr": [3, 134, 499, 500], "contrari": [3, 480], "permit": [3, 230, 242, 267, 279, 382, 384, 399, 402, 404], "job": [3, 7, 22, 23, 25, 28, 70, 79, 80, 117, 503, 505], "famili": [3, 101], "interest": [3, 368, 372, 479, 485, 486, 489, 500, 501, 506], "prefer": [3, 15, 16, 21, 25, 32, 33, 63, 70, 79, 80, 122, 123, 134, 168, 174, 196, 256, 264, 402, 407, 457, 479, 486, 499, 500, 503, 505], "pleas": [3, 36, 43, 48, 56, 66, 67, 73, 78, 82, 98, 102, 134, 137, 140, 143, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 227, 245, 271, 275, 277, 287, 321, 322, 323, 346, 351, 355, 385, 405, 415, 417, 418, 477], "lifecycl": 3, "processorasyncenvpool": 3, "inter": [3, 164, 168], "threadingasyncenvpool": 3, "executor": [3, 22, 23, 25, 174], "functool": [3, 15, 16, 18, 21, 29, 134], "s0": [3, 134], "clamp": [3, 134, 372, 375, 394, 460, 480, 499, 501], "env_index": [3, 134], "async_step_send": [3, 134, 168, 174], "s0_result": [3, 134], "async_step_recv": [3, 134, 168, 174], "close": [3, 13, 15, 16, 18, 21, 22, 23, 25, 29, 68, 102, 134, 144, 159, 188, 189, 192, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 247, 276, 285, 287, 382, 384, 399, 402, 415, 417, 440, 484, 485, 489, 496, 498, 499, 501, 505], "paradigm": [3, 21, 500], "decpodp": 3, "game": [3, 4, 5, 95, 137, 156, 157, 162, 163, 232, 295, 442, 488, 493], "thank": [3, 185, 206, 207, 418, 478, 484, 488, 489, 505], "carrier": [3, 486, 487, 489, 503], "particular": [3, 36, 43, 48, 56, 66, 67, 73, 78, 84, 85, 97, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 277, 287, 346, 351, 355, 415, 417, 418, 480, 481, 485, 487, 489, 498, 500, 503], "thu": [3, 399, 500], "vma": [3, 178, 179, 440, 499, 500], "robot": [3, 5, 7, 255, 280, 282, 488, 500], "vmasenv": [3, 440, 476, 499, 500], "balanc": [3, 114, 115, 138, 139, 484, 485], "num_env": [3, 15, 16, 21, 27, 134, 143, 147, 160, 178, 179, 186, 187, 190, 196, 440, 499, 500], "n_agent": [3, 178, 179, 321, 322, 323, 333, 342, 420, 440, 480, 499, 500], "ground_rew": 3, "pos_rew": 3, "style": [3, 63, 70, 79, 80, 95, 97, 98, 203], "vari": [3, 143, 145, 146, 166, 167, 170, 178, 256, 480, 488, 500], "creation": [3, 164, 173, 206, 207, 351, 415, 506], "info_spec": [3, 164], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "categor": [3, 34, 35, 37, 38, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 134, 135, 136, 137, 140, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 190, 193, 194, 195, 219, 220, 221, 239, 257, 304, 312, 328, 331, 334, 346, 364, 365, 368, 369, 370, 387, 390, 391, 420, 476, 487], "prefix": [3, 32, 36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 84, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 272, 275, 277, 287, 344, 346, 347, 348, 349, 350, 351, 355, 368, 385, 400, 405, 415, 416, 417, 418, 419, 441, 487, 491, 496, 506], "exactli": [3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 146, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 308, 313, 328, 346, 351, 355, 385, 405, 415, 417, 418, 484, 487, 492, 499, 500], "action_kei": [3, 15, 16, 18, 21, 22, 23, 25, 27, 51, 134, 137, 140, 144, 152, 164, 165, 168, 169, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 220, 221, 237, 247, 249, 289, 291, 307, 317, 318, 332, 367, 480, 499, 500], "reward_kei": [3, 43, 45, 47, 51, 57, 76, 105, 106, 113, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 287, 291, 318, 454, 458, 499, 500], "set_kei": [3, 239, 382, 384, 385, 387, 390, 391, 392, 398, 399, 400, 402, 403, 404, 405, 415, 418, 420, 426, 484, 499, 500], "awai": [3, 486, 489, 499, 500, 505], "leaf": [3, 15, 16, 18, 20, 21, 22, 23, 25, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 51, 52, 53, 54, 55, 58, 59, 60, 61, 75, 83, 85, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 246, 268, 270, 276, 372], "autoresettransform": 3, "invalid": [3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 181, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 319, 320, 346, 351, 355, 415, 417, 418, 497], "nan": [3, 223, 283], "auto_reset": [3, 51, 134, 137, 140, 144, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 223, 287, 501], "auto_reset_replac": [3, 223], "placehold": [3, 145, 146, 190, 239, 277, 283], "set_gym_backend": [3, 15, 16, 18, 21, 29, 134, 137, 140, 143, 144, 152, 164, 165, 168, 173, 174, 175, 184, 185, 186, 187, 190, 193, 194, 195, 223, 476, 489, 505], "autoresettinggymenv": [3, 223], "self": [3, 15, 16, 18, 21, 22, 23, 25, 27, 33, 36, 40, 41, 43, 48, 49, 56, 62, 64, 66, 67, 71, 73, 75, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 243, 246, 247, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 283, 284, 287, 288, 289, 291, 304, 307, 310, 315, 318, 321, 322, 333, 342, 344, 346, 347, 348, 349, 350, 351, 355, 368, 371, 376, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 478, 481, 484, 496, 501, 505], "super": [3, 102, 158, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 291, 304, 318, 376, 383, 385, 386, 391, 398, 403, 405, 407, 408, 417, 484, 501, 505], "td_reset": [3, 223], "exclud": [3, 8, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 97, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 206, 207, 218, 223, 227, 240, 333, 355, 384, 399, 402, 415, 499, 500, 503], "r": [3, 4, 51, 56, 137, 187, 190, 203, 205, 220, 221, 223, 230, 232, 233, 251, 265, 272, 275, 284, 285, 290, 293, 309, 372, 381, 402, 421, 440, 478, 485, 501, 506], "3633e": [3, 223], "02": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 223, 285, 485, 494], "4877e": [3, 223], "01": [3, 223, 251, 285, 290, 332, 378, 382, 384, 399, 402, 415], "2849e": [3, 223], "7584e": [3, 223], "6609e": [3, 223], "6166e": [3, 223], "8366e": [3, 223], "2761e": [3, 223], "5685e": [3, 223], "4102e": [3, 223], "8111e": [3, 223], "9959e": [3, 223], "0865e": [3, 223], "5644e": [3, 223], "2119e": [3, 223], "2542e": [3, 223], "03": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 223, 251, 272], "9952e": [3, 223], "4059e": [3, 223], "2094e": [3, 223], "9009e": [3, 223], "5140e": [3, 223], "3554e": [3, 223], "2920e": [3, 223], "7893e": [3, 223], "6429e": [3, 223], "3057e": [3, 223], "2867e": [3, 223], "6963e": [3, 223], "3818e": [3, 223], "2576e": [3, 223], "2679e": [3, 223], "1640e": [3, 223], "00": [3, 135, 136, 223, 483, 504], "6972e": [3, 223], "0212e": [3, 223], "5959e": [3, 223], "4637e": [3, 223], "3121e": [3, 223], "2168e": [3, 223], "5232e": [3, 223], "7704e": [3, 223], "7457e": [3, 223], "4127e": [3, 223], "1064e": [3, 223], "0854e": [3, 223], "5712e": [3, 223], "2189e": [3, 223], "5235e": [3, 223], "8289e": [3, 223], "0009e": [3, 223], "0257e": [3, 223], "8893e": [3, 223], "5872e": [3, 223], "9405e": [3, 223], "7766e": [3, 223], "0403e": [3, 223], "0626e": [3, 223], "2959e": [3, 223], "7263e": [3, 223], "2775e": [3, 223], "9564e": [3, 223], "0411e": [3, 223], "6769e": [3, 223], "6354e": [3, 223], "8698e": [3, 223], "1765e": [3, 223], "6292e": [3, 223], "5375e": [3, 223], "1820e": [3, 223], "7023e": [3, 223], "5836e": [3, 223], "9016e": [3, 223], "4826e": [3, 223], "6191e": [3, 223], "6387e": [3, 223], "8667e": [3, 223], "2056e": [3, 223], "1147e": [3, 223], "5991e": [3, 223], "0278e": [3, 223], "5219e": [3, 223], "3067e": [3, 223], "6617e": [3, 223], "3322e": [3, 223], "2629e": [3, 223], "4599e": [3, 223], "7298e": [3, 223], "5848e": [3, 223], "0148e": [3, 223], "5745e": [3, 223], "6982e": [3, 223], "7877e": [3, 223], "3527e": [3, 223], "7285e": [3, 223], "6668e": [3, 223], "0583e": [3, 223], "6956e": [3, 223], "3962e": [3, 223], "9845e": [3, 223], "5015e": [3, 223], "5903e": [3, 223], "9993e": [3, 223], "9418e": [3, 223], "0196e": [3, 223], "6557e": [3, 223], "2109e": [3, 223], "8997e": [3, 223], "1507e": [3, 223], "7363e": [3, 223], "0310e": [3, 223], "9574e": [3, 223], "8980e": [3, 223], "0090e": [3, 223], "forecast": 3, "awar": [3, 7, 102, 103, 108, 109, 110, 111, 124, 126, 130, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 276, 287, 310, 315, 417, 485, 487], "detect": [3, 101, 189, 193, 400, 415, 418, 478, 480], "return_contigu": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 498], "tensordictbas": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 69, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 128, 134, 137, 140, 142, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 219, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 287, 289, 291, 307, 310, 315, 317, 318, 332, 344, 346, 347, 348, 349, 350, 351, 355, 363, 365, 367, 370, 371, 372, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 460, 484, 499, 501], "envwithdynamicspec": 3, "max_count": 3, "float": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 33, 36, 37, 40, 42, 43, 48, 56, 60, 63, 66, 67, 72, 73, 78, 79, 86, 102, 114, 115, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 223, 227, 231, 235, 238, 247, 248, 251, 255, 260, 261, 262, 269, 270, 273, 276, 277, 280, 282, 285, 287, 289, 290, 292, 293, 302, 305, 308, 311, 313, 316, 319, 320, 324, 325, 331, 335, 336, 339, 341, 346, 351, 355, 371, 375, 378, 380, 381, 382, 383, 384, 385, 389, 390, 391, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 415, 417, 418, 421, 427, 428, 429, 430, 431, 432, 433, 434, 435, 458, 478, 484, 485, 503, 506], "_set_se": [3, 221, 224, 235, 238, 257, 501], "lazystackedtensordict": [3, 29, 51, 75, 95, 109, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 498], "float32": [3, 15, 16, 18, 37, 40, 43, 45, 51, 62, 63, 64, 66, 71, 72, 76, 78, 79, 80, 83, 84, 85, 86, 95, 96, 97, 98, 100, 101, 108, 109, 110, 114, 115, 122, 130, 134, 135, 136, 137, 140, 143, 144, 145, 150, 151, 152, 158, 161, 162, 163, 164, 165, 168, 171, 172, 173, 174, 175, 176, 178, 179, 185, 186, 187, 190, 191, 193, 194, 195, 212, 218, 220, 224, 235, 238, 239, 240, 245, 248, 251, 253, 257, 258, 260, 264, 267, 268, 270, 273, 278, 291, 293, 303, 304, 310, 315, 318, 332, 333, 334, 342, 344, 346, 347, 348, 349, 350, 351, 355, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 374, 376, 379, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 416, 418, 419, 420, 479, 496, 501], "exclusive_field": [3, 29, 51, 95, 109, 134, 187, 190, 200], "stack_dim": [3, 29, 51, 95, 109, 134, 187, 190, 200, 211], "dramat": 3, "carefulli": [3, 198, 499, 500, 506], "against": [3, 5, 7, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 359, 364, 365, 368, 369, 370, 371, 372, 383, 385, 398, 403, 405, 407, 408, 415, 417, 418, 486, 499, 500], "plain": [3, 8, 383, 385, 391, 398, 403, 405, 407, 408, 423, 424, 425, 489], "expens": [3, 30, 115, 122, 123, 440, 503], "absent": [3, 40, 41, 49, 75, 78, 97, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 264, 277], "torchvis": [3, 11, 255, 282, 444, 499, 505, 506], "callabl": [3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 103, 117, 134, 137, 140, 141, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 217, 222, 224, 231, 232, 233, 239, 245, 270, 277, 278, 287, 288, 294, 295, 316, 323, 346, 351, 355, 372, 381, 400, 415, 417, 418, 440, 465, 466, 472, 473, 474, 485, 503], "bring": [3, 486, 489, 506], "kind": [3, 70, 83, 491, 499, 503], "consult": 3, "resize_par": 3, "revers": [3, 313], "order": [3, 11, 18, 20, 29, 30, 36, 43, 48, 56, 60, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 117, 121, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 228, 235, 238, 245, 253, 267, 275, 277, 287, 331, 346, 351, 355, 359, 364, 371, 373, 374, 376, 382, 383, 385, 386, 390, 391, 398, 402, 403, 404, 405, 407, 408, 415, 417, 418, 485, 499, 500], "chain": [3, 62, 63, 64, 70, 71, 79, 80, 85, 95, 97, 98, 100, 101, 152, 185, 191, 193, 194, 206, 231, 237, 294, 295, 344, 347, 348, 349, 350, 374, 416, 419, 478, 506], "in_keys_inv": [3, 209, 213, 230, 235, 236, 238, 245, 251, 252, 253, 257, 258, 260, 265, 274, 276, 278, 279, 484, 498, 501, 506], "append_transform": [3, 51, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 245, 246, 247, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 287, 293, 310, 315, 417, 440, 478, 484, 487, 496, 499, 501, 503, 505, 506], "doubletofloat": [3, 484, 486, 498], "float64": [3, 36, 43, 48, 56, 66, 67, 73, 78, 95, 96, 97, 98, 102, 134, 137, 138, 139, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 231, 235, 238, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "think": [3, 101, 185, 187, 189, 190, 192, 198, 477, 478, 486, 499, 500, 506], "in_": 3, "out_": 3, "perspect": [3, 198, 304, 365, 392, 486, 488], "outer": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 277, 481, 484, 485, 506], "obs_standard": 3, "out_keys_inv": [3, 209, 213, 230, 235, 236, 238, 245, 251, 252, 253, 257, 258, 265, 267, 274, 276, 278, 279, 501], "illustr": [3, 478, 484, 485, 490, 503], "chang": [3, 5, 7, 11, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 102, 103, 108, 109, 110, 111, 115, 121, 122, 124, 126, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 235, 236, 238, 240, 247, 249, 257, 258, 264, 268, 274, 276, 277, 278, 284, 285, 287, 313, 346, 351, 355, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 478, 480, 484, 487, 497, 499, 500, 501, 502, 503, 506], "schemat": [3, 480], "outermost": 3, "innermost": 3, "similar": [3, 36, 43, 48, 56, 58, 62, 64, 66, 67, 70, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 281, 282, 284, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 360, 362, 368, 371, 372, 415, 416, 417, 418, 419, 478, 480, 484, 485, 486, 487, 488, 490, 491, 492, 493, 501, 503, 505, 506], "transform_action_spec": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 236, 251, 276, 278, 279, 287, 417], "spec_from_random_valu": 3, "_apply_transform": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 417, 501, 506], "rand": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 109, 117, 135, 136, 150, 151, 158, 162, 163, 169, 176, 177, 221, 224, 235, 238, 257, 267, 291, 318, 368, 382, 383, 385, 386, 387, 389, 390, 391, 398, 400, 402, 403, 405, 407, 408, 415, 418, 501, 505, 506], "approach": [3, 63, 70, 79, 80, 202, 227, 251, 290, 312, 321, 322, 353, 407, 478, 484, 486, 491, 492, 499, 506], "insid": [3, 62, 64, 71, 85, 100, 101, 164, 191, 236, 344, 347, 348, 349, 350, 416, 419, 506], "did": [3, 70, 283, 428, 485, 486, 492, 503, 506], "_inv_apply_transform": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 276, 287, 417, 501, 506], "actiondiscret": 3, "rand_act": [3, 134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 224, 277, 489], "action_discret": 3, "addonetoob": 3, "Is": [3, 276], "rewrit": [3, 276], "_call": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 237, 239, 240, 241, 242, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 417, 496, 501], "_inv_cal": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 276, 287, 417], "overwrit": [3, 276], "till": [3, 276, 283], "encapsul": [3, 276, 489, 490, 491], "forget": [3, 276, 313], "edit": [3, 198, 276, 287, 492], "top": [3, 4, 102, 128, 135, 136, 150, 151, 234, 276, 291, 318, 490], "transform_output_spec": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 235, 236, 240, 247, 249, 257, 258, 264, 268, 274, 276, 278, 285, 287, 417], "transform_input_spec": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 224, 231, 235, 236, 237, 249, 253, 257, 258, 263, 267, 268, 269, 270, 274, 276, 278, 281, 287, 417], "transform_observation_spec": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 227, 228, 229, 230, 231, 234, 235, 236, 239, 240, 242, 244, 246, 247, 249, 251, 253, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 283, 284, 285, 287, 417, 501], "transform_state_spec": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 236, 251, 276, 278, 279, 287, 417], "transform_reward_spec": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 225, 230, 231, 235, 236, 240, 247, 248, 249, 257, 258, 261, 262, 263, 264, 265, 267, 268, 274, 276, 278, 279, 285, 287, 417, 478, 496], "rewardsum": [3, 102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 276, 287, 417, 499, 500], "undo": [3, 198], "addonetoact": 3, "subtract": [3, 201, 269], "regist": [3, 14, 17, 19, 20, 24, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 117, 134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 218, 235, 238, 239, 263, 275, 277, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 346, 351, 355, 363, 365, 367, 370, 375, 378, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 440, 442, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 481, 484, 486, 489, 503], "manipul": [3, 4, 8, 138, 139, 255, 276, 280, 478], "third_transform": 3, "unexpect": [3, 15, 16, 18, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 506], "behviour": 3, "fortun": [3, 487, 488, 489, 490, 493], "alreadi": [3, 8, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 95, 100, 101, 102, 108, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 219, 270, 287, 288, 344, 346, 347, 348, 349, 350, 351, 355, 372, 415, 416, 417, 418, 419, 422, 423, 424, 425, 484, 486, 493, 499, 500], "catfram": [3, 367, 485], "notic": [3, 128, 227, 480, 486, 494, 501], "parenthood": 3, "henc": [3, 30, 63, 219, 256, 321, 484, 486, 499, 500, 501], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 164, 173, 277, 440, 450, 501], "discret": [3, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 134, 137, 140, 143, 144, 145, 152, 156, 157, 164, 165, 166, 167, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195, 220, 237, 245, 328, 331, 334, 389, 390, 391, 392, 479, 485, 490, 500], "might": [3, 62, 64, 65, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419, 446, 477, 484, 489, 506], "action_mask": [3, 137, 150, 151, 166, 167, 171, 172, 221, 497], "unavail": [3, 166, 167], "probabl": [3, 4, 8, 72, 114, 115, 117, 120, 201, 202, 206, 207, 292, 293, 302, 304, 307, 308, 310, 312, 313, 315, 316, 319, 320, 328, 340, 341, 346, 351, 355, 368, 372, 385, 391, 402, 405, 418, 478, 479, 480, 485, 488, 490, 505], "probabilistictensordictmodul": [3, 247, 372, 373, 480, 505], "tensordictsequenti": [3, 43, 66, 78, 293, 307, 310, 315, 332, 346, 351, 355, 364, 367, 373, 374, 379, 415, 418, 479, 484, 485, 487, 488, 490, 494, 498, 499, 502, 505], "maskedcategor": [3, 320, 476], "linear": [3, 15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 66, 67, 68, 73, 78, 102, 134, 135, 136, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 247, 255, 270, 276, 277, 280, 282, 287, 291, 293, 294, 295, 297, 298, 299, 300, 304, 306, 307, 316, 318, 321, 322, 324, 325, 332, 334, 335, 336, 346, 351, 355, 359, 360, 361, 362, 366, 367, 368, 369, 371, 374, 376, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 470, 479, 485, 498, 502, 505], "in_feat": 3, "out_feat": 3, "logit": [3, 64, 72, 303, 312, 319, 320, 328, 331, 346, 351, 355, 365, 368, 390, 391, 478, 479], "dist": [3, 10, 312, 319, 320, 328, 372, 480, 490], "distribution_class": [3, 247, 360, 361, 362, 363, 368, 372, 374, 382, 383, 385, 390, 391, 398, 402, 403, 404, 405, 479, 484, 486, 490, 499, 500, 505], "wrap": [3, 5, 15, 16, 18, 21, 22, 23, 25, 27, 33, 36, 42, 43, 48, 56, 66, 67, 72, 73, 78, 98, 102, 134, 135, 136, 137, 140, 144, 145, 149, 150, 151, 152, 157, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 177, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 233, 275, 277, 287, 288, 310, 315, 343, 346, 351, 355, 360, 361, 362, 367, 369, 372, 377, 400, 415, 417, 418, 420, 478, 479, 484, 485, 486, 487, 491, 494, 496, 499, 500, 506], "actionmask": [3, 137], "your_base_env": 3, "mask_kei": [3, 32, 221, 256, 287, 346, 351, 355], "itself": [3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 223, 287, 346, 351, 355, 400, 407, 415, 417, 418, 486, 489], "ey": 3, "report": [3, 135, 136, 150, 151, 493], "foremost": 3, "callback": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 500], "ad": [3, 4, 18, 29, 32, 36, 43, 48, 51, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 92, 95, 96, 97, 98, 102, 114, 115, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 227, 245, 263, 275, 277, 287, 290, 324, 325, 332, 346, 351, 355, 381, 382, 384, 385, 387, 392, 399, 402, 405, 415, 417, 418, 420, 485, 487, 488, 490, 496, 499, 503, 505, 506], "tensordictrecord": [3, 476], "videorecord": [3, 11, 440, 476, 486, 493, 494, 499], "csvlogger": [3, 11, 440, 442, 476, 485, 493, 494, 499], "wandblogg": [3, 476, 493], "tensorboardlogg": [3, 470, 476, 493], "tag": [3, 7, 11, 189, 190, 192, 440, 442, 444, 447, 474, 478, 493, 494, 496, 499], "mp4": [3, 440, 442, 444, 494, 499], "video_format": [3, 440, 442, 444, 494, 499], "whc": 3, "cwh": 3, "exp": [3, 381, 480], "al": [3, 15, 16, 18, 21, 29, 33, 143, 145, 239, 253, 291, 488, 506], "pong": [3, 15, 16, 18, 21, 29, 95, 160, 253, 488, 506], "v5": [3, 15, 16, 18, 21, 29, 143, 145, 160, 239, 253, 488, 506], "grow": [3, 109, 478], "tediou": [3, 489], "workspac": [3, 85, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 245], "pixelrendertransform": [3, 476, 499], "stream": [3, 103], "alik": [3, 440], "envcreat": [3, 18, 28, 164, 173, 275, 285, 440, 470, 471, 474, 476, 484, 485, 505, 506], "render_mod": [3, 440, 501], "rgb_arrai": [3, 440, 499, 500, 501], "uncom": [3, 493], "line": [3, 7, 36, 43, 48, 51, 56, 66, 67, 73, 78, 85, 95, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 485, 493, 499, 500], "comment": [3, 481, 485, 505], "pixels_record": [3, 440], "mission": [3, 203], "irrespect": [3, 371, 372], "dmcontrol": [3, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "jumanji": [3, 134, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "framework": [3, 4, 9, 28, 134, 135, 136, 137, 140, 144, 150, 151, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 308, 478, 496, 497, 505, 506], "Its": [3, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 284, 287, 346, 351, 355, 371, 415, 417, 418, 426], "success": [3, 95, 96, 97, 98, 187, 189, 192, 193, 200, 227, 272, 307, 385, 407, 478, 485, 492, 494, 497, 501, 503, 505], "foundat": [3, 5, 166, 167, 478, 486, 500], "inspir": [3, 488, 501], "gone": [3, 4, 5, 367], "concomittantli": 3, "problem": [3, 7, 8, 9, 18, 190, 415, 485, 486, 487, 492, 499, 500, 501, 503, 506], "decor": [3, 8, 215, 217, 288, 310, 315, 358, 400, 422, 423, 424, 425, 450, 478, 487, 505], "relev": [3, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 72, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 422, 423, 424, 425, 426, 449, 488, 501], "gym_backend": [3, 217, 476], "env1": [3, 293, 498], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 137, 217], "env2": [3, 498], "_env": [3, 6, 143, 506], "classic_control": 3, "pendulumenv": [3, 51, 476, 501], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 154, 184, 248], "side": [3, 4, 201, 202, 206, 207, 319, 346, 506], "v0": [3, 15, 16, 40, 41, 49, 75, 134, 137, 140, 144, 146, 149, 150, 151, 152, 153, 154, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 231, 248, 277, 284, 285, 450, 470], "26": [3, 123, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 206, 207, 232], "fun": [3, 217, 288, 486, 499, 500], "reveal": 4, "curv": 4, "exploit": [4, 490], "cv": 4, "flip": [4, 151], "correspondingli": 4, "invers": [4, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 68, 69, 70, 74, 75, 79, 80, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 102, 117, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 227, 235, 238, 240, 245, 251, 258, 260, 272, 274, 276, 278, 287, 380, 384, 390, 398, 402, 415, 417, 476, 501], "prescript": 4, "tune": [4, 33, 247, 418, 478, 499, 500, 502], "coeffici": [4, 33, 42, 72, 201, 206, 247, 384, 391, 399, 402, 405, 415, 418, 500], "bonu": [4, 192, 382, 384, 399, 402, 415, 478], "beta": [4, 63, 79, 114, 115, 390, 398, 399, 418, 484, 485, 503, 505], "reduc": [4, 6, 39, 114, 115, 128, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 227, 233, 269, 285, 290, 292, 340, 418, 476, 485, 499], "downstream": [4, 480, 484], "formul": [4, 499, 500], "rate": [4, 11, 95, 284, 285, 421, 485, 486, 499, 500], "gradient": [4, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 287, 292, 311, 320, 325, 328, 340, 341, 346, 351, 355, 372, 382, 384, 385, 386, 390, 391, 396, 398, 399, 400, 402, 403, 404, 405, 407, 408, 415, 417, 418, 421, 422, 423, 424, 425, 460, 484, 486, 499, 500, 501], "easier": [4, 67, 478, 479, 484, 505], "local": [4, 7, 10, 13, 15, 16, 18, 19, 21, 22, 23, 25, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 69, 73, 78, 98, 100, 102, 115, 122, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 285, 287, 321, 322, 333, 342, 346, 351, 352, 355, 415, 417, 418, 420, 447, 449, 488, 493, 494, 499, 500], "optima": 4, "product": [4, 9, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 308, 309, 313, 314, 472, 473, 497], "sum": [4, 15, 16, 27, 36, 43, 54, 60, 78, 128, 135, 136, 138, 139, 143, 145, 146, 150, 151, 159, 160, 170, 192, 226, 248, 263, 319, 320, 340, 342, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 398, 399, 401, 402, 403, 404, 405, 407, 408, 415, 418, 421, 428, 478, 480, 484, 485, 486, 487, 488, 491, 494, 499, 500, 501, 506], "stat": [4, 251, 284, 285, 464, 474, 485, 486], "w": [4, 117, 137, 162, 163, 227, 229, 234, 259, 273, 308, 332, 402, 442, 485, 503], "yield": [4, 15, 16, 18, 27, 29, 30, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 400, 415, 417, 418, 478, 484, 491], "insight": [4, 186, 488], "auxiliari": [4, 491], "credit": 4, "spars": [4, 43, 478, 487], "intermedi": [4, 15, 16, 43, 51, 66, 78, 226, 293, 310, 315, 346, 351, 355, 365, 415, 418, 484, 488, 502], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": [4, 187], "likelihood": [4, 484], "discov": 4, "score": [4, 72, 192, 329, 331, 402, 478], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": 4, "select": [4, 43, 63, 66, 68, 69, 70, 78, 79, 80, 85, 95, 96, 97, 98, 101, 102, 117, 137, 156, 157, 166, 167, 169, 178, 179, 185, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 291, 346, 351, 355, 364, 369, 415, 417, 418, 459, 479, 480, 484, 488, 489, 497, 499, 503], "explicit": [4, 15, 16, 18, 288, 503], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 33, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 313, 390, 398, 486, 500], "addition": [4, 302], "timestep": [4, 72, 97, 260, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 499, 500], "realli": 4, "huge": [4, 322, 487], "std": [4, 251, 284, 289, 330, 484, 506], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 483, 487, 489, 491, 492, 493, 494, 495, 498, 502, 503, 504], "unseen": 4, "extrins": 4, "wrong": [4, 115, 122, 198], "bonus": 4, "denser": 4, "prior": [4, 73, 336, 394, 500], "freshli": 4, "drop": [4, 121, 123, 218, 285, 384, 402, 415], "meant": [4, 56, 158, 193], "encourag": [4, 164, 198, 331, 391, 405, 484, 485, 503], "measur": [4, 102, 108, 110, 114, 130, 135, 136, 150, 151, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 384, 402, 415, 417, 486, 492], "novelti": 4, "revisit": 4, "diminish": 4, "decreas": [4, 33, 490], "ideal": [4, 185, 232, 251, 415, 478, 497, 501], "distil": 4, "nois": [4, 286, 325, 332, 357, 403, 407, 408, 455, 474, 484, 499], "exploratori": [4, 382, 384, 399, 402, 415], "misalign": 4, "trade": [4, 490], "unavoid": 4, "bootstrap": [4, 392, 422, 423, 429, 430, 484, 487], "noisi": [4, 324, 325, 357, 479], "unstabl": [4, 114, 115, 311, 340, 341], "inher": [4, 382, 402], "stochast": [4, 247, 305, 325, 326, 336, 383, 385, 388, 390, 391, 396, 398, 401, 403, 405, 479, 486, 490, 500], "enemi": 4, "pomdp": [4, 503], "loos": [4, 372, 479, 485, 486], "nonexist": 4, "sequenc": [4, 15, 16, 18, 21, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 72, 74, 75, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 99, 107, 117, 118, 120, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 159, 160, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 209, 213, 225, 226, 227, 228, 229, 234, 235, 237, 238, 242, 244, 245, 248, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 278, 284, 285, 294, 295, 302, 304, 308, 312, 313, 316, 319, 320, 321, 322, 328, 334, 338, 346, 351, 355, 363, 373, 374, 388, 415, 418, 441, 442, 455, 456, 457, 459, 460, 478, 479, 484, 486, 487, 488, 498, 499, 500, 506], "lstm": [4, 270, 314, 315, 488], "rel": [4, 117, 270, 302, 339, 478, 484, 485, 499, 500, 503], "tend": 4, "stabl": [4, 9, 10, 114, 115, 161], "compens": 4, "descent": [4, 325], "minimum": [4, 86, 134, 164, 173, 261, 305, 339, 340, 341, 375, 378, 381, 383, 385, 391, 400, 401, 405, 415, 418, 451, 480, 484, 486, 494, 499, 500], "manual": [4, 11, 22, 25, 27, 51, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 144, 145, 195, 204, 484, 487, 503], "deviat": [4, 251, 284, 285, 289, 291, 305, 318, 324, 325, 330, 331, 402, 407, 408, 418, 484, 490, 500], "radic": 4, "begin": [4, 15, 16, 18, 21, 22, 23, 25, 27, 115, 122, 223, 308, 309, 313, 314, 381, 450, 480, 488, 489, 490, 491, 492, 493, 494, 496], "stabil": [4, 114, 115, 243, 292, 382, 384, 399, 402, 404, 415], "stage": [4, 484, 501], "never": [4, 15, 16, 21, 29, 37, 86, 114, 115, 272, 312, 492, 505], "prevent": [4, 34, 35, 39, 40, 41, 44, 49, 52, 53, 54, 55, 60, 61, 68, 75, 106, 114, 115, 135, 136, 284, 285, 311, 340, 341, 382, 384, 399, 402, 404, 415, 458, 478, 493, 503], "entir": [4, 15, 16, 18, 40, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 285, 321, 478, 486, 489, 501, 503], "submit": [4, 143, 224, 477, 505], "system": [4, 5, 101, 106, 185, 186, 187, 190, 192, 203, 204, 205, 206, 207, 415, 418, 478, 486, 497, 499, 500, 501], "adequ": [4, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 486, 499, 500], "infeas": 4, "allevi": [4, 479], "prune": [4, 152, 194], "fire": [4, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "illeg": 4, "chess": [4, 137, 162, 163], "grasp": 4, "wherein": 4, "cumul": [4, 43, 263, 269, 291, 428, 486], "q": [4, 9, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 297, 298, 299, 300, 303, 304, 306, 333, 334, 342, 362, 365, 369, 370, 383, 385, 386, 387, 389, 390, 391, 392, 397, 398, 403, 405, 407, 408, 420, 476, 484, 491, 496], "flow": [4, 422, 478, 484, 486, 499, 500, 501, 503], "reparameter": [4, 302, 312, 320, 328], "soft": [4, 397, 405, 406, 499], "critic": [4, 8, 192, 360, 366, 382, 384, 385, 386, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 415, 484, 491], "clip": [4, 72, 198, 230, 261, 382, 384, 399, 402, 404, 407, 408, 415, 460, 486, 500, 501], "oppos": [4, 84], "incorrect": [4, 122, 198], "thought": [4, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 478], "region": [4, 115], "squash": [4, 487, 505], "tanh": [4, 294, 295, 308, 309, 311, 313, 314, 316, 322, 339, 340, 341, 375, 486, 490, 499, 500, 501, 502], "prob": [4, 201, 202, 206, 207, 312, 319, 320, 328, 331, 346, 351, 355, 486, 497, 500], "rememb": [4, 499], "remap": 4, "origin": [4, 8, 43, 62, 64, 65, 66, 71, 72, 78, 81, 85, 100, 101, 103, 148, 185, 191, 236, 237, 247, 255, 277, 282, 287, 308, 312, 344, 346, 347, 348, 349, 350, 351, 355, 368, 371, 372, 383, 385, 397, 398, 400, 402, 403, 405, 407, 408, 415, 416, 418, 419, 478, 484, 488, 496, 498, 501, 506], "world": [5, 158, 377, 394, 488, 493, 499, 500, 501, 506], "histor": 5, "ceas": 5, "farama": [5, 98, 153, 154, 166, 167, 486, 501], "gymwrapp": [5, 134, 137, 140, 144, 149, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 240, 264, 268, 283, 476, 486, 505], "feel": [5, 477, 494, 505], "free": [5, 7, 13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 218, 235, 238, 312, 382, 394, 402, 481, 486, 494, 500, 505], "gladli": 5, "prepar": [6, 47, 185, 188, 206, 207, 418, 478, 486], "conda": [6, 7, 477], "cmake": 6, "activ": [6, 7, 9, 51, 294, 295, 301, 305, 316, 321, 322, 384, 399, 402, 479, 501, 505], "sim": 6, "bullet": 6, "headless": [6, 7, 149, 199, 496], "cluster": [6, 7, 8, 22, 27, 477], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 146], "y": [6, 7, 43, 66, 70, 78, 161, 306, 321, 343, 346, 351, 355, 415, 418, 484, 500, 503], "facebookresearch": [6, 146], "subdirectori": 6, "verbos": [6, 29, 30, 102, 192, 417, 494, 496], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "command": [6, 7, 10, 168, 174, 175, 486, 496, 499, 500, 501, 506], "readm": [6, 7, 178, 505], "md": [6, 7], "habitatenv": [6, 476], "_has_habitat": 6, "available_env": [6, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 150, 151, 152, 153, 156, 157, 161, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 190, 193, 194, 195, 506], "startswith": [6, 293, 480, 484, 491], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 141, 400, 484], "env_nam": [6, 134, 135, 137, 138, 140, 141, 143, 144, 146, 150, 152, 153, 159, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 484, 486, 506], "llvmlite": 6, "config": [6, 7, 255, 282, 296, 301, 330, 464, 465, 466, 468, 471], "var": [6, 7, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 285, 287, 346, 351, 355, 385, 400, 405, 415, 417, 418], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 135, 136, 364, 383, 385, 391, 398, 400, 403, 405, 407, 408, 423, 424, 425], "importerror": [6, 7, 10, 497], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 36, 39, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 287, 346, 351, 355, 385, 400, 405, 415, 417, 418, 488, 503], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 97, 488], "stand": [7, 46, 138, 139, 164, 173, 498, 501], "joint": [7, 485], "contact": [7, 65, 499], "engin": [7, 170, 352, 417, 478, 496, 501], "biomechan": 7, "graphic": 7, "anim": [7, 500], "area": 7, "demand": [7, 493, 506], "articul": 7, "acquir": [7, 486], "deepmind": [7, 8, 9, 134, 137, 138, 139, 140, 144, 152, 156, 157, 162, 163, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 239, 486, 489], "whomev": 7, "licenc": 7, "incorpor": [7, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 307, 332, 407, 487, 490, 501], "relianc": 7, "obsolet": 7, "legaci": [7, 32, 201, 202, 206, 207], "pro": [7, 477], "tip": [7, 477], "glfw": [7, 484], "osmesa": 7, "egl": 7, "advic": [7, 506], "sudo": [7, 477], "apt": [7, 500], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "workflow": [7, 152, 194, 360, 361, 362, 478, 497], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "mkdir": 7, "earlier": [7, 480, 484, 486, 487, 499, 500, 503], "roboti": 7, "html": [7, 15, 16, 159, 161, 162, 163, 496], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 15, 16, 21, 164, 173], "mjkei": 7, "txt": [7, 418], "mjlib_path": 7, "home": [7, 62, 64, 84, 99], "bin": [7, 304, 331, 365, 479], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 114, 115, 300, 368, 372, 484, 486, 488, 503], "nvidia": [7, 148, 488], "older": [7, 288], "hack": [7, 484], "adatp": 7, "script": [7, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 450, 470, 474, 479, 480, 481, 484, 485, 488, 493, 499, 500, 501, 503], "unnot": [7, 256], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 106, 485, 503], "troubleshoot": 7, "gl": 7, "h": [7, 117, 227, 229, 234, 259, 273, 308, 309, 310, 313, 314, 315, 318, 442, 485, 503], "eglshim": 7, "fatal": 7, "No": [7, 15, 16, 18, 21, 22, 23, 25, 27, 29, 31, 34, 35, 39, 44, 54, 55, 60, 61, 192], "directori": [7, 62, 64, 71, 84, 85, 95, 97, 98, 100, 101, 104, 108, 191, 344, 347, 348, 349, 350, 416, 419, 447, 449, 478, 480, 481, 484, 490, 493, 499], "devel": 7, "ubuntu": [7, 148], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 485, 487, 498], "libstdc": 7, "glibcxx_3": 7, "29": [7, 122, 123], "compil": [7, 15, 16, 18, 32, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 102, 103, 107, 108, 109, 110, 111, 115, 118, 122, 123, 124, 129, 130, 132, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 288, 308, 309, 313, 314, 340, 346, 351, 355, 415, 417, 418, 422], "libosmesa": 7, "libgcc": 7, "filenotfounderror": [7, 98], "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "myscript": 7, "runtimeerror": [7, 8, 15, 16, 18, 21, 24, 29, 36, 39, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 250, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418, 480, 506], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 122, 135, 136], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 499, 500], "global": [7, 36, 43, 48, 56, 66, 67, 70, 73, 78, 79, 80, 102, 117, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 275, 287, 333, 342, 346, 351, 353, 355, 368, 372, 415, 417, 418, 420, 481, 484, 499, 500], "cuda_visible_devic": 7, "id": [7, 14, 17, 19, 20, 24, 26, 32, 72, 85, 115, 117, 122, 123, 134, 137, 140, 143, 144, 152, 164, 165, 168, 173, 174, 175, 176, 177, 185, 186, 187, 190, 192, 193, 194, 195, 332, 385, 403, 445, 449, 492, 503], "slurm_step_gpu": 7, "black": [7, 137, 499], "onscreen": 7, "101": 7, "lgl": 7, "libegl": 7, "x11": [7, 500], "xlib": 7, "libx11": 7, "xorg": 7, "attributeerror": [7, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "nonetyp": [7, 14, 17, 19, 20, 24, 26, 31], "glgeterror": 7, "this_dir": 7, "pwd": 7, "ln": 7, "libglut": 7, "sketch": [8, 481], "n_training_step": 8, "datapoint": [8, 84, 503], "n_data_per_train": 8, "no_grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 247, 287, 292, 308, 309, 313, 314, 346, 351, 355, 415, 417, 418, 422, 423, 424, 425, 486, 487, 488, 500], "loss_fn": [8, 487, 491, 492, 505], "zero_grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 331, 346, 351, 355, 415, 417, 418, 481, 484, 486, 487, 488, 491, 494, 499, 500, 501], "backpropag": [8, 135, 136, 150, 151, 164, 382, 383, 384, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 418, 420, 491, 500, 501], "differenti": [8, 84, 135, 136, 247, 385, 407, 422, 423, 424, 425, 487, 490, 491, 499, 500, 501], "denomin": 8, "artifact": 8, "numer": [8, 70, 114, 115, 144, 195, 284, 311, 340, 341, 359, 364, 365, 368, 369, 370, 371, 372, 458, 486, 503, 506], "misconcept": 8, "freed": 8, "appear": [8, 11, 37, 60, 85, 86, 95, 115, 122, 123, 140, 193, 200, 480, 501, 503], "compuat": 8, "fix": [8, 42, 164, 270, 383, 385, 401, 405, 485, 494, 501, 506], "retain_graph": [8, 135, 136], "discuss": [8, 9, 492, 499, 500], "inplac": [8, 36, 43, 48, 51, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 344, 346, 347, 348, 349, 350, 351, 355, 371, 415, 416, 417, 418, 419, 484], "forward": [8, 15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 95, 96, 97, 98, 102, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 251, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 321, 322, 323, 324, 326, 327, 330, 332, 333, 335, 336, 338, 342, 343, 346, 351, 355, 363, 365, 367, 368, 370, 371, 372, 375, 376, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 422, 423, 424, 425, 426, 476, 480, 487, 501, 505], "submodul": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 270, 287, 310, 315, 346, 351, 355, 379, 400, 415, 417, 418], "param": [8, 36, 43, 48, 56, 66, 67, 72, 73, 78, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 235, 236, 240, 247, 249, 257, 258, 264, 268, 274, 276, 278, 285, 287, 302, 304, 321, 322, 323, 339, 346, 351, 355, 363, 368, 371, 374, 400, 410, 414, 415, 417, 418, 422, 423, 424, 425, 426, 484, 488, 494, 499, 500, 501, 502, 505], "grad": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 372, 415, 417, 418, 484, 486], "whose": [8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 66, 67, 72, 73, 74, 75, 78, 83, 86, 87, 88, 89, 90, 102, 134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 333, 346, 351, 355, 371, 415, 417, 418], "fit": [8, 67, 251, 270, 288, 480, 481, 484], "brax": [8, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 258, 489, 506], "jax": [8, 135, 136, 150, 151, 288], "improperli": 8, "underli": [8, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 346, 400, 487, 489, 491, 493, 501], "tedeiou": 8, "priorit": [8, 63, 79, 114, 115, 385, 386, 387, 389, 390, 391, 398, 403, 405, 407, 408, 484, 485, 492, 505], "amount": [8, 164, 332, 422, 485, 503], "costli": [8, 501], "constitut": [8, 485, 500, 501], "profil": 8, "frequent": [8, 51, 503], "program": [8, 390, 398, 488, 506], "functorch": [8, 10], "incl": 8, "suit": [8, 139, 486, 489, 505, 506], "mujoco_instal": 8, "valueerror": [8, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 497], "bad": 8, "fds_to_keep": 8, "new_shap": 8, "permut": [8, 121, 253, 273, 488, 505, 506], "idea": [9, 114, 115, 403, 478, 481, 487, 490, 499, 500], "introductori": 9, "intro": [9, 486, 487], "dai": [9, 505], "2022": [9, 10, 292, 505], "spin": [9, 138, 139], "hug": [9, 351, 478, 497], "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 490], "summari": [9, 251, 284, 285, 484, 485, 486, 487], "reddit": 9, "reagent": 9, "orient": [9, 506], "baselines3": 9, "tf": 9, "bandit": [9, 161], "tensorflow": [9, 319, 320], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 488, 494], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 505], "grade": [9, 478], "factori": [9, 15, 16, 18, 21, 22, 23, 25, 27, 68, 70, 79, 80, 81, 83, 484], "cherri": 9, "jaxrl": 9, "mbrl": [9, 158, 479], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 486, 487, 499, 500], "notebook": [10, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "24": [10, 123, 143, 159, 160, 187, 198, 331, 367, 442, 499], "pip3": [10, 484, 486, 487, 499, 500], "url": [10, 100, 146, 496], "org": [10, 15, 16, 33, 63, 98, 114, 115, 135, 136, 138, 139, 146, 150, 151, 156, 157, 159, 160, 161, 170, 178, 179, 227, 255, 280, 290, 296, 297, 298, 299, 300, 301, 304, 305, 306, 313, 318, 319, 320, 325, 326, 327, 331, 332, 333, 335, 336, 342, 365, 382, 383, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 404, 405, 406, 407, 422, 427, 435, 475, 495, 502], "whl": 10, "u": [10, 308, 309, 313, 314, 501], "upgrad": 10, "lib_version_her": 10, "pyav": 11, "conveni": [11, 227, 486, 499, 500, 501, 503], "power": [11, 485], "knob": 11, "dispos": 11, "clarifi": 11, "behind": [11, 264, 476], "ultim": [11, 311, 340, 341], "ffmpeg": 11, "whatev": [11, 480, 484], "fed": [11, 500, 503], "feed": [11, 255, 282, 400, 415, 418, 479, 484, 499, 500, 503], "suppos": [11, 164, 455, 481, 506], "snippet": [11, 255, 280, 484], "gave": 11, "extrem": [11, 164, 173, 382, 384, 399, 402, 404, 415], "blurri": [11, 488], "stitch": 11, "exp_nam": [11, 442, 443, 444, 447, 448, 449, 470, 485, 493, 494], "my_exp": [11, 493], "pixels_onli": [11, 138, 139, 143, 145, 146, 170, 484, 485, 493, 494, 505, 506], "my_video": [11, 493], "record_env": [11, 493, 494], "codec": 11, "h264": 11, "crf": 11, "preset": 11, "qualiti": [11, 192, 362, 402, 479], "allow_non": 12, "unwrap": [12, 239, 277, 450], "seealso": 12, "timeout": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 164, 199, 203, 205], "close_env": [13, 15, 16, 18, 21, 22, 23, 25, 29], "shutdown": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 168, 174, 224, 484, 485, 503, 505], "init_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "kwarg": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 48, 49, 50, 53, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 122, 123, 124, 126, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 221, 222, 224, 231, 255, 257, 266, 270, 275, 276, 277, 279, 281, 282, 284, 286, 287, 289, 291, 293, 294, 295, 297, 298, 299, 300, 303, 306, 307, 310, 311, 315, 316, 317, 318, 321, 322, 323, 328, 332, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 440, 442, 446, 447, 449, 453, 460, 465, 466, 471, 472, 473, 480, 486, 488, 500], "init": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 43, 48, 56, 66, 67, 68, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 276, 284, 287, 321, 322, 323, 346, 351, 355, 415, 417, 418, 422, 449, 478, 485, 486], "implic": [13, 22, 23, 25], "notimplementederror": [13, 22, 23, 25, 85, 484], "subclass": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 40, 43, 48, 66, 67, 73, 78, 86, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 222, 223, 276, 283, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 351, 355, 363, 365, 367, 370, 371, 372, 373, 375, 378, 400, 402, 485, 487, 492, 501, 503], "policy_or_weight": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 43, 66, 78, 226, 343, 346, 351, 355, 364, 367, 369, 415, 418, 487], "worker_id": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "upload": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "extract": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 40, 41, 49, 75, 115, 185, 199, 209, 223, 245, 274, 278, 366, 478, 484, 486, 505], "Will": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 115, 122, 159, 442], "_get_server_weight": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31], "typeerror": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "weight_updat": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 478, 485], "overwritten": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29, 51, 95, 98, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 242], "localweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "remoteweightsupdaterbas": [13, 15, 16, 18, 21, 22, 23, 25, 27, 29], "get_server_weight": 14, "policy_weight": [14, 17, 19, 24, 26], "design": [14, 24, 26, 36, 43, 48, 56, 58, 60, 66, 67, 73, 78, 102, 120, 126, 133, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 227, 245, 256, 275, 277, 285, 287, 346, 351, 355, 363, 382, 383, 384, 385, 390, 391, 392, 393, 394, 395, 398, 399, 400, 402, 403, 404, 405, 408, 415, 417, 418, 420, 476, 484, 485, 486, 487, 489, 490, 491, 496, 497, 498, 499, 500, 501, 503, 505, 506], "date": [14, 17, 137, 226, 445], "datacollectorbas": [14, 15, 17, 19, 20, 23, 24, 26, 31, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 276, 287, 368, 372, 417, 462, 465, 466, 470, 476], "all_worker_id": [14, 17, 19, 20, 24, 26, 31], "scope": [14, 17, 19, 20, 24, 26, 31, 85, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 488, 506], "classmethod": [14, 17, 19, 20, 24, 26, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 100, 101, 117, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 245, 280, 288, 295, 296, 330, 344, 347, 348, 349, 350, 416, 419], "from_polici": [14, 17, 19, 20, 24, 26, 31], "increment_vers": [14, 17, 19, 20, 24, 26, 29, 30, 31, 204], "increment": [14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 30, 31, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 193, 194, 195, 204, 251, 399, 478], "post_hook": [14, 17, 19, 20, 24, 26, 31], "push_weight": [14, 17, 19, 20, 24, 26, 31], "noth": [14, 17, 19, 20, 24, 26, 31, 51, 152, 194, 484, 486], "register_collector": [14, 17, 19, 20, 24, 26, 31, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 346, 351, 355], "register_post_hook": [14, 17, 19, 20, 24, 26, 31], "create_env_fn": [15, 16, 18, 21, 22, 23, 25, 27, 141, 164, 173, 484, 505], "policy_factori": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30], "device_typ": [15, 18, 21, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 255, 280, 282, 294, 295, 296, 297, 298, 299, 300, 306, 316, 321, 322, 324, 325, 330, 333, 371, 457, 468], "env_devic": [15, 16, 18, 21, 22, 23, 25, 27, 485], "create_env_kwarg": [15, 16, 18, 21, 27, 141, 159, 164, 173, 275, 484, 506], "collector_class": [15, 16, 22, 23, 25, 26, 27], "postproc": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 56, 260, 485, 503], "explorationtyp": [15, 16, 18, 21, 22, 23, 25, 27, 368, 400, 455, 479, 484, 485, 486, 487, 490, 499, 505], "interactiontyp": [15, 18, 21, 22, 23, 25, 27, 182, 216, 368, 372, 455], "preemptive_threshold": [15, 16, 21], "num_thread": [15, 16, 21, 62, 64, 71, 85, 100, 101, 144, 164, 173, 191, 195, 344, 347, 348, 349, 350, 416, 419], "num_sub_thread": [15, 16, 21, 164, 173], "str": [15, 16, 18, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 111, 114, 115, 117, 128, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 152, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 219, 223, 227, 239, 245, 246, 247, 255, 259, 268, 269, 272, 274, 275, 277, 278, 280, 282, 283, 284, 287, 288, 291, 303, 304, 310, 315, 317, 318, 319, 321, 322, 323, 333, 334, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 359, 364, 365, 368, 369, 370, 371, 372, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 474, 478, 485, 486, 488, 496], "set_trunc": [15, 16, 18, 21, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "use_buff": [15, 16, 18, 164, 173], "extend_buff": [15, 16, 18], "replay_buffer_chunk": 15, "trust_polici": [15, 16, 18, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "compile_polici": [15, 16, 18], "cudagraph_polici": [15, 16, 18], "no_cuda_sync": [15, 16, 18], "datacollector": [15, 16, 18, 21, 27, 29, 30, 56, 402, 486, 492, 503], "recept": 15, "safe": [15, 16, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 115, 122, 191, 289, 332, 339, 340, 344, 347, 348, 349, 350, 359, 364, 365, 368, 369, 370, 371, 372, 374, 416, 419, 479, 505], "sota": [15, 16, 158, 243, 404, 451, 465, 478, 484, 485, 505], "guard": [15, 16], "doc": [15, 16, 81, 146, 149, 150, 151, 161, 170, 449, 480, 485, 499, 500, 503], "env_mak": [15, 16, 18, 27, 68, 134, 470, 506], "2000": [15, 16, 18, 56, 84, 147, 331, 442, 503], "50": [15, 16, 18, 27, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 65, 72, 74, 75, 83, 86, 87, 88, 89, 90, 95, 102, 122, 123, 156, 157, 198, 287, 487, 497, 503], "del": [15, 16, 18, 29, 484, 485, 486, 498, 499, 503, 505, 506], "int64": [15, 16, 18, 29, 32, 34, 35, 39, 44, 45, 51, 52, 53, 54, 55, 60, 61, 62, 64, 65, 66, 71, 72, 76, 79, 81, 84, 85, 95, 96, 97, 98, 99, 100, 101, 114, 122, 134, 137, 140, 144, 152, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 200, 220, 224, 232, 239, 253, 260, 268, 304, 332, 334, 344, 347, 348, 349, 350, 364, 365, 368, 369, 370, 416, 419, 479, 501], "undergon": [15, 16, 18, 21, 22, 23, 25, 27, 84], "env_obs_kei": [15, 16, 18, 21, 22, 23, 25, 27], "mustn": [15, 16, 18, 21, 22, 23, 25, 27], "pickl": [15, 16, 18, 21, 22, 23, 25, 27, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 285, 287, 346, 351, 355, 415, 417, 418], "exclus": [15, 16, 18, 21, 22, 23, 25, 27, 29, 30, 58, 70, 79, 80, 91, 92, 95, 115, 122, 123, 197, 224, 240, 242, 308, 310, 313, 315, 319, 320, 352, 364, 365, 369, 370, 406, 407, 408, 422, 423, 424, 425, 426, 449, 474, 479], "lifespan": [15, 16, 18, 21, 22, 23, 25, 29, 30, 485], "divis": [15, 16, 18, 21, 22, 23, 25, 36, 95, 115, 122, 123, 285, 290, 500], "endless": [15, 16, 18, 21, 22, 23, 25, 200, 478], "sit": [15, 16, 18, 21, 22, 23, 25, 27, 462, 485], "cast": [15, 16, 18, 21, 22, 23, 25, 27, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 78, 83, 85, 86, 87, 88, 89, 90, 99, 100, 101, 102, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 150, 151, 152, 159, 160, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 220, 221, 223, 224, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 243, 246, 247, 254, 255, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 371, 384, 399, 402, 415, 416, 417, 418, 419, 499, 506], "deriv": [15, 16, 22, 23, 25, 27, 82, 302, 460], "span": [15, 16, 18, 21, 22, 23, 25, 27, 115, 122, 123], "n_step": [15, 16, 18, 21, 22, 23, 25, 27, 56, 287, 367, 485, 486, 499, 500], "mainli": [15, 16, 18, 21, 22, 23, 25, 27, 72, 185, 186, 187, 190, 449, 479, 499, 500, 501], "round": [15, 16, 18, 21, 22, 23, 25, 27, 95, 137], "closest": [15, 16, 18, 21, 22, 23, 25, 27], "boolm": [15, 16, 21], "finish": [15, 16, 18, 21, 27, 29, 144, 195, 260, 506], "earli": [15, 16, 21, 56, 114, 115, 144, 195, 268, 505], "safeti": [15, 16, 21, 158, 164, 173, 285, 496], "harm": [15, 16, 21, 164, 173], "add_truncated_kei": [15, 16, 18, 21, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 277], "trust": [15, 16, 18, 134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 233, 315], "cudagraphmodul": [15, 16, 18, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "behaviour": [15, 16, 18, 43, 66, 78, 346, 351, 355, 415, 418, 487, 488, 505], "bypass": [15, 16, 18, 98, 490], "isaaclab": [15, 16, 18, 145, 149], "maniskil": [15, 16, 18], "crash": [15, 16, 18, 260], "multiprocessedweightupdat": [15, 16], "ordereddict": [15, 16, 18, 21, 27, 29, 30, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 284, 285, 287, 346, 351, 355, 385, 405, 415, 417, 418], "worker0": [15, 16, 21], "state_dict0": [15, 16, 21], "worker1": [15, 16, 21], "state_dict1": [15, 16, 21], "reset_idx": [15, 16, 21], "static_se": [15, 16, 18, 21, 27, 29, 30, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 277], "env_fn": [15, 16, 18, 21, 29, 30, 141, 472, 473], "env_fn_parallel": [15, 16, 18, 21, 29, 30], "300": [15, 16, 18, 21, 29, 30, 122, 123, 299, 300], "out_se": [15, 16, 18, 21, 29, 30, 506], "irrevers": [15, 16, 21], "pipe": [15, 16, 18, 21, 29, 164], "tqdm": [15, 16, 18, 21, 29, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 460, 484, 486, 487, 499, 500, 501], "ale_pi": [15, 16, 18, 21, 29, 488], "10000": [15, 16, 21, 27, 164, 290, 460, 487], "progress": [15, 16, 18, 21, 29, 30, 453, 454, 455, 460, 481, 485, 487, 506], "bar": [15, 16, 18, 21, 29, 108, 110, 130, 363, 453, 454, 455, 460, 481, 485], "pbar": [15, 16, 18, 21, 29, 95, 96, 97, 98, 484, 486, 487, 499, 500, 501], "100_000": [15, 16, 18, 21, 29, 488, 494], "prec_wc": [15, 16, 18, 21, 29], "wc": [15, 16, 18, 21, 29], "write_count": [15, 16, 18, 21, 29, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 102, 117], "set_descript": [15, 16, 18, 21, 29, 484, 486, 487, 499, 500, 501], "remote_collector": [17, 27], "max_interv": 17, "leverag": [17, 27, 134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 478, 484, 500, 506], "_maybe_map_weight": [17, 20, 24, 26, 31], "_sync_weights_with_work": [17, 20, 24, 26, 31], "_skip_upd": 17, "interv": [17, 220, 272, 441, 442, 452, 462, 485, 501], "raycollector": [17, 68, 476], "return_same_td": 18, "interruptor": 18, "cautious": [18, 402], "whole": [18, 36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 84, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 287, 346, 351, 355, 368, 385, 405, 415, 417, 418, 451, 484, 486], "_interruptor": 18, "outsid": [18, 236, 275, 480, 493, 499, 500, 501], "start_collect": 18, "stop_collect": 18, "preeptiv": 18, "chunk": [18, 29, 30, 102, 490], "policy_state_dict": [18, 29, 30], "env_state_dict": [18, 29, 30], "256": [18, 29, 99, 156, 157, 245, 301, 485, 486, 488, 499, 500], "weight_gett": 19, "vanillaweightsend": 19, "fetch": [19, 62, 64, 71, 85, 100, 101, 135, 136, 138, 139, 191, 247, 344, 347, 348, 349, 350, 416, 419, 490, 502, 503], "sender": 19, "update_weight": [19, 24, 26, 462], "piec": [20, 107, 118, 129, 132, 133, 484, 485, 486, 493, 499, 500, 501, 503], "scheme": [20, 481, 506], "_push_weight": 20, "unchang": [20, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 237, 255, 270, 276, 277, 280, 282, 287, 307, 346, 351, 355, 371, 415, 417, 418, 442, 457, 484, 503], "__call__": [20, 36, 43, 48, 56, 65, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 372, 415, 417, 418, 481], "proxi": [20, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 71, 74, 75, 83, 85, 86, 87, 88, 89, 90, 100, 101, 191, 320, 328, 344, 347, 348, 349, 350, 368, 416, 419, 480], "weakref": [20, 51, 85], "registr": [20, 485], "exporationtyp": [22, 23, 25], "collector_kwarg": [22, 23, 25, 27], "num_workers_per_collector": [22, 23, 25, 27], "slurm_kwarg": [22, 23, 25], "update_after_each_batch": [22, 23, 25, 27], "max_weight_update_interv": [22, 23, 25, 27], "tcp_port": [22, 23, 25, 28], "respect": [22, 23, 25, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 225, 231, 235, 238, 249, 255, 256, 265, 270, 276, 277, 280, 282, 287, 308, 312, 313, 321, 336, 346, 351, 355, 371, 376, 382, 384, 399, 402, 404, 415, 417, 418, 422, 424, 425, 456, 480, 486, 487, 499, 500], "subnod": [22, 23, 25, 27], "readi": [22, 25, 27, 29, 30, 185, 477, 485, 486, 488, 490, 493, 503, 505], "fashion": [22, 25, 27, 62, 64, 71, 85, 100, 101, 123, 191, 344, 347, 348, 349, 350, 416, 419], "distributed_back": [22, 23], "ucc": [22, 23], "submitit_delai": [22, 28], "former": [22, 23, 25, 32, 36, 43, 48, 63, 66, 67, 70, 73, 78, 79, 80, 97, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 363, 365, 367, 370, 375, 378, 484], "whilst": [22, 23, 25], "homonym": [22, 23, 25, 501], "visit": [22, 23, 25, 85, 190], "facebookincub": [22, 23, 25], "tcp": [22, 23, 25, 28], "port": [22, 23, 25, 28, 31, 176, 353], "10003": [22, 23, 25, 28], "distributedweightupdat": 22, "liter": [23, 85, 100, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 189, 190, 193, 194, 195, 197, 198, 200, 204, 206, 344, 347, 348, 349, 350, 351, 355, 358, 415, 418], "update_interv": 23, "frequenc": [23, 331, 484], "restart": 24, "rank": [24, 128, 291, 353, 354], "visible_devic": 25, "tensorpipe_opt": 25, "experiment": [25, 32, 60, 95, 368, 372], "tensorpiperpcbackendopt": 25, "rpcweightupdat": 25, "collector_info": 26, "collector_rref": 26, "ray_init_config": [27, 30, 68], "remote_config": [27, 29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "num_collector": [27, 472, 473, 484, 485], "coordin": [27, 234], "autodetect": 27, "num_cpu": [27, 68], "num_gpu": [27, 68], "1024": [27, 68, 301, 503], "equat": [27, 66, 85, 144, 195, 284, 285, 332, 381, 384, 406, 415, 486, 489, 501], "exce": [27, 503], "indefinit": [27, 94], "rayreplaybuff": [27, 63, 69, 70, 79, 80, 95, 96, 97, 98, 117, 476], "enfoc": 27, "rayweightupdat": 27, "distributed_collector": [27, 68], "add_collector": 27, "local_polici": 27, "stop_remote_collector": 27, "num_job": 28, "tcpport": 28, "submitit_main_conf": 28, "slurm_cpus_per_task": 28, "slurm_gpus_per_nod": 28, "slurm_partit": 28, "timeout_min": 28, "submitit_collection_conf": 28, "delai": [28, 407, 491], "jump": [28, 489], "host": [28, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "satellit": 28, "rendezv": 28, "hang": 28, "forev": 28, "default_config": [28, 296, 301, 330, 363], "default_slurm_conf_main": 28, "default_slurm_conf": 28, "dialog_turns_per_batch": [29, 30], "yield_only_last_step": [29, 30], "yield_completed_trajectori": [29, 30], "total_dialog_turn": [29, 30, 102], "async_env": [29, 30], "flatten_data": [29, 30], "queue": [29, 168, 284, 417, 503, 505], "track_policy_vers": [29, 30, 204, 478], "policyvers": [29, 30, 478], "simplifi": [29, 63, 215, 490, 501, 503], "mediat": 29, "vllm": [29, 31, 193, 345, 352, 353, 354, 355, 478, 496], "vllmwrapper": [29, 185, 193, 346, 351, 478, 497], "mocking_class": [29, 275], "dummystrdataload": 29, "llmenv": [29, 188, 196, 200], "llm_model": 29, "gpt2": [29, 65, 72, 81, 84, 152, 194, 296, 301, 330, 351, 355], "get_token": 29, "pad_token": [29, 65, 81, 206, 207, 418], "eos_token": [29, 65, 189, 206, 207, 418], "from_dataload": [29, 185, 186, 187, 190, 193, 200], "from_text": [29, 101, 193, 200, 418, 478], "group_repeat": [29, 185, 186, 187, 190, 193, 196, 200], "attention_mask": [29, 62, 64, 65, 71, 72, 81, 84, 99, 193, 351, 355], "nontensorstack": [29, 51, 58, 101, 109, 134, 137, 152, 187, 190, 194, 200, 209, 245, 274, 278], "plsgqejeyd": 29, "text_respons": [29, 187, 190, 192, 193, 195, 198, 203, 205, 418, 478, 496], "ec": 29, "tjbjz3perwhz": 29, "tokens_respons": [29, 193], "as_remot": [29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "cl": [29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 485], "quantiti": [29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "reserv": [29, 30, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 481], "alia": [29, 36, 43, 48, 56, 63, 66, 67, 68, 69, 70, 73, 78, 79, 80, 85, 95, 96, 97, 98, 102, 103, 108, 109, 110, 111, 117, 124, 126, 130, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 407, 408, 415, 417, 418, 420, 426], "get_policy_model": [29, 30], "rayllmcollector": [29, 478], "get_policy_vers": [29, 30], "uuid": [29, 30, 204, 445, 485, 506], "disabl": [29, 30, 34, 35, 36, 39, 43, 44, 48, 52, 53, 54, 55, 56, 60, 61, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 287, 311, 341, 346, 351, 355, 415, 417, 418, 440, 484, 499, 500], "is_initi": [29, 30], "policy_vers": [29, 30, 204, 478], "sync_it": 30, "lightweight": [30, 488, 493], "dialog": [30, 102], "yeild": 30, "block": [30, 99, 107, 133, 149, 190, 192, 205, 478, 479, 484, 487, 488, 491, 492, 499, 503], "idl": [30, 164], "somehwat": 30, "master_address": [31, 353], "master_port": [31, 353], "model_metadata": 31, "vllm_tp_size": 31, "master": [31, 33, 353, 499, 500], "localhost": [31, 176, 353], "Not": [31, 52, 53, 70, 135, 136, 150, 275, 310, 315, 478], "get_model_metadata": 31, "transformerswrapp": [31, 185, 206, 207, 346, 355, 418, 478, 497], "rollout_tensordict": 32, "nestedkei": [32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 64, 66, 71, 74, 75, 76, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 115, 122, 123, 134, 137, 140, 144, 152, 164, 165, 168, 169, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 206, 207, 209, 213, 218, 219, 220, 221, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 284, 285, 287, 289, 293, 304, 307, 332, 334, 344, 346, 347, 348, 349, 350, 351, 355, 363, 367, 372, 387, 416, 417, 419, 420, 440, 442], "as_nest": 32, "x": [32, 43, 56, 66, 67, 70, 72, 73, 78, 123, 152, 194, 245, 247, 273, 278, 288, 290, 292, 293, 295, 304, 306, 308, 309, 310, 313, 314, 315, 316, 318, 321, 322, 343, 346, 351, 355, 364, 368, 369, 378, 381, 415, 418, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 460, 478, 484, 488, 499, 501, 503, 505], "durat": [32, 500], "meta": [32, 62, 64, 71, 83, 85, 97, 100, 101, 142, 146, 191, 344, 347, 348, 349, 350, 382, 384, 399, 402, 404, 416, 419, 478, 481, 486, 499, 500, 503], "aren": [32, 269, 487], "eventu": [32, 333, 487, 501], "recov": [32, 97, 98, 122, 123, 373, 390, 398, 498], "layout": [32, 346, 351, 355], "to_padded_tensor": 32, "nested_tensor": [32, 143, 145], "stride": [32, 36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 294, 295, 297, 298, 306, 321, 346, 351, 355, 415, 417, 418, 485, 499, 505], "jag": 32, "focu": [32, 484, 485, 486, 488, 490, 491, 492, 499], "team": [32, 499, 500, 505], "cat": [32, 51, 200, 376, 383, 385, 386, 398, 403, 405, 407, 408, 499, 503, 505], "arang": [32, 34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 115, 122, 123, 220, 304, 319, 320, 364, 451, 479, 503], "obs_": 32, "trajectory_id": 32, "int32": [32, 36, 37, 51, 80, 86, 95, 122, 150, 151, 162, 163, 175, 212, 367], "data_split": 32, "got": [32, 492], "init_kl_coef": 33, "horizon": [33, 156, 157, 178, 179, 291, 318, 486], "kl": [33, 42, 72, 185, 201, 202, 206, 207, 247, 394, 399, 415, 418, 478], "describ": [33, 62, 64, 71, 83, 85, 100, 101, 169, 191, 228, 339, 340, 344, 347, 348, 349, 350, 387, 416, 419, 445, 480, 484, 486, 499, 500, 501, 506], "ziegler": 33, "et": [33, 291, 478], "relax": [33, 440], "penalti": [33, 72, 192, 197, 201, 396, 399], "strai": [33, 72], "greater": [33, 95, 115, 122, 123, 232, 248, 249, 310, 315, 385, 484, 485], "increas": [33, 106, 227, 271, 292, 332, 384, 402, 415, 418, 499, 500], "pull": [33, 51, 85, 186, 503], "toward": [33, 114, 115, 282], "aggress": [33, 114, 115, 418], "kl_coef": [33, 42, 72], "arxiv": [33, 63, 114, 115, 135, 136, 138, 139, 150, 151, 156, 157, 159, 160, 170, 178, 179, 227, 255, 280, 290, 296, 297, 298, 299, 300, 301, 304, 305, 306, 313, 318, 325, 326, 327, 331, 332, 333, 335, 336, 342, 365, 382, 383, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 401, 402, 405, 406, 407, 422, 427, 435, 502], "pdf": [33, 227, 296, 297, 298, 299, 300, 304, 331, 332, 365, 385, 392, 396, 403, 406, 407, 422, 427, 435], "1909": 33, "08593": 33, "lm": 33, "blob": 33, "lm_human_prefer": 33, "train_polici": 33, "kl_valu": 33, "coef": [33, 201, 202, 247], "newest": 33, "int8": [34, 140, 155, 166, 167, 225], "encod": [34, 35, 36, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 74, 75, 83, 86, 87, 88, 89, 90, 135, 136, 140, 143, 144, 145, 146, 149, 150, 151, 159, 160, 162, 163, 170, 176, 177, 195, 220, 237, 327, 328, 331, 335, 346, 351, 355, 381, 485, 486, 487, 490, 501, 503], "null": [34, 37, 38, 40, 41, 43, 49, 50, 58, 59, 63, 74, 75, 79, 83, 86, 87, 88, 89, 90, 185, 193, 225, 245], "denot": [34, 500], "clariti": [34, 51], "assert_is_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "cardin": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 85, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 304, 334, 364, 365, 370, 486], "outcom": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 302, 319, 320, 339, 400, 415, 418, 499], "cartesian": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "clear_device_": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "is_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 506], "np": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 103, 144, 195, 283, 375, 440, 488, 499, 501], "ndarrai": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 144, 195, 332, 375, 440, 488, 499], "ignore_devic": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "arrai": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 63, 72, 74, 75, 83, 86, 87, 88, 89, 90, 103, 114, 134, 137, 140, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 200, 239, 308, 309, 313, 314, 484, 499], "use_mask": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 166, 167], "erase_memoize_cach": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "memoiz": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 144, 195], "memoize_encod": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "compliant": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "singleton": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 192, 294, 295, 316, 337, 338, 476, 480, 496], "start_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "end_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "implements_for_spec": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "torch_funct": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "index_typ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 58, 59, 74, 75, 83, 86, 87, 88, 89, 90], "tensor_to_index": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "exanpl": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "one_hot": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 304, 320, 334], "categ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 368], "to_categorical_spec": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_one_hot": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "idx_categ": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_categor": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "make_neg_dim": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "convert": [34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 71, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 100, 101, 102, 103, 134, 135, 136, 137, 140, 143, 144, 145, 146, 149, 150, 151, 152, 159, 160, 162, 163, 164, 165, 168, 170, 173, 174, 175, 176, 177, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 235, 238, 255, 270, 276, 277, 280, 282, 284, 285, 287, 344, 346, 347, 348, 349, 350, 351, 355, 371, 381, 400, 415, 416, 417, 418, 419, 478, 484, 485, 486, 501, 503], "shortcut": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 501, 506], "ndimens": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 484], "violat": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 479], "project": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 67, 74, 75, 83, 86, 87, 88, 89, 90, 237, 289, 313, 332, 359, 364, 365, 368, 369, 370, 371, 372, 449, 479, 505, 506], "uniformli": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 114, 115, 116, 400, 415, 418, 506], "normal": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 69, 74, 75, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 251, 284, 285, 289, 290, 294, 295, 311, 316, 319, 320, 340, 341, 368, 372, 384, 385, 399, 402, 417, 418, 455, 458, 474, 478, 479, 481, 487, 490, 500, 506], "drawn": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 270, 307, 368, 372, 486, 499, 500], "set_provisional_n": [34, 35, 39, 44, 52, 53], "temporarili": [34, 35, 39, 44, 52, 53, 106, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 492, 503], "dest": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 78, 83, 86, 87, 88, 89, 90, 95, 96, 97, 98, 255, 280, 282, 371], "to_numpi": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "transformed_in": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90, 277, 339, 474], "check_spec_encod": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "to_one_hot": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "hot": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 135, 136, 143, 145, 146, 149, 150, 151, 156, 157, 159, 160, 162, 163, 166, 167, 170, 176, 177, 178, 179, 220, 237, 304, 328, 329, 334, 364, 365, 369, 370, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 487], "categ_sampl": [34, 35, 39, 44, 54, 55, 60, 61], "onehot_sampl": [34, 35, 39, 44, 54, 55], "to_one_hot_spec": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "categoricalbox": [34, 35, 39, 44, 54, 55, 60, 61, 165], "type_check": [34, 35, 37, 38, 39, 40, 41, 44, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 74, 75, 83, 86, 87, 88, 89, 90], "update_mask": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "unmask": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61, 319], "ts": [34, 35, 39, 44, 52, 53, 54, 55, 60, 61], "num_bit": 36, "convert_to_binari": 36, "decim": 36, "1001": 36, "bit": [36, 245, 486, 487, 489, 499, 500, 503], "heavysid": 36, "binary_to_decim": 36, "add_modul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "fn": [36, 43, 48, 56, 65, 66, 67, 73, 78, 95, 96, 97, 98, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 278, 287, 346, 351, 355, 415, 417, 418, 472, 473], "recurs": [36, 40, 41, 43, 48, 49, 56, 66, 67, 73, 75, 78, 91, 92, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 400, 415, 417, 418, 488], "init_weight": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "m": [36, 43, 48, 52, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 237, 287, 293, 346, 351, 355, 372, 415, 417, 418, 478, 485, 501], "fill_": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 485, 487], "net": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 298, 300, 303, 306, 322, 346, 351, 355, 382, 383, 385, 391, 398, 402, 403, 404, 405, 415, 417, 418, 470, 485, 501, 502, 505], "in_featur": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 294, 295, 297, 298, 299, 300, 306, 316, 321, 322, 324, 325, 346, 351, 355, 360, 371, 379, 387, 389, 415, 417, 418, 488, 490, 491], "out_featur": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 158, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 291, 294, 295, 297, 298, 299, 300, 305, 306, 310, 315, 316, 318, 321, 322, 324, 325, 346, 351, 355, 360, 364, 371, 379, 387, 389, 415, 417, 418, 479, 484, 487, 488, 490, 491, 494, 505], "bia": [36, 43, 48, 56, 66, 67, 73, 78, 102, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 245, 255, 270, 275, 276, 277, 280, 282, 287, 290, 294, 295, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 322, 324, 325, 332, 346, 351, 355, 371, 378, 380, 381, 385, 400, 405, 415, 417, 418, 480, 484, 485, 486, 487, 500], "requires_grad": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 135, 136, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 247, 275, 277, 287, 331, 346, 351, 355, 372, 385, 405, 415, 417, 418], "bfloat16": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "datatyp": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 503], "member": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 400, 415, 417, 418, 442], "xdoctest": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 245, 255, 270, 275, 276, 277, 280, 282, 287, 346, 351, 355, 371, 385, 400, 405, 415, 417, 418], "buf": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "20l": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 400, 415, 417, 418], "1l": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 400, 415, 417, 418], "5l": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 400, 415, 417, 418], "doubl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 235, 236, 238, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 387, 392, 397, 403, 406, 415, 417, 418, 420, 484, 485, 486, 487, 506], "eval": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 284, 287, 292, 346, 351, 355, 384, 402, 415, 417, 418, 479, 484, 485, 486], "evalu": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 145, 152, 156, 157, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 232, 277, 287, 292, 302, 319, 320, 328, 341, 346, 351, 355, 403, 415, 417, 418, 465, 466, 485, 486, 494], "dropout": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 287, 292, 293, 308, 310, 313, 315, 316, 346, 351, 355, 415, 417, 418, 479, 487], "batchnorm": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 287, 290, 346, 351, 355, 415, 417, 418], "comparison": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 277, 287, 346, 351, 355, 400, 415, 417, 418, 478, 484, 485], "extra_repr": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "recip": [36, 43, 48, 65, 66, 67, 73, 78, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 323, 326, 327, 330, 332, 335, 336, 338, 343, 363, 365, 367, 370, 375, 378], "get_buff": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "get_submodul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "qualifi": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "referenc": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "resolv": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "someth": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 155, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 477, 485, 486, 501, 506], "get_extra_st": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 285, 287, 346, 351, 355, 415, 417, 418], "set_extra_st": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 285, 287, 346, 351, 355, 415, 417, 418], "picklabl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 285, 287, 346, 351, 355, 415, 417, 418], "get_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "net_b": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "net_c": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "conv": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 294, 295, 346, 351, 355, 415, 417, 418, 485], "conv2d": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 295, 297, 298, 306, 321, 346, 351, 355, 415, 417, 418], "kernel_s": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 294, 295, 297, 298, 306, 321, 326, 346, 351, 355, 415, 417, 418, 485, 505], "diagram": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 478], "degre": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 233, 287, 346, 351, 355, 415, 417, 418], "named_modul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "half": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418, 484], "ipu": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "strict": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 344, 346, 347, 348, 349, 350, 351, 355, 385, 405, 415, 416, 417, 418, 419, 488], "descend": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418], "get_swap_module_params_on_convers": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418], "persist": [36, 43, 46, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 245, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418], "preserv": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 346, 351, 355, 371, 385, 405, 415, 417, 418], "missing_kei": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418], "unexpected_kei": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418], "namedtupl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418], "l": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 308, 313, 346, 351, 355, 415, 417, 418, 421, 486, 501], "idx": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "mtia": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "named_buff": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "remove_dupl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 400, 415, 417, 418], "prepend": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 400, 415, 417, 418, 488], "running_var": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "named_children": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "conv4": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "conv5": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "memo": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "named_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 247, 287, 346, 351, 355, 400, 415, 417, 418], "register_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "removablehandl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "favor": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 287, 346, 351, 355, 415, 417, 418, 486], "register_full_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_buff": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "running_mean": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "alongsid": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 478, 493], "num_featur": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 290, 346, 351, 355, 415, 417, 418], "register_forward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 304, 334, 346, 351, 355, 415, 417, 418], "with_kwarg": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "always_cal": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_module_forward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "regardless": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 384, 399, 402, 415, 417, 418, 478], "register_forward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "invok": [36, 43, 48, 56, 66, 67, 69, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "And": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 354, 355, 415, 417, 418, 491], "forward_pr": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_module_forward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "ordinarili": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "grad_input": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "grad_output": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "technic": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 485, 487, 488, 490], "caller": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_module_full_backward_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_full_backward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "backward_pr": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_module_full_backward_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_load_state_dict_post_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "incompatible_kei": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "thrown": [36, 43, 48, 56, 66, 67, 73, 74, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 503], "register_load_state_dict_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "local_metadata": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "error_msg": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "noqa": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 149, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "b950": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_modul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 481], "register_paramet": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_state_dict_post_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "register_state_dict_pre_hook": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "keep_var": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 287, 344, 346, 347, 348, 349, 350, 351, 355, 385, 405, 415, 416, 417, 418, 419], "requires_grad_": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 488], "autograd": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418], "freez": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 284, 285, 287, 346, 351, 355, 415, 417, 418], "finetun": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "gan": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "set_submodul": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "share_memori": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 141, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 484], "share_memory_": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418, 505], "destin": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 218, 226, 235, 236, 238, 245, 275, 277, 280, 284, 287, 344, 346, 347, 348, 349, 350, 351, 355, 385, 405, 415, 416, 417, 418, 419, 442], "averag": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 284, 285, 287, 332, 346, 351, 355, 385, 393, 394, 405, 415, 417, 418, 458, 478, 484, 486], "shallow": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 287, 346, 351, 355, 385, 405, 415, 417, 418, 487], "detach": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 245, 275, 277, 287, 346, 351, 355, 385, 396, 400, 405, 407, 415, 417, 418, 422, 423, 424, 425, 484], "non_block": [36, 43, 48, 56, 62, 64, 66, 67, 71, 73, 78, 85, 100, 101, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 344, 346, 347, 348, 349, 350, 351, 355, 371, 415, 416, 417, 418, 419, 487], "memory_format": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "channels_last": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "tri": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418, 493], "pin": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "4d": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "ignore_w": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "1913": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "3420": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "5113": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "2325": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "torch_doctest_cuda1": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "gpu1": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "1914": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "5112": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "2324": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "float16": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 309, 314, 346, 351, 355, 371, 415, 417, 418], "cdoubl": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "3741": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "j": [36, 43, 48, 56, 63, 66, 67, 73, 78, 102, 114, 115, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418, 481, 491], "2382": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "5593": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "4443": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "complex128": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "6122": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "1150": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 255, 270, 276, 277, 280, 282, 287, 346, 351, 355, 371, 415, 417, 418], "to_empti": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "dst_type": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "xpu": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "set_to_non": [36, 43, 48, 56, 66, 67, 73, 78, 102, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 287, 346, 351, 355, 415, 417, 418], "upper": [37, 120, 250], "continuousbox": [37, 40, 86, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 212, 245, 248, 270, 278], "provision": [39, 355], "descript": [40, 149, 178, 203, 223, 485, 486], "akin": 40, "unnam": 40, "compositespec": [40, 476, 496, 501, 506], "constraint": [40, 158, 340, 486, 499, 500], "data_cl": 40, "tensorclass": [40, 62, 64, 71, 85, 99, 100, 101, 108, 110, 130, 191, 344, 346, 347, 348, 349, 350, 351, 355, 416, 419, 478], "step_mdp_stat": 40, "pixels_spec": 40, "observation_vector_spec": 40, "composite_spec": 40, "observation_vector": [40, 228, 484], "_nodefault": [40, 41, 49, 75], "is_empti": [40, 41, 49, 75, 501], "include_nest": [40, 41, 49, 75], "leaves_onli": [40, 41, 49, 75], "is_leaf": [40, 41, 49, 75], "step_mdp_static_onli": [40, 41, 49, 75], "_compositespecitemsview": [40, 41, 49, 75], "_compositespeckeysview": [40, 41, 49, 75], "reflect": [40, 41, 49, 75, 145, 166, 167, 218, 245, 283, 400, 415, 418, 463, 485, 486, 487, 500], "lock_": [40, 41, 49, 75], "propag": [40, 41, 49, 75, 382, 384, 385, 386, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 422, 423, 424, 425, 486, 499, 500], "succeed": [40, 41, 49, 75, 245, 278], "pop": [40, 41, 49, 75, 206, 231], "keyerror": [40, 41, 49, 75, 186, 187, 190, 277], "selected_kei": [40, 41, 49, 75, 264, 484], "unlock_": [40, 41, 49, 75], "_compositespecvaluesview": [40, 41, 49, 75], "multipli": [42, 192, 193, 200, 292, 308, 313, 382, 383, 384, 385, 391, 399, 401, 402, 403, 405, 415, 458, 484, 499], "calcul": [42, 72, 187, 260, 308, 382, 384, 389, 399, 402, 404, 407, 415, 422], "reassign": 43, "reward2go": [43, 476], "reward_key_out": 43, "time_dim": [43, 422, 424, 425, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439], "unrol": [43, 393, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439], "discount": [43, 56, 141, 260, 287, 383, 389, 392, 393, 395, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 480, 485, 486, 499, 500], "lastrewardtotraj": 43, "last_reward_to_traj": 43, "new_tensordict": 43, "is_tdmodule_compat": [43, 66, 78, 346, 351, 355, 415, 418], "reset_out_kei": [43, 66, 78, 346, 351, 355, 415, 418], "orign": [43, 66, 78, 346, 351, 355, 415, 418], "mod": [43, 66, 78, 232, 247, 293, 310, 315, 346, 351, 355, 367, 372, 375, 415, 418, 487, 488, 494], "select_out_kei": [43, 66, 78, 346, 351, 355, 382, 383, 385, 386, 390, 391, 398, 402, 403, 405, 407, 408, 415, 418, 488], "reset_parameters_recurs": [43, 66, 78, 346, 351, 355, 400, 415, 418], "relu": [43, 66, 78, 158, 291, 301, 318, 346, 351, 355, 381], "old_param": [43, 66, 78, 346, 351, 355], "bork": [43, 66, 78, 346, 351, 355], "dork": [43, 66, 78, 346, 351, 355], "reset_paramet": [43, 66, 78, 323, 346, 351, 355], "from_modul": [43, 66, 78, 304, 346, 351, 355, 371, 374, 505], "out_keys_sourc": [43, 66, 78, 346, 351, 355, 415, 418], "rubric": [43, 66, 78, 251, 346, 351, 355, 374, 415, 418], "revert": [43, 66, 78, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 346, 351, 355, 415, 418, 490, 503], "seq": [43, 66, 78, 293, 308, 310, 313, 315, 346, 351, 355, 367, 415, 418, 487, 488, 494, 498], "z": [43, 66, 78, 309, 346, 351, 355, 415, 418], "shift_kei": [45, 47, 57, 76], "is_full_kei": [45, 47, 57, 76], "is_ful": [45, 47, 57, 76], "tempfil": [45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 108, 117, 191, 344, 347, 348, 349, 350, 416, 419, 470, 484, 485, 487, 488, 492, 499, 502, 503], "register_save_hook": [45, 63, 68, 69, 70, 76, 79, 80, 95, 96, 97, 98, 117], "temporarydirectori": [45, 62, 63, 64, 68, 69, 70, 71, 76, 79, 80, 84, 85, 95, 96, 97, 98, 100, 101, 117, 191, 344, 347, 348, 349, 350, 416, 419, 484, 485, 487, 488, 492, 499, 502, 503], "tmpdir": [45, 63, 68, 69, 70, 76, 79, 80, 84, 95, 96, 97, 98, 117, 484, 485, 488, 499], "rb_load": [45, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "register_load_hook": [45, 63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "filesystem": [46, 503], "ted2nest": [47, 476], "stackedcomposit": [49, 476], "tensordictmap": [51, 476], "observation_kei": [51, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "excluded_kei": [51, 240], "consolid": [51, 78, 92, 110], "lazili": [51, 109, 322, 501], "from_tensordict_pair": [51, 78], "querymodul": [51, 78], "get_keys_from_env": 51, "cattensor": [51, 95, 96, 97, 98, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 484, 498, 501, 506], "unsqueezetransform": [51, 227, 501, 503], "oracl": 51, "obs_kei": 51, "state_kei": [51, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "reset_st": 51, "rollout0": 51, "rollout1": 51, "rollout1b": 51, "collaps": 51, "max_length": [51, 62, 64, 65, 81, 84, 85, 99, 200, 209, 274, 488, 494], "valid_path": [51, 85], "assert_clos": 51, "subtre": [51, 85], "intersect": [51, 288], "Or": [51, 171, 172, 321], "rollout_from_path": [51, 85], "plot": [51, 85, 484, 486, 487, 499, 500, 501], "_nestedkei": [51, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "return_nod": 51, "diverg": [51, 185, 201, 202, 206, 207, 247, 368, 372, 394, 399, 415, 418, 478], "endpoint": 51, "r0": [51, 484], "123": [51, 85], "392": [51, 85], "989": [51, 85], "809": [51, 85], "847": [51, 85], "r1": 51, "235": 51, "td_root": [51, 85], "node_data": [51, 85], "node_id": [51, 85], "nontensordata": [51, 58, 95, 101, 137, 162, 163, 200, 209, 245, 274, 278, 440], "_parent": [51, 85], "0x716eeb78fbf0": 51, "0x": 51, "4341220243998689835": 51, "6745467818783115365": 51, "win": [51, 85], "to_str": [51, 85], "node_format_fn": [51, 85], "indent": [51, 85], "rollouts_data": [51, 85], "456": [51, 85], "359": [51, 85], "3094": [51, 85], "75": [51, 85, 122], "948": [51, 85], "68": [51, 85, 122], "9045": [51, 85], "rollout_data": [51, 85], "nvec": [52, 54], "remove_singleton": 52, "ax": [52, 324, 325, 499], "neither": [52, 53, 54, 55, 176, 501], "use_regist": [54, 60], "mone_hot": [54, 55], "boxlist": [54, 55], "gamma": [56, 260, 287, 318, 382, 383, 385, 386, 387, 389, 391, 392, 393, 395, 398, 400, 402, 403, 404, 405, 407, 408, 409, 410, 415, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 470, 480, 484, 485, 486, 499, 500, 505], "sutton": [56, 480, 499, 500], "1988": 56, "tempor": [56, 114, 310, 315, 318, 423, 424, 429, 430], "44": [56, 122], "ahead": [56, 206, 287, 506], "bias": [56, 114, 115, 308, 309, 313, 314, 378, 480, 484], "mitig": [56, 227], "multisteptransform": [56, 476], "99": [56, 260, 284, 318, 395, 410, 421, 428, 470, 484, 485, 486, 488, 491, 494, 499, 500, 505], "nontermin": 56, "original_reward": 56, "newli": [56, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 478], "OR": 56, "row": [57, 77, 150, 151, 248], "example_data": [58, 101, 190, 193, 200], "feature_dim": 58, "conform": 58, "templat": [58, 101, 185, 186, 187, 190, 206, 207, 208, 351, 355, 443], "randomli": [58, 121, 175, 198, 221, 250, 251, 270, 307, 368, 372, 490, 499, 500, 501, 503], "unidimension": 60, "action_valu": [60, 303, 304, 334, 364, 365, 369, 370, 385, 391, 400, 415, 418, 420, 479, 487, 488, 490, 494], "keepdim": [60, 478], "chosen_action_valu": [60, 333, 334, 342, 369, 370, 420, 479, 487, 490], "priori": 60, "uniqu": [60, 85, 122, 123, 152, 156, 157, 192, 194, 227, 239, 269, 270, 271, 275, 367, 449, 478, 492, 503], "tensor_spec": [60, 169, 219, 221, 390, 391, 402, 404], "one_hot_sampl": [60, 61], "chosen_data": [62, 99], "rewarddata": [62, 99, 476], "rejected_data": [62, 99], "copy_exist": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "return_earli": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "share_non_tensor": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "memmap": [62, 64, 71, 85, 100, 101, 108, 164, 173, 191, 284, 344, 347, 348, 349, 350, 416, 419, 442, 444, 457], "dataclass": [62, 64, 71, 83, 85, 100, 101, 191, 344, 347, 348, 349, 350, 400, 416, 419], "from_dataset": [62, 64, 99], "dataset_nam": [62, 64, 72, 84, 99, 161], "550": [62, 64, 72, 84, 99, 122, 123], "root_dir": [62, 64, 84, 99], "from_disk": [62, 64, 84, 99], "carperai": [62, 64, 72, 84], "openai_summarize_comparison": [62, 64, 84], "load_from_disk": [62, 64, 84, 99], "load_dataset": [62, 64, 84, 99], "92534": 62, "input_id": [62, 64, 65, 71, 72, 81, 84, 99, 152, 193, 194], "end_scor": [62, 71, 72, 99], "sub_data": [62, 64], "from_tensordict": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "non_tensordict": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "getattr": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "load_memmap": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "load_": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "load_memmap_": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "fromkei": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "saved_td": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "td_load": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "fake": [62, 64, 71, 85, 100, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 344, 347, 348, 349, 350, 416, 419, 484, 485, 488], "_subclass": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "faketensormod": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "faketensor": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "from_flatten": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "attemptedli": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "existsok": [62, 64, 71, 85, 100, 101, 108, 191, 344, 347, 348, 349, 350, 416, 419], "mimic": [62, 64, 71, 85, 100, 101, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 191, 193, 194, 195, 344, 347, 348, 349, 350, 416, 419], "cross": [62, 64, 71, 85, 100, 101, 191, 291, 312, 344, 347, 348, 349, 350, 416, 419], "tensordictfutur": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "serialis": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "deepli": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "memmap_": [62, 64, 71, 85, 100, 101, 191, 284, 344, 347, 348, 349, 350, 416, 419], "memmap_lik": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "contentless": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "1_000_000": [62, 63, 64, 68, 69, 70, 71, 79, 80, 85, 95, 96, 97, 98, 100, 101, 117, 122, 191, 344, 347, 348, 349, 350, 416, 419, 484, 487, 499], "alloc": [62, 64, 71, 85, 100, 101, 110, 191, 302, 319, 320, 344, 347, 348, 349, 350, 416, 419, 478, 484], "memmap_refresh_": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "refresh": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419, 494, 499, 500], "saved_path": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "setattr": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "tent": [62, 64, 71, 84, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "to_tensordict": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419, 487], "retain_non": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "discrard": [62, 64, 71, 85, 100, 101, 191, 344, 347, 348, 349, 350, 416, 419], "alpha": [63, 79, 114, 115, 294, 295, 297, 298, 299, 300, 306, 321, 383, 385, 391, 401, 403, 405, 407, 484, 503, 505], "ep": [63, 79, 114, 115, 251, 284, 285, 290, 332, 384, 406, 415, 458, 480, 484, 485, 487, 488, 491, 494], "1e": [63, 79, 114, 115, 251, 284, 285, 290, 302, 305, 339, 484, 485, 486, 500], "08": [63, 79, 114, 115], "pin_memori": [63, 70, 79, 80, 95, 97, 98, 254, 484, 505], "schaul": [63, 114, 115], "quan": [63, 114, 115], "antonogl": [63, 114, 115], "silver": [63, 114, 115], "2015": [63, 114, 115, 232], "ab": [63, 114, 115, 135, 136, 138, 139, 150, 151, 156, 157, 159, 160, 170, 178, 179, 226, 255, 280, 284, 290, 296, 301, 305, 306, 313, 318, 325, 326, 327, 333, 335, 336, 342, 382, 383, 387, 388, 389, 390, 393, 394, 395, 397, 398, 401, 402, 405, 502], "1511": [63, 114, 115, 306], "05952": [63, 114, 115], "expon": [63, 79, 114, 115], "\u03b1": [63, 79], "delta": [63, 79, 308, 313, 339, 368, 372, 476, 480, 499], "1_000": [63, 70, 79, 80, 499, 503], "mini": [63, 70, 79, 80, 95, 97, 98, 500], "decid": [63, 70, 79, 80, 499, 505], "incompat": [63, 70, 79, 80, 404, 503], "drop_last": [63, 70, 79, 80, 121, 123], "notion": [63, 70, 79, 80, 331], "caution": [63, 70, 79, 80, 121, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 506], "codebas": [63, 70, 79, 80, 501], "return_info": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 114, 115, 117, 503], "tensordictprioritizedreplaybuff": [63, 476, 505], "_weight": [63, 79, 114, 115], "update_prior": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 114, 115, 117, 457, 481, 485, 503, 505], "36278465": 63, "invert": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 101, 117, 380, 486], "default_remote_class_config": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "overriden": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "randomsampl": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 484, 499], "td_error": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 385, 386, 387, 389, 390, 391, 392, 398, 400, 403, 405, 407, 408, 415, 418, 420, 484, 503, 505], "update_tensordict_prior": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 484, 503, 505], "empty_write_count": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "insert_transform": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 186, 187, 190, 222, 277], "insert": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 107, 117, 118, 128, 129, 132, 133, 186, 187, 190, 206, 222, 227, 231, 267, 277, 279, 478], "__iter__": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117, 200], "set_sampl": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "set_storag": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "set_writ": [63, 68, 69, 70, 79, 80, 95, 96, 97, 98, 117], "prompt_rindex": [64, 65, 72], "promptdatatldr": 64, "116722": 64, "prompt": [65, 72, 101, 102, 185, 186, 187, 188, 190, 192, 193, 198, 200, 203, 205, 344, 347, 349, 350, 351, 355, 415, 417, 497], "return_tensordict": [65, 81], "tensodict": [65, 81], "valid_sampl": 65, "eough": 65, "toknen": 65, "meet": 65, "criterion": 65, "autotoken": [65, 81, 84, 101, 185, 186, 187, 189, 190, 197, 198, 202, 203, 205, 206, 207, 351, 355, 418, 478, 496, 497], "from_pretrain": [65, 72, 81, 101, 152, 187, 190, 194, 198, 203, 205, 206, 207, 351, 355, 418, 478, 496, 497], "enough": [65, 503], "inde": [65, 237, 486, 488, 501], "index_kei": [66, 78], "hash_kei": 66, "_hash": 66, "hash_modul": [66, 73, 78], "siphash": [66, 67, 78, 152, 194], "hash_to_int": 66, "hashtoint": 66, "query_modul": [66, 78], "key1": [66, 78, 228, 267, 451, 459, 505], "key2": [66, 78, 228, 267, 451, 459, 505], "write_hash": 66, "n_compon": 67, "dtype_cast": 67, "as_tensor": [67, 73, 488], "init_method": 67, "emb": [67, 487], "sklearn": [67, 161], "byte": [67, 73, 102, 103, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 417], "builtin": [67, 73], "pythonhashse": [67, 73], "todo": 67, "replay_buffer_cl": 68, "optiona": 68, "transform_factori": [68, 70, 79, 80], "asyncio": [68, 134], "ray_buff": 68, "object_store_memori": 68, "600": [68, 72], "await": 68, "invoc": 69, "friendli": [69, 484], "include_info": [69, 79, 80, 95, 96, 97, 98], "storagecheckpointerbas": [70, 124], "roundrobinwrit": [70, 95, 96, 97, 98], "_pytre": [70, 503], "tree_map": [70, 503], "assert0": [70, 503], "ref_model": [72, 202, 206, 207], "reward_model": [72, 377], "max_new_token": [72, 497], "score_clip": 72, "kl_schedul": 72, "klcontrollerbas": 72, "num_step": [72, 488], "causal": 72, "sentenc": [72, 189], "frozen": [72, 247, 284, 285], "gpt2rewardmodel": 72, "get_dataload": [72, 476], "promptdata": [72, 476], "gpt2lmheadmodel": 72, "dl": [72, 200], "block_siz": [72, 99], "tensorclass_typ": [72, 99], "openai_summarize_tldr": 72, "config_class": 72, "model_path": 72, "rollout_from_model": 72, "rollout_from_data": 72, "reward_kl": [72, 247], "reward_raw": 72, "sample_log_prob": [72, 247, 360, 361, 362, 368, 372, 374, 402], "create_rollout_td": 72, "log_prob": [72, 201, 202, 206, 302, 312, 319, 320, 328, 331, 341, 346, 351, 355, 372, 385, 391, 405, 418, 480, 497], "log_ratio": 72, "replic": [72, 480], "rindex": 72, "eo": [72, 192], "generation_config": 72, "generationconfig": 72, "ti": [72, 431, 432, 433, 434, 436, 437, 438, 439, 485], "log_probs_gen": 72, "logprobs_of_label": 72, "hash_a": 73, "4669941682990263259": 73, "3778166555168484291": 73, "9122128731510687521": 73, "hash_b": 73, "heterogen": [74, 75, 109, 134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 321, 322, 484, 485], "220": 76, "resembl": 78, "tensormap": 78, "collat": [78, 117, 186, 187, 190], "subtyp": 78, "embedding_storag": 78, "tensor_dict_storag": 78, "new_index": 78, "key3": 78, "retrieve_valu": 78, "storage_constructor": 78, "write_fn": 78, "tensordictstorag": 78, "thumb": [78, 164, 486], "lazydynamicstorag": 78, "fixedstorag": 78, "randomprojectionhash": 78, "priority_kei": [79, 80, 96, 114, 385, 387, 390, 391, 392, 398, 400, 403, 405, 407, 408, 415, 418, 420, 503, 505], "reduct": [79, 114, 115, 128, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 401, 402, 403, 404, 405, 407, 408, 415, 418], "prioritizedreplaybuff": [79, 476, 505], "min": [79, 114, 115, 128, 332, 383, 384, 385, 391, 401, 403, 405, 415, 485, 486], "median": [79, 114, 115, 128, 144, 150, 151, 195, 220, 368, 372], "huggingfac": [81, 192, 366], "co": [81, 192, 239, 501], "pad_trunc": 81, "am": 81, "me": [81, 198, 203, 496], "reassur": 81, "ok": 81, "_encode_memo_dict": 83, "primarili": [83, 256, 490], "educ": 83, "guess": 83, "knowledg": [83, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 491, 493], "tokenizer_fn": 84, "tensordicttoken": [84, 476], "pre_tokenization_hook": 84, "valid_s": 84, "tokenizer_class": 84, "tokenizer_model_nam": 84, "tokein": 84, "elementwis": 84, "vocabulari": [84, 152, 193, 194, 209, 274, 312], "loader": [84, 486], "185068": 84, "dataset_to_tensordict": 84, "data_dir": 84, "batch_dim": [84, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 474], "valid_mask_kei": 84, "batch_dimens": 84, "filder": 84, "from_dict": [84, 200], "data_memmap": 84, "ref": 85, "branching_act": 85, "prev_act": 85, "edg": [85, 488], "travers": 85, "breadth": 85, "bf": 85, "fully_expand": 85, "get_vertex_by_hash": 85, "get_vertex_by_id": 85, "is_termin": 85, "make_nod": 85, "node_observ": 85, "bag": 85, "num_children": 85, "num_vertic": 85, "count_repeat": 85, "recustruct": 85, "plotli": 85, "make_label": 85, "visual": [85, 255, 280, 282, 442, 486, 499, 501], "unsupport": 85, "selected_act": 85, "mctsforest": [85, 152, 194, 476], "key_typ": 85, "recurse_through_entri": 92, "recurse_through_stack": 92, "dataset_id": [95, 97, 98], "num_proc": 95, "slice_len": [95, 115, 122, 123, 442], "strict_len": 95, "arari": 95, "2600": 95, "million": [95, 487], "consequ": [95, 106, 313, 492], "50x10": 95, "available_dataset": [95, 96, 97, 98, 122, 123], "ataridqn": 95, "immutabledatasetwrit": [95, 96, 97, 98], "shorter": [95, 115, 122, 123], "Be": [95, 115, 122, 123], "game_nam": 95, "krull": 95, "1d": [95, 114, 115, 122, 123, 128], "cheapli": 95, "invalid_rang": 95, "999998": 95, "999999": 95, "add_count": 95, "valueestim": [95, 382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 410, 415, 418, 420, 476, 480, 484, 499, 500], "convolut": [95, 294, 295, 297, 298, 321, 337, 488, 490], "2657628": 95, "2657629": 95, "2657630": 95, "2657631": 95, "2657632": 95, "2657633": 95, "2657634": 95, "2657635": 95, "2657636": 95, "2657637": 95, "2657638": 95, "2657639": 95, "2657640": 95, "2657641": 95, "2657642": 95, "2657643": 95, "2657644": 95, "2657645": 95, "2657646": 95, "2657647": 95, "2657648": 95, "2657649": 95, "2657650": 95, "2657651": 95, "2657652": 95, "2657653": 95, "2657654": 95, "2657655": 95, "2657656": 95, "2657657": 95, "2657658": 95, "2657659": 95, "2657660": 95, "2657661": 95, "2657662": 95, "2657663": 95, "2657664": 95, "2657665": 95, "2657666": 95, "2657667": 95, "2657668": 95, "2657669": 95, "2657670": 95, "2657671": 95, "2657672": 95, "2657673": 95, "2657674": 95, "2657675": 95, "2657676": 95, "2657677": 95, "2657678": 95, "2657679": 95, "2657680": 95, "2657681": 95, "2657682": 95, "2657683": 95, "2657684": 95, "2657685": 95, "2657686": 95, "2657687": 95, "2657688": 95, "2657689": 95, "2657690": 95, "2657691": 95, "1995687": 95, "1995688": 95, "1995689": 95, "1995690": 95, "1995691": 95, "1995692": 95, "1995693": 95, "1995694": 95, "1995695": 95, "1995696": 95, "1995697": 95, "1995698": 95, "1995699": 95, "1995700": 95, "1995701": 95, "1995702": 95, "1995703": 95, "1995704": 95, "1995705": 95, "1995706": 95, "1995707": 95, "1995708": 95, "1995709": 95, "1995710": 95, "1995711": 95, "1995712": 95, "1995713": 95, "1995714": 95, "1995715": 95, "1995716": 95, "1995717": 95, "1995718": 95, "1995719": 95, "1995720": 95, "1995721": 95, "1995722": 95, "1995723": 95, "1995724": 95, "1995725": 95, "1995726": 95, "1995727": 95, "1995728": 95, "1995729": 95, "1995730": 95, "1995731": 95, "1995732": 95, "1995733": 95, "1995734": 95, "1995735": 95, "1995736": 95, "1995737": 95, "1995738": 95, "1995739": 95, "1995740": 95, "1995741": 95, "1995742": 95, "1995743": 95, "1995744": 95, "1995745": 95, "1995746": 95, "1995747": 95, "1995748": 95, "1995749": 95, "1995750": 95, "_max_run": 95, "dataset_asterix": 95, "asterix": 95, "dataset_pong": 95, "sample_from_al": [95, 117, 120], "buffer_id": [95, 120, 126], "hidden": [95, 164, 173, 226, 297, 305, 308, 309, 310, 313, 314, 315, 326, 327, 335, 336, 360, 361, 362, 363, 371, 374, 384, 399, 402, 479, 487, 498, 505], "data_path": [95, 96, 97, 98], "data_path_root": [95, 96, 97, 98], "delet": [95, 96, 97, 98, 228, 267, 449], "chunksiz": [95, 96, 97, 98], "max_tasks_per_child": [95, 96, 97, 98], "worker_thread": [95, 96, 97, 98], "index_with_gener": [95, 96, 97, 98], "num_fram": [95, 96, 97, 98], "unitari": [95, 96, 97, 98, 501], "minariexperiencereplai": [95, 96, 97], "1000000": [95, 96, 97, 98], "distance_from_origin": [95, 96, 97, 98], "forward_reward": [95, 96, 97, 98], "qpo": [95, 96, 97, 98], "qvel": [95, 96, 97, 98], "reward_ctrl": [95, 96, 97, 98, 144, 164, 195], "reward_forward": [95, 96, 97, 98], "reward_surv": [95, 96, 97, 98], "x_posit": [95, 96, 97, 98, 144, 164, 195], "x_veloc": [95, 96, 97, 98, 144, 164, 195], "y_posit": [95, 96, 97, 98], "y_veloc": [95, 96, 97, 98], "achieved_go": [95, 96, 97, 98], "desired_go": [95, 96, 97, 98], "27": [95, 96, 97, 98, 122, 123, 135, 136, 164, 173, 232], "_collate_id": [95, 96, 97, 98], "0x120e21dc0": [95, 96, 97, 98], "cat_tensor": [95, 96, 97, 98], "cat_next_tensor": [95, 96, 97, 98], "new_storag": [95, 96, 97, 98], "31": [95, 96, 97, 98, 122, 150, 151], "full_storag": [95, 96, 97, 98], "0x168406fc0": [95, 96, 97, 98], "from_env": 97, "use_truncated_as_don": 97, "direct_download": 97, "terminate_on_end": 97, "env_kwarg": [97, 224, 472, 473, 484], "reconstruct": [97, 122, 123, 394, 484, 506], "get_dataset": 97, "qlearning_dataset": 97, "fewer": [97, 115, 122], "unexpectedli": 97, "traj_split": 97, "observationnorm": [97, 284, 285, 474, 484, 485, 486, 487, 505], "maze2d": 97, "umaz": 97, "loc": [97, 134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 193, 194, 195, 247, 251, 262, 284, 285, 311, 340, 341, 360, 361, 362, 368, 372, 374, 382, 383, 385, 398, 402, 403, 404, 405, 464, 474, 479, 484, 485, 486, 487, 490, 500, 505], "load_from_local_minari": 98, "minari": 98, "websit": [98, 496], "currenrtli": 98, "minari_data": 98, "door": 98, "torchrl_logg": [98, 494, 496], "28": [98, 122, 123, 321], "door_body_po": 98, "infinit": [99, 156, 157, 178, 179, 186, 187, 190, 200, 285, 492, 503], "pairwisedataset": [99, 476], "function_cal": 100, "_wrap_td_method": 100, "wrapped_func": 100, "0x7f26da27db80": 100, "mime_typ": 100, "function_nam": 100, "function_arg": 100, "contentbas": 101, "is_complet": 101, "tool_cal": 101, "tool_respons": [101, 203, 205, 478], "apply_chat_templ": [101, 185, 203, 205, 418, 478, 496], "autoprocessor": 101, "add_generation_prompt": [101, 206, 207, 418, 478], "chat_templ": [101, 208, 351, 355, 418, 478], "chat_template_nam": [101, 351, 355, 418, 478], "continue_final_messag": 101, "return_tensor": [101, 206], "return_dict": [101, 207, 478], "return_assistant_tokens_mask": [101, 206, 207, 478], "chat": [101, 185, 186, 187, 190, 199, 203, 205, 206, 207, 208, 351, 355, 418, 478, 497], "pretrainedtoken": [101, 185, 196, 351, 355], "im_start": [101, 187, 190, 203, 205, 478], "assist": [101, 185, 187, 190, 198, 202, 203, 205, 206, 207, 351, 355, 415, 418, 487, 496, 497], "preval": 101, "messag": [101, 185, 198, 478, 497], "pt": [101, 206, 444, 481], "assistant_mask": [101, 478], "qwen": [101, 187, 190, 198, 203, 205, 351, 352, 355, 418, 478, 496, 497], "dialogpt": [101, 478], "convers": [101, 135, 136, 150, 151, 185, 187, 190, 206, 207, 215, 415, 478, 480, 496, 497], "falcon": [101, 478], "deepseek": [101, 478], "chatml_format": [101, 351, 355, 418, 478], "default_spec": [101, 344, 347, 348, 349, 350], "set_list_to_stack": [101, 190, 203, 205, 206, 207, 478, 496], "foo": [101, 108, 110, 130, 363, 503, 506], "from_chat": [101, 185, 206, 207, 351, 355, 418, 478, 497], "qwen2": [101, 187, 190, 198, 203, 205, 352, 478, 496, 497], "7b": [101, 478, 496], "nyou": [101, 190], "im_end": [101, 187, 198, 203, 205, 478, 496], "nwrite": 101, "capit": [101, 292, 496, 497], "franc": [101, 496, 497], "germani": 101, "pari": [101, 190, 496], "berlin": 101, "answer": [101, 187, 189, 190, 192, 198, 478, 496], "topk_siz": 102, "prompt_kei": [102, 192, 417], "rewards_kei": [102, 417], "k": [102, 291, 293, 308, 309, 313, 314], "lazystackstorag": 102, "samplerwithoutreplac": [102, 128, 486, 500, 503], "lazy_stack": [102, 418, 478, 498], "topk": 102, "selector": [102, 496], "_td": [102, 141, 393], "25": [102, 232, 484], "wrote": 102, "top3": 102, "r3": 102, "as_padded_tensor": [102, 193, 200, 207, 346, 351, 355], "transformthatmeasuresbyt": [102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 417], "bytes_in_td": [102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 226, 227, 228, 231, 232, 233, 236, 239, 240, 241, 243, 246, 247, 254, 256, 257, 258, 260, 263, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 283, 284, 287, 417], "transform_done_spec": [102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 236, 267, 274, 276, 278, 287, 417], "transform_env_batch_s": [102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 276, 287, 417], "transform_env_devic": [102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 231, 236, 276, 287, 417], "transform_full_done_spec": [102, 188, 189, 192, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 224, 231, 235, 236, 240, 247, 249, 257, 258, 264, 268, 274, 276, 278, 285, 287, 417], "compress": [103, 104, 476], "pytest": [103, 478], "test_rb": 103, "testcompressedliststorag": 103, "test_compressed_storage_tensor": 103, "v": [103, 284, 308, 309, 313, 314, 360, 390, 398, 405, 484, 485], "sent": [103, 108, 110, 130, 284], "verifi": [103, 186, 478], "attach": [103, 108, 109, 110, 111, 124, 126, 130, 485], "entiti": [103, 108, 109, 110, 111, 124, 126, 130], "num_byt": 103, "to_bytestream": 103, "data_to_bytestream": 103, "checkpoint_fil": 106, "h5": 106, "h5_kwarg": 106, "iff": 106, "suffix": [106, 455], "h5py": 106, "create_dataset": 106, "immut": [107, 134, 137, 140, 144, 152, 164, 168, 173, 174, 185, 186, 187, 190, 193, 194, 195, 258, 277], "scratch_dir": [108, 484, 485, 487, 492, 499, 502, 503], "mistak": [108, 110, 130], "overewritten": 108, "tensorstoragecheckpoint": 108, "pathlib": [108, 460, 488], "main_ckpt_dir": 108, "rb_memmap": 108, "10_000_000": 108, "myclass": [108, 110, 130], "lazystacktensordict": 109, "heterougen": 109, "linearli": 109, "densifi": 109, "unlimit": [109, 111], "st": 109, "expans": [110, 400, 415, 418], "zero_": [110, 130, 212], "liststoag": 112, "max_capac": [114, 115, 484, 503], "max_priority_within_buff": [114, 115], "proport": [114, 503], "magnitud": [114, 115, 484, 499], "focus": [114, 115, 484, 491], "p_i": [114, 115], "delta_i": [114, 115], "epsilon": [114, 115, 251, 289, 307, 332, 406, 458, 485, 486, 487, 490], "frac": [114, 115, 308, 309, 313, 314, 486], "sum_j": [114, 115], "p_j": [114, 115], "w_i": [114, 115], "cdot": [114, 115, 418], "unbias": [114, 115], "anneal": [114, 115, 332, 485, 490, 499], "guidelin": [114, 115], "math": [114, 115, 406], "benefit": [114, 115, 477, 489, 497, 499, 500, 503], "data_0": 114, "data_1": 114, "smoothen": 114, "tdrb": 114, "pack": [114, 308, 313, 486, 489, 506], "nd": [114, 115], "sum_tre": [114, 115], "min_tre": [114, 115], "end_kei": [115, 122, 123], "cache_valu": [115, 122, 123], "closer": [115, 505], "readili": [115, 122, 123, 372], "conjunct": [115, 122, 123, 485], "buffer0": [115, 122], "immutablewrit": [115, 122], "buffer1": [115, 122], "other_sampl": [115, 122], "short": [115, 122, 123, 134, 135, 136, 137, 140, 144, 150, 151, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 313, 314, 485, 486, 489, 490, 500, 503], "tolist": [115, 478], "120110917137936e": 115, "06": [115, 302, 339], "storageensembl": [117, 120], "samplerensembl": 117, "writerensembl": [117, 126], "num_buffer_sampl": [117, 120], "ensembl": [117, 120, 126, 127, 133, 371, 403], "forbidden": 117, "0x13a2ef430": 117, "0x13a2f9310": 117, "interpol": [117, 259, 485, 488], "interpolationmod": 117, "bilinear": [117, 259], "0x13a2f9220": 117, "0x13a2f9f70": 117, "0x13a2d9b50": 117, "0x13a2f95b0": 117, "0x128648260": 117, "roundrobin": [118, 129], "shuffl": [121, 123, 186, 187, 190, 500], "incomplet": [121, 123, 198], "fresh": 121, "haven": [121, 502], "remain": [121, 198, 204, 226, 236, 237, 247, 269, 325, 478, 491], "draw": [121, 307], "use_gpu": [122, 123], "slicesamplerwithoutreplac": [122, 503], "acceler": [122, 123, 144, 195, 499, 500], "ep_1": [122, 123], "ep_2": [122, 123], "73": 122, "74": 122, "76": 122, "77": 122, "42": [122, 316, 331, 382, 383, 385, 386, 390, 398, 405], "43": 122, "45": 122, "67": [122, 498], "69": 122, "70": 122, "71": 122, "80": [122, 135, 136], "82": 122, "83": 122, "78": 122, "79": 122, "320": [122, 123, 138, 139], "700": [122, 123], "dataid": [122, 123], "counter": [123, 204, 232, 275, 367, 453, 481, 488], "23": [123, 232, 288], "request": [123, 224, 256], "51": 123, "__len__": 124, "rank_kei": 128, "get_insert_index": 128, "themselv": [134, 292, 485], "dens": [134, 319, 320, 478], "maybe_dens": 134, "min_get": [134, 168, 174], "maker": [134, 474, 485], "sort": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 228, 332], "another_act": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "discretebox": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "mutabl": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "action_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 486, 500], "had": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 490, 492], "all_act": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "any_don": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "_callabletransform": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 193, 194, 195], "auto_specs_": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "action_spac": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 239, 304, 334, 364, 365, 369, 370, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 487, 488, 490, 494], "check_dtyp": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195], "discrep": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 382, 384, 386, 387, 399, 402, 404, 420], "broken": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195], "rng": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 180, 185, 186, 187, 190, 193, 194, 195, 501], "done_keys_group": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "another_don": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "done_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "empty_cach": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 277], "env_batch_s": [134, 168, 174], "fake_tensordict": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 485, 488], "envnam": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "full_action_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 499, 500], "full_done_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "full_observation_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "full_reward_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "pipeline_st": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "full_state_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "input_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "is_spec_lock": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "maybe_reset": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "speak": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 233, 372, 484], "observation_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "output_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "register_gym": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 489], "entry_point": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "info_kei": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "reward_threshold": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "nondeterminist": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "max_episode_step": [134, 137, 140, 143, 144, 145, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "order_enforc": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "autoreset": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "disable_env_check": [134, 137, 140, 143, 144, 152, 159, 160, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "apply_api_compat": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "nasium": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 215], "dmcontrolenv": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 442, 476, 484, 489, 498, 506], "dmc": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "cheetah": [134, 137, 138, 139, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 442, 484], "removeemptyspec": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "threshold": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 307, 383, 384, 415, 478, 486], "learnt": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 470], "checker": [134, 137, 140, 143, 144, 152, 159, 160, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "stepapicompat": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "deem": [134, 137, 140, 144, 152, 156, 157, 164, 165, 168, 173, 174, 175, 178, 179, 185, 186, 187, 190, 193, 194, 195], "task_nam": [134, 137, 138, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "envgym": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0855": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0215": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0881": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0412": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "1101": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0080": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0254": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0424": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "veloc": [134, 137, 138, 139, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 499, 500, 501, 506], "9609e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "9776e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "04": [134, 137, 140, 144, 148, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 272, 285], "6347e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "3842e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "5338e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "3064e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0381e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "6656e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "05": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 272, 290, 501], "0204e": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0833": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0275": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0612": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0770": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "1256": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0082": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0186": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0476": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "2221": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "2256": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "5930": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "6937": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "5865": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "5479": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0187": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "6825": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "5224": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0018": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "1005": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0335": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 233], "0268": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0133": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0627": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0074": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0488": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0353": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0075": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0069": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0098": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0058": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0033": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0157": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0004": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 272], "0381": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0452": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "11355747": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "04257728": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "00408397": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "04155852": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0389733": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "01409826": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0978704": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "08808327": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "03970837": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "00535434": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "02353762": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "05116226": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "02788907": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "06848346": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "05154399": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "0371798": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "05128025": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "dydact": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "ant": [134, 135, 136, 137, 140, 144, 147, 149, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 502], "gym_env": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 505], "reset_kei": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 227, 263, 269, 270, 271, 499], "multitask": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "multiag": [134, 137, 140, 144, 152, 155, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 219, 322, 333, 342, 384, 399, 402, 420], "another_reward": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "reward_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "auto_cast_to_devic": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 500], "soon": [134, 137, 140, 144, 152, 164, 165, 166, 167, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "__sort": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "as__": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "categorical_action_encod": [134, 135, 136, 137, 140, 143, 144, 145, 146, 149, 150, 151, 152, 159, 160, 164, 165, 168, 170, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 215, 232, 488], "argmaxmodul": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "argmax": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 304, 334, 365, 370, 488, 490], "n_act": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 247, 382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 491], "ourselv": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 486, 506], "emul": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "epoch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 460, 486, 499, 500], "input_td": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "rollout_td": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "state_spec_unbatch": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "prevail": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 219, 228, 263], "next_tensordict": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218, 224, 228, 240, 241, 242, 254, 257, 258, 264, 267, 280, 284, 478], "precomput": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195], "_stepmdp": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218], "exclude_act": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 218], "minim": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 444, 478, 503], "reset_data": [134, 137, 140, 144, 152, 164, 165, 168, 173, 174, 175, 185, 186, 187, 190, 193, 194, 195, 478, 506], "googl": [135, 136, 156, 157, 162, 163, 190, 192, 290, 486, 487, 496, 499, 500], "2106": [135, 136, 388, 407], "13281": [135, 136], "cache_clear_frequ": [135, 136], "leak": [135, 136], "frame_skip": [135, 136, 138, 139, 143, 144, 145, 146, 150, 151, 153, 154, 159, 160, 170, 195, 243, 453, 455, 463, 481, 484, 485, 486, 505], "allow_done_after_reset": [135, 136, 138, 139, 140, 143, 145, 146, 149, 150, 151, 159, 160, 162, 163, 170, 176, 177], "toler": [135, 136, 138, 139, 143, 145, 146, 149, 150, 151, 159, 160, 162, 163, 170, 176, 177, 302, 339], "is_avail": [135, 136, 484, 485, 486, 487, 499, 500, 502], "87": [135, 136], "acrobot": [135, 136, 138, 139, 506], "advant": [135, 136, 150, 151], "timer": [135, 136, 144, 150, 151, 195], "timeit": [135, 136, 150, 151, 488], "310": [135, 136], "ms": [135, 136, 150, 151], "268": [135, 136], "433": [135, 136], "213": [135, 136], "8605": [135, 136], "pipelineenv": 136, "get_environ": 136, "san": 137, "fen": [137, 162, 163], "pgn": 137, "legal": [137, 221], "board": [137, 175], "include_san": 137, "algebra": [137, 501], "notat": 137, "include_fen": 137, "forsyth": 137, "edward": 137, "include_pgn": 137, "portabl": [137, 493], "include_legal_mov": 137, "include_hash": 137, "mask_act": 137, "subset": [137, 501, 502], "29275": 137, "rnbqkbnr": [137, 162, 163], "pppppppp": [137, 162, 163], "kqkq": [137, 162, 163], "legal_mov": 137, "219": 137, "5p2": 137, "ppppp1pp": 137, "event": [137, 312, 319, 320, 328, 431, 432, 433, 434, 436, 437, 438, 439, 503], "white": 137, "f4": 137, "96": 137, "kq": 137, "5n2": 137, "rnbqkb1r": 137, "nf3": 137, "na6": 137, "c4": 137, "f6": 137, "h4": 137, "rb8": 137, "na3": 137, "ra": 137, "get_legal_mov": 137, "uci": 137, "dm_control": [138, 139, 484, 498, 506], "2006": [138, 139, 232, 383, 389], "12983": [138, 139], "240": [138, 139, 505], "swingup": [138, 139, 506], "swingup_spars": [138, 139], "ball_in_cup": [138, 139], "catch": [138, 139, 488], "balance_spars": [138, 139], "three_pol": [138, 139], "two_pol": [138, 139], "finger": [138, 139], "turn_easi": [138, 139], "turn_hard": [138, 139], "fish": [138, 139], "upright": [138, 139, 485], "swim": [138, 139], "hopper": [138, 139], "hop": [138, 139], "humanoid": [138, 139, 164, 173, 498], "walk": [138, 139, 164, 173, 485, 498], "run_pure_st": [138, 139], "bring_bal": [138, 139], "bring_peg": [138, 139], "insert_bal": [138, 139], "insert_peg": [138, 139], "point_mass": [138, 139], "reacher": [138, 139], "swimmer": [138, 139], "swimmer6": [138, 139], "swimmer15": [138, 139], "walker": [138, 139], "dog": [138, 139], "trot": [138, 139], "humanoid_cmu": [138, 139], "lqr": [138, 139], "lqr_2_1": [138, 139], "lqr_6_2": [138, 139], "quadrup": [138, 139], "escap": [138, 139], "stacker": [138, 139], "stack_2": [138, 139], "stack_4": [138, 139], "deviceless": 140, "run_type_check": [140, 158], "hint": 140, "counterenv": 140, "creator": [141, 465, 466, 472, 473, 474], "substitut": [141, 269, 284, 490], "vecnorm": [141, 285, 474], "env_creat": [141, 484], "test_env1": 141, "observation_count": [141, 506], "test_env2": 141, "ps": 141, "p1": 141, "p2": 141, "9934": 141, "make_vari": [141, 275], "variant": [141, 275, 292, 479], "trajcount": 141, "env_creator_pendulum": 141, "env_creator_cartpol": 141, "env_str": 142, "device_map": 142, "registri": [143, 176], "asyncvectorenv": 143, "pixel_observ": [143, 145, 146, 170], "pixelobservationwrapp": [143, 145, 146, 170], "adventur": [143, 145], "airraid": [143, 145, 506], "alien": [143, 145], "time_limit": 143, "timelimit": [143, 156, 157, 178, 179], "default_info_dict_read": [143, 144, 145, 164, 195], "reader": [143, 144, 145, 164, 195, 485], "set_info_dict_read": [143, 144, 145, 164, 195, 489], "info_dict": [143, 144, 145, 164, 195], "gymlikeenv": [143, 145, 195, 476], "auto_register_info_dict": [143, 144, 145, 164, 195], "multibinari": [143, 145], "multidiscret": [143, 145], "rag": [143, 145], "gym_conversion_exampl": [143, 145], "info_dict_read": [144, 164, 195], "ignore_priv": [144, 195], "baseinfodictread": [144, 195], "tensordictprim": [144, 164, 195, 293, 310, 315, 379, 479, 487], "succe": [144, 164, 195], "underscor": [144, 195], "primer": [144, 185, 186, 187, 190, 193, 195, 200, 270, 293, 310, 315, 379, 487], "halfcheetah": [144, 164, 195, 220, 259, 484, 505], "reward_run": [144, 164, 195], "raise_if_clos": [144, 195], "fast_encod": [144, 195], "memoize_cach": [144, 195], "adaptive_autorang": [144, 195], "4f": [144, 195, 418, 486, 487, 501], "fp": [144, 195, 442, 447, 449], "10141": [144, 195], "5742fp": [144, 195], "10576": [144, 195], "8388fp": [144, 195], "read_act": [144, 195], "read_don": [144, 195], "nonsens": [144, 195], "fallback": [144, 195], "read_ob": [144, 195], "dictat": [144, 195, 248, 368, 372, 402, 484, 501], "read_reward": [144, 195], "hoc": [144, 164, 195, 490], "dict_read": [144, 195], "my_info_kei": [144, 195], "some_env": [144, 195], "vecenv": 145, "vectorenv": 145, "convert_actions_to_numpi": 145, "missing_obs_valu": [145, 283], "vecgymenvtransform": 145, "secur": [146, 496], "habitat3": 146, "ai": [146, 478, 502], "habitatrenderpick": 146, "isaacgym": [147, 148], "isaacgymwrapp": [147, 476], "isaacgymenv": [148, 476], "webpag": 148, "isaac": [148, 149], "essenc": [148, 489], "scripts_isaaclab": 149, "managerbasedrlenv": 149, "app": 149, "applaunch": 149, "argpars": [149, 471, 474], "parser": [149, 189, 471, 474, 478], "argumentpars": 149, "add_app_launcher_arg": 149, "args_cli": 149, "hydra_arg": 149, "parse_known_arg": 149, "app_launch": 149, "isaaclab_task": 149, "f401": 149, "manager_bas": 149, "ant_env_cfg": 149, "antenvcfg": 149, "isaac_lab": 149, "cfg": [149, 463, 464, 465, 466, 467, 468, 469, 470, 471, 474], "instadeepai": [150, 151], "2306": [150, 151, 285], "09884": [150, 151], "snake": [150, 151, 187], "grid": [150, 151, 442], "bodi": [150, 151], "body_st": [150, 151], "fruit_posit": [150, 151], "col": [150, 151], "head_posit": [150, 151], "tail": [150, 151], "game2048": [150, 151], "maze": [150, 151], "cleaner": [150, 151, 497], "cvrp": [150, 151], "multicvrp": [150, 151], "minesweep": [150, 151], "rubikscub": [150, 151], "knapsack": [150, 151], "sudoku": [150, 151], "tsp": [150, 151], "connector": [150, 151], "v2": [150, 151, 171, 172, 411, 431, 432, 433, 434, 436, 437, 438, 439, 487], "mmst": [150, 151], "graphcolor": [150, 151], "partli": [150, 151], "scrambl": [150, 151], "robotwarehous": [150, 151], "tetri": [150, 151], "binpack": [150, 151], "jobshop": [150, 151], "0x1fca91910": 150, "122": [150, 151, 506], "0x1ff9baee0": 150, "134": [150, 151], "0x1ff9ba7c0": 150, "172": [150, 151], "jit": 151, "eager": [151, 352], "tdreset": [151, 287, 498], "whichev": 151, "overview": [152, 194, 486, 488, 491, 499, 500, 505], "vocab_s": [152, 193, 194], "hashing_modul": [152, 194], "text_output": [152, 194], "decod": [152, 194, 213, 326, 346, 351, 355, 478], "batch_decod": [152, 194], "text_kei": [152, 194, 346, 351, 355], "gpt2token": [152, 194], "make_tensordict": [152, 194], "mo": [153, 154], "minecart": [153, 154], "mo_gym": [154, 248], "qualnam": 155, "neural": [155, 166, 167, 294, 295, 329, 331, 337, 371, 422, 479, 485, 486, 487, 490, 499, 500, 501, 506], "group_map": [155, 156, 157, 162, 163, 166, 167, 176, 177, 178, 179, 181, 499], "constructiuon": [155, 166, 167], "premad": [155, 156, 157, 166, 167, 178, 179, 420], "all_in_one_group": [155, 162, 163, 181], "agent_0": [155, 166, 167, 176, 181, 267], "agent_1": [155, 166, 167, 176, 181, 267], "agent_2": [155, 166, 167, 176, 181], "agent_3": [155, 176], "one_group_per_ag": [155, 166, 167], "meltingpot": [156, 157], "2211": [156, 157], "13746": [156, 157], "melt": [156, 157], "pot": [156, 157], "novel": [156, 157, 491], "social": [156, 157], "familiar": [156, 157, 485, 496, 500, 506], "unfamiliar": [156, 157], "broad": [156, 157], "cooper": [156, 157, 499, 500], "decept": [156, 157], "reciproc": [156, 157], "stubborn": [156, 157], "substrat": [156, 157], "ml_collect": 156, "config_dict": 156, "configdict": 156, "categorical_act": [156, 157, 162, 163, 166, 167, 171, 172, 176, 177, 178, 179], "marlgroupmaptyp": [156, 157, 162, 163, 166, 167, 176, 177, 178, 179, 181, 476, 499], "agent_nam": [156, 157, 178, 179, 181], "agent_names_to_indices_map": [156, 157, 178, 179], "env_torchrl": [156, 157], "commons_harvest__open": [156, 157], "rgb": [156, 157], "144": [156, 157], "192": [156, 157], "collective_reward": [156, 157], "ready_to_shoot": [156, 157], "88": [156, 157, 171, 172], "substrate_config": 157, "get_config": 157, "mp_env": 157, "build_from_config": 157, "default_player_rol": 157, "mymbenv": [158, 291, 318], "world_model": [158, 291, 318, 394], "hidden_observ": [158, 291, 318], "mlp": [158, 291, 294, 295, 297, 298, 299, 300, 306, 310, 315, 318, 322, 323, 360, 364, 379, 387, 389, 479, 485, 488, 490, 491, 494, 498, 502, 505], "worldmodelwrapp": [158, 291, 318], "activation_class": [158, 291, 294, 295, 297, 298, 299, 300, 305, 306, 316, 318, 321, 322, 485, 490, 499, 500, 505], "activate_last_lay": [158, 291, 300, 316, 318], "sail": [159, 160], "sg": [159, 160], "2206": [159, 160], "10558": [159, 160], "readthedoc": [159, 162, 163], "en": [159, 162, 163], "python_interfac": 159, "envpoolmixin": 160, "env_bas": 160, "task_id": 160, "env_typ": 160, "gym_reset_return_info": 160, "envpool_env": 160, "www": [161, 319, 320], "fetch_openml": 161, "adult_num": 161, "adult_onehot": 161, "mushroom_num": 161, "mushroom_onehot": 161, "covertyp": 161, "shuttl": 161, "magic": [161, 488, 489], "106": 161, "openspiel": [162, 163], "open_spiel": [162, 163], "game_str": 162, "return_st": [162, 163, 166, 167], "4672": [162, 163], "current_play": [162, 163], "674": 162, "2048": [162, 163], "add_nois": [162, 163], "amazon": [162, 163], "backgammon": [162, 163], "restor": [162, 163, 478], "td_restor": [162, 163], "pyspiel": 163, "load_gam": 163, "new_initial_st": 163, "3009": 163, "my_env_fun": [164, 173], "custom_attribute_list": [164, 173], "custom_attribut": [164, 173], "custom_method_list": [164, 173], "custom_method": [164, 173], "deploi": [164, 173, 224, 488], "slight": [164, 173, 485], "share_individual_td": [164, 173], "shared_memori": [164, 173], "policy_proof": [164, 173], "ll": [164, 173, 232, 308, 309, 313, 314, 484, 485, 486, 487, 489, 490, 491, 492, 494, 496, 500, 506], "serial_for_singl": [164, 173, 485], "circular": [164, 173, 484], "list_of_kwarg": [164, 173], "com_veloc": [164, 173], "head_height": [164, 173], "joint_angl": [164, 173], "torso_vert": [164, 173], "batched_pipe_timeout": 164, "stringent": [164, 486, 499, 500], "penv": [164, 275], "env_fix": 164, "influenc": 164, "myenv": [164, 224, 235, 238], "update_kwarg": [164, 173], "th": [165, 242, 279, 308, 313, 501], "thdot": [165, 501], "max_spe": [165, 501], "max_torqu": [165, 501], "gen_param": [165, 501], "gravit": [165, 501], "torqu": [165, 501], "pettingzoo": [166, 167, 499, 500], "pet": [166, 167], "zoo": [166, 167], "__": [166, 167], "aecenv": [166, 167], "dead": [166, 167], "done_on_ani": [166, 167, 499], "compulsori": [166, 167], "adversary_0": [166, 167], "adversari": [166, 167, 396, 499], "sisl": 166, "multiwalker_v9": 166, "aec": [166, 167], "n_piston": [166, 167], "pistonball_v6": [166, 167], "piston": [166, 167], "piston_0": [166, 167], "piston_1": [166, 167], "piston_20": [166, 167], "tictactoe_v3": [166, 167], "player": [166, 167, 175], "player_1": [166, 167], "player_2": [166, 167], "butterfli": 167, "parallel_env": [167, 484, 505, 506], "_setup": [168, 174], "async_reset_send": [168, 174], "async_reset_recv": [168, 174], "cube": 169, "roboh": 170, "expos": [170, 235, 238, 373, 384, 402, 485], "vikashplu": 170, "wiki": 170, "2310": 170, "06828": 170, "from_depth": 170, "smacv2": [171, 172], "starcraft": [171, 172], "challeng": [171, 172, 489, 501, 502], "10gen_terran": [171, 172], "10gen_zerg": [171, 172], "10gen_protoss": [171, 172], "3m": [171, 172], "8m": [171, 172], "25m": [171, 172], "5m_vs_6m": [171, 172], "8m_vs_9m": [171, 172], "10m_vs_11m": [171, 172], "27m_vs_30m": [171, 172], "mmm": [171, 172], "mmm2": [171, 172], "2s3z": [171, 172], "3s5z": [171, 172], "3s5z_vs_3s6z": [171, 172], "3s_vs_3z": [171, 172], "3s_vs_4z": [171, 172], "3s_vs_5z": [171, 172], "1c3s5z": [171, 172], "2m_vs_1z": [171, 172], "corridor": [171, 172], "6h_vs_8z": [171, 172], "2s_vs_1sc": [171, 172], "so_many_banel": [171, 172], "bane_vs_ban": [171, 172], "2c_vs_64zg": [171, 172], "old": [171, 172, 285, 399, 506], "smac": [171, 172], "map_nam": [171, 172], "176": [171, 172], "battle_won": [171, 172], "dead_al": [171, 172], "dead_enemi": [171, 172], "episode_limit": [171, 172], "322": [171, 172, 198], "procedur": [171, 172], "distribution_config": [171, 172], "n_unit": [171, 172], "n_enemi": [171, 172], "team_gen": [171, 172], "dist_typ": [171, 172], "weighted_team": [171, 172], "unit_typ": [171, 172], "marin": [171, 172], "maraud": [171, 172], "medivac": [171, 172], "exception_unit_typ": [171, 172], "start_posit": [171, 172], "surrounded_and_reflect": [171, 172], "map_x": [171, 172], "map_i": [171, 172], "capability_config": [171, 172], "131": [171, 172], "starcraft2env": 172, "tic": 175, "tac": 175, "toe": 175, "single_play": 175, "player1": 175, "desired_batch_s": 175, "player0": 175, "uniti": [176, 177], "ml": [176, 177], "technolog": [176, 177], "llapi": [176, 177], "mlagents_env": [176, 177], "unityenviron": [176, 177], "file_nam": 176, "registered_nam": 176, "nor": 176, "connect": 176, "3dball": 176, "group_0": 176, "vectorsensor_size8": 176, "continuous_act": [176, 178, 179, 440, 499, 500], "agent_10": 176, "agent_11": 176, "agent_4": 176, "agent_5": 176, "agent_6": 176, "agent_7": 176, "agent_8": 176, "agent_9": 176, "group_reward": 176, "proroklab": [178, 179], "vectorizedmultiagentsimul": [178, 179], "2207": [178, 179], "03530": [178, 179], "basescenario": 178, "defaultt": 178, "chosen": [178, 179, 269, 270, 333, 334, 342, 370, 442, 479, 493], "sparsiti": 178, "unbatched_action_spec": [178, 179], "unbatched_observation_spec": [178, 179], "unbatched_reward_spec": [178, 179], "het_spec": [178, 179], "het_specs_map": [178, 179], "flock": [178, 179, 440], "agent_collision_rew": [178, 179], "agent_distance_rew": [178, 179], "ca": 181, "environment4": 181, "get_group_map": 181, "sumbodul": 184, "blank": [185, 478], "canva": [185, 478], "fundament": [185, 478, 492], "histori": [185, 186, 187, 189, 190, 193, 198, 199, 202, 203, 205, 206, 207, 344, 346, 351, 355, 418, 476, 496], "intention": [185, 478], "data_kei": [185, 186, 187, 190, 193], "dialogu": [185, 478], "klrewardtransform": [185, 201, 206, 207, 478], "pythoninterpret": [185, 478], "dataloadingprim": [185, 186, 193, 270, 478], "addthinkingprompt": [185, 478], "input_mod": [185, 186, 187, 189, 190, 206, 207, 346, 351, 355, 478, 497], "system_prompt": [185, 186, 187, 190, 203, 205, 478, 496], "template_kwarg": [185, 186, 187, 190], "system_rol": [185, 478], "user_rol": [185, 478], "policy_rol": 185, "response_kei": 185, "datasetchatenv": 185, "gsm8kenv": [185, 186, 189, 196, 198, 478], "ifevalenv": [185, 186, 478], "hello": [185, 206, 207, 351, 355, 418, 478], "response_data": 185, "next_ob": [185, 251, 422, 423, 424, 425, 505], "rlvr": 186, "batch_size_dl": [186, 187, 190, 196], "apply_templ": [186, 187, 190, 203, 205, 496], "conflict": 186, "thin": [186, 195, 345, 478, 480], "chatenv": [186, 187, 190, 195, 203, 205, 476, 496], "bucket": 186, "reset_dataload": [186, 187, 190, 200], "set_missing_toler": [186, 187, 190, 277], "gsm8k": [187, 188, 196, 478], "compute_reward": [187, 190], "3b": [187, 190, 198, 203, 205, 352], "question": [187, 190, 496, 503, 505], "adam": [187, 331, 340, 484, 485, 486, 487, 488, 491, 494, 499, 500, 501], "bought": 187, "sandwich": 187, "he": 187, "paid": 187, "breed": 187, "mari": 187, "saw": [187, 493, 501, 503], "reward_answ": [187, 189, 478], "reward_contain": [187, 189, 478], "reward_right": [187, 189, 478], "reward_think": [187, 189, 478], "snak": 187, "set_done_if_answ": [189, 192, 478], "make_gsm8k_env": 189, "extract_tag": [189, 478], "pars": [189, 208, 496, 503], "xml": [189, 478], "ifev": [190, 192, 478], "pprint": [190, 478], "instruction_id_list": [190, 192], "detectable_cont": 190, "number_placehold": 190, "num_highlight": 190, "num_": 190, "respond": 190, "plan": [190, 291, 317, 318], "week": 190, "europ": 190, "trip": 190, "london": 190, "rome": 190, "cap": [190, 486, 503], "restaur": 190, "prompt_level_strict_acc": [191, 192], "inst_level_strict_acc": [191, 192], "prompt_level_loose_acc": [191, 192], "inst_level_loose_acc": [191, 192], "instruction_ids_kei": 192, "keyword_args_kei": 192, "id_kei": 192, "response_column": 192, "score_kei": 192, "ifeval_scor": 192, "aggregate_reward": 192, "ifevalscoredata": [192, 478], "format_weight": 192, "scorer": 192, "IF": 192, "column": 192, "think_block": 192, "answer_block": [192, 478], "langdetect": 192, "nltk": 192, "immutabledict": 192, "default_reward_aggreg": [192, 478], "tier": 192, "metric": [192, 384, 402, 415, 480, 484], "formula": [192, 247, 311, 340, 341, 382, 384, 399, 402, 415, 480, 486], "format_scor": [192, 478], "quality_bonu": 192, "structure_multipli": 192, "complexity_scal": 192, "incent": 192, "cot": [193, 478], "token_kei": 193, "str_kei": 193, "attention_kei": 193, "assign_reward": 193, "has_attent": 193, "assign_don": 193, "batchless": 193, "eos_token_id": 193, "pretrainedtokenizerbas": [193, 209, 274], "stack_method": [193, 200], "as_nested_tensor": [193, 200, 346, 351, 355], "bert": [193, 209, 274], "uncas": [193, 209, 274], "tokens_in": 193, "tokens_out": 193, "mlgym": [195, 197, 478], "get_library_nam": 195, "prisonersdilemma": 197, "reward_wrong_format": 197, "mlgymenv": [197, 478], "wrongli": 197, "cond": [198, 232, 233], "random_prompt": 198, "edit_last_turn": 198, "zero_reward": 198, "undo_don": 198, "egocentr": 198, "reconsid": 198, "But": [198, 498], "wrong_answ": 198, "natalia": 198, "sold": 198, "48": 198, "friend": 198, "april": 198, "she": [198, 503], "72": 198, "altogeth": [198, 233], "undon": 198, "correct_answ": 198, "allowed_domain": [199, 496], "tool_nam": [199, 203, 205], "web": [199, 488, 496], "brows": [199, 496], "browser": [199, 496], "click": [199, 496], "llm_tool": 199, "clean": [199, 478], "mappabl": 200, "maybe_dense_stack": 200, "unrel": 200, "endless_dataload": 200, "set_capture_non_tensor_stack": 200, "dummydataload": 200, "generate_random_str": 200, "ascii_lowercas": 200, "__next__": 200, "zxwvupirska": 200, "stringa": 200, "zxwvupirsk": 200, "roll": 200, "init_st": 200, "nngcmflsana": 200, "vrrbnhzpmga": 200, "nngcmflsan": 200, "vrrb": 200, "dummytensordataload": 200, "generate_random_tensor": 200, "pad_tensor": 200, "padding_length": 200, "data_spec": 200, "gen_log_probs_full_kei": [201, 206], "ref_log_probs_full_kei": [201, 206], "ref_log_prob": [201, 206, 207, 418], "kl_kei": [201, 206], "kl_penalti": [201, 206], "add_to_reward": [201, 202, 206], "coeff": [201, 206, 384, 399, 402], "padding_sid": [201, 202, 206, 207, 319, 346, 351, 355], "retrievelogprob": [201, 202, 206, 418], "retrievekl": [201, 202, 207], "pad_output": [201, 206, 207, 346, 351, 355, 497], "gen_log_prob": [201, 206], "pad_sequ": [201, 202, 206, 207], "kl_transform": 201, "gen_log_probs_kei": 201, "ref_log_probs_kei": 201, "llmwrapperbas": [202, 206, 207, 351, 355, 415], "log_prob_kei": [202, 247, 372, 480], "assistant_onli": [202, 206, 207, 418], "chathistori": [202, 206, 207, 351, 355, 478], "gen_model": [202, 206], "klcomput": [202, 206, 207], "tool_schema": 203, "mcp": 203, "protocol": 203, "pattern": [203, 478], "schema": 203, "add_numb": 203, "add_schema": 203, "successfulli": [203, 205, 478, 496, 497], "version_typ": 204, "period": [204, 290], "llmcollector": [204, 206, 346, 351, 355, 478], "tracker": [204, 246], "new_weight": 204, "current_vers": 204, "uuid4": 204, "nprint": 205, "from_collector": 206, "history_kei": [206, 351, 355], "tokenizer_kwarg": [206, 207, 346, 351, 355, 418], "get_new_vers": [206, 346, 351, 355], "consciou": [206, 207], "identif": [206, 207], "assit": [206, 207, 418], "optconfig": [206, 207, 418], "optforcausallm": [206, 207, 418], "weather": [206, 207, 418], "facebook": [206, 207, 418], "opt": [206, 207, 418, 478], "125m": [206, 207, 418], "return_log_prob": [206, 207, 247, 351, 355, 360, 361, 362, 368, 372, 374, 404, 418, 479, 486, 490, 497, 499, 500, 505], "log_probs_kei": [206, 207, 346, 351, 355], "chat_histori": [206, 207, 351, 355], "log_probs_full_kei": 207, "batchabl": 207, "use_raw_nontensor": [209, 245, 274, 278], "additional_token": [209, 274], "skip_special_token": [209, 274], "add_special_token": [209, 274], "return_attention_mask": [209, 274], "missing_toler": [209, 274], "call_before_reset": [209, 274], "test_input_spec": [209, 278], "list_of_tensordict": [210, 211], "unsqueeze_null_shap": 212, "dynamic_shap": 212, "model_bas": [213, 214, 291, 318], "model_based_env": [213, 393], "dreamerenv": [213, 393, 476], "model_based_env_ev": 213, "spec_typ": 215, "convert_specnam": 215, "remap_state_to_observ": 215, "spectyp": 215, "unus": 215, "probabilistictdmodul": [216, 316, 368, 372, 421, 455], "keep_oth": [218, 501], "exclude_reward": 218, "exclude_don": 218, "next_": 218, "write_full_fals": 219, "_terminated_or_trunc": 219, "num_interv": 220, "out_action_kei": 220, "samplingstrategi": 220, "optino": 220, "intenum": 220, "action_disc": 220, "masker": 221, "finit": [221, 241, 331, 490, 503], "maskedenv": 221, "ones_lik": [221, 319], "scatter": 221, "fill_float": 223, "fill_int": 223, "fill_bool": 223, "someenvclass": 223, "autoresetenv": 223, "fooenv": 223, "sign": [223, 265, 422, 499], "envtyp": 223, "reshape_fn": [224, 488], "reset_func": 224, "accompani": [224, 268], "tensordict_batch_s": 224, "tensordict_reset": [224, 501], "biner": 225, "burn_in": 226, "burn": 226, "burnt": 226, "gru_modul": [226, 310, 379], "input_s": [226, 270, 308, 309, 310, 313, 314, 315, 379, 487, 488], "hidden_s": [226, 270, 308, 309, 310, 313, 314, 315, 379, 487, 488], "default_recurrent_mod": [226, 310, 315], "burn_in_transform": 226, "gru": [226, 270, 309, 310, 379, 488], "num_lay": [226, 308, 310, 313, 315, 326, 327, 379, 488], "is_init": [226, 246, 310, 315, 332, 367, 379, 422, 487, 488], "86": 226, "3008": 226, "0344": 226, "padding_valu": [227, 319, 320, 346, 351, 355], "as_invers": 227, "movement": 227, "1312": 227, "5602": 227, "consumpt": [227, 476], "pictur": 227, "pixels_trsf": [227, 503], "grayscal": [227, 485, 487, 488, 503, 506], "data_exclud": [227, 503], "make_rb_transform_and_sampl": 227, "sampler_kwarg": 227, "redund": [227, 478, 487], "del_kei": [228, 267, 280, 498, 501], "unsqueeze_if_oor": 228, "observation_posit": 228, "observation_veloc": 228, "crop": [229, 256, 442], "center": [229, 331, 442], "width": [229, 234, 259], "height": [229, 234, 259], "squar": [229, 234, 311, 340, 341, 384, 402, 415, 442, 478], "scalar": [230, 261, 289, 298, 300, 307, 324, 325, 332, 378, 382, 383, 384, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 415, 418, 420, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 479, 485, 491, 501], "rewardsc": [231, 277, 484, 485, 487], "rewardclip": 231, "transformed_env": [231, 277, 489], "condition": 232, "switch": [232, 277, 285, 311, 341, 440, 497], "met": [232, 233, 381, 499, 501], "unalt": 232, "criteria": 232, "policy_switch": 232, "step_count_kei": [232, 233, 268], "step_count_tot": 232, "step_count_main": 232, "0322": 232, "1540": 232, "0111": 232, "3190": 232, "0299": 232, "1544": 232, "0181": 232, "3280": 232, "0276": 232, "1550": 232, "0255": 232, "3414": 232, "0253": 232, "1558": 232, "0334": 232, "3596": 232, "0230": 232, "1569": 232, "0422": 232, "3828": 232, "0206": 232, "1582": 232, "0519": 232, "4117": 232, "1598": 232, "0629": 232, "4469": 232, "0156": 232, "1617": 232, "0753": 232, "4891": 232, "0130": 232, "1639": 232, "0895": 232, "5394": 232, "0104": 232, "1665": 232, "1058": 232, "5987": 232, "0076": 232, "1696": 232, "1246": 232, "6685": 232, "0047": 232, "1732": 232, "1463": 232, "7504": 232, "0016": 232, "1774": 232, "1715": 232, "8459": 232, "0020": 232, "0150": 232, "1884": 232, "6117": 232, "0017": 232, "2071": 232, "3838": 232, "0105": 232, "2115": 232, "5110": 232, "exectu": 233, "palliat": [233, 490], "inner_count": 233, "middle_env": 233, "middle_count": 233, "auto_unwrap": [233, 277, 450], "9670": 233, "2546": 233, "9669": 233, "9802": 233, "1981": 233, "1601": 233, "9926": 233, "1214": 233, "5556": 233, "9994": 233, "7622": 233, "9984": 233, "0561": 233, "7933": 233, "9895": 233, "1445": 233, "7779": 233, "dtype_in": 235, "dtype_out": 235, "scan": [235, 238, 373, 374], "resp": [235, 238], "not_transform": [235, 238], "orig_devic": 236, "unspecifi": 236, "num_actions_effect": 237, "max_act": 237, "include_forward": 237, "num_act": [237, 295, 391, 488, 490], "action_out": 237, "eol_kei": 239, "lives_kei": 239, "eol_attribut": 239, "breakout": 239, "210": [239, 253], "160": [239, 253], "eol_transform": 239, "eol": 239, "dqnloss": [239, 382, 383, 385, 386, 389, 391, 392, 393, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 415, 418, 420, 467, 476, 480, 485, 487, 488, 494], "register_kei": 239, "loss_or_advantag": 239, "lossmodul": [239, 460, 469, 470, 476, 480], "valueestimatorbas": [239, 400, 415, 418, 476], "first_dim": 242, "last_dim": 242, "allow_positive_dim": [242, 267, 279], "frameskip": 242, "repeatedli": [243, 486, 500], "hash_fn": 245, "repertoir": 245, "reproducible_hash": 245, "unarytransform": 245, "observation_str": 245, "tobyt": [245, 278], "observation_hash": 245, "x08": 245, "x8b": 245, "xbexav": 245, "xbf": 245, "x00": 245, "xee": 245, "xb5": 245, "x17": 245, "x8f": 245, "xbe": [245, 278], "x88": 245, "xccu": 245, "xc0vr": 245, "get_input_from_hash": 245, "hash_tensor": 245, "init_kei": [246, 367], "pi_curr": 247, "pi_0": 247, "overfit": 247, "probabilist": [247, 368, 382, 402, 476, 486, 505], "get_dist": [247, 346, 351, 355, 372, 373], "normalparamextractor": [247, 360, 361, 362, 368, 374, 382, 383, 385, 391, 398, 402, 403, 404, 405, 407, 408, 479, 486, 490, 500, 505], "probabilisticactor": [247, 360, 361, 362, 363, 382, 383, 385, 388, 390, 391, 398, 401, 402, 403, 404, 405, 407, 408, 479, 484, 486, 490, 499, 500], "tanhnorm": [247, 360, 361, 362, 368, 374, 382, 383, 385, 398, 402, 403, 404, 405, 407, 408, 476, 486, 500, 505], "apply_": 247, "copy_": [247, 484], "mogymwrapp": [248, 476], "mo_env": 248, "sea": 248, "treasur": 248, "so_env": 248, "stack_reward": 249, "stack_observ": 249, "auto_batch_size_": 249, "macro": [249, 367], "noop": 250, "trial": 250, "standard_norm": [251, 262, 284, 285, 484, 485, 487], "affin": [251, 262, 284, 285], "layer": [251, 284, 290, 294, 295, 297, 298, 303, 305, 308, 309, 310, 313, 314, 315, 316, 321, 322, 324, 325, 326, 327, 337, 338, 357, 366, 375, 478, 479, 485, 486, 487, 488, 490, 499, 502], "recover": 251, "set_default_tensor_typ": 251, "doubletensor": 251, "isclos": 251, "init_stat": [251, 484, 485, 486, 487], "3752e": 251, "5087e": 251, "9294e": 251, "9636": 251, "5608": 251, "6408": 251, "num_it": [251, 485, 486], "reduce_dim": [251, 484, 485, 486, 487], "cat_dim": [251, 484, 485, 486, 487], "keep_dim": [251, 367, 485, 487], "statist": [251, 284, 285, 290, 404, 474, 484, 485, 486, 506], "gaussian": [251, 270, 289, 291, 318, 324, 325, 330, 486, 488, 499], "empir": [251, 291, 318, 368, 372, 484, 486, 500], "3d": [251, 294], "reorder": 253, "in_keys_in": [253, 279], "channel": [253, 273, 321, 326, 327, 485], "r3m": [255, 502], "resnet": [255, 280, 282], "ego4d": [255, 280, 282], "univers": [255, 280, 282, 489], "suraj": [255, 280], "nair": [255, 280], "aravind": [255, 280], "rajeswaran": [255, 280], "vikash": [255, 280, 282], "kumar": [255, 280, 282], "chelsea": [255, 280], "finn": [255, 280], "abhinav": [255, 280], "gupta": [255, 280], "2203": [255, 280, 318, 502], "12601": [255, 280, 502], "_init": [255, 280, 484], "resnet50": [255, 282, 502], "model_nam": [255, 280, 282, 352, 445], "resnet34": 255, "resnet18": 255, "r3m_vec": [255, 502], "stack_imag": [255, 282], "tread": [255, 282], "hub": [255, 282, 489], "resnet50_weight": [255, 282], "imagenet1k_v1": [255, 282], "download_path": [255, 282], "tensor_pixels_kei": [255, 282], "sub_seq_len": 256, "sample_dim": [256, 484], "hesit": 256, "robust": [256, 290, 478], "mix": [256, 333, 342, 420, 478, 484, 499, 500], "improp": 256, "dummyenv": 257, "another_oth": 257, "other_reward": 257, "create_copi": 258, "stuff": [258, 492], "newnam": 258, "r2g": 260, "reward_to_go": 260, "bernoulli_": 260, "9010": 260, "9404": [260, 428], "9701": [260, 428], "9900": [260, 428], "0000": [260, 271, 272, 307, 331, 375, 428], "clamp_min": 261, "clamp_max": 261, "clip_min": 261, "clip_max": 261, "episode_": 263, "reward1": 263, "reward2": 263, "episode_reward": [263, 499, 500], "keep_reward": 264, "keep_don": 264, "logical_or": 265, "in_key_inv": 267, "unstack": 267, "update_don": 268, "disjunct": 268, "recognis": 268, "target_return": 269, "default_valu": [270, 379], "expand_spec": 270, "single_default_valu": 270, "call_before_env_reset": 270, "unit": [270, 291, 305, 308, 309, 326, 327, 335, 336, 486], "scala": 270, "mykei": 270, "__unless": 270, "exists__": 270, "get_primers_from_modul": [270, 293, 310, 315, 476], "recurrent_st": [270, 310, 315, 379, 487], "10th": 271, "0216": 271, "1149": 271, "1990": 271, "2749": 271, "3281": 271, "9290": 271, "3702": 271, "8978": 271, "time_kei": 272, "elaps": [272, 493], "monitor": [272, 384, 402, 489], "expend": 272, "_polici": 272, "time_reset": 272, "time_polici": 272, "time_step": [272, 314, 367], "0882": 272, "0002": 272, "5797e": 272, "6289e": 272, "7990e": 272, "0824e": 272, "0837e": 272, "6056e": 272, "2016e": 272, "1062e": 272, "7009e": 272, "from_int": 273, "shape_toler": 273, "ri": 273, "traj_count": 275, "traj": 275, "countingenv": 275, "make_env_c0": 275, "make_env_c1": 275, "set_contain": 276, "reset_par": 276, "smoothli": [277, 290], "add_1": 277, "cache_spec": 277, "inv_fn": 278, "unari": 278, "durin": 278, "ommit": 278, "observation_trsf": 278, "xbc": 278, "x7f": 278, "x859": 278, "x81": 278, "x9a": 278, "xbd": 278, "xb8t8": 278, "test_output_spec": 278, "danger": 279, "vc1": 280, "vc1_vec": 280, "untrain": 280, "make_noload_model": 280, "vip": [281, 282, 502], "implicit": [282, 390, 398, 503], "jason": 282, "ma": 282, "shagun": 282, "sodhani": 282, "dinesh": 282, "jayaraman": 282, "osbert": 282, "bastani": 282, "ami": 282, "zhang": 282, "vip_vec": 282, "final_nam": 283, "sb3": 283, "terminal_obs_read": 283, "vecnormv2": 284, "new_api": [284, 285], "to_observation_norm": [284, 285], "frozen_copi": [284, 285], "shared_td": 284, "race": 284, "decai": [284, 285, 289, 307, 406, 458, 484, 485, 487, 506], "underflow": [284, 458], "build_td_for_shared_vecnorm": 284, "memmori": 284, "td_share": 284, "unfreez": [284, 285], "train_env": 284, "eval_env": 284, "9999": 285, "0001": [285, 305], "shared_data": 285, "reduce_batch_dim": 285, "varianc": [285, 290, 291, 292, 311, 340, 341, 402, 480, 484, 486, 500], "vs": [285, 288], "weigh": 285, "_cast_int_to_float": 285, "env_trsf": 285, "observation_norm": 285, "reward_norm": [285, 458], "unnorm": [285, 312, 319, 320, 328], "7967": 285, "1238": 285, "5911": 285, "5275": 285, "8585": 285, "5028": 285, "2505": 285, "3169": [285, 375], "1332": 285, "1235": 285, "6596e": 285, "3072e": 285, "9170e": 285, "9255e": 285, "9131e": 285, "4671e": 285, "3760e": 285, "2058e": 285, "3484e": 285, "6185e": 285, "1456": 285, "1862": 285, "2053": 285, "2605": 285, "4046": 285, "5185": 285, "8023": 285, "1364": 285, "6183": 285, "5406": 285, "0920": 285, "1492": 285, "2702": 285, "3917": 285, "5001": 285, "7947": 285, "0160": 285, "3347": 285, "9082": 285, "9679": 285, "2199": 285, "2918": 285, "1668": 285, "2083": 285, "4981": 285, "5046": 285, "7950": 285, "9791": 285, "1484": 285, "4182": 285, "2201": 285, "0403": 285, "5206": 285, "7791": 285, "8282": 285, "2279": 285, "2907": 285, "4929": 285, "7793": 285, "8626": 285, "1832": 285, "local_env": 285, "testifi": 285, "4307": 285, "9613": 285, "state_dim": [286, 296, 301, 330, 335, 336, 363], "action_dim": [286, 296, 297, 299, 301, 330, 363, 484, 498], "gsde": [286, 403, 474], "gsdemodul": 286, "rb_transform": 287, "resist": 287, "insensit": 287, "sensit": [287, 485, 487], "_orig": 287, "95": [287, 318, 410, 486, 487], "window": [287, 367, 499, 503, 505], "module_nam": [288, 400, 415, 418], "from_vers": 288, "to_vers": 288, "class_method": 288, "import_modul": 288, "get_class_that_defined_method": 288, "module_set": 288, "setters_dict": 288, "setter": 288, "setter_dict": 288, "po": 289, "sigma_init": [289, 499], "sigma_end": [289, 499], "annealing_num_step": [289, 307, 332, 484, 485, 487, 488, 490, 494, 499], "sigma": [289, 308, 309, 311, 313, 314, 332, 340, 341, 418, 486, 499], "omiss": [289, 307, 332], "momentum": 290, "max_r": 290, "max_d": 290, "warmup_step": 290, "batchrenorm": 290, "1702": 290, "03275": 290, "corenet": 290, "enhanc": 290, "warmup": 290, "phase": [290, 292, 500, 503], "outlier": 290, "warm": 290, "renorm": 290, "entropi": [291, 312, 319, 328, 382, 383, 384, 385, 390, 391, 398, 399, 401, 402, 403, 405, 407, 408, 415, 416, 500], "botev": 291, "2013": 291, "cem": 291, "maximis": [291, 297, 299, 318, 485, 486, 500], "modelbasedenv": [291, 318], "planning_horizon": [291, 318], "mpc": [291, 317, 318], "num_candid": [291, 318], "candid": [291, 318], "top_k": [291, 318], "modelbasedenvbas": [291, 317, 318, 476], "safemodul": [291, 317, 360, 362, 372, 382, 383, 385, 390, 391, 398, 402, 403, 404, 405, 407, 408, 465, 466, 470, 476, 505], "hausknecht": 292, "wagen": 292, "reus": [292, 297, 449, 478], "consistentdropoutmodul": [292, 479], "conceptu": 292, "devianc": 292, "set_exploration_typ": [292, 400, 455, 476, 479, 486, 487, 488, 490, 499, 505], "_main_async_collector": 292, "asyncdatacollector": [292, 476], "ditto": 292, "consistentdropout": 293, "input_shap": 293, "batcht": 293, "make_tensordict_prim": [293, 310, 315, 487], "input_dtyp": 293, "get_default_dtyp": [293, 458], "mask_6127171760": 293, "env0": [293, 506], "num_cel": [294, 295, 297, 298, 299, 300, 305, 306, 310, 315, 316, 321, 322, 360, 379, 485, 486, 487, 488, 490, 491, 494, 499, 500, 505], "elu": [294, 295, 297, 298, 299, 300, 305, 306, 321, 485, 505], "activation_kwarg": [294, 295, 316], "norm_class": [294, 295, 297, 298, 316], "norm_kwarg": [294, 295, 316], "bias_last_lay": [294, 295, 297, 298, 299, 300, 306, 316], "aggregator_class": [294, 295, 297, 298, 485, 487, 505], "squashdim": [294, 295, 297, 306, 321, 505], "aggregator_kwarg": [294, 295, 297, 298, 485, 487], "squeeze_output": [294, 295, 297, 298, 485, 487], "cell": [294, 295, 308, 309, 310, 313, 314, 315, 316, 321, 322, 486, 488, 489, 490, 491, 492, 493, 494], "kernel": [294, 295, 321], "cnet": [294, 295], "conv3d": 294, "rectangular": [294, 295], "lazyconv2d": [295, 297, 298, 306, 321], "default_atari_dqn": [295, 488], "semin": 295, "transformer_config": [296, 330, 363], "decisiontransform": [296, 330], "dtconfig": [296, 301, 330], "2202": [296, 301, 401], "05607": [296, 301, 401], "return_to_go": [296, 301, 330, 363], "conv_net_kwarg": [297, 298], "mlp_net_kwarg": [297, 298, 299], "use_avg_pool": [297, 298], "WITH": [297, 298, 299, 300, 332, 406], "1509": [297, 298, 299, 300, 318, 332, 387, 397, 406], "02971": [297, 298, 299, 300, 332, 406], "convnet": [297, 298, 306, 321, 487, 488, 490, 505], "ndims_in": 297, "avgpool": [297, 298], "lazylinear": [297, 298, 299, 300, 306, 316, 479, 486, 490, 501, 502], "2304": 297, "adaptiveavgpool2d": [298, 485, 487], "output_s": [298, 485, 487], "squeeze2dlay": 298, "400": [299, 300, 500], "mlp_net_kwargs_net1": 300, "mlp_net_kwargs_net2": 300, "mlp1": 300, "mlp2": 300, "desdescrib": 301, "n_embd": 301, "n_layer": [301, 308, 313], "n_head": 301, "n_inner": 301, "n_posit": 301, "resid_pdrop": 301, "attn_pdrop": 301, "gpt2config": 301, "atol": [302, 339], "rtol": [302, 339], "batch_shap": [302, 328, 339], "event_shap": [302, 339], "absolut": [302, 339, 484], "_instanc": 302, "densiti": [302, 319, 320, 328, 341], "mass": [302, 319, 320, 328, 341, 501], "rsampl": [302, 312, 320, 328, 372], "sample_shap": [302, 312, 319, 320, 328], "softmax": [303, 320, 328, 364, 365], "var_num": [304, 334, 364, 365, 370], "action_value_kei": [304, 334, 364, 365, 369, 370, 385, 400, 415, 418, 420], "action_mask_kei": [304, 307, 334, 364, 365, 369, 370], "1707": [304, 365, 392, 402], "06887": [304, 365, 392], "mult": [304, 322, 334, 364, 365, 369, 370], "tensordict_modul": [304, 308, 309, 313, 314, 334, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 383, 385, 386, 390, 391, 398, 402, 403, 404, 405, 407, 408, 479], "nbin": [304, 364, 479], "customdistributionalqv": 304, "log_softmax": [304, 364], "qvalue_actor": [304, 334, 364, 369, 479], "to_modul": [304, 371, 374, 484, 505], "std_bia": 305, "std_min_val": 305, "belief": [305, 326, 335, 336], "1912": [305, 393, 394, 395], "01603": [305, 393, 394, 395], "softplu": [305, 378, 380, 381], "out_features_valu": 306, "cnn_kwarg": [306, 485], "mlp_kwarg": [306, 485], "duel": 306, "cnn": [306, 321, 485, 488, 490, 505], "06581": 306, "512": 306, "greedi": [307, 334, 365, 370, 485, 487, 488, 490], "eps_init": [307, 332, 485, 487, 488, 490, 494], "eps_end": [307, 332, 485], "explorative_polici": [307, 332], "9055": 307, "9277": 307, "6295": 307, "2532": 307, "grad_fn": [307, 359, 372], "addbackward0": 307, "batch_first": [308, 313, 487], "bidirect": [308, 313, 487], "cudnn": [308, 309, 310, 313, 314, 315, 487, 488], "rnn": [308, 309, 310, 313, 314, 315, 358, 391, 405, 422, 487, 488, 490], "device_count": [308, 309, 313, 314, 506], "n_in": [308, 309, 313, 314], "n_out": [308, 309, 313, 314], "h0": [308, 309, 313, 314], "h1": [308, 309, 313, 314], "vectoris": [308, 309, 313, 314], "call_gru": [308, 309], "h_out": [308, 309, 313, 314], "batched_cal": [308, 309, 313, 314], "gate": [308, 309, 313], "r_t": 308, "w_": [308, 309, 313, 314], "ir": [308, 309], "x_t": [308, 313], "b_": [308, 309, 313, 314], "hr": [308, 309, 313], "h_": [308, 309, 313], "z_t": 308, "iz": [308, 309], "hz": [308, 309], "n_t": 308, "odot": [308, 309, 313, 314], "hn": [308, 309, 313], "h_t": [308, 313], "sigmoid": [308, 309, 313, 314], "hadamard": [308, 309, 313, 314], "multilay": [308, 313], "_t": [308, 313, 500, 501], "ge": [308, 313], "bernoulli": [308, 313], "b_ih": [308, 309, 313, 314, 315], "b_hh": [308, 309, 313, 314, 315], "h_0": [308, 313, 314], "pack_padded_sequ": [308, 313], "pack_sequ": [308, 313], "num": [308, 313, 494], "_layer": [308, 313], "_size": [308, 309, 313, 314], "h_n": [308, 313], "packedsequ": [308, 313], "weight_ih_l": [308, 313], "learnabl": [308, 309, 313, 314], "w_ir": 308, "w_iz": 308, "w_in": 308, "num_direct": [308, 313], "weight_hh_l": [308, 313], "w_hr": 308, "w_hz": 308, "w_hn": 308, "bias_ih_l": [308, 313], "b_ir": 308, "b_iz": 308, "b_in": 308, "bias_hh_l": [308, 313], "b_hr": 308, "b_hz": 308, "b_hn": 308, "mathcal": [308, 309, 313, 314], "sqrt": [308, 309, 313, 314, 332], "seq_len": [308, 313], "subtli": 308, "matrix": [308, 313, 324, 325], "hx": [308, 309, 313, 314], "lstmcell": [309, 315, 488], "gru_cel": 309, "weight_ih": [309, 314], "weight_hh": [309, 314], "bias_ih": [309, 314], "bias_hh": [309, 314], "rocm": [309, 314], "embedd": [310, 315], "grucel": [310, 371], "python_bas": [310, 315], "custom_kei": [310, 315], "hasn": [310, 315], "set_recurrent_mod": [310, 315, 487], "recurrent_mod": [310, 315, 358], "rs": [310, 484], "gru_module_train": 310, "policy_train": [310, 418], "traj_td": 310, "make_cudnn_bas": [310, 315], "make_python_bas": [310, 315, 488], "supplementari": [310, 315, 486, 506], "That": [310, 315, 486, 499], "dealt": [310, 315], "poorli": [310, 315], "meth": [310, 315, 400, 501], "data_collector": [310, 315, 485], "upscal": [311, 340, 341], "tanh_loc": [311, 340, 341], "event_dim": [311, 339, 340], "poor": [311, 340, 341], "explos": [311, 340, 341], "ignore_index": 312, "50000": 312, "inf": [312, 319, 320], "test_distribut": 312, "clear_cach": 312, "masked_dist": 312, "masked_logit": 312, "position_level_mask": 312, "proj_siz": 313, "c0": [313, 314], "c1": [313, 314], "call_lstm": [313, 314], "c_out": [313, 314], "i_t": 313, "ii": [313, 314], "hi": [313, 314, 351, 355, 478], "f_t": 313, "hf": [313, 314, 478], "g_t": 313, "ig": [313, 314], "hg": [313, 314], "o_t": 313, "ho": [313, 314], "c_t": 313, "c_": 313, "1402": 313, "1128": 313, "c_0": [313, 314], "proj": 313, "c_n": 313, "w_ii": 313, "w_if": 313, "w_ig": 313, "w_io": 313, "w_hi": 313, "w_hf": 313, "w_hg": 313, "w_ho": 313, "b_ii": 313, "b_if": 313, "b_ig": 313, "b_io": 313, "b_hi": 313, "b_hf": 313, "b_hg": 313, "b_ho": 313, "weight_hr_l": 313, "_revers": 313, "analog": [313, 490], "cn": 313, "lstm_cell": 314, "h_1": 314, "c_1": 314, "cx": 314, "recurrent_state_h": 315, "recurrent_state_c": 315, "triplet": [315, 369, 370], "lstm_modul": 315, "rs_h": 315, "rs_c": 315, "single_bias_last_lay": 316, "layer_class": 316, "layer_kwarg": 316, "perceptron": [316, 490], "noisylinear": [316, 324, 476, 485], "noisylazylinear": [316, 476], "mpcplanner": 317, "tensordict_out": [317, 346, 351, 355, 506], "mppi": 318, "covari": 318, "william": [318, 404], "aldrich": 318, "theodor": 318, "01149": 318, "hansen": 318, "wang": 318, "su": 318, "04955": 318, "valueoper": [318, 360, 361, 362, 382, 383, 384, 385, 386, 391, 398, 399, 402, 403, 404, 405, 407, 408, 470, 479, 484, 486, 491], "tdlambdaestim": [318, 476, 484], "value_net": [318, 387, 389, 404, 422, 423, 424, 425, 486, 488, 490, 491, 494], "adv": 318, "lmbda": [318, 410, 422, 425, 427, 433, 434, 435, 438, 439, 480, 484, 486, 500], "value_network": [318, 386, 387, 389, 390, 392, 398, 405, 422, 423, 424, 425, 480, 484, 486, 488, 491, 494, 499], "temperatur": [318, 383, 390, 398], "neg_inf": [319, 320], "use_cross_entropi": 319, "api_doc": [319, 320], "tf_agent": [319, 320], "sparse_mask": [319, 320], "cross_entropi": 319, "1203": [319, 320], "0928": [319, 320], "0831": [319, 320], "1972": [319, 320], "grad_method": [320, 328], "reparamgradientstrategi": [320, 328], "passthrough": [320, 328], "relaxedonehot": [320, 328], "sample_non_valid": 320, "zeros_lik": [320, 501], "share_param": [321, 322, 323, 499, 500], "use_td_param": [321, 322, 323], "get_stateful_net": [321, 322, 323, 400, 415, 418, 479, 480], "from_stateful_net": [321, 322, 323, 400, 415, 418, 480], "homogen": [321, 322, 499, 500], "tensordictparam": [321, 322, 372], "_empty_net": [321, 322], "roughli": [321, 322, 505], "agent_network": [321, 322], "modulelist": [321, 322], "2592": 321, "decentr": 321, "n_agent_input": [322, 323, 499, 500], "n_agent_output": [322, 323, 499, 500], "toech": 322, "centalis": 322, "shown": [322, 478, 479, 488, 496, 498, 499, 500, 503], "agent_dim": 323, "vmap_random": [323, 400, 415, 418, 480], "stateful_net": [323, 400, 415, 418], "Such": [323, 400, 415, 418], "multiagentmlp": [323, 499, 500], "snet": 323, "hasattr": [323, 478, 484], "kaiming_normal_": 323, "std_init": [324, 325], "initialize_paramet": 324, "isol": [324, 400, 415, 418, 478, 488], "1706": [325, 342], "10295v3": 325, "induc": [325, 372], "aid": 325, "1803": [326, 327, 333], "10122": [326, 327], "rnn_hidden": 326, "latent": 327, "ordin": [329, 476], "parametris": [329, 331], "inres": 330, "mu": [330, 332, 486], "impos": [331, 479], "proxim": [331, 402, 486, 500], "atom": 331, "tang": 331, "agraw": 331, "2020": 331, "1901": 331, "10500": 331, "discretis": 331, "num_atom": 331, "num_sampl": [331, 346, 351, 355], "middl": 331, "lr": [331, 484, 485, 486, 487, 494, 499, 500, 501], "optimis": [331, 499, 500], "minimis": 331, "penalis": 331, "0308": 331, "1586": 331, "4727": 331, "2260": 331, "1120": 331, "histogram": 331, "return_typ": 331, "hist": [331, 503], "158": 331, "478": 331, "228": 331, "112": 331, "bin_edg": 331, "8000": 331, "6000": 331, "4000": 331, "ornstein": [332, 484, 488], "uhlenbeck": [332, 484, 488], "ou": [332, 484], "correl": 332, "noise_t": 332, "noise_": 332, "theta": [332, 486, 501], "sigma_t": 332, "sigma_": 332, "ou_prev_nois": 332, "ou_step": 332, "x0": 332, "sigma_min": 332, "n_steps_ann": 332, "is_init_kei": 332, "_ou_prev_nois": 332, "_ou_step": 332, "state_shap": [333, 420], "mixing_embed_dim": [333, 420], "qmix": [333, 499, 500], "mixer": [333, 342, 420], "monoton": 333, "hyper": 333, "11485": 333, "qmixerloss": [333, 342], "qmix_vdn": [333, 342], "vdn": [333, 342], "hidden_dim": [335, 336], "scale_lb": [335, 336], "posterior": [335, 394], "rssm": [335, 336, 394], "1811": [335, 336], "04551": [335, 336], "obs_embed": 335, "rnn_hidden_dim": 336, "dream": 336, "safe_tanh": 340, "tanhtransform": 340, "overflow": [340, 359, 364, 365, 368, 369, 370, 371, 372], "get_mod": [340, 372], "decomposit": 342, "05296": 342, "hide": [343, 486, 499, 500], "satisfi": [343, 479], "vmap_dim": 343, "lam": 343, "sample_in": 343, "sample_in_td": 343, "vm": 343, "bundle_indic": 345, "placement": 345, "modal": [346, 351, 355, 484], "logprob": [346, 351, 355, 478, 497], "input_kei": [346, 351, 355, 497], "attention_mask_kei": [346, 351, 355], "generate_kwarg": [346, 351, 355, 497], "tokens_kei": [346, 351, 355], "masks_kei": [346, 351, 355], "ref_transformers_wrapp": [346, 355], "ref_vllm_wrapp": [346, 351], "logits_onli": [346, 351, 355], "logits_kei": [346, 351, 355], "llmmaskedcategor": [346, 476], "alter": [346, 351, 355, 367, 400, 479], "weak": [346, 351, 355], "all_attention_mask": [348, 351, 355, 497], "all_assistant_mask": [348, 351, 355, 497], "unifi": [351, 355, 478, 497, 506], "automodelforcausallm": [351, 497], "tokenization_util": [351, 355], "num_return_sequ": 351, "do_sampl": 351, "ref_categorical_sequenti": [351, 355], "num_devic": 352, "make_ray_work": 352, "enforce_eag": 352, "actorclass": 352, "world_siz": 353, "statelessprocessgroup": 353, "plane": 353, "pyncclcommun": 353, "vllmparameterserv": 354, "tp": 354, "tp_size": 354, "check_weights_chang": 354, "get_dist_with_prompt_mask": 355, "assistant_mask_kei": 355, "translat": [359, 368], "character": [359, 364, 368, 369, 371, 503], "td_modul": [359, 360, 361, 362, 368, 371, 372, 374, 376, 490, 505], "3635": 359, "0340": 359, "1476": 359, "3911": 359, "1664": 359, "5455": 359, "2247": 359, "4583": 359, "2916": 359, "2160": 359, "5337": 359, "5193": 359, "addmmbackward0": 359, "actorvalueoper": [360, 384, 399, 402, 479, 490], "get_policy_oper": [360, 361, 362, 384, 399, 402, 479], "standalon": [360, 361, 362, 488, 490], "tdmodul": [360, 361, 362, 470], "get_critic_oper": 360, "common_oper": [360, 362], "policy_oper": [360, 361, 362], "value_oper": [360, 361, 362], "module_hidden": [360, 362], "td_module_hidden": [360, 362], "module_act": [360, 362], "td_module_act": [360, 361, 362], "module_valu": [360, 361, 362], "td_module_valu": [360, 361, 362], "state_action_valu": [360, 376, 383, 385, 390, 398, 405, 421, 470, 479, 484, 499, 505], "td_clone": [360, 361, 362], "tensordictmodulewrapp": [360, 465, 466, 470], "get_policy_head": [360, 361, 362], "safesequenti": [360, 361, 362, 420], "head": [360, 362, 372, 379, 384, 399, 402, 476], "get_value_head": [360, 361, 362], "get_value_oper": [360, 361, 362, 384, 399, 402], "action_modul": 361, "actorcriticoper": [362, 479, 490], "actorcriticwrapp": [362, 479, 484], "inferec": 363, "set_tensor_kei": 363, "dt_inference_wrapp": 363, "baz": 363, "inference_context": 363, "obs_dim": 363, "tanhdelta": [363, 476, 484, 499], "dtactor": 363, "actor_modul": [363, 505], "dist_class": 363, "dist_kwarg": 363, "distribution_kwarg": [363, 368, 372, 486, 499, 500], "inference_actor": 363, "sequence_length": 363, "mask_context": 363, "out_act": 363, "qvaluemodul": [364, 369, 420, 487, 488, 490, 494], "distributionaldqnnet": 364, "make_log_softmax": 364, "my_action_valu": [365, 370], "chanc": 365, "lmheadmodel": 366, "actor_head": [366, 384, 399, 402], "base_model": 366, "lm_head": 366, "lookahead": 367, "reshape_cat": 367, "actor_bas": 367, "obs_cat": 367, "obs_cat_reshap": 367, "action_orig": 367, "multistepenvwrapp": 367, "ego": 367, "default_interaction_typ": [368, 372, 490], "interaction_typ": [368, 372], "set_interaction_typ": [368, 372], "compositedistribut": [368, 372, 382, 402, 480, 490], "distribution_map": [368, 372], "name_map": [368, 372], "cache_dist": [368, 372], "n_empirical_estim": [368, 372], "compound": [368, 490], "chose": 370, "functionalmodul": 371, "functionalmodulewithbuff": 371, "td_fmodul": 371, "td_function": 371, "td_state": 371, "params_repeat": 371, "td_vmap": [371, 374], "random_sampl": [371, 372], "suppli": 372, "paliat": 372, "get_median": 372, "get_mean": 372, "sample_key_nam": 372, "_log_prob": 372, "composite_lp_aggreg": 372, "clampbackward0": 372, "anihil": 372, "probabilistictensordictsequenti": [373, 382, 384, 399, 402, 404, 465, 466, 480, 505], "partial_toler": [373, 374, 498], "AND": [373, 374, 385], "tensordictsequ": 374, "safeprobabilisticmodul": [374, 479], "spec1": 374, "net1": 374, "module1": 374, "td_module1": 374, "spec2": 374, "module2": 374, "td_module2": 374, "boundari": [375, 486, 488, 499, 500], "resolut": 375, "9944": 375, "9991": 375, "3020": 375, "2299": 375, "5418": 375, "2989": 375, "6849": 375, "2690": 375, "9649": 375, "5686": 375, "8602": 375, "0315": 375, "8455": 375, "6027": 375, "4746": 375, "7843": 375, "7782": 375, "2111": 375, "5115": 375, "4687": 375, "5760": 375, "custommodul": 376, "imaginari": 377, "imagin": 377, "transition_model": 377, "get_reward_oper": 377, "get_transition_model_oper": 377, "min_val": [378, 381], "_bia": 378, "surject": 381, "expln": 381, "biased_softplu": [381, 476], "biased_softplus_": 381, "syntax": [381, 484], "add_custom_map": 381, "1602": 382, "01783v2": 382, "actor_network": [382, 383, 384, 385, 386, 388, 390, 391, 398, 399, 401, 402, 403, 404, 405, 407, 408, 415, 418, 480, 484, 486, 491, 499, 500], "critic_network": [382, 384, 399, 402, 404, 486, 500], "entropy_bonu": [382, 384, 399, 402, 415, 486], "favour": [382, 384, 399, 402, 415], "samples_mc_entropi": [382, 384, 399, 401, 402, 415], "entropy_coeff": [382, 384, 399, 402, 415], "critic_coeff": [382, 384, 399, 402, 415], "loss_critic_typ": [382, 384, 399, 402, 404, 486], "l1": [382, 384, 386, 387, 391, 399, 402, 403, 404, 407, 408, 411, 420, 479, 484], "l2": [382, 384, 386, 387, 388, 389, 391, 394, 395, 399, 402, 403, 404, 407, 408, 411, 420, 484, 499], "smooth_l1": [382, 383, 384, 385, 386, 387, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408, 411, 420, 486], "separate_loss": [382, 384, 385, 386, 390, 391, 398, 399, 402, 403, 404, 405, 407, 408], "advantage_kei": [382, 384, 399, 402, 404, 415, 417, 422, 423, 424, 425], "value_target_kei": [382, 384, 399, 402, 404, 422, 423, 424, 425], "value_target": [382, 384, 399, 402, 404, 422, 423, 424, 425, 486, 500], "ddp": [382, 384, 399, 402, 404], "fsdp": [382, 384, 399, 402, 404], "divid": [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 398, 399, 401, 402, 403, 404, 405, 407, 408, 415, 463, 484, 499, 500, 501], "clip_valu": [382, 384, 399, 402, 404, 415], "loss_crit": [382, 402, 415, 486, 500], "loss_entropi": [382, 402, 416, 486, 500], "loss_object": [382, 402, 416, 486, 500], "next_reward": [382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 422, 423, 424, 425], "next_don": [382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 422, 423, 424, 425], "next_termin": [382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 422, 423, 424, 425], "loss_obj": 382, "next_observ": [382, 383, 385, 386, 387, 389, 390, 391, 398, 402, 403, 404, 405, 407, 408, 498], "sacloss": [382, 397, 406, 476], "default_kei": [382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 404, 405, 407, 408, 415, 418, 420, 426], "_acceptedkei": [382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 408, 415, 418, 420, 426], "fraction": [382, 384, 402], "make_value_estim": [382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 409, 415, 418, 420, 480, 484, 485, 499, 500, 505], "value_typ": [382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 410, 415, 418, 420, 484], "hyperparam": [382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 484], "enum": [382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 410, 415, 418, 420, 484], "default_value_estim": [382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 484, 505], "default_value_kwarg": [382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 476, 484], "dqn_loss": [382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 409, 415, 418, 420], "td1": [382, 383, 385, 386, 387, 389, 391, 392, 393, 398, 400, 402, 403, 404, 405, 407, 408, 415, 418, 420, 484], "conserv": [383, 389], "04779": [383, 389], "qvalue_network": [383, 385, 390, 391, 398, 403, 405, 407, 408], "unti": [383, 385, 398, 403, 405, 407, 408], "loss_funct": [383, 385, 386, 387, 388, 389, 390, 391, 398, 403, 405, 407, 408, 411, 418, 420, 484, 499], "alpha_init": [383, 385, 391, 401, 403, 405], "min_alpha": [383, 385, 391, 401, 403, 405], "max_alpha": [383, 385, 391, 401, 403, 405], "fixed_alpha": [383, 385, 391, 401, 403, 405], "target_entropi": [383, 385, 391, 401, 403, 405], "prod": [383, 385, 401, 405], "delay_actor": [383, 386, 405, 407, 408], "delay_qvalu": [383, 391, 403, 405, 407, 408], "min_q_weight": 383, "max_q_backup": 383, "backup": 383, "deterministic_backup": 383, "num_random": 383, "with_lagrang": 383, "lagrang": 383, "lagrange_thresh": 383, "deactivate_vmap": [383, 385, 391, 398, 403, 405, 407, 408, 422, 423, 424, 425], "valueclass": [383, 385, 386, 391, 403, 405, 407, 408], "qvalu": [383, 385, 390, 391, 398, 403, 405, 407, 408], "loss_actor": [383, 385, 386, 390, 391, 398, 403, 404, 405, 407, 408, 456, 484, 499], "loss_actor_bc": 383, "loss_alpha": [383, 385, 391, 403, 405], "loss_cql": [383, 389], "loss_qvalu": [383, 385, 389, 390, 391, 398, 403, 405, 407, 408], "loss_alpha_prim": 383, "ess": [384, 402, 415, 416], "clip_epsilon": [384, 415, 486, 500], "head_nam": [384, 399, 402], "normalize_advantag": [384, 399, 402, 500], "normalize_advantage_exclude_dim": [384, 399, 402], "multiobject": [384, 399, 402], "value_kei": [384, 399, 402, 422, 423, 424, 425, 484], "somemodul": [384, 399, 402], "someactor": [384, 399, 402], "value_head": [384, 399, 402], "somevalu": [384, 399, 402], "loss_modul": [384, 397, 399, 400, 402, 406, 415, 418, 460, 469, 470, 480, 481, 484, 485, 486, 499, 500, 503], "IN": 385, "FOR": 385, "simplic": [385, 485, 486, 492, 502, 503, 505], "openreview": [385, 403], "pczqttstix": 385, "qvalue_loss": [385, 391, 405, 407], "actor_loss": [385, 391, 405, 407], "alpha_loss": [385, 391, 405], "num_qvalue_net": [385, 390, 391, 398, 403, 405, 407, 408], "maybe_init_target_entropi": 385, "fault_toler": 385, "target_entropy_buff": 385, "delay_valu": [386, 387, 389, 392, 404, 405, 420, 485, 487, 488, 494, 499], "loss_valu": [386, 390, 398, 404, 405, 484, 486, 499, 500], "pred_valu": [386, 389, 407, 408, 484], "pred_value_max": [386, 484], "target_valu": [386, 389, 403, 407, 408, 421, 480, 484], "target_value_max": [386, 484], "qvalueactor": [387, 389, 420, 485, 487], "double_dqn": 387, "06461": [387, 397], "mult_one_hot": [387, 390, 391, 420], "loss_val": [387, 389, 418, 480, 484, 486, 487, 488, 491, 492, 494, 499, 500, 503], "01345": 388, "distanc": [389, 399, 411, 421, 422, 500], "dcql_loss": 389, "2110": [390, 398], "06169": [390, 398], "expectil": [390, 398], "tau": [390, 398, 406, 484, 485, 499], "antmaz": [390, 398], "sticht": [390, 398], "onehotcategor": [390, 391, 476], "target_entropy_weight": 391, "skip_done_st": [391, 405], "maxim": [391, 405, 484, 491, 501], "disctount": 392, "distributionalqvalueactor": [392, 479], "input_tensordict": [392, 484], "actor_model": 393, "value_model": [393, 395], "imagination_horizon": 393, "discount_loss": [393, 395], "lambda_kl": 394, "lambda_reco": 394, "lambda_reward": 394, "reco_loss": 394, "reward_loss": 394, "free_nat": 394, "nat": 394, "delayed_clamp": 394, "global_averag": 394, "value_loss": [395, 405], "fake_data": 395, "1606": 396, "03476": 396, "discriminator_network": 396, "use_grad_penalti": 396, "gp_lambda": 396, "discrimin": 396, "ddpgloss": [397, 406, 470, 476, 484, 491, 499, 505], "td3loss": [397, 406, 476], "value_network_update_interv": 397, "qvalueclass": 398, "loss_value_diff": 398, "diff": 398, "old_polici": 399, "new_polici": 399, "apart": [399, 500], "dtarg": 399, "samples_mc_kl": 399, "analyt": 399, "decrement": 399, "loss_": [400, 456, 480, 484, 491], "equip": [400, 487, 488, 490], "gh": 400, "_forward_value_estimator_kei": 400, "value_estim": [400, 415, 418, 422, 423, 424, 425, 426, 480, 484, 500], "myloss": 400, "action2": 400, "augment": [400, 478, 492, 494, 503], "deterministic_sampling_mod": 400, "convert_to_funct": [400, 415, 418, 484], "expand_dim": [400, 415, 418], "create_target_param": [400, 415, 418, 484], "compare_against": [400, 415, 418, 484], "_param": [400, 415, 418], "resampl": [400, 415, 418], "_target_param": [400, 415, 418], "network_nam": [400, 415, 418], "blend": [400, 415, 418], "add_random_modul": [400, 415, 418, 480], "flavor": [402, 484, 499, 500, 505], "clipppoloss": [402, 476, 486, 500], "klpenppoloss": [402, 476], "06347": 402, "log_explained_vari": 402, "explain": [402, 488, 502], "explained_vari": 402, "wors": 402, "gae": [402, 476, 480, 484, 486, 500], "ppo_loss": 402, "tdlambda": [402, 410, 480, 484], "base_lay": 402, "randn_lik": 402, "samplelogprob": 402, "ay8zfzm0tdd": 403, "sub_sample_len": 403, "subsampl": [403, 451, 481], "action_log_prob_actor": 403, "state_action_value_actor": [403, 407, 408], "connectionist": 404, "1992": 404, "doi": 404, "1007": 404, "bf00992696": 404, "actor_net": [404, 484, 486], "1801": 405, "01290": 405, "1812": 405, "05905": 405, "redqloss": [406, 476], "theta_t": [406, 501], "theta_": [406, 501], "polyak": 406, "minimalist": 407, "06860": 407, "policy_nois": [407, 408], "noise_clip": [407, 408], "td3_bc": 407, "bc_loss": 407, "lmbd": 407, "td0": [409, 484, 499], "tensorlik": 411, "strict_shap": 411, "view_a": 411, "instabl": 415, "diagnost": 415, "masking_strategi": 415, "sft": [415, 418], "kl_to_ref_coeff": [415, 418], "kl_to_inference_coeff": 415, "grpolossoutput": [415, 417], "clip_fract": 416, "kl_approx": 416, "loss_kl_to_ref": [416, 418, 419], "kl_to_ref": [416, 419], "loss_kl_to_infer": 416, "kl_to_infer": 416, "grpo_siz": 417, "hit": 417, "supervis": [418, 478, 491, 492, 503, 506], "normalize_by_seq_length": 418, "minor_sft": 418, "minorsft": 418, "push": 418, "shime": 418, "xie": 418, "hong": 418, "chen": 418, "fred": 418, "yu": 418, "zey": 418, "sun": 418, "xiuyu": 418, "wu": 418, "2024": 418, "minor": [418, 499], "_chat_templ": 418, "policy_ref": 418, "txt_start": 418, "zip": [418, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "loss_sft": [418, 419], "qmixer": [420, 476], "local_valu": 420, "visibl": [420, 500], "acceptedkei": 420, "global_valu": 420, "penultim": 420, "local_value_network": 420, "mixer_network": 420, "value_modul": [420, 486, 505], "qnet": [420, 484], "next_val_kei": 421, "pred_next_v": 421, "mse": 421, "q_valu": 421, "n_steps_to_next": 421, "value_next_st": 421, "1506": [422, 427, 435], "02438": [422, 427, 435], "exponenti": [422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 458], "average_ga": [422, 486], "skip_exist": [422, 423, 424, 425], "get_default_devic": [422, 423, 424, 425, 426], "auto_reset_env": 422, "next_valu": [422, 423, 424, 425, 426], "gradient_mod": 422, "value_error": [422, 423, 424, 425, 426], "marker": [422, 484], "trajecotri": 422, "fair": 422, "target_param": [422, 423, 424, 425, 426, 484, 500], "98": [422, 423, 424, 425], "94": [422, 425], "unpack": [422, 423, 424, 425], "tensor_kei": [422, 423, 424, 425, 426], "aka": [423, 485, 499], "average_reward": [423, 424, 425], "tdestim": [423, 424, 426], "infti": 424, "valuefunctionbas": 426, "old_stat": [427, 429, 431, 433, 435, 436, 438], "new_stat": [427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439], "rolling_gamma": [431, 432, 433, 434, 436, 437, 438, 439], "g1": [431, 432, 433, 434, 436, 437, 438, 439], "g2": [431, 432, 433, 434, 436, 437, 438, 439], "g3": [431, 432, 433, 434, 436, 437, 438, 439], "g4": [431, 432, 433, 434, 436, 437, 438, 439], "v3": [431, 432, 433, 434, 436, 437, 438, 439], "preproc": [440, 488, 499], "as_non_tensor": [440, 499], "render_method": 440, "pass_tensordict": 440, "syntact": 440, "sugar": 440, "out_file_bas": 441, "skip_reset": 441, "center_crop": 442, "make_grid": 442, "log_video": 442, "csv": [442, 444, 446, 485, 493, 494], "wandb": [442, 446, 449, 493, 505], "tensorboard": [442, 446, 448, 493, 505], "log_dir": [442, 443, 444, 446, 448, 449, 485, 494], "cheetah_video": 442, "run_video": 442, "openxexperiencereplai": 442, "sec": [442, 501], "video_fp": [442, 444, 447], "cmu_stretch": 442, "run_video_0": 442, "cur_dir": 444, "csv_log": 444, "add_video": 444, "video_": 444, "experiment_nam": [445, 446], "logger_typ": 446, "logger_nam": 446, "mlflow": [446, 447], "wandb_kwarg": 446, "mlflow_kwarg": 446, "tracking_uri": 447, "uri": 447, "datastor": 447, "tb_log": 448, "tensoarboard": 448, "td_log": 448, "save_dir": 449, "resum": 449, "uncategor": 449, "my_funct": 450, "sub_traj_len": 451, "min_sub_traj_len": 451, "register_op": [451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 481, 485], "process_optim_batch": [451, 457, 458, 481], "td_out": [451, 459], "_process_optim_batch_hook": [451, 481], "batch_subsampl": 451, "clear_cuda": 452, "pre_optim_step": [452, 481], "log_pbar": [453, 454, 455, 458, 481, 485], "count_fram": 453, "pre_steps_log": [453, 454, 481], "count_frames_log": 453, "lognam": 454, "r_train": 454, "log_reward": [454, 485], "record_interv": [455, 484, 485], "record_fram": [455, 463, 484, 485], "policy_explor": [455, 470, 484, 485, 488, 490, 494], "log_kei": [455, 485], "underestim": 455, "r_evalu": [455, 484], "loss_compon": 456, "appl": 456, "optimizer_hook": 456, "flatten_tensordict": [457, 485], "max_dim": 457, "rb_trainer": 457, "batch_process": [457, 458, 459, 481], "post_loss": [457, 481], "999": [458, 485], "jitter": 458, "finfo": 458, "default_dtyp": 458, "update_reward_stat": 458, "normalize_reward": 458, "make_train": [459, 476], "_process_batch_hook": [459, 481], "select_kei": [459, 481], "versatil": [460, 489], "optim_steps_per_batch": [460, 481, 485], "clip_grad_norm": 460, "clip_norm": 460, "progress_bar": 460, "save_trainer_interv": 460, "log_interv": [460, 485], "save_trainer_fil": [460, 481], "load_from_fil": [460, 481], "update_weights_interv": [462, 485], "post_step": [462, 481, 485], "dictconfig": [463, 464, 465, 466, 468, 469, 470, 471, 474], "unknowingli": 463, "annealing_fram": [463, 484], "init_env_step": [463, 464, 484], "proof_environ": [464, 484], "sta": 464, "ot": 464, "actor_model_explor": [465, 466, 484], "make_env_kwarg": [465, 466], "targetnetupdat": [467, 469, 470], "replayargsconfig": 468, "target_net_updat": [470, 484, 485], "constitu": 470, "egreedywrapp": 470, "env_proof": 470, "obs_spec": 470, "net_valu": 470, "dir": [470, 481, 485], "gettempdir": 470, "namespac": [471, 474], "transformed_env_constructor": [471, 476], "num_env_per_collector": [472, 473], "video_tag": 474, "norm_obs_onli": 474, "use_env_cr": 474, "custom_env_mak": 474, "custom_env": 474, "return_transformed_env": 474, "action_dim_gsd": 474, "state_dim_gsd": 474, "obs_norm_state_dict": 474, "weightupdat": 476, "distributedsyncdatacollector": 476, "submitit_delayed_launch": 476, "remotetensordictreplaybuff": 476, "rational": 476, "footnot": 476, "binarydiscretetensorspec": 476, "boundedtensorspec": 476, "discretetensorspec": 476, "lazystackedcompositespec": 476, "lazystackedtensorspec": 476, "multidiscretetensorspec": 476, "multionehotdiscretetensorspec": 476, "nontensorspec": 476, "onehotdiscretetensorspec": 476, "unboundedcontinuoustensorspec": 476, "unboundeddiscretetensorspec": 476, "prompttensordicttoken": 476, "rolloutfrommodel": 476, "tokenizeddatasetload": 476, "create_infinite_iter": 476, "constantklcontrol": 476, "adaptiveklcontrol": 476, "densifyreward": 476, "h5combin": 476, "h5split": 476, "nested2t": 476, "check_no_exclusive_kei": 476, "consolidate_spec": 476, "contains_lazy_spec": 476, "envmetadata": 476, "chessenv": 476, "tictactoeenv": 476, "llmhashingenv": 476, "check_marl_group": 476, "get_available_librari": 476, "terminated_or_trunc": 476, "dreamerdecod": 476, "braxwrapp": 476, "dmcontrolwrapp": 476, "isaaclabwrapp": 476, "jumanjiwrapp": 476, "meltingpotenv": 476, "meltingpotwrapp": 476, "mogymenv": 476, "multithreadedenvwrapp": 476, "openmlenv": 476, "openspielwrapp": 476, "openspielenv": 476, "pettingzooenv": [476, 499], "robohiveenv": 476, "smacv2env": 476, "smacv2wrapp": 476, "unitymlagentsenv": 476, "unitymlagentswrapp": 476, "vmaswrapp": 476, "register_gym_spec_convers": 476, "qvaluehook": 476, "distributionalqvaluehook": 476, "reset_nois": 476, "cemplann": 476, "mpcplannerbas": 476, "mppiplann": 476, "independentnorm": 476, "truncatednorm": 476, "maskedonehotcategor": 476, "onehotordin": 476, "inv_softplu": 476, "vmapmodul": 476, "distributionaldqnloss": [476, 485], "discretesacloss": 476, "crossqloss": 476, "iqlloss": 476, "discreteiqlloss": 476, "cqlloss": 476, "discretecqlloss": 476, "gailloss": 476, "dtloss": 476, "onlinedtloss": 476, "td3bcloss": 476, "ppoloss": [476, 478], "a2closs": 476, "reinforceloss": 476, "dreameractorloss": 476, "dreamermodelloss": 476, "dreamervalueloss": 476, "td0estim": [476, 484], "td1estim": [476, 484], "td0_return_estim": 476, "td0_advantage_estim": 476, "td1_return_estim": 476, "vec_td1_return_estim": 476, "td1_advantage_estim": 476, "vec_td1_advantage_estim": 476, "td_lambda_return_estim": 476, "vec_td_lambda_return_estim": 476, "td_lambda_advantage_estim": 476, "vec_td_lambda_advantage_estim": 476, "generalized_advantage_estim": 476, "vec_generalized_advantage_estim": 476, "hardupd": [476, 484, 491], "softupd": [476, 484, 485, 487, 488, 491, 494, 499], "distance_loss": [476, 484], "group_optim": 476, "hold_out_net": 476, "hold_out_param": [476, 484], "batchsubsampl": [476, 481], "clearcudacach": 476, "countframeslog": 476, "logscalar": [476, 481, 485], "optimizerhook": [476, 485], "logvalidationreward": [476, 481, 484, 485], "replaybuffertrain": [476, 481, 485], "rewardnorm": 476, "selectkei": [476, 481], "trainerhookbas": [476, 481, 485], "updateweight": [476, 481, 485], "make_collector_offpolici": 476, "make_collector_onpolici": 476, "make_dqn_loss": 476, "make_replay_buff": [476, 484], "make_target_updat": 476, "parallel_env_constructor": [476, 484], "sync_async_collector": 476, "sync_sync_collector": 476, "correct_for_frame_skip": 476, "get_stats_random_rollout": 476, "mlflowlogg": 476, "get_logg": 476, "generate_exp_nam": 476, "journei": 477, "textbook": 477, "highlight": [477, 499], "ever": [477, 500], "bump": 477, "pr": [477, 478], "comprehens": 478, "five": [478, 485], "orchestr": [478, 485, 491, 493], "grpoloss": 478, "sftloss": 478, "mcadvantag": 478, "5b": [478, 497], "microsoft": 478, "medium": [478, 503], "tiiuae": 478, "coder": 478, "mistral": 478, "gpt": 478, "mpt": 478, "bloom": 478, "pythia": 478, "phi": 478, "add_chat_templ": 478, "llama_templ": 478, "inst": 478, "elif": [478, 484, 485, 496], "endgener": 478, "endif": 478, "endfor": 478, "parse_llama_text": 478, "findal": 478, "dotal": 478, "user_cont": 478, "assistant_cont": 478, "strip": [478, 485], "template_nam": 478, "inverse_pars": 478, "model_family_keyword": 478, "test_my_model_assistant_mask": 478, "my_model": 478, "your_template_her": 478, "assistant_token_count": 478, "test_my_model_template_equival": 478, "default_out": 478, "custom_out": 478, "whitespac": 478, "ncustom": 478, "test_my_model_inverse_pars": 478, "aspect": [478, 485, 491], "inject": 478, "ref_env_llm_step": 478, "annot": [478, 496], "llm_output": 478, "attention_mask_al": 478, "assistant_mask_al": 478, "unpad": 478, "cohes": 478, "ref_collector": 478, "budget": [478, 485], "weight_upd": 478, "vllmupdat": 478, "make_polici": 478, "policy_version_track": 478, "mcptooltransform": 478, "step_data": 478, "s_": [478, 496], "gsm8krewardpars": 478, "ifevalscor": 478, "excel": 478, "bsz": 478, "num_token": 478, "predetermin": 478, "demonstr": [478, 486, 488, 492, 496, 497, 499, 500, 501, 503, 506], "text_complet": 478, "sophist": [478, 486, 500], "format_compon": 478, "structure_scor": 478, "think_scor": 478, "answer_scor": 478, "completion_bonu": 478, "potential_answ": 478, "compl": 478, "parseerror": 478, "regex": 478, "unnecessari": 478, "reliabl": 478, "characterist": [478, 480, 484, 501], "ground": [479, 484, 501], "recycl": [479, 503], "noisier": 479, "Their": [479, 499, 500], "sd": [479, 506], "prob_modul": 479, "uncertainti": 479, "soften": 479, "backbon": [479, 487, 490, 498, 505], "make_actor": 479, "make_valu": 479, "shared_param": 479, "make_common": 479, "reusabl": [480, 484, 503], "swappabl": [480, 484], "trainabl": [480, 484, 491, 502], "smth": [480, 484], "plenti": [480, 488], "amort": [480, 485, 486], "told": [480, 486], "pseudo": [480, 492, 501], "buri": 480, "str_valu": 480, "nutshel": [480, 484], "barto": [480, 499, 500], "chapter": [480, 493], "value_net_loss": 480, "pow": [480, 484], "room": 480, "signifi": [480, 499, 500], "underperform": 480, "intric": [480, 490], "set_composite_lp_aggreg": [480, 500], "action_td": 480, "action0": 480, "f0": 480, "action1": 480, "f1": 480, "f2": 480, "f3": 480, "action0_log_prob": 480, "action1_log_prob": 480, "inferior": 480, "multivari": 480, "dirichlet": 480, "prev_log_prob": 480, "new_log_prob": 480, "log_weight": 480, "appreci": [480, 489], "multihead": 480, "believ": 481, "substanti": 481, "_pre_steps_log_hook": 481, "_pre_optim_hook": 481, "sub_batch": 481, "_post_loss_hook": 481, "_post_optim_hook": 481, "post_optim": [481, 485], "_post_optim_log": 481, "post_optim_log": 481, "_post_steps_hook": 481, "_post_steps_log_hook": 481, "post_steps_log": 481, "logginghook": 481, "logging_hook": 481, "save_dict": 481, "some_valu": 481, "torchsnapshot": 481, "ckpt_backend": 481, "filepath": 481, "save_train": 481, "000": [483, 504], "galleri": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "mem": [483, 504], "mb": [483, 504], "coding_ddpg": [483, 484, 504], "coding_dqn": [483, 485, 504], "coding_ppo": [483, 486, 504], "dqn_with_rnn": [483, 487, 504], "llm_browser": [483, 496, 504], "llm_wrapper": [483, 497, 504], "multi_task": [483, 498, 504], "multiagent_competitive_ddpg": [483, 499, 504], "multiagent_ppo": [483, 500, 504], "pretrained_model": [483, 502, 504], "rb_tutori": [483, 503, 504], "torchrl_demo": [483, 504, 505], "torchrl_env": [483, 504, 506], "author": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 499, 500, 501, 503, 506], "vincent": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 501, 503, 506], "moen": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 501, 503, 506], "assembl": 484, "transpar": [484, 487], "bash": 484, "is_fork": [484, 485, 486, 487, 499, 500, 502], "get_start_method": [484, 485, 486, 487, 499, 500, 502], "collector_devic": 484, "loss_dict": 484, "oblivi": [484, 486, 503], "elementari": 484, "didact": [484, 488], "dilut": 484, "pessimist": [484, 485, 486], "target_actor_network_param": 484, "actor_in_kei": 484, "actor_crit": 484, "compromis": 484, "hp": 484, "_value_estim": 484, "unknown": 484, "_loss_actor": 484, "td_copi": 484, "actor_network_param": [484, 499], "value_network_param": [484, 499], "_loss_valu": 484, "pred_val": 484, "target_value_network_param": 484, "glue": 484, "_forward": 484, "remaind": 484, "env_librari": 484, "env_task": 484, "env_arg": [484, 485], "torchr": 484, "rescal": 484, "presum": 484, "make_transformed_env": 484, "reward_sc": 484, "env_per_collector": 484, "transform_state_dict": 484, "make_t_env": 484, "cheat": 484, "10m": 484, "cautiou": 484, "thousand": [484, 487], "get_env_stat": 484, "proof_env": 484, "5000": [484, 488, 494], "recal": [484, 486, 496, 503], "ddpgmlpactor": 484, "ddpgmlpqnet": 484, "materi": 484, "ornsteinuhlenbeckprocessmodul": [484, 490], "make_ddpg_actor": 484, "q_net": 484, "tight": 484, "10_000": [484, 486], "traj_len": [484, 487], "make_record": 484, "recorder_obj": 484, "pick": [484, 485, 490, 496], "buffer_s": [484, 485], "random_crop_len": 484, "prb": 484, "buffer_scratch_dir": [484, 485, 487, 492, 502], "dataflow": 484, "ceil_div": 484, "utd": [484, 487], "update_to_data": 484, "realiz": 484, "_must_": 484, "001": [484, 501], "outdat": 484, "trick": [484, 485], "despit": 484, "optimizer_actor": 484, "weight_decai": [484, 485], "optimizer_valu": 484, "total_collection_step": 484, "rewards_ev": 484, "collected_fram": 484, "numel": [484, 486, 487, 488, 494, 499, 502, 503], "current_fram": [484, 499], "sampled_tensordict": 484, "gn1": 484, "clip_grad_norm_": [484, 486, 499, 500, 501], "gn2": 484, "gn": [484, 501], "td_record": 484, "rn": 484, "2f": 484, "mention": [484, 487, 503, 506], "matplotlib": [484, 486, 487, 488, 499, 500, 501, 503, 506], "pyplot": [484, 486, 487, 488, 499, 500, 501, 503, 506], "plt": [484, 486, 487, 488, 499, 500, 501, 503, 506], "legend": [484, 499], "xlabel": [484, 487, 500, 501], "ylabel": [484, 500], "tight_layout": 484, "takeawai": [484, 485, 488, 496], "distpatch": 484, "jupyt": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "ipynb": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "sphinx": [484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506], "road": 485, "highest": [485, 490], "prerequisit": [485, 487, 496], "lookup": 485, "cart": 485, "pole": 485, "un": 485, "actuat": 485, "frictionless": 485, "duelingcnndqnet": 485, "egreedymodul": [485, 487, 488, 490, 494], "is_notebook": 485, "shell": 485, "get_ipython": 485, "__class__": [485, 497], "zmqinteractiveshel": 485, "qtconsol": 485, "terminalinteractiveshel": 485, "ipython": [485, 500, 501], "nameerror": [485, 497, 499], "umbrella": 485, "misplac": 485, "misus": 485, "64x64": 485, "motion": [485, 501], "obs_norm_sd": 485, "mp_context": 485, "simpler": [485, 489, 497], "get_norm_stat": 485, "test_env": 485, "mathbb": 485, "rightarrow": 485, "make_model": 485, "dummy_env": 485, "init_bia": 485, "exploration_modul": [485, 487, 488, 490, 494], "eps_greedy_v": 485, "eps_greedy_val_env": 485, "actor_explor": 485, "get_replay_buff": 485, "n_optim": [485, 491, 492], "parametriz": 485, "get_collector": 485, "bunch": 485, "ubiquit": [485, 489], "get_loss_modul": 485, "target_updat": [485, 499], "995": 485, "hopefulli": 485, "variat": 485, "2e": [485, 501], "wd": 485, "upd": 485, "harder": [485, 505], "5_000": 485, "500000": 485, "100000": 485, "005": [485, 499], "mandatori": [485, 486, 500, 501], "fairer": 485, "dqn_exp_": 485, "uuid1": [485, 506], "cumbersom": 485, "buffer_hook": 485, "aliv": 485, "total_reward": 485, "print_csv_files_in_fold": 485, "folder_path": 485, "csv_file": 485, "output_str": 485, "dirpath": 485, "endswith": 485, "qvaluenetwork": 485, "accuraci": 485, "fanci": [485, 492], "talk": 486, "six": 486, "invent": 486, "theta_k": 486, "pi_": 486, "exceed": 486, "discourag": [486, 501], "indispens": 486, "analyz": 486, "lingua": 486, "franca": 486, "defaultdict": [486, 501], "3e": [486, 487, 499, 500], "max_grad_norm": [486, 499, 500], "sub_batch_s": 486, "num_epoch": [486, 500], "entropy_ep": [486, 500], "charact": [486, 488], "inverteddoublependulum": 486, "transmit": 486, "stai": 486, "confid": [486, 499, 500], "ran": 486, "f_": 486, "mu_": 486, "difficulti": [486, 506], "d_ob": 486, "d_action": 486, "policy_modul": [486, 499, 500], "briefli": [486, 499, 500], "refil": [486, 500], "easiest": [486, 491, 499, 500], "mathemat": [486, 499, 500], "tradeoff": [486, 500], "advantage_modul": 486, "entropy_coef": [486, 500], "critic_coef": 486, "lr_schedul": [486, 501], "cosineannealinglr": [486, 501], "eval_str": 486, "tensordict_data": [486, 500], "data_view": [486, 500], "subdata": [486, 499, 500], "cum_reward_str": 486, "stepcount_str": 486, "param_group": [486, 499], "lr_str": 486, "eval_rollout": 486, "nice": [486, 489, 492], "figsiz": [486, 501], "subplot": [486, 499, 501, 506], "titl": [486, 487, 488, 500, 501], "84x84": [487, 488], "accessori": 487, "stamp": 487, "n_cell": 487, "customiz": 487, "wouldn": 487, "qval": 487, "stoch_polici": 487, "opportun": [487, 499], "uniniti": 487, "again": [487, 488, 489, 490, 492, 500, 502, 503, 506], "strongli": 487, "sake": [487, 502, 503], "20_000": [487, 501], "longest": 487, "npai": 487, "action_spread": 487, "strong": 488, "impress": 488, "arduino": 488, "raspberri": 488, "pi": [488, 499, 500, 501], "alon": 488, "examplifi": 488, "ship": 488, "stick": 488, "nearest": 488, "value_mlp": [488, 494], "init_rand_step": [488, 494], "total_count": [488, 494], "total_episod": [488, 494], "t0": [488, 494], "screen": [488, 499], "color": [488, 499], "unblock": 488, "policy_transform": 488, "fake_td": 488, "exported_polici": 488, "div": 488, "graph_modul": 488, "print_read": 488, "group0": 488, "group0_agent0_ob": 488, "collid": [488, 500], "group0_agent0": 488, "agent0_ob": 488, "comma": 488, "digress": 488, "exported_stochastic_polici": 488, "trace": 488, "batchsizetransform": 488, "hidden0": 488, "hidden1": 488, "recurrent_polici": 488, "fake_ob": 488, "fake_hidden0": 488, "fake_hidden1": 488, "fake_is_init": 488, "exported_recurrent_polici": 488, "platform": [488, 505], "aoti": 488, "_inductor": 488, "aoti_compile_and_packag": 488, "aoti_load_packag": 488, "pt2": 488, "pkg_path": 488, "package_path": 488, "compiled_modul": 488, "onnxruntim": 488, "showcas": [488, 501], "tensorrt": 488, "android": 488, "aleinterfac": 488, "rom": 488, "loadrom": 488, "reset_gam": 488, "screen_ob": 488, "getscreenrgb": 488, "tick_param": 488, "bottom": 488, "labelleft": 488, "labelbottom": 488, "imshow": [488, 506], "dynamo_export": 488, "onnx_policy_export": 488, "onnx_file_path": 488, "ort_sess": 488, "inferencesess": 488, "cpuexecutionprovid": 488, "onnxruntime_input": 488, "get_input": 488, "onnx_polici": 488, "onnxruntime_output": 488, "topic": [489, 490, 491], "straight": 489, "backtrack": 489, "reset_with_act": 489, "stepped_data": 489, "spatial": 489, "useless": 489, "policyless": 489, "examin": [489, 499], "tackl": 490, "delv": 490, "extractor": 490, "additivegaussianmodul": [490, 499], "exploration_polici": [490, 499], "greedili": 490, "2d": [490, 499, 500], "innov": [490, 491], "rollout_explor": 490, "sole": 491, "n_collect": 491, "get_next_batch": 491, "concis": 491, "ddpg_loss": 491, "total_loss": 491, "prove": 491, "reliev": 491, "accustom": 492, "surprisingli": 492, "art": [492, 499, 500], "countless": 492, "yourself": [492, 499, 500], "everywher": 493, "log_scalar": 493, "my_scalar": 493, "excess": 493, "lesson": 494, "voluntarili": 494, "training_loop": 494, "video_record": 494, "arbitrarili": 494, "t1": 494, "conclud": [494, 502], "tutorials_python": 495, "tutorials_jupyt": 495, "playwright": 496, "autom": 496, "__future__": 496, "browsertransform": 496, "filterwarn": [496, 497], "browser_transform": 496, "rewardtransform": 496, "last_item": 496, "agnost": 496, "execute_tool_act": 496, "current_st": 496, "nllm": 496, "nenviron": 496, "button": 496, "css": 496, "btnk": 496, "extract_typ": 496, "ref_llm": 496, "suppress": 497, "vllm_use_v1": 497, "canada": 497, "vllm_wrapper": 497, "return_text": 497, "return_token": 497, "return_mask": 497, "data_histori": 497, "nload": 497, "transformers_model": 497, "transformers_token": 497, "transformers_wrapp": 497, "result_tf": 497, "data_text": 497, "vllm_text_wrapp": 497, "result_vllm_text": 497, "nvllm": 497, "transformers_text_wrapp": 497, "result_tf_text": 497, "vllm_logprobs_wrapp": 497, "result_vllm_lp": 497, "transformers_logprobs_wrapp": 497, "result_tf_lp": 497, "ntensorclass": 497, "analysi": 497, "ntext": 497, "__annotations__": 497, "ntoken": 497, "nlogprob": 497, "nmask": 497, "nerror": 497, "invalid_mod": 497, "nrl": 497, "env_stat": 497, "action_output": 497, "60": [497, 505], "env1_obs_kei": 498, "observation_stand": 498, "env2_obs_kei": 498, "observation_walk": 498, "tdreset1": 498, "tdreset2": 498, "policy_common": 498, "policy_stand": 498, "policy_walk": 498, "env1_mak": 498, "env2_mak": 498, "_single_task": 498, "td_rollout": 498, "matteo": [499, 500], "bettini": [499, 500], "benchmarl": [499, 500], "simple_tag": 499, "maddpg": [499, 500], "multiagentparticleenviron": 499, "mpe": 499, "centralis": [499, 500], "tie": [499, 500], "iddpg": [499, 500], "richard": 499, "andrew": 499, "mit": 499, "press": 499, "2018": 499, "mathbf": [499, 500], "decentralis": [499, 500], "literatur": [499, 500], "overcom": [499, 500], "stationari": [499, 500], "establish": 499, "gui": [499, 500], "is_sphinx": 499, "__sphinx_build__": 499, "n_iter": [499, 500, 501], "evad": 499, "iteration_when_stop_training_evad": 499, "memory_s": 499, "n_optimiser_step": 499, "train_batch_s": 499, "polyak_tau": 499, "chaser": 499, "red": 499, "circl": [499, 500], "green": 499, "touch": [499, 501], "penal": [499, 500], "obstacl": 499, "drag": [499, 500], "elast": [499, 500], "collis": [499, 500], "imped": 499, "n_chaser": 499, "n_evad": 499, "n_obstacl": 499, "use_vma": 499, "simple_tag_v3": 499, "num_good": 499, "num_adversari": 499, "num_obstacl": 499, "max_cycl": 499, "num_vmas_env": [499, 500], "num_good_ag": 499, "num_landmark": 499, "four": [499, 500, 501], "n_agents_in_that_group": 499, "stress": [499, 500], "paramount": [499, 500], "n_rollout_step": [499, 500], "evolut": [499, 500], "group_nam": 499, "n_agents_in_group": 499, "agents_exploration_polici": 499, "utilis": [499, 500], "n_obs_per_ag": [499, 500], "n_actions_per_ag": [499, 500], "share_parameters_polici": [499, 500], "policy_net": [499, 500], "_agent": 499, "grant": [499, 500], "converg": [499, 500], "share_parameters_crit": [499, 500], "obs_act": 499, "cat_modul": 499, "critic_modul": 499, "fantast": [499, 500], "reset_td": 499, "interfer": 499, "subject": [499, 501], "flatten_kei": 499, "process_batch": 499, "group_shap": 499, "get_item_shap": [499, 500], "nested_done_kei": 499, "nested_terminated_kei": 499, "desc": [499, 500], "episode_reward_mean_": 499, "episode_reward_mean_map": 499, "train_group_map": 499, "group_batch": 499, "_group": 499, "loss_nam": 499, "episode_reward_mean": [499, 500], "fig": [499, 503], "set_ylabel": 499, "axvlin": 499, "orang": 499, "set_xlabel": 499, "video_logg": 499, "vmas_log": 499, "env_with_rend": 499, "vmas_rend": 499, "print_log_dir": 499, "profici": [499, 500], "lidar": 500, "sensor": 500, "mappo": 500, "ippo": 500, "analys": 500, "visualis": 500, "vmas_devic": 500, "6_000": 500, "minibatch_s": 500, "generalis": 500, "simd": 500, "warp": 500, "todai": 500, "surround": 500, "dot": [500, 501], "scenario_nam": 500, "critic_net": 500, "minibatch": 500, "episode_reward_mean_list": 500, "critic_network_param": 500, "target_critic_network_param": 500, "xvfb": 500, "pyvirtualdisplai": 500, "1400": 500, "900": 500, "pil": 500, "rendering_callback": 500, "fromarrai": 500, "gif": 500, "save_al": 500, "append_imag": 500, "freeli": 501, "broader": 501, "wider": 501, "acquaint": 501, "avenu": 501, "_apply_to_composit": 501, "default_x": 501, "default_i": 501, "upward": 501, "angular": 501, "sin": 501, "rad": 501, "angl": 501, "deleg": 501, "new_th": 501, "new_thdot": 501, "g_forc": 501, "angle_norm": 501, "albeit": 501, "high_th": 501, "high_thdot": 501, "low_th": 501, "low_thdot": 501, "trivial": 501, "irrelev": 501, "_make_spec": 501, "td_param": 501, "render_fp": 501, "random_": 501, "_make_step": 501, "staticmethod": 501, "skeleton": 501, "sine": 501, "cosin": 501, "sintransform": 501, "costransform": 501, "t_sin": 501, "t_co": 501, "cat_transform": 501, "simple_rollout": 501, "unexplor": 501, "init_td": 501, "traj_return": 501, "last_reward": 501, "is_ipython": 501, "inlin": 501, "get_backend": 501, "ion": 501, "gcf": 501, "clear_output": 501, "r3mtransform": 502, "embodi": 502, "env_transform": [502, 506], "wiser": 502, "batteri": 503, "gc": 503, "buffer_list": 503, "lowest": 503, "buffer_lazytensor": 503, "tempdir": 503, "buffer_lazymemmap": 503, "fullest": 503, "mydata": 503, "buffer_lazi": 503, "_i": 503, "artifici": 503, "hamper": 503, "reappear": 503, "unfold": 503, "problemat": 503, "4th": 503, "prioritizedslicesampl": 503, "tensordictmaxvaluewrit": 503, "demo": 505, "icml": 505, "vmoen": 505, "fb": 505, "invest": 505, "media": 505, "predominantli": 505, "data2": 505, "sub_key1": 505, "scturctur": 505, "data_stack": 505, "data_sampl": 505, "_sampler": 505, "_sum_tre": 505, "modulenotfounderror": 505, "noopresetenv": [505, 506], "backbone_modul": 505, "params_expand": 505, "exec_sequ": 505, "tensordict_exp": 505, "base_modul": 505, "tensordicts_prealloc": 505, "tensordicts_stack": 505, "tensordict_rollout": [505, 506], "automatical": 505, "particularili": 505, "concatmodul": 505, "loss_td": 505, "contributor": 505, "curiou": 505, "nascent": 505, "unsupervis": 506, "_build_env": 506, "deserv": 506, "__episode__": 506, "__trajectory__": 506, "void": 506, "reproduct": 506, "tensordict_tprim": 506, "wrapper1": 506, "wrapper2": 506, "obviou": 506, "truth": 506, "env_transformed_bi": 506, "stanc": 506, "transformeddistribut": 506, "base_dist": 506, "concat": 506, "mofidi": 506, "transformedenviron": 506, "moderet": 506, "computation": 506, "incom": 506, "amongst": 506, "has_cuda": 506, "convention": 506, "markovian": 506, "bar_": 506, "get_someth": 506, "aargh": 506, "is_clos": 506, "foo_list": 506, "121": 506, "evolv": 506, "steadi": 506, "approx": 506, "absor": 506, "_extra_st": 506}, "objects": {"torchrl": [[12, 0, 1, "", "auto_unwrap_transformed_env"], [288, 0, 1, "", "implement_for"], [450, 0, 1, "", "set_auto_unwrap_transformed_env"]], "torchrl.collectors": [[13, 0, 1, "", "DataCollectorBase"], [14, 0, 1, "", "MultiProcessedWeightUpdater"], [15, 0, 1, "", "MultiSyncDataCollector"], [16, 0, 1, "", "MultiaSyncDataCollector"], [17, 0, 1, "", "RayWeightUpdater"], [18, 0, 1, "", "SyncDataCollector"], [19, 0, 1, "", "VanillaWeightUpdater"], [20, 0, 1, "", "WeightUpdaterBase"], [21, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.DataCollectorBase": [[13, 1, 1, "", "async_shutdown"], [13, 1, 1, "", "init_updater"], [13, 1, 1, "", "pause"], [13, 1, 1, "", "start"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiProcessedWeightUpdater": [[14, 1, 1, "", "all_worker_ids"], [14, 2, 1, "", "collector"], [14, 1, 1, "", "from_policy"], [14, 1, 1, "", "increment_version"], [14, 1, 1, "", "init"], [14, 2, 1, "", "post_hooks"], [14, 1, 1, "", "push_weights"], [14, 1, 1, "", "register_collector"], [14, 1, 1, "", "register_post_hook"]], "torchrl.collectors.MultiSyncDataCollector": [[15, 1, 1, "", "async_shutdown"], [15, 1, 1, "", "init_updater"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "pause"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "start"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[16, 1, 1, "", "async_shutdown"], [16, 1, 1, "", "init_updater"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "pause"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "start"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.RayWeightUpdater": [[17, 1, 1, "", "_get_server_weights"], [17, 1, 1, "", "_maybe_map_weights"], [17, 1, 1, "", "_skip_update"], [17, 1, 1, "", "_sync_weights_with_worker"], [17, 1, 1, "id0", "all_worker_ids"], [17, 2, 1, "", "collector"], [17, 1, 1, "", "from_policy"], [17, 1, 1, "", "increment_version"], [17, 1, 1, "", "init"], [17, 2, 1, "", "post_hooks"], [17, 1, 1, "", "push_weights"], [17, 1, 1, "", "register_collector"], [17, 1, 1, "", "register_post_hook"]], "torchrl.collectors.SyncDataCollector": [[18, 1, 1, "", "async_shutdown"], [18, 1, 1, "", "init_updater"], [18, 1, 1, "", "iterator"], [18, 1, 1, "", "load_state_dict"], [18, 1, 1, "", "pause"], [18, 1, 1, "", "reset"], [18, 1, 1, "", "rollout"], [18, 1, 1, "", "set_seed"], [18, 1, 1, "", "shutdown"], [18, 1, 1, "", "start"], [18, 1, 1, "", "state_dict"], [18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.VanillaWeightUpdater": [[19, 1, 1, "", "all_worker_ids"], [19, 2, 1, "", "collector"], [19, 1, 1, "", "from_policy"], [19, 1, 1, "", "increment_version"], [19, 1, 1, "", "init"], [19, 2, 1, "", "post_hooks"], [19, 1, 1, "", "push_weights"], [19, 1, 1, "", "register_collector"], [19, 1, 1, "", "register_post_hook"]], "torchrl.collectors.WeightUpdaterBase": [[20, 1, 1, "", "all_worker_ids"], [20, 2, 1, "", "collector"], [20, 1, 1, "id0", "from_policy"], [20, 1, 1, "", "increment_version"], [20, 1, 1, "", "init"], [20, 2, 1, "", "post_hooks"], [20, 1, 1, "id1", "push_weights"], [20, 1, 1, "id2", "register_collector"], [20, 1, 1, "", "register_post_hook"]], "torchrl.collectors.aSyncDataCollector": [[21, 1, 1, "", "async_shutdown"], [21, 1, 1, "", "init_updater"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "pause"], [21, 1, 1, "", "reset"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "start"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[22, 0, 1, "", "DistributedDataCollector"], [23, 0, 1, "", "DistributedSyncDataCollector"], [24, 0, 1, "", "DistributedWeightUpdater"], [25, 0, 1, "", "RPCDataCollector"], [26, 0, 1, "", "RPCWeightUpdater"], [27, 0, 1, "", "RayCollector"], [28, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[22, 1, 1, "", "async_shutdown"], [22, 1, 1, "", "init_updater"], [22, 1, 1, "", "pause"], [22, 1, 1, "", "start"], [22, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[23, 1, 1, "", "async_shutdown"], [23, 1, 1, "", "init_updater"], [23, 1, 1, "", "pause"], [23, 1, 1, "", "start"], [23, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedWeightUpdater": [[24, 1, 1, "", "_get_server_weights"], [24, 1, 1, "", "_maybe_map_weights"], [24, 1, 1, "", "_sync_weights_with_worker"], [24, 1, 1, "id0", "all_worker_ids"], [24, 2, 1, "", "collector"], [24, 1, 1, "", "from_policy"], [24, 1, 1, "", "increment_version"], [24, 1, 1, "", "init"], [24, 2, 1, "", "post_hooks"], [24, 1, 1, "", "push_weights"], [24, 1, 1, "", "register_collector"], [24, 1, 1, "", "register_post_hook"], [24, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RPCDataCollector": [[25, 1, 1, "", "async_shutdown"], [25, 1, 1, "", "init_updater"], [25, 1, 1, "", "pause"], [25, 1, 1, "", "start"], [25, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCWeightUpdater": [[26, 1, 1, "", "_get_server_weights"], [26, 1, 1, "", "_maybe_map_weights"], [26, 1, 1, "", "_sync_weights_with_worker"], [26, 1, 1, "id0", "all_worker_ids"], [26, 2, 1, "", "collector"], [26, 1, 1, "", "from_policy"], [26, 1, 1, "", "increment_version"], [26, 1, 1, "", "init"], [26, 2, 1, "", "post_hooks"], [26, 1, 1, "", "push_weights"], [26, 1, 1, "", "register_collector"], [26, 1, 1, "", "register_post_hook"], [26, 1, 1, "", "update_weights"]], "torchrl.collectors.distributed.RayCollector": [[27, 1, 1, "", "add_collectors"], [27, 1, 1, "", "async_shutdown"], [27, 1, 1, "", "init_updater"], [27, 1, 1, "", "load_state_dict"], [27, 1, 1, "", "local_policy"], [27, 1, 1, "", "pause"], [27, 2, 1, "", "remote_collectors"], [27, 1, 1, "", "set_seed"], [27, 1, 1, "", "shutdown"], [27, 1, 1, "", "start"], [27, 1, 1, "", "state_dict"], [27, 1, 1, "", "stop_remote_collectors"], [27, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm": [[29, 0, 1, "", "LLMCollector"], [30, 0, 1, "", "RayLLMCollector"], [31, 0, 1, "", "vLLMUpdater"]], "torchrl.collectors.llm.LLMCollector": [[29, 1, 1, "", "as_remote"], [29, 1, 1, "", "async_shutdown"], [29, 2, 1, "", "dialog_turns_per_batch"], [29, 1, 1, "", "get_policy_model"], [29, 1, 1, "", "get_policy_version"], [29, 1, 1, "", "increment_version"], [29, 1, 1, "", "init_updater"], [29, 1, 1, "", "is_initialized"], [29, 1, 1, "", "iterator"], [29, 1, 1, "", "load_state_dict"], [29, 1, 1, "", "pause"], [29, 2, 1, "", "policy_version"], [29, 1, 1, "", "reset"], [29, 2, 1, "", "rollout"], [29, 1, 1, "", "set_seed"], [29, 1, 1, "", "shutdown"], [29, 1, 1, "", "start"], [29, 1, 1, "", "state_dict"], [29, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.llm.RayLLMCollector": [[30, 1, 1, "", "as_remote"], [30, 1, 1, "", "async_shutdown"], [30, 2, 1, "", "dialog_turns_per_batch"], [30, 1, 1, "", "get_policy_model"], [30, 1, 1, "", "get_policy_version"], [30, 1, 1, "", "increment_version"], [30, 1, 1, "", "init_updater"], [30, 1, 1, "", "is_initialized"], [30, 1, 1, "", "iterator"], [30, 1, 1, "", "load_state_dict"], [30, 1, 1, "", "next"], [30, 1, 1, "", "pause"], [30, 2, 1, "", "policy_version"], [30, 1, 1, "", "reset"], [30, 2, 1, "", "rollout"], [30, 1, 1, "", "set_seed"], [30, 1, 1, "", "shutdown"], [30, 1, 1, "", "start"], [30, 1, 1, "", "state_dict"], [30, 2, 1, "", "total_dialog_turns"], [30, 1, 1, "", "update_policy_weights_"], [30, 2, 1, "", "weight_updater"]], "torchrl.collectors.llm.vLLMUpdater": [[31, 1, 1, "", "_get_server_weights"], [31, 1, 1, "", "_maybe_map_weights"], [31, 1, 1, "", "_sync_weights_with_worker"], [31, 1, 1, "id0", "all_worker_ids"], [31, 2, 1, "", "collector"], [31, 1, 1, "", "from_policy"], [31, 1, 1, "", "get_model_metadata"], [31, 1, 1, "", "increment_version"], [31, 1, 1, "id1", "init"], [31, 2, 1, "", "post_hooks"], [31, 1, 1, "", "push_weights"], [31, 1, 1, "", "register_collector"], [31, 1, 1, "", "register_post_hook"]], "torchrl.collectors.utils": [[32, 3, 1, "", "split_trajectories"]], "torchrl.data": [[33, 0, 1, "", "AdaptiveKLController"], [34, 0, 1, "", "Binary"], [35, 0, 1, "", "BinaryDiscreteTensorSpec"], [36, 0, 1, "", "BinaryToDecimal"], [37, 0, 1, "", "Bounded"], [38, 0, 1, "", "BoundedTensorSpec"], [39, 0, 1, "", "Categorical"], [40, 0, 1, "", "Composite"], [41, 0, 1, "", "CompositeSpec"], [42, 0, 1, "", "ConstantKLController"], [43, 0, 1, "", "DensifyReward"], [44, 0, 1, "", "DiscreteTensorSpec"], [45, 0, 1, "", "Flat2TED"], [46, 0, 1, "", "H5Combine"], [47, 0, 1, "", "H5Split"], [48, 0, 1, "", "HashToInt"], [49, 0, 1, "", "LazyStackedCompositeSpec"], [50, 0, 1, "", "LazyStackedTensorSpec"], [51, 0, 1, "", "MCTSForest"], [52, 0, 1, "", "MultiCategorical"], [53, 0, 1, "", "MultiDiscreteTensorSpec"], [54, 0, 1, "", "MultiOneHot"], [55, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [56, 0, 1, "", "MultiStep"], [57, 0, 1, "", "Nested2TED"], [58, 0, 1, "", "NonTensor"], [59, 0, 1, "", "NonTensorSpec"], [60, 0, 1, "", "OneHot"], [61, 0, 1, "", "OneHotDiscreteTensorSpec"], [62, 0, 1, "", "PairwiseDataset"], [63, 0, 1, "", "PrioritizedReplayBuffer"], [64, 0, 1, "", "PromptData"], [65, 0, 1, "", "PromptTensorDictTokenizer"], [66, 0, 1, "", "QueryModule"], [67, 0, 1, "", "RandomProjectionHash"], [68, 0, 1, "", "RayReplayBuffer"], [69, 0, 1, "", "RemoteTensorDictReplayBuffer"], [70, 0, 1, "", "ReplayBuffer"], [71, 0, 1, "", "RewardData"], [72, 0, 1, "", "RolloutFromModel"], [73, 0, 1, "", "SipHash"], [74, 0, 1, "", "Stacked"], [75, 0, 1, "", "StackedComposite"], [76, 0, 1, "", "TED2Flat"], [77, 0, 1, "", "TED2Nested"], [78, 0, 1, "", "TensorDictMap"], [79, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [80, 0, 1, "", "TensorDictReplayBuffer"], [81, 0, 1, "", "TensorDictTokenizer"], [82, 0, 1, "", "TensorMap"], [83, 0, 1, "", "TensorSpec"], [84, 0, 1, "", "TokenizedDatasetLoader"], [85, 0, 1, "", "Tree"], [86, 0, 1, "", "Unbounded"], [87, 0, 1, "", "UnboundedContinuous"], [88, 0, 1, "", "UnboundedContinuousTensorSpec"], [89, 0, 1, "", "UnboundedDiscrete"], [90, 0, 1, "", "UnboundedDiscreteTensorSpec"], [91, 0, 1, "", "check_no_exclusive_keys"], [92, 0, 1, "", "consolidate_spec"], [93, 0, 1, "", "contains_lazy_spec"], [94, 0, 1, "", "create_infinite_iterator"], [99, 0, 1, "", "get_dataloader"]], "torchrl.data.AdaptiveKLController": [[33, 1, 1, "", "update"]], "torchrl.data.Binary": [[34, 1, 1, "", "assert_is_in"], [34, 1, 1, "", "cardinality"], [34, 1, 1, "", "clear_device_"], [34, 1, 1, "", "clone"], [34, 1, 1, "", "contains"], [34, 1, 1, "", "cpu"], [34, 1, 1, "", "cuda"], [34, 4, 1, "", "device"], [34, 1, 1, "", "encode"], [34, 1, 1, "", "enumerate"], [34, 1, 1, "", "erase_memoize_cache"], [34, 1, 1, "", "expand"], [34, 1, 1, "", "flatten"], [34, 1, 1, "", "implements_for_spec"], [34, 1, 1, "", "index"], [34, 1, 1, "", "is_in"], [34, 1, 1, "", "make_neg_dim"], [34, 1, 1, "", "memoize_encode"], [34, 2, 1, "", "ndim"], [34, 1, 1, "", "ndimension"], [34, 1, 1, "", "one"], [34, 1, 1, "", "ones"], [34, 1, 1, "", "project"], [34, 1, 1, "", "rand"], [34, 1, 1, "", "reshape"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_provisional_n"], [34, 1, 1, "", "squeeze"], [34, 1, 1, "", "to"], [34, 1, 1, "", "to_categorical"], [34, 1, 1, "", "to_categorical_spec"], [34, 1, 1, "", "to_numpy"], [34, 1, 1, "", "to_one_hot"], [34, 1, 1, "", "to_one_hot_spec"], [34, 1, 1, "", "type_check"], [34, 1, 1, "", "unflatten"], [34, 1, 1, "", "unsqueeze"], [34, 1, 1, "", "update_mask"], [34, 1, 1, "", "view"], [34, 1, 1, "", "zero"], [34, 1, 1, "", "zeros"]], "torchrl.data.BinaryDiscreteTensorSpec": [[35, 1, 1, "", "assert_is_in"], [35, 1, 1, "", "cardinality"], [35, 1, 1, "", "clear_device_"], [35, 1, 1, "", "clone"], [35, 1, 1, "", "contains"], [35, 1, 1, "", "cpu"], [35, 1, 1, "", "cuda"], [35, 4, 1, "", "device"], [35, 1, 1, "", "encode"], [35, 1, 1, "", "enumerate"], [35, 1, 1, "", "erase_memoize_cache"], [35, 1, 1, "", "expand"], [35, 1, 1, "", "flatten"], [35, 1, 1, "", "implements_for_spec"], [35, 1, 1, "", "index"], [35, 1, 1, "", "is_in"], [35, 1, 1, "", "make_neg_dim"], [35, 1, 1, "", "memoize_encode"], [35, 2, 1, "", "ndim"], [35, 1, 1, "", "ndimension"], [35, 1, 1, "", "one"], [35, 1, 1, "", "ones"], [35, 1, 1, "", "project"], [35, 1, 1, "", "rand"], [35, 1, 1, "", "reshape"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_provisional_n"], [35, 1, 1, "", "squeeze"], [35, 1, 1, "", "to"], [35, 1, 1, "", "to_categorical"], [35, 1, 1, "", "to_categorical_spec"], [35, 1, 1, "", "to_numpy"], [35, 1, 1, "", "to_one_hot"], [35, 1, 1, "", "to_one_hot_spec"], [35, 1, 1, "", "type_check"], [35, 1, 1, "", "unflatten"], [35, 1, 1, "", "unsqueeze"], [35, 1, 1, "", "update_mask"], [35, 1, 1, "", "view"], [35, 1, 1, "", "zero"], [35, 1, 1, "", "zeros"]], "torchrl.data.BinaryToDecimal": [[36, 1, 1, "", "add_module"], [36, 1, 1, "", "apply"], [36, 1, 1, "", "bfloat16"], [36, 1, 1, "", "buffers"], [36, 1, 1, "", "children"], [36, 1, 1, "", "compile"], [36, 1, 1, "", "cpu"], [36, 1, 1, "", "cuda"], [36, 1, 1, "", "double"], [36, 1, 1, "", "eval"], [36, 1, 1, "", "extra_repr"], [36, 1, 1, "", "float"], [36, 1, 1, "", "forward"], [36, 1, 1, "", "get_buffer"], [36, 1, 1, "", "get_extra_state"], [36, 1, 1, "", "get_parameter"], [36, 1, 1, "", "get_submodule"], [36, 1, 1, "", "half"], [36, 1, 1, "", "ipu"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "modules"], [36, 1, 1, "", "mtia"], [36, 1, 1, "", "named_buffers"], [36, 1, 1, "", "named_children"], [36, 1, 1, "", "named_modules"], [36, 1, 1, "", "named_parameters"], [36, 1, 1, "", "parameters"], [36, 1, 1, "", "register_backward_hook"], [36, 1, 1, "", "register_buffer"], [36, 1, 1, "", "register_forward_hook"], [36, 1, 1, "", "register_forward_pre_hook"], [36, 1, 1, "", "register_full_backward_hook"], [36, 1, 1, "", "register_full_backward_pre_hook"], [36, 1, 1, "", "register_load_state_dict_post_hook"], [36, 1, 1, "", "register_load_state_dict_pre_hook"], [36, 1, 1, "", "register_module"], [36, 1, 1, "", "register_parameter"], [36, 1, 1, "", "register_state_dict_post_hook"], [36, 1, 1, "", "register_state_dict_pre_hook"], [36, 1, 1, "", "requires_grad_"], [36, 1, 1, "", "set_extra_state"], [36, 1, 1, "", "set_submodule"], [36, 1, 1, "", "share_memory"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to"], [36, 1, 1, "", "to_empty"], [36, 1, 1, "", "train"], [36, 1, 1, "", "type"], [36, 1, 1, "", "xpu"], [36, 1, 1, "", "zero_grad"]], "torchrl.data.Bounded": [[37, 1, 1, "", "assert_is_in"], [37, 1, 1, "", "cardinality"], [37, 1, 1, "", "clear_device_"], [37, 1, 1, "", "clone"], [37, 1, 1, "", "contains"], [37, 1, 1, "", "cpu"], [37, 1, 1, "", "cuda"], [37, 2, 1, "", "device"], [37, 1, 1, "", "encode"], [37, 1, 1, "", "enumerate"], [37, 1, 1, "", "erase_memoize_cache"], [37, 1, 1, "", "expand"], [37, 1, 1, "", "flatten"], [37, 1, 1, "", "implements_for_spec"], [37, 1, 1, "", "index"], [37, 1, 1, "", "is_in"], [37, 1, 1, "", "make_neg_dim"], [37, 1, 1, "", "memoize_encode"], [37, 2, 1, "", "ndim"], [37, 1, 1, "", "ndimension"], [37, 1, 1, "", "one"], [37, 1, 1, "", "ones"], [37, 1, 1, "", "project"], [37, 1, 1, "", "rand"], [37, 1, 1, "", "reshape"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "squeeze"], [37, 1, 1, "", "to"], [37, 1, 1, "", "to_numpy"], [37, 1, 1, "", "type_check"], [37, 1, 1, "", "unflatten"], [37, 1, 1, "", "unsqueeze"], [37, 1, 1, "", "view"], [37, 1, 1, "", "zero"], [37, 1, 1, "", "zeros"]], "torchrl.data.BoundedTensorSpec": [[38, 1, 1, "", "assert_is_in"], [38, 1, 1, "", "cardinality"], [38, 1, 1, "", "clear_device_"], [38, 1, 1, "", "clone"], [38, 1, 1, "", "contains"], [38, 1, 1, "", "cpu"], [38, 1, 1, "", "cuda"], [38, 2, 1, "", "device"], [38, 1, 1, "", "encode"], [38, 1, 1, "", "enumerate"], [38, 1, 1, "", "erase_memoize_cache"], [38, 1, 1, "", "expand"], [38, 1, 1, "", "flatten"], [38, 1, 1, "", "implements_for_spec"], [38, 1, 1, "", "index"], [38, 1, 1, "", "is_in"], [38, 1, 1, "", "make_neg_dim"], [38, 1, 1, "", "memoize_encode"], [38, 2, 1, "", "ndim"], [38, 1, 1, "", "ndimension"], [38, 1, 1, "", "one"], [38, 1, 1, "", "ones"], [38, 1, 1, "", "project"], [38, 1, 1, "", "rand"], [38, 1, 1, "", "reshape"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "squeeze"], [38, 1, 1, "", "to"], [38, 1, 1, "", "to_numpy"], [38, 1, 1, "", "type_check"], [38, 1, 1, "", "unflatten"], [38, 1, 1, "", "unsqueeze"], [38, 1, 1, "", "view"], [38, 1, 1, "", "zero"], [38, 1, 1, "", "zeros"]], "torchrl.data.Categorical": [[39, 1, 1, "", "assert_is_in"], [39, 1, 1, "", "cardinality"], [39, 1, 1, "", "clear_device_"], [39, 1, 1, "", "clone"], [39, 1, 1, "", "contains"], [39, 1, 1, "", "cpu"], [39, 1, 1, "", "cuda"], [39, 4, 1, "", "device"], [39, 1, 1, "", "encode"], [39, 1, 1, "", "enumerate"], [39, 1, 1, "", "erase_memoize_cache"], [39, 1, 1, "", "expand"], [39, 1, 1, "", "flatten"], [39, 1, 1, "", "implements_for_spec"], [39, 1, 1, "", "index"], [39, 1, 1, "", "is_in"], [39, 1, 1, "", "make_neg_dim"], [39, 1, 1, "", "memoize_encode"], [39, 2, 1, "", "ndim"], [39, 1, 1, "", "ndimension"], [39, 1, 1, "", "one"], [39, 1, 1, "", "ones"], [39, 1, 1, "", "project"], [39, 1, 1, "", "rand"], [39, 1, 1, "", "reshape"], [39, 1, 1, "", "sample"], [39, 1, 1, "", "set_provisional_n"], [39, 1, 1, "", "squeeze"], [39, 1, 1, "", "to"], [39, 1, 1, "", "to_categorical"], [39, 1, 1, "", "to_categorical_spec"], [39, 1, 1, "", "to_numpy"], [39, 1, 1, "", "to_one_hot"], [39, 1, 1, "", "to_one_hot_spec"], [39, 1, 1, "", "type_check"], [39, 1, 1, "", "unflatten"], [39, 1, 1, "", "unsqueeze"], [39, 1, 1, "", "update_mask"], [39, 1, 1, "", "view"], [39, 1, 1, "", "zero"], [39, 1, 1, "", "zeros"]], "torchrl.data.Composite": [[40, 1, 1, "", "assert_is_in"], [40, 1, 1, "", "cardinality"], [40, 1, 1, "", "clear_device_"], [40, 1, 1, "", "clone"], [40, 1, 1, "", "contains"], [40, 1, 1, "", "cpu"], [40, 1, 1, "", "cuda"], [40, 2, 1, "", "device"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "encode"], [40, 1, 1, "", "enumerate"], [40, 1, 1, "", "erase_memoize_cache"], [40, 1, 1, "", "expand"], [40, 1, 1, "", "flatten"], [40, 1, 1, "", "get"], [40, 1, 1, "", "implements_for_spec"], [40, 1, 1, "", "index"], [40, 1, 1, "", "is_empty"], [40, 1, 1, "", "is_in"], [40, 1, 1, "", "items"], [40, 1, 1, "", "keys"], [40, 1, 1, "", "lock_"], [40, 1, 1, "", "make_neg_dim"], [40, 1, 1, "", "memoize_encode"], [40, 2, 1, "", "ndim"], [40, 1, 1, "", "ndimension"], [40, 1, 1, "", "one"], [40, 1, 1, "", "ones"], [40, 1, 1, "", "pop"], [40, 1, 1, "", "project"], [40, 1, 1, "", "rand"], [40, 1, 1, "", "reshape"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "separates"], [40, 1, 1, "", "set"], [40, 1, 1, "", "squeeze"], [40, 1, 1, "", "to"], [40, 1, 1, "", "to_numpy"], [40, 1, 1, "", "type_check"], [40, 1, 1, "", "unflatten"], [40, 1, 1, "", "unlock_"], [40, 1, 1, "", "unsqueeze"], [40, 1, 1, "", "values"], [40, 1, 1, "", "view"], [40, 1, 1, "", "zero"], [40, 1, 1, "", "zeros"]], "torchrl.data.CompositeSpec": [[41, 1, 1, "", "assert_is_in"], [41, 1, 1, "", "cardinality"], [41, 1, 1, "", "clear_device_"], [41, 1, 1, "", "clone"], [41, 1, 1, "", "contains"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 2, 1, "", "device"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "encode"], [41, 1, 1, "", "enumerate"], [41, 1, 1, "", "erase_memoize_cache"], [41, 1, 1, "", "expand"], [41, 1, 1, "", "flatten"], [41, 1, 1, "", "get"], [41, 1, 1, "", "implements_for_spec"], [41, 1, 1, "", "index"], [41, 1, 1, "", "is_empty"], [41, 1, 1, "", "is_in"], [41, 1, 1, "", "items"], [41, 1, 1, "", "keys"], [41, 1, 1, "", "lock_"], [41, 1, 1, "", "make_neg_dim"], [41, 1, 1, "", "memoize_encode"], [41, 2, 1, "", "ndim"], [41, 1, 1, "", "ndimension"], [41, 1, 1, "", "one"], [41, 1, 1, "", "ones"], [41, 1, 1, "", "pop"], [41, 1, 1, "", "project"], [41, 1, 1, "", "rand"], [41, 1, 1, "", "reshape"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "separates"], [41, 1, 1, "", "set"], [41, 1, 1, "", "squeeze"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_numpy"], [41, 1, 1, "", "type_check"], [41, 1, 1, "", "unflatten"], [41, 1, 1, "", "unlock_"], [41, 1, 1, "", "unsqueeze"], [41, 1, 1, "", "values"], [41, 1, 1, "", "view"], [41, 1, 1, "", "zero"], [41, 1, 1, "", "zeros"]], "torchrl.data.DensifyReward": [[43, 1, 1, "", "add_module"], [43, 1, 1, "", "apply"], [43, 1, 1, "", "bfloat16"], [43, 1, 1, "", "buffers"], [43, 1, 1, "", "children"], [43, 1, 1, "", "compile"], [43, 1, 1, "", "cpu"], [43, 1, 1, "", "cuda"], [43, 1, 1, "", "double"], [43, 1, 1, "", "eval"], [43, 1, 1, "", "extra_repr"], [43, 1, 1, "", "float"], [43, 1, 1, "", "forward"], [43, 1, 1, "", "get_buffer"], [43, 1, 1, "", "get_extra_state"], [43, 1, 1, "", "get_parameter"], [43, 1, 1, "", "get_submodule"], [43, 1, 1, "", "half"], [43, 1, 1, "", "ipu"], [43, 1, 1, "", "is_tdmodule_compatible"], [43, 1, 1, "", "load_state_dict"], [43, 1, 1, "", "modules"], [43, 1, 1, "", "mtia"], [43, 1, 1, "", "named_buffers"], [43, 1, 1, "", "named_children"], [43, 1, 1, "", "named_modules"], [43, 1, 1, "", "named_parameters"], [43, 1, 1, "", "parameters"], [43, 1, 1, "", "register_backward_hook"], [43, 1, 1, "", "register_buffer"], [43, 1, 1, "", "register_forward_hook"], [43, 1, 1, "", "register_forward_pre_hook"], [43, 1, 1, "", "register_full_backward_hook"], [43, 1, 1, "", "register_full_backward_pre_hook"], [43, 1, 1, "", "register_load_state_dict_post_hook"], [43, 1, 1, "", "register_load_state_dict_pre_hook"], [43, 1, 1, "", "register_module"], [43, 1, 1, "", "register_parameter"], [43, 1, 1, "", "register_state_dict_post_hook"], [43, 1, 1, "", "register_state_dict_pre_hook"], [43, 1, 1, "", "requires_grad_"], [43, 1, 1, "", "reset_out_keys"], [43, 1, 1, "", "reset_parameters_recursive"], [43, 1, 1, "", "select_out_keys"], [43, 1, 1, "", "set_extra_state"], [43, 1, 1, "", "set_submodule"], [43, 1, 1, "", "share_memory"], [43, 1, 1, "", "state_dict"], [43, 1, 1, "", "to"], [43, 1, 1, "", "to_empty"], [43, 1, 1, "", "train"], [43, 1, 1, "", "type"], [43, 1, 1, "", "xpu"], [43, 1, 1, "", "zero_grad"]], "torchrl.data.DiscreteTensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "cardinality"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "clone"], [44, 1, 1, "", "contains"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 4, 1, "", "device"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "enumerate"], [44, 1, 1, "", "erase_memoize_cache"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "flatten"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "make_neg_dim"], [44, 1, 1, "", "memoize_encode"], [44, 2, 1, "", "ndim"], [44, 1, 1, "", "ndimension"], [44, 1, 1, "", "one"], [44, 1, 1, "", "ones"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "reshape"], [44, 1, 1, "", "sample"], [44, 1, 1, "", "set_provisional_n"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_categorical"], [44, 1, 1, "", "to_categorical_spec"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "to_one_hot"], [44, 1, 1, "", "to_one_hot_spec"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "unflatten"], [44, 1, 1, "", "unsqueeze"], [44, 1, 1, "", "update_mask"], [44, 1, 1, "", "view"], [44, 1, 1, "", "zero"], [44, 1, 1, "", "zeros"]], "torchrl.data.HashToInt": [[48, 1, 1, "", "add_module"], [48, 1, 1, "", "apply"], [48, 1, 1, "", "bfloat16"], [48, 1, 1, "", "buffers"], [48, 1, 1, "", "children"], [48, 1, 1, "", "compile"], [48, 1, 1, "", "cpu"], [48, 1, 1, "", "cuda"], [48, 1, 1, "", "double"], [48, 1, 1, "", "eval"], [48, 1, 1, "", "extra_repr"], [48, 1, 1, "", "float"], [48, 1, 1, "", "forward"], [48, 1, 1, "", "get_buffer"], [48, 1, 1, "", "get_extra_state"], [48, 1, 1, "", "get_parameter"], [48, 1, 1, "", "get_submodule"], [48, 1, 1, "", "half"], [48, 1, 1, "", "ipu"], [48, 1, 1, "", "load_state_dict"], [48, 1, 1, "", "modules"], [48, 1, 1, "", "mtia"], [48, 1, 1, "", "named_buffers"], [48, 1, 1, "", "named_children"], [48, 1, 1, "", "named_modules"], [48, 1, 1, "", "named_parameters"], [48, 1, 1, "", "parameters"], [48, 1, 1, "", "register_backward_hook"], [48, 1, 1, "", "register_buffer"], [48, 1, 1, "", "register_forward_hook"], [48, 1, 1, "", "register_forward_pre_hook"], [48, 1, 1, "", "register_full_backward_hook"], [48, 1, 1, "", "register_full_backward_pre_hook"], [48, 1, 1, "", "register_load_state_dict_post_hook"], [48, 1, 1, "", "register_load_state_dict_pre_hook"], [48, 1, 1, "", "register_module"], [48, 1, 1, "", "register_parameter"], [48, 1, 1, "", "register_state_dict_post_hook"], [48, 1, 1, "", "register_state_dict_pre_hook"], [48, 1, 1, "", "requires_grad_"], [48, 1, 1, "", "set_extra_state"], [48, 1, 1, "", "set_submodule"], [48, 1, 1, "", "share_memory"], [48, 1, 1, "", "state_dict"], [48, 1, 1, "", "to"], [48, 1, 1, "", "to_empty"], [48, 1, 1, "", "train"], [48, 1, 1, "", "type"], [48, 1, 1, "", "xpu"], [48, 1, 1, "", "zero_grad"]], "torchrl.data.LazyStackedCompositeSpec": [[49, 1, 1, "", "assert_is_in"], [49, 1, 1, "", "cardinality"], [49, 1, 1, "", "clear_device_"], [49, 1, 1, "", "clone"], [49, 1, 1, "", "contains"], [49, 1, 1, "", "cpu"], [49, 1, 1, "", "cuda"], [49, 2, 1, "", "device"], [49, 1, 1, "", "empty"], [49, 1, 1, "", "encode"], [49, 1, 1, "", "enumerate"], [49, 1, 1, "", "erase_memoize_cache"], [49, 1, 1, "", "expand"], [49, 1, 1, "", "flatten"], [49, 1, 1, "", "get"], [49, 1, 1, "", "implements_for_spec"], [49, 1, 1, "", "index"], [49, 1, 1, "", "is_empty"], [49, 1, 1, "", "is_in"], [49, 1, 1, "", "items"], [49, 1, 1, "", "keys"], [49, 1, 1, "", "lock_"], [49, 1, 1, "", "make_neg_dim"], [49, 1, 1, "", "memoize_encode"], [49, 2, 1, "", "ndim"], [49, 1, 1, "", "ndimension"], [49, 1, 1, "", "one"], [49, 1, 1, "", "ones"], [49, 1, 1, "", "pop"], [49, 1, 1, "", "project"], [49, 1, 1, "", "rand"], [49, 1, 1, "", "reshape"], [49, 1, 1, "", "sample"], [49, 1, 1, "", "separates"], [49, 1, 1, "", "set"], [49, 1, 1, "", "squeeze"], [49, 1, 1, "", "to"], [49, 1, 1, "", "to_numpy"], [49, 1, 1, "", "type_check"], [49, 1, 1, "", "unflatten"], [49, 1, 1, "", "unlock_"], [49, 1, 1, "", "unsqueeze"], [49, 1, 1, "", "values"], [49, 1, 1, "", "view"], [49, 1, 1, "", "zero"], [49, 1, 1, "", "zeros"]], "torchrl.data.LazyStackedTensorSpec": [[50, 1, 1, "", "assert_is_in"], [50, 1, 1, "", "cardinality"], [50, 1, 1, "", "clear_device_"], [50, 1, 1, "", "clone"], [50, 1, 1, "", "contains"], [50, 1, 1, "", "cpu"], [50, 1, 1, "", "cuda"], [50, 2, 1, "", "device"], [50, 1, 1, "", "encode"], [50, 1, 1, "", "enumerate"], [50, 1, 1, "", "erase_memoize_cache"], [50, 1, 1, "", "expand"], [50, 1, 1, "", "flatten"], [50, 1, 1, "", "implements_for_spec"], [50, 1, 1, "", "index"], [50, 1, 1, "", "is_in"], [50, 1, 1, "", "make_neg_dim"], [50, 1, 1, "", "memoize_encode"], [50, 2, 1, "", "ndim"], [50, 1, 1, "", "ndimension"], [50, 1, 1, "", "one"], [50, 1, 1, "", "ones"], [50, 1, 1, "", "project"], [50, 1, 1, "", "rand"], [50, 1, 1, "", "reshape"], [50, 1, 1, "", "sample"], [50, 1, 1, "", "squeeze"], [50, 1, 1, "", "to"], [50, 1, 1, "", "to_numpy"], [50, 1, 1, "", "type_check"], [50, 1, 1, "", "unflatten"], [50, 1, 1, "", "unsqueeze"], [50, 1, 1, "", "view"], [50, 1, 1, "", "zero"], [50, 1, 1, "", "zeros"]], "torchrl.data.MCTSForest": [[51, 2, 1, "", "action_keys"], [51, 2, 1, "", "done_keys"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "get_keys_from_env"], [51, 2, 1, "", "observation_keys"], [51, 2, 1, "", "reward_keys"], [51, 1, 1, "", "to_string"]], "torchrl.data.MultiCategorical": [[52, 1, 1, "", "assert_is_in"], [52, 1, 1, "", "cardinality"], [52, 1, 1, "", "clear_device_"], [52, 1, 1, "", "clone"], [52, 1, 1, "", "contains"], [52, 1, 1, "", "cpu"], [52, 1, 1, "", "cuda"], [52, 4, 1, "", "device"], [52, 1, 1, "", "encode"], [52, 1, 1, "", "enumerate"], [52, 1, 1, "", "erase_memoize_cache"], [52, 1, 1, "", "expand"], [52, 1, 1, "", "flatten"], [52, 1, 1, "", "implements_for_spec"], [52, 1, 1, "", "index"], [52, 1, 1, "", "is_in"], [52, 1, 1, "", "make_neg_dim"], [52, 1, 1, "", "memoize_encode"], [52, 2, 1, "", "ndim"], [52, 1, 1, "", "ndimension"], [52, 1, 1, "", "one"], [52, 1, 1, "", "ones"], [52, 1, 1, "", "project"], [52, 1, 1, "", "rand"], [52, 1, 1, "", "reshape"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_provisional_n"], [52, 1, 1, "", "squeeze"], [52, 1, 1, "", "to"], [52, 1, 1, "", "to_categorical"], [52, 1, 1, "", "to_categorical_spec"], [52, 1, 1, "", "to_numpy"], [52, 1, 1, "", "to_one_hot"], [52, 1, 1, "", "to_one_hot_spec"], [52, 1, 1, "", "type_check"], [52, 1, 1, "", "unflatten"], [52, 1, 1, "", "unsqueeze"], [52, 1, 1, "", "update_mask"], [52, 1, 1, "", "view"], [52, 1, 1, "", "zero"], [52, 1, 1, "", "zeros"]], "torchrl.data.MultiDiscreteTensorSpec": [[53, 1, 1, "", "assert_is_in"], [53, 1, 1, "", "cardinality"], [53, 1, 1, "", "clear_device_"], [53, 1, 1, "", "clone"], [53, 1, 1, "", "contains"], [53, 1, 1, "", "cpu"], [53, 1, 1, "", "cuda"], [53, 4, 1, "", "device"], [53, 1, 1, "", "encode"], [53, 1, 1, "", "enumerate"], [53, 1, 1, "", "erase_memoize_cache"], [53, 1, 1, "", "expand"], [53, 1, 1, "", "flatten"], [53, 1, 1, "", "implements_for_spec"], [53, 1, 1, "", "index"], [53, 1, 1, "", "is_in"], [53, 1, 1, "", "make_neg_dim"], [53, 1, 1, "", "memoize_encode"], [53, 2, 1, "", "ndim"], [53, 1, 1, "", "ndimension"], [53, 1, 1, "", "one"], [53, 1, 1, "", "ones"], [53, 1, 1, "", "project"], [53, 1, 1, "", "rand"], [53, 1, 1, "", "reshape"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "set_provisional_n"], [53, 1, 1, "", "squeeze"], [53, 1, 1, "", "to"], [53, 1, 1, "", "to_categorical"], [53, 1, 1, "", "to_categorical_spec"], [53, 1, 1, "", "to_numpy"], [53, 1, 1, "", "to_one_hot"], [53, 1, 1, "", "to_one_hot_spec"], [53, 1, 1, "", "type_check"], [53, 1, 1, "", "unflatten"], [53, 1, 1, "", "unsqueeze"], [53, 1, 1, "", "update_mask"], [53, 1, 1, "", "view"], [53, 1, 1, "", "zero"], [53, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHot": [[54, 1, 1, "", "assert_is_in"], [54, 1, 1, "", "cardinality"], [54, 1, 1, "", "clear_device_"], [54, 1, 1, "", "clone"], [54, 1, 1, "", "contains"], [54, 1, 1, "", "cpu"], [54, 1, 1, "", "cuda"], [54, 4, 1, "", "device"], [54, 1, 1, "", "encode"], [54, 1, 1, "", "enumerate"], [54, 1, 1, "", "erase_memoize_cache"], [54, 1, 1, "", "expand"], [54, 1, 1, "", "flatten"], [54, 1, 1, "", "implements_for_spec"], [54, 1, 1, "", "index"], [54, 1, 1, "", "is_in"], [54, 1, 1, "", "make_neg_dim"], [54, 1, 1, "", "memoize_encode"], [54, 2, 1, "", "ndim"], [54, 1, 1, "", "ndimension"], [54, 1, 1, "", "one"], [54, 1, 1, "", "ones"], [54, 1, 1, "", "project"], [54, 1, 1, "", "rand"], [54, 1, 1, "", "reshape"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "squeeze"], [54, 1, 1, "", "to"], [54, 1, 1, "", "to_categorical"], [54, 1, 1, "", "to_categorical_spec"], [54, 1, 1, "", "to_numpy"], [54, 1, 1, "", "to_one_hot"], [54, 1, 1, "", "to_one_hot_spec"], [54, 1, 1, "", "type_check"], [54, 1, 1, "", "unflatten"], [54, 1, 1, "", "unsqueeze"], [54, 1, 1, "", "update_mask"], [54, 1, 1, "", "view"], [54, 1, 1, "", "zero"], [54, 1, 1, "", "zeros"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[55, 1, 1, "", "assert_is_in"], [55, 1, 1, "", "cardinality"], [55, 1, 1, "", "clear_device_"], [55, 1, 1, "", "clone"], [55, 1, 1, "", "contains"], [55, 1, 1, "", "cpu"], [55, 1, 1, "", "cuda"], [55, 4, 1, "", "device"], [55, 1, 1, "", "encode"], [55, 1, 1, "", "enumerate"], [55, 1, 1, "", "erase_memoize_cache"], [55, 1, 1, "", "expand"], [55, 1, 1, "", "flatten"], [55, 1, 1, "", "implements_for_spec"], [55, 1, 1, "", "index"], [55, 1, 1, "", "is_in"], [55, 1, 1, "", "make_neg_dim"], [55, 1, 1, "", "memoize_encode"], [55, 2, 1, "", "ndim"], [55, 1, 1, "", "ndimension"], [55, 1, 1, "", "one"], [55, 1, 1, "", "ones"], [55, 1, 1, "", "project"], [55, 1, 1, "", "rand"], [55, 1, 1, "", "reshape"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "squeeze"], [55, 1, 1, "", "to"], [55, 1, 1, "", "to_categorical"], [55, 1, 1, "", "to_categorical_spec"], [55, 1, 1, "", "to_numpy"], [55, 1, 1, "", "to_one_hot"], [55, 1, 1, "", "to_one_hot_spec"], [55, 1, 1, "", "type_check"], [55, 1, 1, "", "unflatten"], [55, 1, 1, "", "unsqueeze"], [55, 1, 1, "", "update_mask"], [55, 1, 1, "", "view"], [55, 1, 1, "", "zero"], [55, 1, 1, "", "zeros"]], "torchrl.data.MultiStep": [[56, 1, 1, "", "add_module"], [56, 1, 1, "", "apply"], [56, 1, 1, "", "bfloat16"], [56, 1, 1, "", "buffers"], [56, 1, 1, "", "children"], [56, 1, 1, "", "compile"], [56, 1, 1, "", "cpu"], [56, 1, 1, "", "cuda"], [56, 1, 1, "", "double"], [56, 1, 1, "", "eval"], [56, 1, 1, "", "extra_repr"], [56, 1, 1, "", "float"], [56, 1, 1, "", "forward"], [56, 1, 1, "", "get_buffer"], [56, 1, 1, "", "get_extra_state"], [56, 1, 1, "", "get_parameter"], [56, 1, 1, "", "get_submodule"], [56, 1, 1, "", "half"], [56, 1, 1, "", "ipu"], [56, 1, 1, "", "load_state_dict"], [56, 1, 1, "", "modules"], [56, 1, 1, "", "mtia"], [56, 1, 1, "", "named_buffers"], [56, 1, 1, "", "named_children"], [56, 1, 1, "", "named_modules"], [56, 1, 1, "", "named_parameters"], [56, 1, 1, "", "parameters"], [56, 1, 1, "", "register_backward_hook"], [56, 1, 1, "", "register_buffer"], [56, 1, 1, "", "register_forward_hook"], [56, 1, 1, "", "register_forward_pre_hook"], [56, 1, 1, "", "register_full_backward_hook"], [56, 1, 1, "", "register_full_backward_pre_hook"], [56, 1, 1, "", "register_load_state_dict_post_hook"], [56, 1, 1, "", "register_load_state_dict_pre_hook"], [56, 1, 1, "", "register_module"], [56, 1, 1, "", "register_parameter"], [56, 1, 1, "", "register_state_dict_post_hook"], [56, 1, 1, "", "register_state_dict_pre_hook"], [56, 1, 1, "", "requires_grad_"], [56, 1, 1, "", "set_extra_state"], [56, 1, 1, "", "set_submodule"], [56, 1, 1, "", "share_memory"], [56, 1, 1, "", "state_dict"], [56, 1, 1, "", "to"], [56, 1, 1, "", "to_empty"], [56, 1, 1, "", "train"], [56, 1, 1, "", "type"], [56, 1, 1, "", "xpu"], [56, 1, 1, "", "zero_grad"]], "torchrl.data.NonTensor": [[58, 1, 1, "", "assert_is_in"], [58, 1, 1, "", "cardinality"], [58, 1, 1, "", "clear_device_"], [58, 1, 1, "", "clone"], [58, 1, 1, "", "contains"], [58, 1, 1, "", "cpu"], [58, 1, 1, "", "cuda"], [58, 2, 1, "", "device"], [58, 1, 1, "", "encode"], [58, 1, 1, "", "enumerate"], [58, 1, 1, "", "erase_memoize_cache"], [58, 1, 1, "", "expand"], [58, 1, 1, "", "flatten"], [58, 1, 1, "", "implements_for_spec"], [58, 1, 1, "", "index"], [58, 1, 1, "", "is_in"], [58, 1, 1, "", "make_neg_dim"], [58, 1, 1, "", "memoize_encode"], [58, 2, 1, "", "ndim"], [58, 1, 1, "", "ndimension"], [58, 1, 1, "", "one"], [58, 1, 1, "", "ones"], [58, 1, 1, "", "project"], [58, 1, 1, "", "rand"], [58, 1, 1, "", "reshape"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "squeeze"], [58, 1, 1, "", "to"], [58, 1, 1, "", "to_numpy"], [58, 1, 1, "", "type_check"], [58, 1, 1, "", "unflatten"], [58, 1, 1, "", "unsqueeze"], [58, 1, 1, "", "view"], [58, 1, 1, "", "zero"], [58, 1, 1, "", "zeros"]], "torchrl.data.NonTensorSpec": [[59, 1, 1, "", "assert_is_in"], [59, 1, 1, "", "cardinality"], [59, 1, 1, "", "clear_device_"], [59, 1, 1, "", "clone"], [59, 1, 1, "", "contains"], [59, 1, 1, "", "cpu"], [59, 1, 1, "", "cuda"], [59, 2, 1, "", "device"], [59, 1, 1, "", "encode"], [59, 1, 1, "", "enumerate"], [59, 1, 1, "", "erase_memoize_cache"], [59, 1, 1, "", "expand"], [59, 1, 1, "", "flatten"], [59, 1, 1, "", "implements_for_spec"], [59, 1, 1, "", "index"], [59, 1, 1, "", "is_in"], [59, 1, 1, "", "make_neg_dim"], [59, 1, 1, "", "memoize_encode"], [59, 2, 1, "", "ndim"], [59, 1, 1, "", "ndimension"], [59, 1, 1, "", "one"], [59, 1, 1, "", "ones"], [59, 1, 1, "", "project"], [59, 1, 1, "", "rand"], [59, 1, 1, "", "reshape"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "squeeze"], [59, 1, 1, "", "to"], [59, 1, 1, "", "to_numpy"], [59, 1, 1, "", "type_check"], [59, 1, 1, "", "unflatten"], [59, 1, 1, "", "unsqueeze"], [59, 1, 1, "", "view"], [59, 1, 1, "", "zero"], [59, 1, 1, "", "zeros"]], "torchrl.data.OneHot": [[60, 1, 1, "", "assert_is_in"], [60, 1, 1, "", "cardinality"], [60, 1, 1, "", "clear_device_"], [60, 1, 1, "", "clone"], [60, 1, 1, "", "contains"], [60, 1, 1, "", "cpu"], [60, 1, 1, "", "cuda"], [60, 4, 1, "", "device"], [60, 1, 1, "", "encode"], [60, 1, 1, "", "enumerate"], [60, 1, 1, "", "erase_memoize_cache"], [60, 1, 1, "", "expand"], [60, 1, 1, "", "flatten"], [60, 1, 1, "", "implements_for_spec"], [60, 1, 1, "", "index"], [60, 1, 1, "", "is_in"], [60, 1, 1, "", "make_neg_dim"], [60, 1, 1, "", "memoize_encode"], [60, 2, 1, "", "ndim"], [60, 1, 1, "", "ndimension"], [60, 1, 1, "", "one"], [60, 1, 1, "", "ones"], [60, 1, 1, "", "project"], [60, 1, 1, "", "rand"], [60, 1, 1, "", "reshape"], [60, 1, 1, "", "sample"], [60, 1, 1, "", "squeeze"], [60, 1, 1, "", "to"], [60, 1, 1, "", "to_categorical"], [60, 1, 1, "", "to_categorical_spec"], [60, 1, 1, "", "to_numpy"], [60, 1, 1, "", "to_one_hot"], [60, 1, 1, "", "to_one_hot_spec"], [60, 1, 1, "", "type_check"], [60, 1, 1, "", "unflatten"], [60, 1, 1, "", "unsqueeze"], [60, 1, 1, "", "update_mask"], [60, 1, 1, "", "view"], [60, 1, 1, "", "zero"], [60, 1, 1, "", "zeros"]], "torchrl.data.OneHotDiscreteTensorSpec": [[61, 1, 1, "", "assert_is_in"], [61, 1, 1, "", "cardinality"], [61, 1, 1, "", "clear_device_"], [61, 1, 1, "", "clone"], [61, 1, 1, "", "contains"], [61, 1, 1, "", "cpu"], [61, 1, 1, "", "cuda"], [61, 4, 1, "", "device"], [61, 1, 1, "", "encode"], [61, 1, 1, "", "enumerate"], [61, 1, 1, "", "erase_memoize_cache"], [61, 1, 1, "", "expand"], [61, 1, 1, "", "flatten"], [61, 1, 1, "", "implements_for_spec"], [61, 1, 1, "", "index"], [61, 1, 1, "", "is_in"], [61, 1, 1, "", "make_neg_dim"], [61, 1, 1, "", "memoize_encode"], [61, 2, 1, "", "ndim"], [61, 1, 1, "", "ndimension"], [61, 1, 1, "", "one"], [61, 1, 1, "", "ones"], [61, 1, 1, "", "project"], [61, 1, 1, "", "rand"], [61, 1, 1, "", "reshape"], [61, 1, 1, "", "sample"], [61, 1, 1, "", "squeeze"], [61, 1, 1, "", "to"], [61, 1, 1, "", "to_categorical"], [61, 1, 1, "", "to_categorical_spec"], [61, 1, 1, "", "to_numpy"], [61, 1, 1, "", "to_one_hot"], [61, 1, 1, "", "to_one_hot_spec"], [61, 1, 1, "", "type_check"], [61, 1, 1, "", "unflatten"], [61, 1, 1, "", "unsqueeze"], [61, 1, 1, "", "update_mask"], [61, 1, 1, "", "view"], [61, 1, 1, "", "zero"], [61, 1, 1, "", "zeros"]], "torchrl.data.PairwiseDataset": [[62, 2, 1, "", "device"], [62, 1, 1, "", "dumps"], [62, 1, 1, "", "fields"], [62, 1, 1, "", "from_dataset"], [62, 1, 1, "", "from_tensordict"], [62, 1, 1, "", "get"], [62, 1, 1, "", "load"], [62, 1, 1, "", "load_"], [62, 1, 1, "", "load_memmap"], [62, 1, 1, "", "load_state_dict"], [62, 1, 1, "", "memmap"], [62, 1, 1, "", "memmap_"], [62, 1, 1, "", "memmap_like"], [62, 1, 1, "", "memmap_refresh_"], [62, 1, 1, "", "save"], [62, 1, 1, "", "set"], [62, 1, 1, "", "state_dict"], [62, 1, 1, "", "to_tensordict"], [62, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[63, 1, 1, "", "add"], [63, 1, 1, "", "append_transform"], [63, 1, 1, "", "as_remote"], [63, 2, 1, "", "batch_size"], [63, 1, 1, "", "dump"], [63, 1, 1, "", "dumps"], [63, 1, 1, "", "empty"], [63, 1, 1, "", "extend"], [63, 1, 1, "", "insert_transform"], [63, 1, 1, "", "load"], [63, 1, 1, "", "loads"], [63, 1, 1, "", "next"], [63, 1, 1, "", "register_load_hook"], [63, 1, 1, "", "register_save_hook"], [63, 1, 1, "", "sample"], [63, 2, 1, "", "sampler"], [63, 1, 1, "", "save"], [63, 1, 1, "", "set_sampler"], [63, 1, 1, "", "set_storage"], [63, 1, 1, "", "set_writer"], [63, 2, 1, "", "storage"], [63, 2, 1, "", "write_count"], [63, 2, 1, "", "writer"]], "torchrl.data.PromptData": [[64, 2, 1, "", "device"], [64, 1, 1, "", "dumps"], [64, 1, 1, "", "fields"], [64, 1, 1, "", "from_dataset"], [64, 1, 1, "", "from_tensordict"], [64, 1, 1, "", "get"], [64, 1, 1, "", "load"], [64, 1, 1, "", "load_"], [64, 1, 1, "", "load_memmap"], [64, 1, 1, "", "load_state_dict"], [64, 1, 1, "", "memmap"], [64, 1, 1, "", "memmap_"], [64, 1, 1, "", "memmap_like"], [64, 1, 1, "", "memmap_refresh_"], [64, 1, 1, "", "save"], [64, 1, 1, "", "set"], [64, 1, 1, "", "state_dict"], [64, 1, 1, "", "to_tensordict"], [64, 1, 1, "", "unbind"]], "torchrl.data.QueryModule": [[66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "is_tdmodule_compatible"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "mtia"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_load_state_dict_pre_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_post_hook"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "", "reset_out_keys"], [66, 1, 1, "", "reset_parameters_recursive"], [66, 1, 1, "", "select_out_keys"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "", "set_submodule"], [66, 1, 1, "", "share_memory"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.data.RandomProjectionHash": [[67, 1, 1, "", "add_module"], [67, 1, 1, "", "apply"], [67, 1, 1, "", "bfloat16"], [67, 1, 1, "", "buffers"], [67, 1, 1, "", "children"], [67, 1, 1, "", "compile"], [67, 1, 1, "", "cpu"], [67, 1, 1, "", "cuda"], [67, 1, 1, "", "double"], [67, 1, 1, "", "eval"], [67, 1, 1, "", "extra_repr"], [67, 1, 1, "", "fit"], [67, 1, 1, "", "float"], [67, 1, 1, "", "forward"], [67, 1, 1, "", "get_buffer"], [67, 1, 1, "", "get_extra_state"], [67, 1, 1, "", "get_parameter"], [67, 1, 1, "", "get_submodule"], [67, 1, 1, "", "half"], [67, 1, 1, "", "ipu"], [67, 1, 1, "", "load_state_dict"], [67, 1, 1, "", "modules"], [67, 1, 1, "", "mtia"], [67, 1, 1, "", "named_buffers"], [67, 1, 1, "", "named_children"], [67, 1, 1, "", "named_modules"], [67, 1, 1, "", "named_parameters"], [67, 1, 1, "", "parameters"], [67, 1, 1, "", "register_backward_hook"], [67, 1, 1, "", "register_buffer"], [67, 1, 1, "", "register_forward_hook"], [67, 1, 1, "", "register_forward_pre_hook"], [67, 1, 1, "", "register_full_backward_hook"], [67, 1, 1, "", "register_full_backward_pre_hook"], [67, 1, 1, "", "register_load_state_dict_post_hook"], [67, 1, 1, "", "register_load_state_dict_pre_hook"], [67, 1, 1, "", "register_module"], [67, 1, 1, "", "register_parameter"], [67, 1, 1, "", "register_state_dict_post_hook"], [67, 1, 1, "", "register_state_dict_pre_hook"], [67, 1, 1, "", "requires_grad_"], [67, 1, 1, "", "set_extra_state"], [67, 1, 1, "", "set_submodule"], [67, 1, 1, "", "share_memory"], [67, 1, 1, "", "state_dict"], [67, 1, 1, "", "to"], [67, 1, 1, "", "to_empty"], [67, 1, 1, "", "train"], [67, 1, 1, "", "type"], [67, 1, 1, "", "xpu"], [67, 1, 1, "", "zero_grad"]], "torchrl.data.RayReplayBuffer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "as_remote"], [68, 2, 1, "", "batch_size"], [68, 1, 1, "", "close"], [68, 1, 1, "", "dump"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "load"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "next"], [68, 1, 1, "", "register_load_hook"], [68, 1, 1, "", "register_save_hook"], [68, 1, 1, "", "sample"], [68, 2, 1, "", "sampler"], [68, 1, 1, "", "save"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 2, 1, "", "storage"], [68, 2, 1, "", "write_count"], [68, 2, 1, "", "writer"]], "torchrl.data.RemoteTensorDictReplayBuffer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "append_transform"], [69, 1, 1, "", "as_remote"], [69, 2, 1, "", "batch_size"], [69, 1, 1, "", "dump"], [69, 1, 1, "", "dumps"], [69, 1, 1, "", "empty"], [69, 1, 1, "", "extend"], [69, 1, 1, "", "insert_transform"], [69, 1, 1, "", "load"], [69, 1, 1, "", "loads"], [69, 1, 1, "", "next"], [69, 1, 1, "", "register_load_hook"], [69, 1, 1, "", "register_save_hook"], [69, 1, 1, "", "sample"], [69, 2, 1, "", "sampler"], [69, 1, 1, "", "save"], [69, 1, 1, "", "set_sampler"], [69, 1, 1, "", "set_storage"], [69, 1, 1, "", "set_writer"], [69, 2, 1, "", "storage"], [69, 2, 1, "", "write_count"], [69, 2, 1, "", "writer"]], "torchrl.data.ReplayBuffer": [[70, 1, 1, "", "add"], [70, 1, 1, "", "append_transform"], [70, 1, 1, "", "as_remote"], [70, 2, 1, "", "batch_size"], [70, 1, 1, "", "dump"], [70, 1, 1, "", "dumps"], [70, 1, 1, "", "empty"], [70, 1, 1, "", "extend"], [70, 1, 1, "", "insert_transform"], [70, 1, 1, "", "load"], [70, 1, 1, "", "loads"], [70, 1, 1, "", "next"], [70, 1, 1, "", "register_load_hook"], [70, 1, 1, "", "register_save_hook"], [70, 1, 1, "", "sample"], [70, 2, 1, "", "sampler"], [70, 1, 1, "", "save"], [70, 1, 1, "", "set_sampler"], [70, 1, 1, "", "set_storage"], [70, 1, 1, "", "set_writer"], [70, 2, 1, "", "storage"], [70, 2, 1, "", "write_count"], [70, 2, 1, "", "writer"]], "torchrl.data.RewardData": [[71, 2, 1, "", "device"], [71, 1, 1, "", "dumps"], [71, 1, 1, "", "fields"], [71, 1, 1, "", "from_tensordict"], [71, 1, 1, "", "get"], [71, 1, 1, "", "load"], [71, 1, 1, "", "load_"], [71, 1, 1, "", "load_memmap"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "memmap"], [71, 1, 1, "", "memmap_"], [71, 1, 1, "", "memmap_like"], [71, 1, 1, "", "memmap_refresh_"], [71, 1, 1, "", "save"], [71, 1, 1, "", "set"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "to_tensordict"], [71, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[72, 1, 1, "", "create_rollout_td"], [72, 1, 1, "", "generate"], [72, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.SipHash": [[73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "mtia"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_load_state_dict_pre_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_post_hook"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_submodule"], [73, 1, 1, "", "share_memory"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.data.Stacked": [[74, 1, 1, "", "assert_is_in"], [74, 1, 1, "", "cardinality"], [74, 1, 1, "", "clear_device_"], [74, 1, 1, "", "clone"], [74, 1, 1, "", "contains"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 2, 1, "", "device"], [74, 1, 1, "", "encode"], [74, 1, 1, "", "enumerate"], [74, 1, 1, "", "erase_memoize_cache"], [74, 1, 1, "", "expand"], [74, 1, 1, "", "flatten"], [74, 1, 1, "", "implements_for_spec"], [74, 1, 1, "", "index"], [74, 1, 1, "", "is_in"], [74, 1, 1, "", "make_neg_dim"], [74, 1, 1, "", "memoize_encode"], [74, 2, 1, "", "ndim"], [74, 1, 1, "", "ndimension"], [74, 1, 1, "", "one"], [74, 1, 1, "", "ones"], [74, 1, 1, "", "project"], [74, 1, 1, "", "rand"], [74, 1, 1, "", "reshape"], [74, 1, 1, "", "sample"], [74, 1, 1, "", "squeeze"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_numpy"], [74, 1, 1, "", "type_check"], [74, 1, 1, "", "unflatten"], [74, 1, 1, "", "unsqueeze"], [74, 1, 1, "", "view"], [74, 1, 1, "", "zero"], [74, 1, 1, "", "zeros"]], "torchrl.data.StackedComposite": [[75, 1, 1, "", "assert_is_in"], [75, 1, 1, "", "cardinality"], [75, 1, 1, "", "clear_device_"], [75, 1, 1, "", "clone"], [75, 1, 1, "", "contains"], [75, 1, 1, "", "cpu"], [75, 1, 1, "", "cuda"], [75, 2, 1, "", "device"], [75, 1, 1, "", "empty"], [75, 1, 1, "", "encode"], [75, 1, 1, "", "enumerate"], [75, 1, 1, "", "erase_memoize_cache"], [75, 1, 1, "", "expand"], [75, 1, 1, "", "flatten"], [75, 1, 1, "", "get"], [75, 1, 1, "", "implements_for_spec"], [75, 1, 1, "", "index"], [75, 1, 1, "", "is_empty"], [75, 1, 1, "", "is_in"], [75, 1, 1, "", "items"], [75, 1, 1, "", "keys"], [75, 1, 1, "", "lock_"], [75, 1, 1, "", "make_neg_dim"], [75, 1, 1, "", "memoize_encode"], [75, 2, 1, "", "ndim"], [75, 1, 1, "", "ndimension"], [75, 1, 1, "", "one"], [75, 1, 1, "", "ones"], [75, 1, 1, "", "pop"], [75, 1, 1, "", "project"], [75, 1, 1, "", "rand"], [75, 1, 1, "", "reshape"], [75, 1, 1, "", "sample"], [75, 1, 1, "", "separates"], [75, 1, 1, "", "set"], [75, 1, 1, "", "squeeze"], [75, 1, 1, "", "to"], [75, 1, 1, "", "to_numpy"], [75, 1, 1, "", "type_check"], [75, 1, 1, "", "unflatten"], [75, 1, 1, "", "unlock_"], [75, 1, 1, "", "unsqueeze"], [75, 1, 1, "", "values"], [75, 1, 1, "", "view"], [75, 1, 1, "", "zero"], [75, 1, 1, "", "zeros"]], "torchrl.data.TensorDictMap": [[78, 1, 1, "", "add_module"], [78, 1, 1, "", "apply"], [78, 1, 1, "", "bfloat16"], [78, 1, 1, "", "buffers"], [78, 1, 1, "", "children"], [78, 1, 1, "", "compile"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 1, 1, "", "double"], [78, 1, 1, "", "eval"], [78, 1, 1, "", "extra_repr"], [78, 1, 1, "", "float"], [78, 1, 1, "", "forward"], [78, 1, 1, "", "from_tensordict_pair"], [78, 1, 1, "", "get_buffer"], [78, 1, 1, "", "get_extra_state"], [78, 1, 1, "", "get_parameter"], [78, 1, 1, "", "get_submodule"], [78, 1, 1, "", "half"], [78, 1, 1, "", "ipu"], [78, 1, 1, "", "is_tdmodule_compatible"], [78, 1, 1, "", "load_state_dict"], [78, 1, 1, "", "modules"], [78, 1, 1, "", "mtia"], [78, 1, 1, "", "named_buffers"], [78, 1, 1, "", "named_children"], [78, 1, 1, "", "named_modules"], [78, 1, 1, "", "named_parameters"], [78, 1, 1, "", "parameters"], [78, 1, 1, "", "register_backward_hook"], [78, 1, 1, "", "register_buffer"], [78, 1, 1, "", "register_forward_hook"], [78, 1, 1, "", "register_forward_pre_hook"], [78, 1, 1, "", "register_full_backward_hook"], [78, 1, 1, "", "register_full_backward_pre_hook"], [78, 1, 1, "", "register_load_state_dict_post_hook"], [78, 1, 1, "", "register_load_state_dict_pre_hook"], [78, 1, 1, "", "register_module"], [78, 1, 1, "", "register_parameter"], [78, 1, 1, "", "register_state_dict_post_hook"], [78, 1, 1, "", "register_state_dict_pre_hook"], [78, 1, 1, "", "requires_grad_"], [78, 1, 1, "", "reset_out_keys"], [78, 1, 1, "", "reset_parameters_recursive"], [78, 1, 1, "", "select_out_keys"], [78, 1, 1, "", "set_extra_state"], [78, 1, 1, "", "set_submodule"], [78, 1, 1, "", "share_memory"], [78, 1, 1, "", "state_dict"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_empty"], [78, 1, 1, "", "train"], [78, 1, 1, "", "type"], [78, 1, 1, "", "xpu"], [78, 1, 1, "", "zero_grad"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "append_transform"], [79, 1, 1, "", "as_remote"], [79, 2, 1, "", "batch_size"], [79, 1, 1, "", "dump"], [79, 1, 1, "", "dumps"], [79, 1, 1, "", "empty"], [79, 1, 1, "", "extend"], [79, 1, 1, "", "insert_transform"], [79, 1, 1, "", "load"], [79, 1, 1, "", "loads"], [79, 1, 1, "", "next"], [79, 1, 1, "", "register_load_hook"], [79, 1, 1, "", "register_save_hook"], [79, 1, 1, "", "sample"], [79, 2, 1, "", "sampler"], [79, 1, 1, "", "save"], [79, 1, 1, "", "set_sampler"], [79, 1, 1, "", "set_storage"], [79, 1, 1, "", "set_writer"], [79, 2, 1, "", "storage"], [79, 2, 1, "", "write_count"], [79, 2, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "append_transform"], [80, 1, 1, "", "as_remote"], [80, 2, 1, "", "batch_size"], [80, 1, 1, "", "dump"], [80, 1, 1, "", "dumps"], [80, 1, 1, "", "empty"], [80, 1, 1, "", "extend"], [80, 1, 1, "", "insert_transform"], [80, 1, 1, "", "load"], [80, 1, 1, "", "loads"], [80, 1, 1, "", "next"], [80, 1, 1, "", "register_load_hook"], [80, 1, 1, "", "register_save_hook"], [80, 1, 1, "", "sample"], [80, 2, 1, "", "sampler"], [80, 1, 1, "", "save"], [80, 1, 1, "", "set_sampler"], [80, 1, 1, "", "set_storage"], [80, 1, 1, "", "set_writer"], [80, 2, 1, "", "storage"], [80, 2, 1, "", "write_count"], [80, 2, 1, "", "writer"]], "torchrl.data.TensorSpec": [[83, 1, 1, "", "assert_is_in"], [83, 1, 1, "", "cardinality"], [83, 1, 1, "", "clear_device_"], [83, 1, 1, "", "clone"], [83, 1, 1, "", "contains"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 2, 1, "", "device"], [83, 1, 1, "", "encode"], [83, 1, 1, "", "enumerate"], [83, 1, 1, "", "erase_memoize_cache"], [83, 1, 1, "", "expand"], [83, 1, 1, "", "flatten"], [83, 1, 1, "", "implements_for_spec"], [83, 1, 1, "", "index"], [83, 1, 1, "", "is_in"], [83, 1, 1, "", "make_neg_dim"], [83, 1, 1, "", "memoize_encode"], [83, 2, 1, "", "ndim"], [83, 1, 1, "", "ndimension"], [83, 1, 1, "", "one"], [83, 1, 1, "", "ones"], [83, 1, 1, "", "project"], [83, 1, 1, "", "rand"], [83, 1, 1, "", "reshape"], [83, 1, 1, "", "sample"], [83, 1, 1, "", "squeeze"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_numpy"], [83, 1, 1, "", "type_check"], [83, 1, 1, "", "unflatten"], [83, 1, 1, "", "unsqueeze"], [83, 1, 1, "", "view"], [83, 1, 1, "", "zero"], [83, 1, 1, "", "zeros"]], "torchrl.data.TokenizedDatasetLoader": [[84, 1, 1, "", "dataset_to_tensordict"], [84, 1, 1, "", "load"]], "torchrl.data.Tree": [[85, 2, 1, "", "branching_action"], [85, 2, 1, "", "device"], [85, 1, 1, "", "dumps"], [85, 1, 1, "", "edges"], [85, 1, 1, "", "fields"], [85, 1, 1, "", "from_tensordict"], [85, 2, 1, "", "full_action_spec"], [85, 2, 1, "", "full_done_spec"], [85, 2, 1, "", "full_observation_spec"], [85, 2, 1, "", "full_reward_spec"], [85, 2, 1, "", "full_state_spec"], [85, 1, 1, "", "fully_expanded"], [85, 1, 1, "", "get"], [85, 1, 1, "", "get_vertex_by_hash"], [85, 1, 1, "", "get_vertex_by_id"], [85, 2, 1, "", "is_terminal"], [85, 1, 1, "", "load"], [85, 1, 1, "", "load_"], [85, 1, 1, "", "load_memmap"], [85, 1, 1, "", "load_state_dict"], [85, 1, 1, "", "make_node"], [85, 1, 1, "", "max_length"], [85, 1, 1, "", "memmap"], [85, 1, 1, "", "memmap_"], [85, 1, 1, "", "memmap_like"], [85, 1, 1, "", "memmap_refresh_"], [85, 2, 1, "", "node_observation"], [85, 2, 1, "", "node_observations"], [85, 2, 1, "", "num_children"], [85, 1, 1, "", "num_vertices"], [85, 2, 1, "", "parent"], [85, 1, 1, "", "plot"], [85, 2, 1, "", "prev_action"], [85, 1, 1, "", "rollout_from_path"], [85, 1, 1, "", "save"], [85, 2, 1, "", "selected_actions"], [85, 1, 1, "", "set"], [85, 1, 1, "", "state_dict"], [85, 1, 1, "", "to_string"], [85, 1, 1, "", "to_tensordict"], [85, 1, 1, "", "unbind"], [85, 1, 1, "", "valid_paths"], [85, 1, 1, "", "vertices"], [85, 2, 1, "", "visits"]], "torchrl.data.Unbounded": [[86, 1, 1, "", "assert_is_in"], [86, 1, 1, "", "cardinality"], [86, 1, 1, "", "clear_device_"], [86, 1, 1, "", "clone"], [86, 1, 1, "", "contains"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 2, 1, "", "device"], [86, 1, 1, "", "encode"], [86, 1, 1, "", "enumerate"], [86, 1, 1, "", "erase_memoize_cache"], [86, 1, 1, "", "expand"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "implements_for_spec"], [86, 1, 1, "", "index"], [86, 1, 1, "", "is_in"], [86, 1, 1, "", "make_neg_dim"], [86, 1, 1, "", "memoize_encode"], [86, 2, 1, "", "ndim"], [86, 1, 1, "", "ndimension"], [86, 1, 1, "", "one"], [86, 1, 1, "", "ones"], [86, 1, 1, "", "project"], [86, 1, 1, "", "rand"], [86, 1, 1, "", "reshape"], [86, 1, 1, "", "sample"], [86, 1, 1, "", "squeeze"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_numpy"], [86, 1, 1, "", "type_check"], [86, 1, 1, "", "unflatten"], [86, 1, 1, "", "unsqueeze"], [86, 1, 1, "", "view"], [86, 1, 1, "", "zero"], [86, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuous": [[87, 1, 1, "", "assert_is_in"], [87, 1, 1, "", "cardinality"], [87, 1, 1, "", "clear_device_"], [87, 1, 1, "", "clone"], [87, 1, 1, "", "contains"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 2, 1, "", "device"], [87, 1, 1, "", "encode"], [87, 1, 1, "", "enumerate"], [87, 1, 1, "", "erase_memoize_cache"], [87, 1, 1, "", "expand"], [87, 1, 1, "", "flatten"], [87, 1, 1, "", "implements_for_spec"], [87, 1, 1, "", "index"], [87, 1, 1, "", "is_in"], [87, 1, 1, "", "make_neg_dim"], [87, 1, 1, "", "memoize_encode"], [87, 2, 1, "", "ndim"], [87, 1, 1, "", "ndimension"], [87, 1, 1, "", "one"], [87, 1, 1, "", "ones"], [87, 1, 1, "", "project"], [87, 1, 1, "", "rand"], [87, 1, 1, "", "reshape"], [87, 1, 1, "", "sample"], [87, 1, 1, "", "squeeze"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_numpy"], [87, 1, 1, "", "type_check"], [87, 1, 1, "", "unflatten"], [87, 1, 1, "", "unsqueeze"], [87, 1, 1, "", "view"], [87, 1, 1, "", "zero"], [87, 1, 1, "", "zeros"]], "torchrl.data.UnboundedContinuousTensorSpec": [[88, 1, 1, "", "assert_is_in"], [88, 1, 1, "", "cardinality"], [88, 1, 1, "", "clear_device_"], [88, 1, 1, "", "clone"], [88, 1, 1, "", "contains"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 2, 1, "", "device"], [88, 1, 1, "", "encode"], [88, 1, 1, "", "enumerate"], [88, 1, 1, "", "erase_memoize_cache"], [88, 1, 1, "", "expand"], [88, 1, 1, "", "flatten"], [88, 1, 1, "", "implements_for_spec"], [88, 1, 1, "", "index"], [88, 1, 1, "", "is_in"], [88, 1, 1, "", "make_neg_dim"], [88, 1, 1, "", "memoize_encode"], [88, 2, 1, "", "ndim"], [88, 1, 1, "", "ndimension"], [88, 1, 1, "", "one"], [88, 1, 1, "", "ones"], [88, 1, 1, "", "project"], [88, 1, 1, "", "rand"], [88, 1, 1, "", "reshape"], [88, 1, 1, "", "sample"], [88, 1, 1, "", "squeeze"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_numpy"], [88, 1, 1, "", "type_check"], [88, 1, 1, "", "unflatten"], [88, 1, 1, "", "unsqueeze"], [88, 1, 1, "", "view"], [88, 1, 1, "", "zero"], [88, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscrete": [[89, 1, 1, "", "assert_is_in"], [89, 1, 1, "", "cardinality"], [89, 1, 1, "", "clear_device_"], [89, 1, 1, "", "clone"], [89, 1, 1, "", "contains"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 2, 1, "", "device"], [89, 1, 1, "", "encode"], [89, 1, 1, "", "enumerate"], [89, 1, 1, "", "erase_memoize_cache"], [89, 1, 1, "", "expand"], [89, 1, 1, "", "flatten"], [89, 1, 1, "", "implements_for_spec"], [89, 1, 1, "", "index"], [89, 1, 1, "", "is_in"], [89, 1, 1, "", "make_neg_dim"], [89, 1, 1, "", "memoize_encode"], [89, 2, 1, "", "ndim"], [89, 1, 1, "", "ndimension"], [89, 1, 1, "", "one"], [89, 1, 1, "", "ones"], [89, 1, 1, "", "project"], [89, 1, 1, "", "rand"], [89, 1, 1, "", "reshape"], [89, 1, 1, "", "sample"], [89, 1, 1, "", "squeeze"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_numpy"], [89, 1, 1, "", "type_check"], [89, 1, 1, "", "unflatten"], [89, 1, 1, "", "unsqueeze"], [89, 1, 1, "", "view"], [89, 1, 1, "", "zero"], [89, 1, 1, "", "zeros"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[90, 1, 1, "", "assert_is_in"], [90, 1, 1, "", "cardinality"], [90, 1, 1, "", "clear_device_"], [90, 1, 1, "", "clone"], [90, 1, 1, "", "contains"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 2, 1, "", "device"], [90, 1, 1, "", "encode"], [90, 1, 1, "", "enumerate"], [90, 1, 1, "", "erase_memoize_cache"], [90, 1, 1, "", "expand"], [90, 1, 1, "", "flatten"], [90, 1, 1, "", "implements_for_spec"], [90, 1, 1, "", "index"], [90, 1, 1, "", "is_in"], [90, 1, 1, "", "make_neg_dim"], [90, 1, 1, "", "memoize_encode"], [90, 2, 1, "", "ndim"], [90, 1, 1, "", "ndimension"], [90, 1, 1, "", "one"], [90, 1, 1, "", "ones"], [90, 1, 1, "", "project"], [90, 1, 1, "", "rand"], [90, 1, 1, "", "reshape"], [90, 1, 1, "", "sample"], [90, 1, 1, "", "squeeze"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_numpy"], [90, 1, 1, "", "type_check"], [90, 1, 1, "", "unflatten"], [90, 1, 1, "", "unsqueeze"], [90, 1, 1, "", "view"], [90, 1, 1, "", "zero"], [90, 1, 1, "", "zeros"]], "torchrl.data.datasets": [[95, 0, 1, "", "AtariDQNExperienceReplay"], [96, 0, 1, "", "BaseDatasetExperienceReplay"], [97, 0, 1, "", "D4RLExperienceReplay"], [98, 0, 1, "", "MinariExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[95, 1, 1, "", "add"], [95, 1, 1, "", "append_transform"], [95, 1, 1, "", "as_remote"], [95, 2, 1, "", "batch_size"], [95, 2, 1, "", "data_path"], [95, 2, 1, "", "data_path_root"], [95, 1, 1, "", "delete"], [95, 1, 1, "", "dump"], [95, 1, 1, "", "dumps"], [95, 1, 1, "", "empty"], [95, 1, 1, "", "extend"], [95, 1, 1, "", "insert_transform"], [95, 1, 1, "", "load"], [95, 1, 1, "", "loads"], [95, 1, 1, "", "next"], [95, 1, 1, "", "preprocess"], [95, 1, 1, "", "register_load_hook"], [95, 1, 1, "", "register_save_hook"], [95, 1, 1, "", "sample"], [95, 2, 1, "", "sampler"], [95, 1, 1, "", "save"], [95, 1, 1, "", "set_sampler"], [95, 1, 1, "", "set_storage"], [95, 1, 1, "", "set_writer"], [95, 2, 1, "", "storage"], [95, 2, 1, "", "write_count"], [95, 2, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[96, 1, 1, "", "add"], [96, 1, 1, "", "append_transform"], [96, 1, 1, "", "as_remote"], [96, 2, 1, "", "batch_size"], [96, 2, 1, "", "data_path"], [96, 2, 1, "", "data_path_root"], [96, 1, 1, "", "delete"], [96, 1, 1, "", "dump"], [96, 1, 1, "", "dumps"], [96, 1, 1, "", "empty"], [96, 1, 1, "", "extend"], [96, 1, 1, "", "insert_transform"], [96, 1, 1, "", "load"], [96, 1, 1, "", "loads"], [96, 1, 1, "", "next"], [96, 1, 1, "", "preprocess"], [96, 1, 1, "", "register_load_hook"], [96, 1, 1, "", "register_save_hook"], [96, 1, 1, "", "sample"], [96, 2, 1, "", "sampler"], [96, 1, 1, "", "save"], [96, 1, 1, "", "set_sampler"], [96, 1, 1, "", "set_storage"], [96, 1, 1, "", "set_writer"], [96, 2, 1, "", "storage"], [96, 2, 1, "", "write_count"], [96, 2, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[97, 1, 1, "", "add"], [97, 1, 1, "", "append_transform"], [97, 1, 1, "", "as_remote"], [97, 2, 1, "", "batch_size"], [97, 2, 1, "", "data_path"], [97, 2, 1, "", "data_path_root"], [97, 1, 1, "", "delete"], [97, 1, 1, "", "dump"], [97, 1, 1, "", "dumps"], [97, 1, 1, "", "empty"], [97, 1, 1, "", "extend"], [97, 1, 1, "", "insert_transform"], [97, 1, 1, "", "load"], [97, 1, 1, "", "loads"], [97, 1, 1, "", "next"], [97, 1, 1, "", "preprocess"], [97, 1, 1, "", "register_load_hook"], [97, 1, 1, "", "register_save_hook"], [97, 1, 1, "", "sample"], [97, 2, 1, "", "sampler"], [97, 1, 1, "", "save"], [97, 1, 1, "", "set_sampler"], [97, 1, 1, "", "set_storage"], [97, 1, 1, "", "set_writer"], [97, 2, 1, "", "storage"], [97, 2, 1, "", "write_count"], [97, 2, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[98, 1, 1, "", "add"], [98, 1, 1, "", "append_transform"], [98, 1, 1, "", "as_remote"], [98, 2, 1, "", "batch_size"], [98, 2, 1, "", "data_path"], [98, 2, 1, "", "data_path_root"], [98, 1, 1, "", "delete"], [98, 1, 1, "", "dump"], [98, 1, 1, "", "dumps"], [98, 1, 1, "", "empty"], [98, 1, 1, "", "extend"], [98, 1, 1, "", "insert_transform"], [98, 1, 1, "", "load"], [98, 1, 1, "", "loads"], [98, 1, 1, "", "next"], [98, 1, 1, "", "preprocess"], [98, 1, 1, "", "register_load_hook"], [98, 1, 1, "", "register_save_hook"], [98, 1, 1, "", "sample"], [98, 2, 1, "", "sampler"], [98, 1, 1, "", "save"], [98, 1, 1, "", "set_sampler"], [98, 1, 1, "", "set_storage"], [98, 1, 1, "", "set_writer"], [98, 2, 1, "", "storage"], [98, 2, 1, "", "write_count"], [98, 2, 1, "", "writer"]], "torchrl.data.llm": [[100, 0, 1, "", "ContentBase"], [101, 0, 1, "", "History"], [102, 0, 1, "", "TopKRewardSelector"]], "torchrl.data.llm.ContentBase": [[100, 2, 1, "", "device"], [100, 1, 1, "", "dumps"], [100, 1, 1, "", "fields"], [100, 1, 1, "", "from_tensordict"], [100, 1, 1, "", "get"], [100, 1, 1, "", "load"], [100, 1, 1, "", "load_"], [100, 1, 1, "", "load_memmap"], [100, 1, 1, "", "load_state_dict"], [100, 1, 1, "", "memmap"], [100, 1, 1, "", "memmap_"], [100, 1, 1, "", "memmap_like"], [100, 1, 1, "", "memmap_refresh_"], [100, 1, 1, "", "save"], [100, 1, 1, "", "set"], [100, 1, 1, "", "state_dict"], [100, 1, 1, "", "to_tensordict"], [100, 1, 1, "", "unbind"]], "torchrl.data.llm.History": [[101, 1, 1, "", "append"], [101, 1, 1, "", "apply_chat_template"], [101, 1, 1, "", "default_spec"], [101, 2, 1, "", "device"], [101, 1, 1, "", "dumps"], [101, 1, 1, "", "fields"], [101, 1, 1, "", "from_chats"], [101, 1, 1, "", "from_tensordict"], [101, 1, 1, "", "from_text"], [101, 1, 1, "", "get"], [101, 1, 1, "", "load"], [101, 1, 1, "", "load_"], [101, 1, 1, "", "load_memmap"], [101, 1, 1, "", "load_state_dict"], [101, 1, 1, "", "memmap"], [101, 1, 1, "", "memmap_"], [101, 1, 1, "", "memmap_like"], [101, 1, 1, "", "memmap_refresh_"], [101, 1, 1, "", "save"], [101, 1, 1, "", "set"], [101, 1, 1, "", "state_dict"], [101, 1, 1, "", "to_tensordict"], [101, 1, 1, "", "unbind"]], "torchrl.data.llm.TopKRewardSelector": [[102, 1, 1, "", "add_module"], [102, 1, 1, "", "apply"], [102, 1, 1, "", "bfloat16"], [102, 1, 1, "", "buffers"], [102, 1, 1, "", "children"], [102, 1, 1, "", "close"], [102, 2, 1, "", "collector"], [102, 1, 1, "", "compile"], [102, 2, 1, "", "container"], [102, 1, 1, "", "cpu"], [102, 1, 1, "", "cuda"], [102, 1, 1, "", "double"], [102, 1, 1, "", "eval"], [102, 1, 1, "", "extra_repr"], [102, 1, 1, "", "float"], [102, 1, 1, "", "forward"], [102, 1, 1, "", "get_buffer"], [102, 1, 1, "", "get_extra_state"], [102, 1, 1, "", "get_parameter"], [102, 1, 1, "", "get_submodule"], [102, 1, 1, "", "half"], [102, 1, 1, "", "init"], [102, 1, 1, "", "inv"], [102, 1, 1, "", "ipu"], [102, 1, 1, "", "load_state_dict"], [102, 1, 1, "", "modules"], [102, 1, 1, "", "mtia"], [102, 1, 1, "", "named_buffers"], [102, 1, 1, "", "named_children"], [102, 1, 1, "", "named_modules"], [102, 1, 1, "", "named_parameters"], [102, 1, 1, "", "parameters"], [102, 2, 1, "", "parent"], [102, 1, 1, "", "register_backward_hook"], [102, 1, 1, "", "register_buffer"], [102, 1, 1, "", "register_forward_hook"], [102, 1, 1, "", "register_forward_pre_hook"], [102, 1, 1, "", "register_full_backward_hook"], [102, 1, 1, "", "register_full_backward_pre_hook"], [102, 1, 1, "", "register_load_state_dict_post_hook"], [102, 1, 1, "", "register_load_state_dict_pre_hook"], [102, 1, 1, "", "register_module"], [102, 1, 1, "", "register_parameter"], [102, 1, 1, "", "register_state_dict_post_hook"], [102, 1, 1, "", "register_state_dict_pre_hook"], [102, 1, 1, "", "requires_grad_"], [102, 1, 1, "", "set_extra_state"], [102, 1, 1, "", "set_submodule"], [102, 1, 1, "", "share_memory"], [102, 1, 1, "", "state_dict"], [102, 1, 1, "", "to"], [102, 1, 1, "", "to_empty"], [102, 1, 1, "", "train"], [102, 1, 1, "", "transform_action_spec"], [102, 1, 1, "", "transform_done_spec"], [102, 1, 1, "", "transform_env_batch_size"], [102, 1, 1, "", "transform_env_device"], [102, 1, 1, "", "transform_input_spec"], [102, 1, 1, "", "transform_observation_spec"], [102, 1, 1, "", "transform_output_spec"], [102, 1, 1, "", "transform_reward_spec"], [102, 1, 1, "", "transform_state_spec"], [102, 1, 1, "", "type"], [102, 1, 1, "", "xpu"], [102, 1, 1, "", "zero_grad"]], "torchrl.data.replay_buffers": [[103, 0, 1, "", "CompressedListStorage"], [104, 0, 1, "", "CompressedListStorageCheckpointer"], [105, 0, 1, "", "FlatStorageCheckpointer"], [106, 0, 1, "", "H5StorageCheckpointer"], [107, 0, 1, "", "ImmutableDatasetWriter"], [108, 0, 1, "", "LazyMemmapStorage"], [109, 0, 1, "", "LazyStackStorage"], [110, 0, 1, "", "LazyTensorStorage"], [111, 0, 1, "", "ListStorage"], [112, 0, 1, "", "ListStorageCheckpointer"], [113, 0, 1, "", "NestedStorageCheckpointer"], [114, 0, 1, "", "PrioritizedSampler"], [115, 0, 1, "", "PrioritizedSliceSampler"], [116, 0, 1, "", "RandomSampler"], [117, 0, 1, "", "ReplayBufferEnsemble"], [118, 0, 1, "", "RoundRobinWriter"], [119, 0, 1, "", "Sampler"], [120, 0, 1, "", "SamplerEnsemble"], [121, 0, 1, "", "SamplerWithoutReplacement"], [122, 0, 1, "", "SliceSampler"], [123, 0, 1, "", "SliceSamplerWithoutReplacement"], [124, 0, 1, "", "Storage"], [125, 0, 1, "", "StorageCheckpointerBase"], [126, 0, 1, "", "StorageEnsemble"], [127, 0, 1, "", "StorageEnsembleCheckpointer"], [128, 0, 1, "", "TensorDictMaxValueWriter"], [129, 0, 1, "", "TensorDictRoundRobinWriter"], [130, 0, 1, "", "TensorStorage"], [131, 0, 1, "", "TensorStorageCheckpointer"], [132, 0, 1, "", "Writer"], [133, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.CompressedListStorage": [[103, 1, 1, "", "attach"], [103, 1, 1, "", "dump"], [103, 1, 1, "", "load"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "num_bytes"], [103, 1, 1, "", "save"], [103, 1, 1, "", "state_dict"], [103, 1, 1, "", "to_bytestream"]], "torchrl.data.replay_buffers.CompressedListStorageCheckpointer": [[104, 1, 1, "", "dumps"], [104, 1, 1, "", "loads"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[107, 1, 1, "", "add"], [107, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[108, 1, 1, "", "attach"], [108, 1, 1, "", "dump"], [108, 1, 1, "", "load"], [108, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyStackStorage": [[109, 1, 1, "", "attach"], [109, 1, 1, "", "dump"], [109, 1, 1, "", "load"], [109, 1, 1, "", "save"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[110, 1, 1, "", "attach"], [110, 1, 1, "", "dump"], [110, 1, 1, "", "load"], [110, 1, 1, "", "save"]], "torchrl.data.replay_buffers.ListStorage": [[111, 1, 1, "", "attach"], [111, 1, 1, "", "dump"], [111, 1, 1, "", "load"], [111, 1, 1, "", "save"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[114, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[115, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[117, 1, 1, "", "add"], [117, 1, 1, "", "append_transform"], [117, 1, 1, "", "as_remote"], [117, 2, 1, "", "batch_size"], [117, 1, 1, "", "dump"], [117, 1, 1, "", "dumps"], [117, 1, 1, "", "empty"], [117, 1, 1, "", "extend"], [117, 1, 1, "", "insert_transform"], [117, 1, 1, "", "load"], [117, 1, 1, "", "loads"], [117, 1, 1, "", "next"], [117, 1, 1, "", "register_load_hook"], [117, 1, 1, "", "register_save_hook"], [117, 1, 1, "", "sample"], [117, 2, 1, "", "sampler"], [117, 1, 1, "", "save"], [117, 1, 1, "", "set_sampler"], [117, 1, 1, "", "set_storage"], [117, 1, 1, "", "set_writer"], [117, 2, 1, "", "storage"], [117, 2, 1, "", "write_count"], [117, 2, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[118, 1, 1, "", "add"], [118, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[124, 1, 1, "", "attach"], [124, 1, 1, "", "dump"], [124, 1, 1, "", "load"], [124, 1, 1, "", "save"]], "torchrl.data.replay_buffers.StorageEnsemble": [[126, 1, 1, "", "attach"], [126, 1, 1, "", "dump"], [126, 1, 1, "", "load"], [126, 1, 1, "", "save"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[128, 1, 1, "", "add"], [128, 1, 1, "", "extend"], [128, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[129, 1, 1, "", "add"], [129, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[130, 1, 1, "", "attach"], [130, 1, 1, "", "dump"], [130, 1, 1, "", "load"], [130, 1, 1, "", "save"]], "torchrl.data.replay_buffers.Writer": [[132, 1, 1, "", "add"], [132, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[133, 1, 1, "", "add"], [133, 1, 1, "", "extend"]], "torchrl.envs": [[134, 0, 1, "", "AsyncEnvPool"], [135, 3, 1, "", "BraxEnv"], [136, 3, 1, "", "BraxWrapper"], [137, 0, 1, "", "ChessEnv"], [138, 3, 1, "", "DMControlEnv"], [139, 3, 1, "", "DMControlWrapper"], [140, 0, 1, "", "EnvBase"], [141, 0, 1, "", "EnvCreator"], [142, 0, 1, "", "EnvMetaData"], [143, 3, 1, "", "GymEnv"], [144, 0, 1, "", "GymLikeEnv"], [145, 3, 1, "", "GymWrapper"], [146, 3, 1, "", "HabitatEnv"], [147, 3, 1, "", "IsaacGymEnv"], [148, 3, 1, "", "IsaacGymWrapper"], [149, 3, 1, "", "IsaacLabWrapper"], [150, 3, 1, "", "JumanjiEnv"], [151, 3, 1, "", "JumanjiWrapper"], [152, 0, 1, "", "LLMHashingEnv"], [153, 3, 1, "", "MOGymEnv"], [154, 3, 1, "", "MOGymWrapper"], [155, 3, 1, "", "MarlGroupMapType"], [156, 3, 1, "", "MeltingpotEnv"], [157, 3, 1, "", "MeltingpotWrapper"], [158, 3, 1, "", "ModelBasedEnvBase"], [159, 3, 1, "", "MultiThreadedEnv"], [160, 3, 1, "", "MultiThreadedEnvWrapper"], [161, 3, 1, "", "OpenMLEnv"], [162, 3, 1, "", "OpenSpielEnv"], [163, 3, 1, "", "OpenSpielWrapper"], [164, 0, 1, "", "ParallelEnv"], [165, 0, 1, "", "PendulumEnv"], [166, 3, 1, "", "PettingZooEnv"], [167, 3, 1, "", "PettingZooWrapper"], [168, 0, 1, "", "ProcessorAsyncEnvPool"], [169, 3, 1, "", "RandomPolicy"], [170, 3, 1, "", "RoboHiveEnv"], [171, 3, 1, "", "SMACv2Env"], [172, 3, 1, "", "SMACv2Wrapper"], [173, 0, 1, "", "SerialEnv"], [174, 0, 1, "", "ThreadingAsyncEnvPool"], [175, 0, 1, "", "TicTacToeEnv"], [176, 3, 1, "", "UnityMLAgentsEnv"], [177, 3, 1, "", "UnityMLAgentsWrapper"], [178, 3, 1, "", "VmasEnv"], [179, 3, 1, "", "VmasWrapper"], [180, 3, 1, "", "check_env_specs"], [181, 3, 1, "", "check_marl_grouping"], [182, 3, 1, "", "exploration_type"], [183, 3, 1, "", "get_available_libraries"], [184, 3, 1, "", "gym_backend"], [212, 3, 1, "", "make_composite_from_td"], [158, 1, 1, "", "rand_step"], [215, 3, 1, "", "register_gym_spec_conversion"], [158, 1, 1, "", "reset"], [158, 1, 1, "", "rollout"], [216, 3, 1, "", "set_exploration_type"], [217, 3, 1, "", "set_gym_backend"], [158, 1, 1, "", "set_seed"], [158, 1, 1, "", "step"], [218, 3, 1, "", "step_mdp"], [219, 3, 1, "", "terminated_or_truncated"]], "torchrl.envs.AsyncEnvPool": [[134, 2, 1, "", "action_key"], [134, 2, 1, "", "action_keys"], [134, 2, 1, "", "action_spec"], [134, 2, 1, "", "action_spec_unbatched"], [134, 1, 1, "", "add_module"], [134, 1, 1, "", "add_truncated_keys"], [134, 1, 1, "", "all_actions"], [134, 1, 1, "", "any_done"], [134, 1, 1, "", "append_transform"], [134, 1, 1, "", "apply"], [134, 1, 1, "", "auto_specs_"], [134, 2, 1, "", "batch_dims"], [134, 2, 1, "", "batch_locked"], [134, 2, 1, "", "batch_size"], [134, 1, 1, "", "bfloat16"], [134, 1, 1, "", "buffers"], [134, 1, 1, "", "cardinality"], [134, 1, 1, "", "check_env_specs"], [134, 1, 1, "", "children"], [134, 2, 1, "", "collector"], [134, 1, 1, "", "compile"], [134, 1, 1, "", "cpu"], [134, 1, 1, "", "cuda"], [134, 2, 1, "", "done_key"], [134, 2, 1, "", "done_keys"], [134, 2, 1, "", "done_keys_groups"], [134, 2, 1, "", "done_spec"], [134, 2, 1, "", "done_spec_unbatched"], [134, 1, 1, "", "double"], [134, 1, 1, "", "empty_cache"], [134, 2, 1, "", "env_batch_sizes"], [134, 1, 1, "", "eval"], [134, 1, 1, "", "extra_repr"], [134, 1, 1, "", "fake_tensordict"], [134, 1, 1, "", "float"], [134, 1, 1, "", "forward"], [134, 2, 1, "", "full_action_spec"], [134, 2, 1, "", "full_action_spec_unbatched"], [134, 2, 1, "", "full_done_spec"], [134, 2, 1, "", "full_done_spec_unbatched"], [134, 2, 1, "", "full_observation_spec_unbatched"], [134, 2, 1, "", "full_reward_spec"], [134, 2, 1, "", "full_reward_spec_unbatched"], [134, 2, 1, "", "full_state_spec"], [134, 2, 1, "", "full_state_spec_unbatched"], [134, 1, 1, "", "get_buffer"], [134, 1, 1, "", "get_extra_state"], [134, 1, 1, "", "get_parameter"], [134, 1, 1, "", "get_submodule"], [134, 1, 1, "", "half"], [134, 2, 1, "", "input_spec"], [134, 2, 1, "", "input_spec_unbatched"], [134, 1, 1, "", "ipu"], [134, 2, 1, "", "is_spec_locked"], [134, 1, 1, "", "load_state_dict"], [134, 1, 1, "", "maybe_reset"], [134, 1, 1, "", "modules"], [134, 1, 1, "", "mtia"], [134, 1, 1, "", "named_buffers"], [134, 1, 1, "", "named_children"], [134, 1, 1, "", "named_modules"], [134, 1, 1, "", "named_parameters"], [134, 2, 1, "", "observation_keys"], [134, 2, 1, "", "observation_spec"], [134, 2, 1, "", "observation_spec_unbatched"], [134, 2, 1, "", "output_spec"], [134, 2, 1, "", "output_spec_unbatched"], [134, 1, 1, "", "parameters"], [134, 1, 1, "", "rand_action"], [134, 1, 1, "", "rand_step"], [134, 1, 1, "", "register_backward_hook"], [134, 1, 1, "", "register_buffer"], [134, 1, 1, "", "register_collector"], [134, 1, 1, "", "register_forward_hook"], [134, 1, 1, "", "register_forward_pre_hook"], [134, 1, 1, "", "register_full_backward_hook"], [134, 1, 1, "", "register_full_backward_pre_hook"], [134, 1, 1, "", "register_gym"], [134, 1, 1, "", "register_load_state_dict_post_hook"], [134, 1, 1, "", "register_load_state_dict_pre_hook"], [134, 1, 1, "", "register_module"], [134, 1, 1, "", "register_parameter"], [134, 1, 1, "", "register_state_dict_post_hook"], [134, 1, 1, "", "register_state_dict_pre_hook"], [134, 1, 1, "", "requires_grad_"], [134, 1, 1, "", "reset"], [134, 2, 1, "", "reset_keys"], [134, 2, 1, "", "reward_key"], [134, 2, 1, "", "reward_keys"], [134, 2, 1, "", "reward_spec"], [134, 2, 1, "", "reward_spec_unbatched"], [134, 1, 1, "", "rollout"], [134, 1, 1, "", "set_extra_state"], [134, 1, 1, "", "set_seed"], [134, 1, 1, "", "set_spec_lock_"], [134, 1, 1, "", "set_submodule"], [134, 2, 1, "", "shape"], [134, 1, 1, "", "share_memory"], [134, 2, 1, "", "specs"], [134, 1, 1, "", "state_dict"], [134, 2, 1, "", "state_keys"], [134, 2, 1, "", "state_spec"], [134, 2, 1, "", "state_spec_unbatched"], [134, 1, 1, "", "step"], [134, 1, 1, "", "step_and_maybe_reset"], [134, 1, 1, "", "step_mdp"], [134, 1, 1, "", "to"], [134, 1, 1, "", "to_empty"], [134, 1, 1, "", "train"], [134, 1, 1, "", "type"], [134, 1, 1, "", "xpu"], [134, 1, 1, "", "zero_grad"]], "torchrl.envs.ChessEnv": [[137, 2, 1, "", "action_key"], [137, 2, 1, "", "action_keys"], [137, 2, 1, "", "action_spec"], [137, 2, 1, "", "action_spec_unbatched"], [137, 1, 1, "", "add_module"], [137, 1, 1, "", "add_truncated_keys"], [137, 1, 1, "", "all_actions"], [137, 1, 1, "", "any_done"], [137, 1, 1, "", "append_transform"], [137, 1, 1, "", "apply"], [137, 1, 1, "", "auto_specs_"], [137, 2, 1, "", "batch_dims"], [137, 2, 1, "", "batch_locked"], [137, 2, 1, "", "batch_size"], [137, 1, 1, "", "bfloat16"], [137, 1, 1, "", "buffers"], [137, 1, 1, "", "cardinality"], [137, 1, 1, "", "check_env_specs"], [137, 1, 1, "", "children"], [137, 2, 1, "", "collector"], [137, 1, 1, "", "compile"], [137, 1, 1, "", "cpu"], [137, 1, 1, "", "cuda"], [137, 2, 1, "", "done_key"], [137, 2, 1, "", "done_keys"], [137, 2, 1, "", "done_keys_groups"], [137, 2, 1, "", "done_spec"], [137, 2, 1, "", "done_spec_unbatched"], [137, 1, 1, "", "double"], [137, 1, 1, "", "empty_cache"], [137, 1, 1, "", "eval"], [137, 1, 1, "", "extra_repr"], [137, 1, 1, "", "fake_tensordict"], [137, 1, 1, "", "float"], [137, 1, 1, "", "forward"], [137, 2, 1, "", "full_action_spec"], [137, 2, 1, "", "full_action_spec_unbatched"], [137, 2, 1, "", "full_done_spec"], [137, 2, 1, "", "full_done_spec_unbatched"], [137, 2, 1, "", "full_observation_spec_unbatched"], [137, 2, 1, "", "full_reward_spec"], [137, 2, 1, "", "full_reward_spec_unbatched"], [137, 2, 1, "", "full_state_spec"], [137, 2, 1, "", "full_state_spec_unbatched"], [137, 1, 1, "", "get_buffer"], [137, 1, 1, "", "get_extra_state"], [137, 1, 1, "", "get_legal_moves"], [137, 1, 1, "", "get_parameter"], [137, 1, 1, "", "get_submodule"], [137, 1, 1, "", "half"], [137, 2, 1, "", "input_spec"], [137, 2, 1, "", "input_spec_unbatched"], [137, 1, 1, "", "ipu"], [137, 2, 1, "", "is_spec_locked"], [137, 1, 1, "", "load_state_dict"], [137, 1, 1, "", "maybe_reset"], [137, 1, 1, "", "modules"], [137, 1, 1, "", "mtia"], [137, 1, 1, "", "named_buffers"], [137, 1, 1, "", "named_children"], [137, 1, 1, "", "named_modules"], [137, 1, 1, "", "named_parameters"], [137, 2, 1, "", "observation_keys"], [137, 2, 1, "", "observation_spec"], [137, 2, 1, "", "observation_spec_unbatched"], [137, 2, 1, "", "output_spec"], [137, 2, 1, "", "output_spec_unbatched"], [137, 1, 1, "", "parameters"], [137, 1, 1, "", "rand_action"], [137, 1, 1, "", "rand_step"], [137, 1, 1, "", "register_backward_hook"], [137, 1, 1, "", "register_buffer"], [137, 1, 1, "", "register_collector"], [137, 1, 1, "", "register_forward_hook"], [137, 1, 1, "", "register_forward_pre_hook"], [137, 1, 1, "", "register_full_backward_hook"], [137, 1, 1, "", "register_full_backward_pre_hook"], [137, 1, 1, "", "register_gym"], [137, 1, 1, "", "register_load_state_dict_post_hook"], [137, 1, 1, "", "register_load_state_dict_pre_hook"], [137, 1, 1, "", "register_module"], [137, 1, 1, "", "register_parameter"], [137, 1, 1, "", "register_state_dict_post_hook"], [137, 1, 1, "", "register_state_dict_pre_hook"], [137, 1, 1, "", "requires_grad_"], [137, 1, 1, "", "reset"], [137, 2, 1, "", "reset_keys"], [137, 2, 1, "", "reward_key"], [137, 2, 1, "", "reward_keys"], [137, 2, 1, "", "reward_spec"], [137, 2, 1, "", "reward_spec_unbatched"], [137, 1, 1, "", "rollout"], [137, 1, 1, "", "set_extra_state"], [137, 1, 1, "", "set_seed"], [137, 1, 1, "", "set_spec_lock_"], [137, 1, 1, "", "set_submodule"], [137, 2, 1, "", "shape"], [137, 1, 1, "", "share_memory"], [137, 2, 1, "", "specs"], [137, 1, 1, "", "state_dict"], [137, 2, 1, "", "state_keys"], [137, 2, 1, "", "state_spec"], [137, 2, 1, "", "state_spec_unbatched"], [137, 1, 1, "", "step"], [137, 1, 1, "", "step_and_maybe_reset"], [137, 1, 1, "", "step_mdp"], [137, 1, 1, "", "to"], [137, 1, 1, "", "to_empty"], [137, 1, 1, "", "train"], [137, 1, 1, "", "type"], [137, 1, 1, "", "xpu"], [137, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvBase": [[140, 2, 1, "", "action_key"], [140, 2, 1, "", "action_keys"], [140, 2, 1, "", "action_spec"], [140, 2, 1, "", "action_spec_unbatched"], [140, 1, 1, "", "add_module"], [140, 1, 1, "", "add_truncated_keys"], [140, 1, 1, "", "all_actions"], [140, 1, 1, "", "any_done"], [140, 1, 1, "", "append_transform"], [140, 1, 1, "", "apply"], [140, 1, 1, "", "auto_specs_"], [140, 2, 1, "", "batch_dims"], [140, 2, 1, "", "batch_locked"], [140, 2, 1, "", "batch_size"], [140, 1, 1, "", "bfloat16"], [140, 1, 1, "", "buffers"], [140, 1, 1, "", "cardinality"], [140, 1, 1, "", "check_env_specs"], [140, 1, 1, "", "children"], [140, 2, 1, "", "collector"], [140, 1, 1, "", "compile"], [140, 1, 1, "", "cpu"], [140, 1, 1, "", "cuda"], [140, 2, 1, "", "done_key"], [140, 2, 1, "", "done_keys"], [140, 2, 1, "", "done_keys_groups"], [140, 2, 1, "", "done_spec"], [140, 2, 1, "", "done_spec_unbatched"], [140, 1, 1, "", "double"], [140, 1, 1, "", "empty_cache"], [140, 1, 1, "", "eval"], [140, 1, 1, "", "extra_repr"], [140, 1, 1, "", "fake_tensordict"], [140, 1, 1, "", "float"], [140, 1, 1, "", "forward"], [140, 2, 1, "", "full_action_spec"], [140, 2, 1, "", "full_action_spec_unbatched"], [140, 2, 1, "", "full_done_spec"], [140, 2, 1, "", "full_done_spec_unbatched"], [140, 2, 1, "", "full_observation_spec_unbatched"], [140, 2, 1, "", "full_reward_spec"], [140, 2, 1, "", "full_reward_spec_unbatched"], [140, 2, 1, "", "full_state_spec"], [140, 2, 1, "", "full_state_spec_unbatched"], [140, 1, 1, "", "get_buffer"], [140, 1, 1, "", "get_extra_state"], [140, 1, 1, "", "get_parameter"], [140, 1, 1, "", "get_submodule"], [140, 1, 1, "", "half"], [140, 2, 1, "", "input_spec"], [140, 2, 1, "", "input_spec_unbatched"], [140, 1, 1, "", "ipu"], [140, 2, 1, "", "is_spec_locked"], [140, 1, 1, "", "load_state_dict"], [140, 1, 1, "", "maybe_reset"], [140, 1, 1, "", "modules"], [140, 1, 1, "", "mtia"], [140, 1, 1, "", "named_buffers"], [140, 1, 1, "", "named_children"], [140, 1, 1, "", "named_modules"], [140, 1, 1, "", "named_parameters"], [140, 2, 1, "", "observation_keys"], [140, 2, 1, "", "observation_spec"], [140, 2, 1, "", "observation_spec_unbatched"], [140, 2, 1, "", "output_spec"], [140, 2, 1, "", "output_spec_unbatched"], [140, 1, 1, "", "parameters"], [140, 1, 1, "", "rand_action"], [140, 1, 1, "id0", "rand_step"], [140, 1, 1, "", "register_backward_hook"], [140, 1, 1, "", "register_buffer"], [140, 1, 1, "", "register_collector"], [140, 1, 1, "", "register_forward_hook"], [140, 1, 1, "", "register_forward_pre_hook"], [140, 1, 1, "", "register_full_backward_hook"], [140, 1, 1, "", "register_full_backward_pre_hook"], [140, 1, 1, "", "register_gym"], [140, 1, 1, "", "register_load_state_dict_post_hook"], [140, 1, 1, "", "register_load_state_dict_pre_hook"], [140, 1, 1, "", "register_module"], [140, 1, 1, "", "register_parameter"], [140, 1, 1, "", "register_state_dict_post_hook"], [140, 1, 1, "", "register_state_dict_pre_hook"], [140, 1, 1, "", "requires_grad_"], [140, 1, 1, "id1", "reset"], [140, 2, 1, "", "reset_keys"], [140, 2, 1, "", "reward_key"], [140, 2, 1, "", "reward_keys"], [140, 2, 1, "", "reward_spec"], [140, 2, 1, "", "reward_spec_unbatched"], [140, 1, 1, "id2", "rollout"], [140, 1, 1, "", "set_extra_state"], [140, 1, 1, "id3", "set_seed"], [140, 1, 1, "", "set_spec_lock_"], [140, 1, 1, "", "set_submodule"], [140, 2, 1, "", "shape"], [140, 1, 1, "", "share_memory"], [140, 2, 1, "", "specs"], [140, 1, 1, "", "state_dict"], [140, 2, 1, "", "state_keys"], [140, 2, 1, "", "state_spec"], [140, 2, 1, "", "state_spec_unbatched"], [140, 1, 1, "id4", "step"], [140, 1, 1, "", "step_and_maybe_reset"], [140, 1, 1, "", "step_mdp"], [140, 1, 1, "", "to"], [140, 1, 1, "", "to_empty"], [140, 1, 1, "", "train"], [140, 1, 1, "", "type"], [140, 1, 1, "", "xpu"], [140, 1, 1, "", "zero_grad"]], "torchrl.envs.EnvCreator": [[141, 1, 1, "", "make_variant"]], "torchrl.envs.GymLikeEnv": [[144, 2, 1, "", "action_key"], [144, 2, 1, "", "action_keys"], [144, 2, 1, "", "action_spec"], [144, 2, 1, "", "action_spec_unbatched"], [144, 1, 1, "", "add_module"], [144, 1, 1, "", "add_truncated_keys"], [144, 1, 1, "", "all_actions"], [144, 1, 1, "", "any_done"], [144, 1, 1, "", "append_transform"], [144, 1, 1, "", "apply"], [144, 1, 1, "", "auto_register_info_dict"], [144, 1, 1, "", "auto_specs_"], [144, 2, 1, "", "batch_dims"], [144, 2, 1, "", "batch_locked"], [144, 2, 1, "", "batch_size"], [144, 1, 1, "", "bfloat16"], [144, 1, 1, "", "buffers"], [144, 1, 1, "", "cardinality"], [144, 1, 1, "", "check_env_specs"], [144, 1, 1, "", "children"], [144, 1, 1, "", "close"], [144, 2, 1, "", "collector"], [144, 1, 1, "", "compile"], [144, 1, 1, "", "cpu"], [144, 1, 1, "", "cuda"], [144, 2, 1, "", "done_key"], [144, 2, 1, "", "done_keys"], [144, 2, 1, "", "done_keys_groups"], [144, 2, 1, "", "done_spec"], [144, 2, 1, "", "done_spec_unbatched"], [144, 1, 1, "", "double"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 1, 1, "", "extra_repr"], [144, 1, 1, "", "fake_tensordict"], [144, 1, 1, "", "fast_encoding"], [144, 1, 1, "", "float"], [144, 1, 1, "", "forward"], [144, 2, 1, "", "full_action_spec"], [144, 2, 1, "", "full_action_spec_unbatched"], [144, 2, 1, "", "full_done_spec"], [144, 2, 1, "", "full_done_spec_unbatched"], [144, 2, 1, "", "full_observation_spec_unbatched"], [144, 2, 1, "", "full_reward_spec"], [144, 2, 1, "", "full_reward_spec_unbatched"], [144, 2, 1, "", "full_state_spec"], [144, 2, 1, "", "full_state_spec_unbatched"], [144, 1, 1, "", "get_buffer"], [144, 1, 1, "", "get_extra_state"], [144, 1, 1, "", "get_parameter"], [144, 1, 1, "", "get_submodule"], [144, 1, 1, "", "half"], [144, 2, 1, "", "input_spec"], [144, 2, 1, "", "input_spec_unbatched"], [144, 1, 1, "", "ipu"], [144, 2, 1, "", "is_spec_locked"], [144, 1, 1, "", "load_state_dict"], [144, 1, 1, "", "maybe_reset"], [144, 1, 1, "", "modules"], [144, 1, 1, "", "mtia"], [144, 1, 1, "", "named_buffers"], [144, 1, 1, "", "named_children"], [144, 1, 1, "", "named_modules"], [144, 1, 1, "", "named_parameters"], [144, 2, 1, "", "observation_keys"], [144, 2, 1, "", "observation_spec"], [144, 2, 1, "", "observation_spec_unbatched"], [144, 2, 1, "", "output_spec"], [144, 2, 1, "", "output_spec_unbatched"], [144, 1, 1, "", "parameters"], [144, 1, 1, "", "rand_action"], [144, 1, 1, "", "rand_step"], [144, 1, 1, "", "read_action"], [144, 1, 1, "", "read_done"], [144, 1, 1, "", "read_obs"], [144, 1, 1, "", "read_reward"], [144, 1, 1, "", "register_backward_hook"], [144, 1, 1, "", "register_buffer"], [144, 1, 1, "", "register_collector"], [144, 1, 1, "", "register_forward_hook"], [144, 1, 1, "", "register_forward_pre_hook"], [144, 1, 1, "", "register_full_backward_hook"], [144, 1, 1, "", "register_full_backward_pre_hook"], [144, 1, 1, "", "register_gym"], [144, 1, 1, "", "register_load_state_dict_post_hook"], [144, 1, 1, "", "register_load_state_dict_pre_hook"], [144, 1, 1, "", "register_module"], [144, 1, 1, "", "register_parameter"], [144, 1, 1, "", "register_state_dict_post_hook"], [144, 1, 1, "", "register_state_dict_pre_hook"], [144, 1, 1, "", "requires_grad_"], [144, 1, 1, "", "reset"], [144, 2, 1, "", "reset_keys"], [144, 2, 1, "", "reward_key"], [144, 2, 1, "", "reward_keys"], [144, 2, 1, "", "reward_spec"], [144, 2, 1, "", "reward_spec_unbatched"], [144, 1, 1, "", "rollout"], [144, 1, 1, "", "set_extra_state"], [144, 1, 1, "", "set_info_dict_reader"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "set_spec_lock_"], [144, 1, 1, "", "set_submodule"], [144, 2, 1, "", "shape"], [144, 1, 1, "", "share_memory"], [144, 2, 1, "", "specs"], [144, 1, 1, "", "state_dict"], [144, 2, 1, "", "state_keys"], [144, 2, 1, "", "state_spec"], [144, 2, 1, "", "state_spec_unbatched"], [144, 1, 1, "", "step"], [144, 1, 1, "", "step_and_maybe_reset"], [144, 1, 1, "", "step_mdp"], [144, 1, 1, "", "to"], [144, 1, 1, "", "to_empty"], [144, 1, 1, "", "train"], [144, 1, 1, "", "type"], [144, 1, 1, "", "xpu"], [144, 1, 1, "", "zero_grad"]], "torchrl.envs.LLMHashingEnv": [[152, 2, 1, "", "action_key"], [152, 2, 1, "", "action_keys"], [152, 2, 1, "", "action_spec"], [152, 2, 1, "", "action_spec_unbatched"], [152, 1, 1, "", "add_module"], [152, 1, 1, "", "add_truncated_keys"], [152, 1, 1, "", "all_actions"], [152, 1, 1, "", "any_done"], [152, 1, 1, "", "append_transform"], [152, 1, 1, "", "apply"], [152, 1, 1, "", "auto_specs_"], [152, 2, 1, "", "batch_dims"], [152, 2, 1, "", "batch_locked"], [152, 2, 1, "", "batch_size"], [152, 1, 1, "", "bfloat16"], [152, 1, 1, "", "buffers"], [152, 1, 1, "", "cardinality"], [152, 1, 1, "", "check_env_specs"], [152, 1, 1, "", "children"], [152, 2, 1, "", "collector"], [152, 1, 1, "", "compile"], [152, 1, 1, "", "cpu"], [152, 1, 1, "", "cuda"], [152, 2, 1, "", "done_key"], [152, 2, 1, "", "done_keys"], [152, 2, 1, "", "done_keys_groups"], [152, 2, 1, "", "done_spec"], [152, 2, 1, "", "done_spec_unbatched"], [152, 1, 1, "", "double"], [152, 1, 1, "", "empty_cache"], [152, 1, 1, "", "eval"], [152, 1, 1, "", "extra_repr"], [152, 1, 1, "", "fake_tensordict"], [152, 1, 1, "", "float"], [152, 1, 1, "", "forward"], [152, 2, 1, "", "full_action_spec"], [152, 2, 1, "", "full_action_spec_unbatched"], [152, 2, 1, "", "full_done_spec"], [152, 2, 1, "", "full_done_spec_unbatched"], [152, 2, 1, "", "full_observation_spec_unbatched"], [152, 2, 1, "", "full_reward_spec"], [152, 2, 1, "", "full_reward_spec_unbatched"], [152, 2, 1, "", "full_state_spec"], [152, 2, 1, "", "full_state_spec_unbatched"], [152, 1, 1, "", "get_buffer"], [152, 1, 1, "", "get_extra_state"], [152, 1, 1, "", "get_parameter"], [152, 1, 1, "", "get_submodule"], [152, 1, 1, "", "half"], [152, 2, 1, "", "input_spec"], [152, 2, 1, "", "input_spec_unbatched"], [152, 1, 1, "", "ipu"], [152, 2, 1, "", "is_spec_locked"], [152, 1, 1, "", "load_state_dict"], [152, 1, 1, "", "make_tensordict"], [152, 1, 1, "", "maybe_reset"], [152, 1, 1, "", "modules"], [152, 1, 1, "", "mtia"], [152, 1, 1, "", "named_buffers"], [152, 1, 1, "", "named_children"], [152, 1, 1, "", "named_modules"], [152, 1, 1, "", "named_parameters"], [152, 2, 1, "", "observation_keys"], [152, 2, 1, "", "observation_spec"], [152, 2, 1, "", "observation_spec_unbatched"], [152, 2, 1, "", "output_spec"], [152, 2, 1, "", "output_spec_unbatched"], [152, 1, 1, "", "parameters"], [152, 1, 1, "", "rand_action"], [152, 1, 1, "", "rand_step"], [152, 1, 1, "", "register_backward_hook"], [152, 1, 1, "", "register_buffer"], [152, 1, 1, "", "register_collector"], [152, 1, 1, "", "register_forward_hook"], [152, 1, 1, "", "register_forward_pre_hook"], [152, 1, 1, "", "register_full_backward_hook"], [152, 1, 1, "", "register_full_backward_pre_hook"], [152, 1, 1, "", "register_gym"], [152, 1, 1, "", "register_load_state_dict_post_hook"], [152, 1, 1, "", "register_load_state_dict_pre_hook"], [152, 1, 1, "", "register_module"], [152, 1, 1, "", "register_parameter"], [152, 1, 1, "", "register_state_dict_post_hook"], [152, 1, 1, "", "register_state_dict_pre_hook"], [152, 1, 1, "", "requires_grad_"], [152, 1, 1, "", "reset"], [152, 2, 1, "", "reset_keys"], [152, 2, 1, "", "reward_key"], [152, 2, 1, "", "reward_keys"], [152, 2, 1, "", "reward_spec"], [152, 2, 1, "", "reward_spec_unbatched"], [152, 1, 1, "", "rollout"], [152, 1, 1, "", "set_extra_state"], [152, 1, 1, "", "set_seed"], [152, 1, 1, "", "set_spec_lock_"], [152, 1, 1, "", "set_submodule"], [152, 2, 1, "", "shape"], [152, 1, 1, "", "share_memory"], [152, 2, 1, "", "specs"], [152, 1, 1, "", "state_dict"], [152, 2, 1, "", "state_keys"], [152, 2, 1, "", "state_spec"], [152, 2, 1, "", "state_spec_unbatched"], [152, 1, 1, "", "step"], [152, 1, 1, "", "step_and_maybe_reset"], [152, 1, 1, "", "step_mdp"], [152, 1, 1, "", "to"], [152, 1, 1, "", "to_empty"], [152, 1, 1, "", "train"], [152, 1, 1, "", "type"], [152, 1, 1, "", "xpu"], [152, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[164, 2, 1, "", "action_key"], [164, 2, 1, "", "action_keys"], [164, 2, 1, "", "action_spec"], [164, 2, 1, "", "action_spec_unbatched"], [164, 1, 1, "", "add_module"], [164, 1, 1, "", "add_truncated_keys"], [164, 1, 1, "", "all_actions"], [164, 1, 1, "", "any_done"], [164, 1, 1, "", "append_transform"], [164, 1, 1, "", "apply"], [164, 1, 1, "", "auto_specs_"], [164, 2, 1, "", "batch_dims"], [164, 2, 1, "", "batch_locked"], [164, 2, 1, "", "batch_size"], [164, 1, 1, "", "bfloat16"], [164, 1, 1, "", "buffers"], [164, 1, 1, "", "cardinality"], [164, 1, 1, "", "check_env_specs"], [164, 1, 1, "", "children"], [164, 2, 1, "", "collector"], [164, 1, 1, "", "compile"], [164, 1, 1, "", "cpu"], [164, 1, 1, "", "cuda"], [164, 2, 1, "", "done_key"], [164, 2, 1, "", "done_keys"], [164, 2, 1, "", "done_keys_groups"], [164, 2, 1, "", "done_spec"], [164, 2, 1, "", "done_spec_unbatched"], [164, 1, 1, "", "double"], [164, 1, 1, "", "empty_cache"], [164, 1, 1, "", "eval"], [164, 1, 1, "", "extra_repr"], [164, 1, 1, "", "fake_tensordict"], [164, 1, 1, "", "float"], [164, 1, 1, "", "forward"], [164, 2, 1, "", "full_action_spec"], [164, 2, 1, "", "full_action_spec_unbatched"], [164, 2, 1, "", "full_done_spec"], [164, 2, 1, "", "full_done_spec_unbatched"], [164, 2, 1, "", "full_observation_spec_unbatched"], [164, 2, 1, "", "full_reward_spec"], [164, 2, 1, "", "full_reward_spec_unbatched"], [164, 2, 1, "", "full_state_spec"], [164, 2, 1, "", "full_state_spec_unbatched"], [164, 1, 1, "", "get_buffer"], [164, 1, 1, "", "get_extra_state"], [164, 1, 1, "", "get_parameter"], [164, 1, 1, "", "get_submodule"], [164, 1, 1, "", "half"], [164, 2, 1, "", "input_spec"], [164, 2, 1, "", "input_spec_unbatched"], [164, 1, 1, "", "ipu"], [164, 2, 1, "", "is_spec_locked"], [164, 1, 1, "", "load_state_dict"], [164, 1, 1, "", "maybe_reset"], [164, 1, 1, "", "modules"], [164, 1, 1, "", "mtia"], [164, 1, 1, "", "named_buffers"], [164, 1, 1, "", "named_children"], [164, 1, 1, "", "named_modules"], [164, 1, 1, "", "named_parameters"], [164, 2, 1, "", "observation_keys"], [164, 2, 1, "", "observation_spec"], [164, 2, 1, "", "observation_spec_unbatched"], [164, 2, 1, "", "output_spec"], [164, 2, 1, "", "output_spec_unbatched"], [164, 1, 1, "", "parameters"], [164, 1, 1, "", "rand_action"], [164, 1, 1, "", "rand_step"], [164, 1, 1, "", "register_backward_hook"], [164, 1, 1, "", "register_buffer"], [164, 1, 1, "", "register_collector"], [164, 1, 1, "", "register_forward_hook"], [164, 1, 1, "", "register_forward_pre_hook"], [164, 1, 1, "", "register_full_backward_hook"], [164, 1, 1, "", "register_full_backward_pre_hook"], [164, 1, 1, "", "register_gym"], [164, 1, 1, "", "register_load_state_dict_post_hook"], [164, 1, 1, "", "register_load_state_dict_pre_hook"], [164, 1, 1, "", "register_module"], [164, 1, 1, "", "register_parameter"], [164, 1, 1, "", "register_state_dict_post_hook"], [164, 1, 1, "", "register_state_dict_pre_hook"], [164, 1, 1, "", "requires_grad_"], [164, 1, 1, "", "reset"], [164, 2, 1, "", "reset_keys"], [164, 2, 1, "", "reward_key"], [164, 2, 1, "", "reward_keys"], [164, 2, 1, "", "reward_spec"], [164, 2, 1, "", "reward_spec_unbatched"], [164, 1, 1, "", "rollout"], [164, 1, 1, "", "set_extra_state"], [164, 1, 1, "", "set_seed"], [164, 1, 1, "", "set_spec_lock_"], [164, 1, 1, "", "set_submodule"], [164, 2, 1, "", "shape"], [164, 1, 1, "", "share_memory"], [164, 2, 1, "", "specs"], [164, 1, 1, "", "state_dict"], [164, 2, 1, "", "state_keys"], [164, 2, 1, "", "state_spec"], [164, 2, 1, "", "state_spec_unbatched"], [164, 1, 1, "", "step"], [164, 1, 1, "", "step_and_maybe_reset"], [164, 1, 1, "", "step_mdp"], [164, 1, 1, "", "to"], [164, 1, 1, "", "to_empty"], [164, 1, 1, "", "train"], [164, 1, 1, "", "type"], [164, 1, 1, "", "update_kwargs"], [164, 1, 1, "", "xpu"], [164, 1, 1, "", "zero_grad"]], "torchrl.envs.PendulumEnv": [[165, 2, 1, "", "action_key"], [165, 2, 1, "", "action_keys"], [165, 2, 1, "", "action_spec"], [165, 2, 1, "", "action_spec_unbatched"], [165, 1, 1, "", "add_module"], [165, 1, 1, "", "add_truncated_keys"], [165, 1, 1, "", "all_actions"], [165, 1, 1, "", "any_done"], [165, 1, 1, "", "append_transform"], [165, 1, 1, "", "apply"], [165, 1, 1, "", "auto_specs_"], [165, 2, 1, "", "batch_dims"], [165, 2, 1, "", "batch_size"], [165, 1, 1, "", "bfloat16"], [165, 1, 1, "", "buffers"], [165, 1, 1, "", "cardinality"], [165, 1, 1, "", "check_env_specs"], [165, 1, 1, "", "children"], [165, 2, 1, "", "collector"], [165, 1, 1, "", "compile"], [165, 1, 1, "", "cpu"], [165, 1, 1, "", "cuda"], [165, 2, 1, "", "done_key"], [165, 2, 1, "", "done_keys"], [165, 2, 1, "", "done_keys_groups"], [165, 2, 1, "", "done_spec"], [165, 2, 1, "", "done_spec_unbatched"], [165, 1, 1, "", "double"], [165, 1, 1, "", "empty_cache"], [165, 1, 1, "", "eval"], [165, 1, 1, "", "extra_repr"], [165, 1, 1, "", "fake_tensordict"], [165, 1, 1, "", "float"], [165, 1, 1, "", "forward"], [165, 2, 1, "", "full_action_spec"], [165, 2, 1, "", "full_action_spec_unbatched"], [165, 2, 1, "", "full_done_spec"], [165, 2, 1, "", "full_done_spec_unbatched"], [165, 2, 1, "", "full_observation_spec_unbatched"], [165, 2, 1, "", "full_reward_spec"], [165, 2, 1, "", "full_reward_spec_unbatched"], [165, 2, 1, "", "full_state_spec"], [165, 2, 1, "", "full_state_spec_unbatched"], [165, 1, 1, "", "gen_params"], [165, 1, 1, "", "get_buffer"], [165, 1, 1, "", "get_extra_state"], [165, 1, 1, "", "get_parameter"], [165, 1, 1, "", "get_submodule"], [165, 1, 1, "", "half"], [165, 2, 1, "", "input_spec"], [165, 2, 1, "", "input_spec_unbatched"], [165, 1, 1, "", "ipu"], [165, 2, 1, "", "is_spec_locked"], [165, 1, 1, "", "load_state_dict"], [165, 1, 1, "", "maybe_reset"], [165, 1, 1, "", "modules"], [165, 1, 1, "", "mtia"], [165, 1, 1, "", "named_buffers"], [165, 1, 1, "", "named_children"], [165, 1, 1, "", "named_modules"], [165, 1, 1, "", "named_parameters"], [165, 2, 1, "", "observation_keys"], [165, 2, 1, "", "observation_spec"], [165, 2, 1, "", "observation_spec_unbatched"], [165, 2, 1, "", "output_spec"], [165, 2, 1, "", "output_spec_unbatched"], [165, 1, 1, "", "parameters"], [165, 1, 1, "", "rand_action"], [165, 1, 1, "", "rand_step"], [165, 1, 1, "", "register_backward_hook"], [165, 1, 1, "", "register_buffer"], [165, 1, 1, "", "register_collector"], [165, 1, 1, "", "register_forward_hook"], [165, 1, 1, "", "register_forward_pre_hook"], [165, 1, 1, "", "register_full_backward_hook"], [165, 1, 1, "", "register_full_backward_pre_hook"], [165, 1, 1, "", "register_gym"], [165, 1, 1, "", "register_load_state_dict_post_hook"], [165, 1, 1, "", "register_load_state_dict_pre_hook"], [165, 1, 1, "", "register_module"], [165, 1, 1, "", "register_parameter"], [165, 1, 1, "", "register_state_dict_post_hook"], [165, 1, 1, "", "register_state_dict_pre_hook"], [165, 1, 1, "", "requires_grad_"], [165, 1, 1, "", "reset"], [165, 2, 1, "", "reset_keys"], [165, 2, 1, "", "reward_key"], [165, 2, 1, "", "reward_keys"], [165, 2, 1, "", "reward_spec"], [165, 2, 1, "", "reward_spec_unbatched"], [165, 1, 1, "", "rollout"], [165, 1, 1, "", "set_extra_state"], [165, 1, 1, "", "set_seed"], [165, 1, 1, "", "set_spec_lock_"], [165, 1, 1, "", "set_submodule"], [165, 2, 1, "", "shape"], [165, 1, 1, "", "share_memory"], [165, 2, 1, "", "specs"], [165, 1, 1, "", "state_dict"], [165, 2, 1, "", "state_keys"], [165, 2, 1, "", "state_spec"], [165, 2, 1, "", "state_spec_unbatched"], [165, 1, 1, "", "step"], [165, 1, 1, "", "step_and_maybe_reset"], [165, 1, 1, "", "step_mdp"], [165, 1, 1, "", "to"], [165, 1, 1, "", "to_empty"], [165, 1, 1, "", "train"], [165, 1, 1, "", "type"], [165, 1, 1, "", "xpu"], [165, 1, 1, "", "zero_grad"]], "torchrl.envs.ProcessorAsyncEnvPool": [[168, 1, 1, "", "_setup"], [168, 2, 1, "", "action_key"], [168, 2, 1, "", "action_keys"], [168, 2, 1, "", "action_spec"], [168, 2, 1, "", "action_spec_unbatched"], [168, 1, 1, "", "add_module"], [168, 1, 1, "", "add_truncated_keys"], [168, 1, 1, "", "all_actions"], [168, 1, 1, "", "any_done"], [168, 1, 1, "", "append_transform"], [168, 1, 1, "", "apply"], [168, 1, 1, "", "async_reset_recv"], [168, 1, 1, "", "async_reset_send"], [168, 1, 1, "", "async_step_recv"], [168, 1, 1, "", "async_step_send"], [168, 1, 1, "", "auto_specs_"], [168, 2, 1, "", "batch_dims"], [168, 2, 1, "", "batch_locked"], [168, 2, 1, "", "batch_size"], [168, 1, 1, "", "bfloat16"], [168, 1, 1, "", "buffers"], [168, 1, 1, "", "cardinality"], [168, 1, 1, "", "check_env_specs"], [168, 1, 1, "", "children"], [168, 2, 1, "", "collector"], [168, 1, 1, "", "compile"], [168, 1, 1, "", "cpu"], [168, 1, 1, "", "cuda"], [168, 2, 1, "", "done_key"], [168, 2, 1, "", "done_keys"], [168, 2, 1, "", "done_keys_groups"], [168, 2, 1, "", "done_spec"], [168, 2, 1, "", "done_spec_unbatched"], [168, 1, 1, "", "double"], [168, 1, 1, "", "empty_cache"], [168, 2, 1, "", "env_batch_sizes"], [168, 1, 1, "", "eval"], [168, 1, 1, "", "extra_repr"], [168, 1, 1, "", "fake_tensordict"], [168, 1, 1, "", "float"], [168, 1, 1, "", "forward"], [168, 2, 1, "", "full_action_spec"], [168, 2, 1, "", "full_action_spec_unbatched"], [168, 2, 1, "", "full_done_spec"], [168, 2, 1, "", "full_done_spec_unbatched"], [168, 2, 1, "", "full_observation_spec_unbatched"], [168, 2, 1, "", "full_reward_spec"], [168, 2, 1, "", "full_reward_spec_unbatched"], [168, 2, 1, "", "full_state_spec"], [168, 2, 1, "", "full_state_spec_unbatched"], [168, 1, 1, "", "get_buffer"], [168, 1, 1, "", "get_extra_state"], [168, 1, 1, "", "get_parameter"], [168, 1, 1, "", "get_submodule"], [168, 1, 1, "", "half"], [168, 2, 1, "", "input_spec"], [168, 2, 1, "", "input_spec_unbatched"], [168, 1, 1, "", "ipu"], [168, 2, 1, "", "is_spec_locked"], [168, 1, 1, "", "load_state_dict"], [168, 1, 1, "", "maybe_reset"], [168, 1, 1, "", "modules"], [168, 1, 1, "", "mtia"], [168, 1, 1, "", "named_buffers"], [168, 1, 1, "", "named_children"], [168, 1, 1, "", "named_modules"], [168, 1, 1, "", "named_parameters"], [168, 2, 1, "", "observation_keys"], [168, 2, 1, "", "observation_spec"], [168, 2, 1, "", "observation_spec_unbatched"], [168, 2, 1, "", "output_spec"], [168, 2, 1, "", "output_spec_unbatched"], [168, 1, 1, "", "parameters"], [168, 1, 1, "", "rand_action"], [168, 1, 1, "", "rand_step"], [168, 1, 1, "", "register_backward_hook"], [168, 1, 1, "", "register_buffer"], [168, 1, 1, "", "register_collector"], [168, 1, 1, "", "register_forward_hook"], [168, 1, 1, "", "register_forward_pre_hook"], [168, 1, 1, "", "register_full_backward_hook"], [168, 1, 1, "", "register_full_backward_pre_hook"], [168, 1, 1, "", "register_gym"], [168, 1, 1, "", "register_load_state_dict_post_hook"], [168, 1, 1, "", "register_load_state_dict_pre_hook"], [168, 1, 1, "", "register_module"], [168, 1, 1, "", "register_parameter"], [168, 1, 1, "", "register_state_dict_post_hook"], [168, 1, 1, "", "register_state_dict_pre_hook"], [168, 1, 1, "", "requires_grad_"], [168, 1, 1, "", "reset"], [168, 2, 1, "", "reset_keys"], [168, 2, 1, "", "reward_key"], [168, 2, 1, "", "reward_keys"], [168, 2, 1, "", "reward_spec"], [168, 2, 1, "", "reward_spec_unbatched"], [168, 1, 1, "", "rollout"], [168, 1, 1, "", "set_extra_state"], [168, 1, 1, "", "set_seed"], [168, 1, 1, "", "set_spec_lock_"], [168, 1, 1, "", "set_submodule"], [168, 2, 1, "", "shape"], [168, 1, 1, "", "share_memory"], [168, 1, 1, "", "shutdown"], [168, 2, 1, "", "specs"], [168, 1, 1, "", "state_dict"], [168, 2, 1, "", "state_keys"], [168, 2, 1, "", "state_spec"], [168, 2, 1, "", "state_spec_unbatched"], [168, 1, 1, "", "step"], [168, 1, 1, "", "step_and_maybe_reset"], [168, 1, 1, "", "step_mdp"], [168, 1, 1, "", "to"], [168, 1, 1, "", "to_empty"], [168, 1, 1, "", "train"], [168, 1, 1, "", "type"], [168, 1, 1, "", "xpu"], [168, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[173, 2, 1, "", "action_key"], [173, 2, 1, "", "action_keys"], [173, 2, 1, "", "action_spec"], [173, 2, 1, "", "action_spec_unbatched"], [173, 1, 1, "", "add_module"], [173, 1, 1, "", "add_truncated_keys"], [173, 1, 1, "", "all_actions"], [173, 1, 1, "", "any_done"], [173, 1, 1, "", "append_transform"], [173, 1, 1, "", "apply"], [173, 1, 1, "", "auto_specs_"], [173, 2, 1, "", "batch_dims"], [173, 2, 1, "", "batch_locked"], [173, 2, 1, "", "batch_size"], [173, 1, 1, "", "bfloat16"], [173, 1, 1, "", "buffers"], [173, 1, 1, "", "cardinality"], [173, 1, 1, "", "check_env_specs"], [173, 1, 1, "", "children"], [173, 2, 1, "", "collector"], [173, 1, 1, "", "compile"], [173, 1, 1, "", "cpu"], [173, 1, 1, "", "cuda"], [173, 2, 1, "", "done_key"], [173, 2, 1, "", "done_keys"], [173, 2, 1, "", "done_keys_groups"], [173, 2, 1, "", "done_spec"], [173, 2, 1, "", "done_spec_unbatched"], [173, 1, 1, "", "double"], [173, 1, 1, "", "empty_cache"], [173, 1, 1, "", "eval"], [173, 1, 1, "", "extra_repr"], [173, 1, 1, "", "fake_tensordict"], [173, 1, 1, "", "float"], [173, 1, 1, "", "forward"], [173, 2, 1, "", "full_action_spec"], [173, 2, 1, "", "full_action_spec_unbatched"], [173, 2, 1, "", "full_done_spec"], [173, 2, 1, "", "full_done_spec_unbatched"], [173, 2, 1, "", "full_observation_spec_unbatched"], [173, 2, 1, "", "full_reward_spec"], [173, 2, 1, "", "full_reward_spec_unbatched"], [173, 2, 1, "", "full_state_spec"], [173, 2, 1, "", "full_state_spec_unbatched"], [173, 1, 1, "", "get_buffer"], [173, 1, 1, "", "get_extra_state"], [173, 1, 1, "", "get_parameter"], [173, 1, 1, "", "get_submodule"], [173, 1, 1, "", "half"], [173, 2, 1, "", "input_spec"], [173, 2, 1, "", "input_spec_unbatched"], [173, 1, 1, "", "ipu"], [173, 2, 1, "", "is_spec_locked"], [173, 1, 1, "", "load_state_dict"], [173, 1, 1, "", "maybe_reset"], [173, 1, 1, "", "modules"], [173, 1, 1, "", "mtia"], [173, 1, 1, "", "named_buffers"], [173, 1, 1, "", "named_children"], [173, 1, 1, "", "named_modules"], [173, 1, 1, "", "named_parameters"], [173, 2, 1, "", "observation_keys"], [173, 2, 1, "", "observation_spec"], [173, 2, 1, "", "observation_spec_unbatched"], [173, 2, 1, "", "output_spec"], [173, 2, 1, "", "output_spec_unbatched"], [173, 1, 1, "", "parameters"], [173, 1, 1, "", "rand_action"], [173, 1, 1, "", "rand_step"], [173, 1, 1, "", "register_backward_hook"], [173, 1, 1, "", "register_buffer"], [173, 1, 1, "", "register_collector"], [173, 1, 1, "", "register_forward_hook"], [173, 1, 1, "", "register_forward_pre_hook"], [173, 1, 1, "", "register_full_backward_hook"], [173, 1, 1, "", "register_full_backward_pre_hook"], [173, 1, 1, "", "register_gym"], [173, 1, 1, "", "register_load_state_dict_post_hook"], [173, 1, 1, "", "register_load_state_dict_pre_hook"], [173, 1, 1, "", "register_module"], [173, 1, 1, "", "register_parameter"], [173, 1, 1, "", "register_state_dict_post_hook"], [173, 1, 1, "", "register_state_dict_pre_hook"], [173, 1, 1, "", "requires_grad_"], [173, 1, 1, "", "reset"], [173, 2, 1, "", "reset_keys"], [173, 2, 1, "", "reward_key"], [173, 2, 1, "", "reward_keys"], [173, 2, 1, "", "reward_spec"], [173, 2, 1, "", "reward_spec_unbatched"], [173, 1, 1, "", "rollout"], [173, 1, 1, "", "set_extra_state"], [173, 1, 1, "", "set_seed"], [173, 1, 1, "", "set_spec_lock_"], [173, 1, 1, "", "set_submodule"], [173, 2, 1, "", "shape"], [173, 1, 1, "", "share_memory"], [173, 2, 1, "", "specs"], [173, 1, 1, "", "state_dict"], [173, 2, 1, "", "state_keys"], [173, 2, 1, "", "state_spec"], [173, 2, 1, "", "state_spec_unbatched"], [173, 1, 1, "", "step"], [173, 1, 1, "", "step_and_maybe_reset"], [173, 1, 1, "", "step_mdp"], [173, 1, 1, "", "to"], [173, 1, 1, "", "to_empty"], [173, 1, 1, "", "train"], [173, 1, 1, "", "type"], [173, 1, 1, "", "update_kwargs"], [173, 1, 1, "", "xpu"], [173, 1, 1, "", "zero_grad"]], "torchrl.envs.ThreadingAsyncEnvPool": [[174, 1, 1, "", "_setup"], [174, 2, 1, "", "action_key"], [174, 2, 1, "", "action_keys"], [174, 2, 1, "", "action_spec"], [174, 2, 1, "", "action_spec_unbatched"], [174, 1, 1, "", "add_module"], [174, 1, 1, "", "add_truncated_keys"], [174, 1, 1, "", "all_actions"], [174, 1, 1, "", "any_done"], [174, 1, 1, "", "append_transform"], [174, 1, 1, "", "apply"], [174, 1, 1, "", "async_reset_recv"], [174, 1, 1, "", "async_reset_send"], [174, 1, 1, "", "async_step_recv"], [174, 1, 1, "", "async_step_send"], [174, 1, 1, "", "auto_specs_"], [174, 2, 1, "", "batch_dims"], [174, 2, 1, "", "batch_locked"], [174, 2, 1, "", "batch_size"], [174, 1, 1, "", "bfloat16"], [174, 1, 1, "", "buffers"], [174, 1, 1, "", "cardinality"], [174, 1, 1, "", "check_env_specs"], [174, 1, 1, "", "children"], [174, 2, 1, "", "collector"], [174, 1, 1, "", "compile"], [174, 1, 1, "", "cpu"], [174, 1, 1, "", "cuda"], [174, 2, 1, "", "done_key"], [174, 2, 1, "", "done_keys"], [174, 2, 1, "", "done_keys_groups"], [174, 2, 1, "", "done_spec"], [174, 2, 1, "", "done_spec_unbatched"], [174, 1, 1, "", "double"], [174, 1, 1, "", "empty_cache"], [174, 2, 1, "", "env_batch_sizes"], [174, 1, 1, "", "eval"], [174, 1, 1, "", "extra_repr"], [174, 1, 1, "", "fake_tensordict"], [174, 1, 1, "", "float"], [174, 1, 1, "", "forward"], [174, 2, 1, "", "full_action_spec"], [174, 2, 1, "", "full_action_spec_unbatched"], [174, 2, 1, "", "full_done_spec"], [174, 2, 1, "", "full_done_spec_unbatched"], [174, 2, 1, "", "full_observation_spec_unbatched"], [174, 2, 1, "", "full_reward_spec"], [174, 2, 1, "", "full_reward_spec_unbatched"], [174, 2, 1, "", "full_state_spec"], [174, 2, 1, "", "full_state_spec_unbatched"], [174, 1, 1, "", "get_buffer"], [174, 1, 1, "", "get_extra_state"], [174, 1, 1, "", "get_parameter"], [174, 1, 1, "", "get_submodule"], [174, 1, 1, "", "half"], [174, 2, 1, "", "input_spec"], [174, 2, 1, "", "input_spec_unbatched"], [174, 1, 1, "", "ipu"], [174, 2, 1, "", "is_spec_locked"], [174, 1, 1, "", "load_state_dict"], [174, 1, 1, "", "maybe_reset"], [174, 1, 1, "", "modules"], [174, 1, 1, "", "mtia"], [174, 1, 1, "", "named_buffers"], [174, 1, 1, "", "named_children"], [174, 1, 1, "", "named_modules"], [174, 1, 1, "", "named_parameters"], [174, 2, 1, "", "observation_keys"], [174, 2, 1, "", "observation_spec"], [174, 2, 1, "", "observation_spec_unbatched"], [174, 2, 1, "", "output_spec"], [174, 2, 1, "", "output_spec_unbatched"], [174, 1, 1, "", "parameters"], [174, 1, 1, "", "rand_action"], [174, 1, 1, "", "rand_step"], [174, 1, 1, "", "register_backward_hook"], [174, 1, 1, "", "register_buffer"], [174, 1, 1, "", "register_collector"], [174, 1, 1, "", "register_forward_hook"], [174, 1, 1, "", "register_forward_pre_hook"], [174, 1, 1, "", "register_full_backward_hook"], [174, 1, 1, "", "register_full_backward_pre_hook"], [174, 1, 1, "", "register_gym"], [174, 1, 1, "", "register_load_state_dict_post_hook"], [174, 1, 1, "", "register_load_state_dict_pre_hook"], [174, 1, 1, "", "register_module"], [174, 1, 1, "", "register_parameter"], [174, 1, 1, "", "register_state_dict_post_hook"], [174, 1, 1, "", "register_state_dict_pre_hook"], [174, 1, 1, "", "requires_grad_"], [174, 1, 1, "", "reset"], [174, 2, 1, "", "reset_keys"], [174, 2, 1, "", "reward_key"], [174, 2, 1, "", "reward_keys"], [174, 2, 1, "", "reward_spec"], [174, 2, 1, "", "reward_spec_unbatched"], [174, 1, 1, "", "rollout"], [174, 1, 1, "", "set_extra_state"], [174, 1, 1, "", "set_seed"], [174, 1, 1, "", "set_spec_lock_"], [174, 1, 1, "", "set_submodule"], [174, 2, 1, "", "shape"], [174, 1, 1, "", "share_memory"], [174, 1, 1, "", "shutdown"], [174, 2, 1, "", "specs"], [174, 1, 1, "", "state_dict"], [174, 2, 1, "", "state_keys"], [174, 2, 1, "", "state_spec"], [174, 2, 1, "", "state_spec_unbatched"], [174, 1, 1, "", "step"], [174, 1, 1, "", "step_and_maybe_reset"], [174, 1, 1, "", "step_mdp"], [174, 1, 1, "", "to"], [174, 1, 1, "", "to_empty"], [174, 1, 1, "", "train"], [174, 1, 1, "", "type"], [174, 1, 1, "", "xpu"], [174, 1, 1, "", "zero_grad"]], "torchrl.envs.TicTacToeEnv": [[175, 2, 1, "", "action_key"], [175, 2, 1, "", "action_keys"], [175, 2, 1, "", "action_spec"], [175, 2, 1, "", "action_spec_unbatched"], [175, 1, 1, "", "add_module"], [175, 1, 1, "", "add_truncated_keys"], [175, 1, 1, "", "all_actions"], [175, 1, 1, "", "any_done"], [175, 1, 1, "", "append_transform"], [175, 1, 1, "", "apply"], [175, 1, 1, "", "auto_specs_"], [175, 2, 1, "", "batch_dims"], [175, 2, 1, "", "batch_size"], [175, 1, 1, "", "bfloat16"], [175, 1, 1, "", "buffers"], [175, 1, 1, "", "cardinality"], [175, 1, 1, "", "check_env_specs"], [175, 1, 1, "", "children"], [175, 2, 1, "", "collector"], [175, 1, 1, "", "compile"], [175, 1, 1, "", "cpu"], [175, 1, 1, "", "cuda"], [175, 2, 1, "", "done_key"], [175, 2, 1, "", "done_keys"], [175, 2, 1, "", "done_keys_groups"], [175, 2, 1, "", "done_spec"], [175, 2, 1, "", "done_spec_unbatched"], [175, 1, 1, "", "double"], [175, 1, 1, "", "empty_cache"], [175, 1, 1, "", "eval"], [175, 1, 1, "", "extra_repr"], [175, 1, 1, "", "fake_tensordict"], [175, 1, 1, "", "float"], [175, 1, 1, "", "forward"], [175, 2, 1, "", "full_action_spec"], [175, 2, 1, "", "full_action_spec_unbatched"], [175, 2, 1, "", "full_done_spec"], [175, 2, 1, "", "full_done_spec_unbatched"], [175, 2, 1, "", "full_observation_spec_unbatched"], [175, 2, 1, "", "full_reward_spec"], [175, 2, 1, "", "full_reward_spec_unbatched"], [175, 2, 1, "", "full_state_spec"], [175, 2, 1, "", "full_state_spec_unbatched"], [175, 1, 1, "", "get_buffer"], [175, 1, 1, "", "get_extra_state"], [175, 1, 1, "", "get_parameter"], [175, 1, 1, "", "get_submodule"], [175, 1, 1, "", "half"], [175, 2, 1, "", "input_spec"], [175, 2, 1, "", "input_spec_unbatched"], [175, 1, 1, "", "ipu"], [175, 2, 1, "", "is_spec_locked"], [175, 1, 1, "", "load_state_dict"], [175, 1, 1, "", "maybe_reset"], [175, 1, 1, "", "modules"], [175, 1, 1, "", "mtia"], [175, 1, 1, "", "named_buffers"], [175, 1, 1, "", "named_children"], [175, 1, 1, "", "named_modules"], [175, 1, 1, "", "named_parameters"], [175, 2, 1, "", "observation_keys"], [175, 2, 1, "", "observation_spec"], [175, 2, 1, "", "observation_spec_unbatched"], [175, 2, 1, "", "output_spec"], [175, 2, 1, "", "output_spec_unbatched"], [175, 1, 1, "", "parameters"], [175, 1, 1, "", "rand_action"], [175, 1, 1, "", "rand_step"], [175, 1, 1, "", "register_backward_hook"], [175, 1, 1, "", "register_buffer"], [175, 1, 1, "", "register_collector"], [175, 1, 1, "", "register_forward_hook"], [175, 1, 1, "", "register_forward_pre_hook"], [175, 1, 1, "", "register_full_backward_hook"], [175, 1, 1, "", "register_full_backward_pre_hook"], [175, 1, 1, "", "register_gym"], [175, 1, 1, "", "register_load_state_dict_post_hook"], [175, 1, 1, "", "register_load_state_dict_pre_hook"], [175, 1, 1, "", "register_module"], [175, 1, 1, "", "register_parameter"], [175, 1, 1, "", "register_state_dict_post_hook"], [175, 1, 1, "", "register_state_dict_pre_hook"], [175, 1, 1, "", "requires_grad_"], [175, 1, 1, "", "reset"], [175, 2, 1, "", "reset_keys"], [175, 2, 1, "", "reward_key"], [175, 2, 1, "", "reward_keys"], [175, 2, 1, "", "reward_spec"], [175, 2, 1, "", "reward_spec_unbatched"], [175, 1, 1, "", "rollout"], [175, 1, 1, "", "set_extra_state"], [175, 1, 1, "", "set_seed"], [175, 1, 1, "", "set_spec_lock_"], [175, 1, 1, "", "set_submodule"], [175, 2, 1, "", "shape"], [175, 1, 1, "", "share_memory"], [175, 2, 1, "", "specs"], [175, 1, 1, "", "state_dict"], [175, 2, 1, "", "state_keys"], [175, 2, 1, "", "state_spec"], [175, 2, 1, "", "state_spec_unbatched"], [175, 1, 1, "", "step"], [175, 1, 1, "", "step_and_maybe_reset"], [175, 1, 1, "", "step_mdp"], [175, 1, 1, "", "to"], [175, 1, 1, "", "to_empty"], [175, 1, 1, "", "train"], [175, 1, 1, "", "type"], [175, 1, 1, "", "xpu"], [175, 1, 1, "", "zero_grad"]], "torchrl.envs.llm": [[185, 0, 1, "", "ChatEnv"], [186, 0, 1, "", "DatasetChatEnv"], [187, 0, 1, "", "GSM8KEnv"], [188, 0, 1, "", "GSM8KPrepareQuestion"], [189, 0, 1, "", "GSM8KRewardParser"], [190, 0, 1, "", "IFEvalEnv"], [191, 0, 1, "", "IFEvalScoreData"], [192, 0, 1, "", "IfEvalScorer"], [193, 0, 1, "", "LLMEnv"], [194, 0, 1, "", "LLMHashingEnv"], [195, 0, 1, "", "MLGymWrapper"], [196, 0, 1, "", "make_gsm8k_env"], [197, 0, 1, "", "make_mlgym"]], "torchrl.envs.llm.ChatEnv": [[185, 2, 1, "", "action_key"], [185, 2, 1, "", "action_keys"], [185, 2, 1, "", "action_spec"], [185, 2, 1, "", "action_spec_unbatched"], [185, 1, 1, "", "add_module"], [185, 1, 1, "", "add_truncated_keys"], [185, 1, 1, "", "all_actions"], [185, 1, 1, "", "any_done"], [185, 1, 1, "", "append_transform"], [185, 1, 1, "", "apply"], [185, 1, 1, "", "auto_specs_"], [185, 2, 1, "", "batch_dims"], [185, 2, 1, "", "batch_locked"], [185, 2, 1, "", "batch_size"], [185, 1, 1, "", "bfloat16"], [185, 1, 1, "", "buffers"], [185, 1, 1, "", "cardinality"], [185, 1, 1, "", "check_env_specs"], [185, 1, 1, "", "children"], [185, 2, 1, "", "collector"], [185, 1, 1, "", "compile"], [185, 1, 1, "", "cpu"], [185, 1, 1, "", "cuda"], [185, 2, 1, "", "done_key"], [185, 2, 1, "", "done_keys"], [185, 2, 1, "", "done_keys_groups"], [185, 2, 1, "", "done_spec"], [185, 2, 1, "", "done_spec_unbatched"], [185, 1, 1, "", "double"], [185, 1, 1, "", "empty_cache"], [185, 1, 1, "", "eval"], [185, 1, 1, "", "extra_repr"], [185, 1, 1, "", "fake_tensordict"], [185, 1, 1, "", "float"], [185, 1, 1, "", "forward"], [185, 1, 1, "", "from_dataloader"], [185, 2, 1, "", "full_action_spec"], [185, 2, 1, "", "full_action_spec_unbatched"], [185, 2, 1, "", "full_done_spec"], [185, 2, 1, "", "full_done_spec_unbatched"], [185, 2, 1, "", "full_observation_spec_unbatched"], [185, 2, 1, "", "full_reward_spec"], [185, 2, 1, "", "full_reward_spec_unbatched"], [185, 2, 1, "", "full_state_spec"], [185, 2, 1, "", "full_state_spec_unbatched"], [185, 1, 1, "", "get_buffer"], [185, 1, 1, "", "get_extra_state"], [185, 1, 1, "", "get_parameter"], [185, 1, 1, "", "get_submodule"], [185, 1, 1, "", "half"], [185, 2, 1, "", "input_spec"], [185, 2, 1, "", "input_spec_unbatched"], [185, 1, 1, "", "ipu"], [185, 2, 1, "", "is_spec_locked"], [185, 1, 1, "", "load_state_dict"], [185, 1, 1, "", "maybe_reset"], [185, 1, 1, "", "modules"], [185, 1, 1, "", "mtia"], [185, 1, 1, "", "named_buffers"], [185, 1, 1, "", "named_children"], [185, 1, 1, "", "named_modules"], [185, 1, 1, "", "named_parameters"], [185, 2, 1, "", "observation_keys"], [185, 2, 1, "", "observation_spec"], [185, 2, 1, "", "observation_spec_unbatched"], [185, 2, 1, "", "output_spec"], [185, 2, 1, "", "output_spec_unbatched"], [185, 1, 1, "", "parameters"], [185, 1, 1, "", "rand_action"], [185, 1, 1, "", "rand_step"], [185, 1, 1, "", "register_backward_hook"], [185, 1, 1, "", "register_buffer"], [185, 1, 1, "", "register_collector"], [185, 1, 1, "", "register_forward_hook"], [185, 1, 1, "", "register_forward_pre_hook"], [185, 1, 1, "", "register_full_backward_hook"], [185, 1, 1, "", "register_full_backward_pre_hook"], [185, 1, 1, "", "register_gym"], [185, 1, 1, "", "register_load_state_dict_post_hook"], [185, 1, 1, "", "register_load_state_dict_pre_hook"], [185, 1, 1, "", "register_module"], [185, 1, 1, "", "register_parameter"], [185, 1, 1, "", "register_state_dict_post_hook"], [185, 1, 1, "", "register_state_dict_pre_hook"], [185, 1, 1, "", "requires_grad_"], [185, 1, 1, "id0", "reset"], [185, 2, 1, "", "reset_keys"], [185, 2, 1, "", "reward_key"], [185, 2, 1, "", "reward_keys"], [185, 2, 1, "", "reward_spec"], [185, 2, 1, "", "reward_spec_unbatched"], [185, 1, 1, "", "rollout"], [185, 1, 1, "", "set_extra_state"], [185, 1, 1, "", "set_seed"], [185, 1, 1, "", "set_spec_lock_"], [185, 1, 1, "", "set_submodule"], [185, 2, 1, "", "shape"], [185, 1, 1, "", "share_memory"], [185, 2, 1, "", "specs"], [185, 1, 1, "", "state_dict"], [185, 2, 1, "", "state_keys"], [185, 2, 1, "", "state_spec"], [185, 2, 1, "", "state_spec_unbatched"], [185, 1, 1, "id1", "step"], [185, 1, 1, "", "step_and_maybe_reset"], [185, 1, 1, "", "step_mdp"], [185, 1, 1, "", "to"], [185, 1, 1, "", "to_empty"], [185, 1, 1, "", "train"], [185, 1, 1, "", "type"], [185, 1, 1, "", "xpu"], [185, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.DatasetChatEnv": [[186, 2, 1, "", "action_key"], [186, 2, 1, "", "action_keys"], [186, 2, 1, "", "action_spec"], [186, 2, 1, "", "action_spec_unbatched"], [186, 1, 1, "", "add_module"], [186, 1, 1, "", "add_truncated_keys"], [186, 1, 1, "", "all_actions"], [186, 1, 1, "", "any_done"], [186, 1, 1, "", "append_transform"], [186, 1, 1, "", "apply"], [186, 1, 1, "", "auto_specs_"], [186, 2, 1, "", "batch_dims"], [186, 2, 1, "", "batch_locked"], [186, 2, 1, "", "batch_size"], [186, 1, 1, "", "bfloat16"], [186, 1, 1, "", "buffers"], [186, 1, 1, "", "cardinality"], [186, 1, 1, "", "check_env_specs"], [186, 1, 1, "", "children"], [186, 2, 1, "", "collector"], [186, 1, 1, "", "compile"], [186, 1, 1, "", "cpu"], [186, 1, 1, "", "cuda"], [186, 2, 1, "", "done_key"], [186, 2, 1, "", "done_keys"], [186, 2, 1, "", "done_keys_groups"], [186, 2, 1, "", "done_spec"], [186, 2, 1, "", "done_spec_unbatched"], [186, 1, 1, "", "double"], [186, 1, 1, "", "empty_cache"], [186, 1, 1, "", "eval"], [186, 1, 1, "", "extra_repr"], [186, 1, 1, "", "fake_tensordict"], [186, 1, 1, "", "float"], [186, 1, 1, "", "forward"], [186, 1, 1, "", "from_dataloader"], [186, 2, 1, "", "full_action_spec"], [186, 2, 1, "", "full_action_spec_unbatched"], [186, 2, 1, "", "full_done_spec"], [186, 2, 1, "", "full_done_spec_unbatched"], [186, 2, 1, "", "full_observation_spec_unbatched"], [186, 2, 1, "", "full_reward_spec"], [186, 2, 1, "", "full_reward_spec_unbatched"], [186, 2, 1, "", "full_state_spec"], [186, 2, 1, "", "full_state_spec_unbatched"], [186, 1, 1, "", "get_buffer"], [186, 1, 1, "", "get_extra_state"], [186, 1, 1, "", "get_parameter"], [186, 1, 1, "", "get_submodule"], [186, 1, 1, "", "half"], [186, 2, 1, "", "input_spec"], [186, 2, 1, "", "input_spec_unbatched"], [186, 1, 1, "", "insert_transform"], [186, 1, 1, "", "ipu"], [186, 2, 1, "", "is_spec_locked"], [186, 1, 1, "", "load_state_dict"], [186, 1, 1, "", "maybe_reset"], [186, 1, 1, "", "modules"], [186, 1, 1, "", "mtia"], [186, 1, 1, "", "named_buffers"], [186, 1, 1, "", "named_children"], [186, 1, 1, "", "named_modules"], [186, 1, 1, "", "named_parameters"], [186, 2, 1, "", "observation_keys"], [186, 2, 1, "", "observation_spec"], [186, 2, 1, "", "observation_spec_unbatched"], [186, 2, 1, "", "output_spec"], [186, 2, 1, "", "output_spec_unbatched"], [186, 1, 1, "", "parameters"], [186, 1, 1, "", "rand_action"], [186, 1, 1, "", "rand_step"], [186, 1, 1, "", "register_backward_hook"], [186, 1, 1, "", "register_buffer"], [186, 1, 1, "", "register_collector"], [186, 1, 1, "", "register_forward_hook"], [186, 1, 1, "", "register_forward_pre_hook"], [186, 1, 1, "", "register_full_backward_hook"], [186, 1, 1, "", "register_full_backward_pre_hook"], [186, 1, 1, "", "register_gym"], [186, 1, 1, "", "register_load_state_dict_post_hook"], [186, 1, 1, "", "register_load_state_dict_pre_hook"], [186, 1, 1, "", "register_module"], [186, 1, 1, "", "register_parameter"], [186, 1, 1, "", "register_state_dict_post_hook"], [186, 1, 1, "", "register_state_dict_pre_hook"], [186, 1, 1, "", "requires_grad_"], [186, 1, 1, "", "reset"], [186, 1, 1, "", "reset_dataloader"], [186, 2, 1, "", "reset_keys"], [186, 2, 1, "", "reward_key"], [186, 2, 1, "", "reward_keys"], [186, 2, 1, "", "reward_spec"], [186, 2, 1, "", "reward_spec_unbatched"], [186, 1, 1, "", "rollout"], [186, 1, 1, "", "set_extra_state"], [186, 1, 1, "", "set_missing_tolerance"], [186, 1, 1, "", "set_seed"], [186, 1, 1, "", "set_spec_lock_"], [186, 1, 1, "", "set_submodule"], [186, 2, 1, "", "shape"], [186, 1, 1, "", "share_memory"], [186, 2, 1, "", "specs"], [186, 1, 1, "", "state_dict"], [186, 2, 1, "", "state_keys"], [186, 2, 1, "", "state_spec"], [186, 2, 1, "", "state_spec_unbatched"], [186, 1, 1, "", "step"], [186, 1, 1, "", "step_and_maybe_reset"], [186, 1, 1, "", "step_mdp"], [186, 1, 1, "", "to"], [186, 1, 1, "", "to_empty"], [186, 1, 1, "", "train"], [186, 1, 1, "", "type"], [186, 1, 1, "", "xpu"], [186, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KEnv": [[187, 2, 1, "", "action_key"], [187, 2, 1, "", "action_keys"], [187, 2, 1, "", "action_spec"], [187, 2, 1, "", "action_spec_unbatched"], [187, 1, 1, "", "add_module"], [187, 1, 1, "", "add_truncated_keys"], [187, 1, 1, "", "all_actions"], [187, 1, 1, "", "any_done"], [187, 1, 1, "", "append_transform"], [187, 1, 1, "", "apply"], [187, 1, 1, "", "auto_specs_"], [187, 2, 1, "", "batch_dims"], [187, 2, 1, "", "batch_locked"], [187, 2, 1, "", "batch_size"], [187, 1, 1, "", "bfloat16"], [187, 1, 1, "", "buffers"], [187, 1, 1, "", "cardinality"], [187, 1, 1, "", "check_env_specs"], [187, 1, 1, "", "children"], [187, 2, 1, "", "collector"], [187, 1, 1, "", "compile"], [187, 1, 1, "", "cpu"], [187, 1, 1, "", "cuda"], [187, 2, 1, "", "done_key"], [187, 2, 1, "", "done_keys"], [187, 2, 1, "", "done_keys_groups"], [187, 2, 1, "", "done_spec"], [187, 2, 1, "", "done_spec_unbatched"], [187, 1, 1, "", "double"], [187, 1, 1, "", "empty_cache"], [187, 1, 1, "", "eval"], [187, 1, 1, "", "extra_repr"], [187, 1, 1, "", "fake_tensordict"], [187, 1, 1, "", "float"], [187, 1, 1, "", "forward"], [187, 1, 1, "", "from_dataloader"], [187, 2, 1, "", "full_action_spec"], [187, 2, 1, "", "full_action_spec_unbatched"], [187, 2, 1, "", "full_done_spec"], [187, 2, 1, "", "full_done_spec_unbatched"], [187, 2, 1, "", "full_observation_spec_unbatched"], [187, 2, 1, "", "full_reward_spec"], [187, 2, 1, "", "full_reward_spec_unbatched"], [187, 2, 1, "", "full_state_spec"], [187, 2, 1, "", "full_state_spec_unbatched"], [187, 1, 1, "", "get_buffer"], [187, 1, 1, "", "get_extra_state"], [187, 1, 1, "", "get_parameter"], [187, 1, 1, "", "get_submodule"], [187, 1, 1, "", "half"], [187, 2, 1, "", "input_spec"], [187, 2, 1, "", "input_spec_unbatched"], [187, 1, 1, "", "insert_transform"], [187, 1, 1, "", "ipu"], [187, 2, 1, "", "is_spec_locked"], [187, 1, 1, "", "load_state_dict"], [187, 1, 1, "", "maybe_reset"], [187, 1, 1, "", "modules"], [187, 1, 1, "", "mtia"], [187, 1, 1, "", "named_buffers"], [187, 1, 1, "", "named_children"], [187, 1, 1, "", "named_modules"], [187, 1, 1, "", "named_parameters"], [187, 2, 1, "", "observation_keys"], [187, 2, 1, "", "observation_spec"], [187, 2, 1, "", "observation_spec_unbatched"], [187, 2, 1, "", "output_spec"], [187, 2, 1, "", "output_spec_unbatched"], [187, 1, 1, "", "parameters"], [187, 1, 1, "", "rand_action"], [187, 1, 1, "", "rand_step"], [187, 1, 1, "", "register_backward_hook"], [187, 1, 1, "", "register_buffer"], [187, 1, 1, "", "register_collector"], [187, 1, 1, "", "register_forward_hook"], [187, 1, 1, "", "register_forward_pre_hook"], [187, 1, 1, "", "register_full_backward_hook"], [187, 1, 1, "", "register_full_backward_pre_hook"], [187, 1, 1, "", "register_gym"], [187, 1, 1, "", "register_load_state_dict_post_hook"], [187, 1, 1, "", "register_load_state_dict_pre_hook"], [187, 1, 1, "", "register_module"], [187, 1, 1, "", "register_parameter"], [187, 1, 1, "", "register_state_dict_post_hook"], [187, 1, 1, "", "register_state_dict_pre_hook"], [187, 1, 1, "", "requires_grad_"], [187, 1, 1, "", "reset"], [187, 1, 1, "", "reset_dataloader"], [187, 2, 1, "", "reset_keys"], [187, 2, 1, "", "reward_key"], [187, 2, 1, "", "reward_keys"], [187, 2, 1, "", "reward_spec"], [187, 2, 1, "", "reward_spec_unbatched"], [187, 1, 1, "", "rollout"], [187, 1, 1, "", "set_extra_state"], [187, 1, 1, "", "set_missing_tolerance"], [187, 1, 1, "", "set_seed"], [187, 1, 1, "", "set_spec_lock_"], [187, 1, 1, "", "set_submodule"], [187, 2, 1, "", "shape"], [187, 1, 1, "", "share_memory"], [187, 2, 1, "", "specs"], [187, 1, 1, "", "state_dict"], [187, 2, 1, "", "state_keys"], [187, 2, 1, "", "state_spec"], [187, 2, 1, "", "state_spec_unbatched"], [187, 1, 1, "", "step"], [187, 1, 1, "", "step_and_maybe_reset"], [187, 1, 1, "", "step_mdp"], [187, 1, 1, "", "to"], [187, 1, 1, "", "to_empty"], [187, 1, 1, "", "train"], [187, 1, 1, "", "type"], [187, 1, 1, "", "xpu"], [187, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KPrepareQuestion": [[188, 1, 1, "", "add_module"], [188, 1, 1, "", "apply"], [188, 1, 1, "", "bfloat16"], [188, 1, 1, "", "buffers"], [188, 1, 1, "", "children"], [188, 1, 1, "", "close"], [188, 2, 1, "", "collector"], [188, 1, 1, "", "compile"], [188, 2, 1, "", "container"], [188, 1, 1, "", "cpu"], [188, 1, 1, "", "cuda"], [188, 1, 1, "", "double"], [188, 1, 1, "", "eval"], [188, 1, 1, "", "extra_repr"], [188, 1, 1, "", "float"], [188, 1, 1, "", "forward"], [188, 1, 1, "", "get_buffer"], [188, 1, 1, "", "get_extra_state"], [188, 1, 1, "", "get_parameter"], [188, 1, 1, "", "get_submodule"], [188, 1, 1, "", "half"], [188, 1, 1, "", "init"], [188, 1, 1, "", "inv"], [188, 1, 1, "", "ipu"], [188, 1, 1, "", "load_state_dict"], [188, 1, 1, "", "modules"], [188, 1, 1, "", "mtia"], [188, 1, 1, "", "named_buffers"], [188, 1, 1, "", "named_children"], [188, 1, 1, "", "named_modules"], [188, 1, 1, "", "named_parameters"], [188, 1, 1, "", "parameters"], [188, 2, 1, "", "parent"], [188, 1, 1, "", "register_backward_hook"], [188, 1, 1, "", "register_buffer"], [188, 1, 1, "", "register_forward_hook"], [188, 1, 1, "", "register_forward_pre_hook"], [188, 1, 1, "", "register_full_backward_hook"], [188, 1, 1, "", "register_full_backward_pre_hook"], [188, 1, 1, "", "register_load_state_dict_post_hook"], [188, 1, 1, "", "register_load_state_dict_pre_hook"], [188, 1, 1, "", "register_module"], [188, 1, 1, "", "register_parameter"], [188, 1, 1, "", "register_state_dict_post_hook"], [188, 1, 1, "", "register_state_dict_pre_hook"], [188, 1, 1, "", "requires_grad_"], [188, 1, 1, "", "set_extra_state"], [188, 1, 1, "", "set_submodule"], [188, 1, 1, "", "share_memory"], [188, 1, 1, "", "state_dict"], [188, 1, 1, "", "to"], [188, 1, 1, "", "to_empty"], [188, 1, 1, "", "train"], [188, 1, 1, "", "transform_action_spec"], [188, 1, 1, "", "transform_done_spec"], [188, 1, 1, "", "transform_env_batch_size"], [188, 1, 1, "", "transform_env_device"], [188, 1, 1, "", "transform_input_spec"], [188, 1, 1, "", "transform_observation_spec"], [188, 1, 1, "", "transform_output_spec"], [188, 1, 1, "", "transform_reward_spec"], [188, 1, 1, "", "transform_state_spec"], [188, 1, 1, "", "type"], [188, 1, 1, "", "xpu"], [188, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.GSM8KRewardParser": [[189, 1, 1, "", "add_module"], [189, 1, 1, "", "apply"], [189, 1, 1, "", "bfloat16"], [189, 1, 1, "", "buffers"], [189, 1, 1, "", "children"], [189, 1, 1, "", "close"], [189, 2, 1, "", "collector"], [189, 1, 1, "", "compile"], [189, 2, 1, "", "container"], [189, 1, 1, "", "cpu"], [189, 1, 1, "", "cuda"], [189, 1, 1, "", "double"], [189, 1, 1, "", "eval"], [189, 1, 1, "", "extra_repr"], [189, 1, 1, "", "extract_tags"], [189, 1, 1, "", "float"], [189, 1, 1, "", "forward"], [189, 1, 1, "", "get_buffer"], [189, 1, 1, "", "get_extra_state"], [189, 1, 1, "", "get_parameter"], [189, 1, 1, "", "get_submodule"], [189, 1, 1, "", "half"], [189, 1, 1, "", "init"], [189, 1, 1, "", "inv"], [189, 1, 1, "", "ipu"], [189, 1, 1, "", "load_state_dict"], [189, 1, 1, "", "modules"], [189, 1, 1, "", "mtia"], [189, 1, 1, "", "named_buffers"], [189, 1, 1, "", "named_children"], [189, 1, 1, "", "named_modules"], [189, 1, 1, "", "named_parameters"], [189, 1, 1, "", "parameters"], [189, 2, 1, "", "parent"], [189, 1, 1, "", "register_backward_hook"], [189, 1, 1, "", "register_buffer"], [189, 1, 1, "", "register_forward_hook"], [189, 1, 1, "", "register_forward_pre_hook"], [189, 1, 1, "", "register_full_backward_hook"], [189, 1, 1, "", "register_full_backward_pre_hook"], [189, 1, 1, "", "register_load_state_dict_post_hook"], [189, 1, 1, "", "register_load_state_dict_pre_hook"], [189, 1, 1, "", "register_module"], [189, 1, 1, "", "register_parameter"], [189, 1, 1, "", "register_state_dict_post_hook"], [189, 1, 1, "", "register_state_dict_pre_hook"], [189, 1, 1, "", "requires_grad_"], [189, 1, 1, "", "set_extra_state"], [189, 1, 1, "", "set_submodule"], [189, 1, 1, "", "share_memory"], [189, 1, 1, "", "state_dict"], [189, 1, 1, "", "to"], [189, 1, 1, "", "to_empty"], [189, 1, 1, "", "train"], [189, 1, 1, "", "transform_action_spec"], [189, 1, 1, "", "transform_done_spec"], [189, 1, 1, "", "transform_env_batch_size"], [189, 1, 1, "", "transform_env_device"], [189, 1, 1, "", "transform_input_spec"], [189, 1, 1, "", "transform_observation_spec"], [189, 1, 1, "", "transform_output_spec"], [189, 1, 1, "", "transform_reward_spec"], [189, 1, 1, "", "transform_state_spec"], [189, 1, 1, "", "type"], [189, 1, 1, "", "xpu"], [189, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalEnv": [[190, 2, 1, "", "action_key"], [190, 2, 1, "", "action_keys"], [190, 2, 1, "", "action_spec"], [190, 2, 1, "", "action_spec_unbatched"], [190, 1, 1, "", "add_module"], [190, 1, 1, "", "add_truncated_keys"], [190, 1, 1, "", "all_actions"], [190, 1, 1, "", "any_done"], [190, 1, 1, "", "append_transform"], [190, 1, 1, "", "apply"], [190, 1, 1, "", "auto_specs_"], [190, 2, 1, "", "batch_dims"], [190, 2, 1, "", "batch_locked"], [190, 2, 1, "", "batch_size"], [190, 1, 1, "", "bfloat16"], [190, 1, 1, "", "buffers"], [190, 1, 1, "", "cardinality"], [190, 1, 1, "", "check_env_specs"], [190, 1, 1, "", "children"], [190, 2, 1, "", "collector"], [190, 1, 1, "", "compile"], [190, 1, 1, "", "cpu"], [190, 1, 1, "", "cuda"], [190, 2, 1, "", "done_key"], [190, 2, 1, "", "done_keys"], [190, 2, 1, "", "done_keys_groups"], [190, 2, 1, "", "done_spec"], [190, 2, 1, "", "done_spec_unbatched"], [190, 1, 1, "", "double"], [190, 1, 1, "", "empty_cache"], [190, 1, 1, "", "eval"], [190, 1, 1, "", "extra_repr"], [190, 1, 1, "", "fake_tensordict"], [190, 1, 1, "", "float"], [190, 1, 1, "", "forward"], [190, 1, 1, "", "from_dataloader"], [190, 2, 1, "", "full_action_spec"], [190, 2, 1, "", "full_action_spec_unbatched"], [190, 2, 1, "", "full_done_spec"], [190, 2, 1, "", "full_done_spec_unbatched"], [190, 2, 1, "", "full_observation_spec_unbatched"], [190, 2, 1, "", "full_reward_spec"], [190, 2, 1, "", "full_reward_spec_unbatched"], [190, 2, 1, "", "full_state_spec"], [190, 2, 1, "", "full_state_spec_unbatched"], [190, 1, 1, "", "get_buffer"], [190, 1, 1, "", "get_extra_state"], [190, 1, 1, "", "get_parameter"], [190, 1, 1, "", "get_submodule"], [190, 1, 1, "", "half"], [190, 2, 1, "", "input_spec"], [190, 2, 1, "", "input_spec_unbatched"], [190, 1, 1, "", "insert_transform"], [190, 1, 1, "", "ipu"], [190, 2, 1, "", "is_spec_locked"], [190, 1, 1, "", "load_state_dict"], [190, 1, 1, "", "maybe_reset"], [190, 1, 1, "", "modules"], [190, 1, 1, "", "mtia"], [190, 1, 1, "", "named_buffers"], [190, 1, 1, "", "named_children"], [190, 1, 1, "", "named_modules"], [190, 1, 1, "", "named_parameters"], [190, 2, 1, "", "observation_keys"], [190, 2, 1, "", "observation_spec"], [190, 2, 1, "", "observation_spec_unbatched"], [190, 2, 1, "", "output_spec"], [190, 2, 1, "", "output_spec_unbatched"], [190, 1, 1, "", "parameters"], [190, 1, 1, "", "rand_action"], [190, 1, 1, "", "rand_step"], [190, 1, 1, "", "register_backward_hook"], [190, 1, 1, "", "register_buffer"], [190, 1, 1, "", "register_collector"], [190, 1, 1, "", "register_forward_hook"], [190, 1, 1, "", "register_forward_pre_hook"], [190, 1, 1, "", "register_full_backward_hook"], [190, 1, 1, "", "register_full_backward_pre_hook"], [190, 1, 1, "", "register_gym"], [190, 1, 1, "", "register_load_state_dict_post_hook"], [190, 1, 1, "", "register_load_state_dict_pre_hook"], [190, 1, 1, "", "register_module"], [190, 1, 1, "", "register_parameter"], [190, 1, 1, "", "register_state_dict_post_hook"], [190, 1, 1, "", "register_state_dict_pre_hook"], [190, 1, 1, "", "requires_grad_"], [190, 1, 1, "", "reset"], [190, 1, 1, "", "reset_dataloader"], [190, 2, 1, "", "reset_keys"], [190, 2, 1, "", "reward_key"], [190, 2, 1, "", "reward_keys"], [190, 2, 1, "", "reward_spec"], [190, 2, 1, "", "reward_spec_unbatched"], [190, 1, 1, "", "rollout"], [190, 1, 1, "", "set_extra_state"], [190, 1, 1, "", "set_missing_tolerance"], [190, 1, 1, "", "set_seed"], [190, 1, 1, "", "set_spec_lock_"], [190, 1, 1, "", "set_submodule"], [190, 2, 1, "", "shape"], [190, 1, 1, "", "share_memory"], [190, 2, 1, "", "specs"], [190, 1, 1, "", "state_dict"], [190, 2, 1, "", "state_keys"], [190, 2, 1, "", "state_spec"], [190, 2, 1, "", "state_spec_unbatched"], [190, 1, 1, "", "step"], [190, 1, 1, "", "step_and_maybe_reset"], [190, 1, 1, "", "step_mdp"], [190, 1, 1, "", "to"], [190, 1, 1, "", "to_empty"], [190, 1, 1, "", "train"], [190, 1, 1, "", "type"], [190, 1, 1, "", "xpu"], [190, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.IFEvalScoreData": [[191, 2, 1, "", "device"], [191, 1, 1, "", "dumps"], [191, 1, 1, "", "fields"], [191, 1, 1, "", "from_tensordict"], [191, 1, 1, "", "get"], [191, 1, 1, "", "load"], [191, 1, 1, "", "load_"], [191, 1, 1, "", "load_memmap"], [191, 1, 1, "", "load_state_dict"], [191, 1, 1, "", "memmap"], [191, 1, 1, "", "memmap_"], [191, 1, 1, "", "memmap_like"], [191, 1, 1, "", "memmap_refresh_"], [191, 1, 1, "", "save"], [191, 1, 1, "", "set"], [191, 1, 1, "", "state_dict"], [191, 1, 1, "", "to_tensordict"], [191, 1, 1, "", "unbind"]], "torchrl.envs.llm.IfEvalScorer": [[192, 1, 1, "", "add_module"], [192, 1, 1, "", "apply"], [192, 1, 1, "", "bfloat16"], [192, 1, 1, "", "buffers"], [192, 1, 1, "", "children"], [192, 1, 1, "", "close"], [192, 2, 1, "", "collector"], [192, 1, 1, "", "compile"], [192, 2, 1, "", "container"], [192, 1, 1, "", "cpu"], [192, 1, 1, "", "cuda"], [192, 1, 1, "", "default_reward_aggregator"], [192, 1, 1, "", "double"], [192, 1, 1, "", "eval"], [192, 1, 1, "", "extra_repr"], [192, 1, 1, "", "float"], [192, 1, 1, "", "forward"], [192, 1, 1, "", "get_buffer"], [192, 1, 1, "", "get_extra_state"], [192, 1, 1, "", "get_parameter"], [192, 1, 1, "", "get_submodule"], [192, 1, 1, "", "half"], [192, 1, 1, "", "init"], [192, 1, 1, "", "inv"], [192, 1, 1, "", "ipu"], [192, 1, 1, "", "load_state_dict"], [192, 1, 1, "", "modules"], [192, 1, 1, "", "mtia"], [192, 1, 1, "", "named_buffers"], [192, 1, 1, "", "named_children"], [192, 1, 1, "", "named_modules"], [192, 1, 1, "", "named_parameters"], [192, 1, 1, "", "parameters"], [192, 2, 1, "", "parent"], [192, 1, 1, "", "register_backward_hook"], [192, 1, 1, "", "register_buffer"], [192, 1, 1, "", "register_forward_hook"], [192, 1, 1, "", "register_forward_pre_hook"], [192, 1, 1, "", "register_full_backward_hook"], [192, 1, 1, "", "register_full_backward_pre_hook"], [192, 1, 1, "", "register_load_state_dict_post_hook"], [192, 1, 1, "", "register_load_state_dict_pre_hook"], [192, 1, 1, "", "register_module"], [192, 1, 1, "", "register_parameter"], [192, 1, 1, "", "register_state_dict_post_hook"], [192, 1, 1, "", "register_state_dict_pre_hook"], [192, 1, 1, "", "requires_grad_"], [192, 1, 1, "", "set_extra_state"], [192, 1, 1, "", "set_submodule"], [192, 1, 1, "", "share_memory"], [192, 1, 1, "", "state_dict"], [192, 1, 1, "", "to"], [192, 1, 1, "", "to_empty"], [192, 1, 1, "", "train"], [192, 1, 1, "", "transform_action_spec"], [192, 1, 1, "", "transform_done_spec"], [192, 1, 1, "", "transform_env_batch_size"], [192, 1, 1, "", "transform_env_device"], [192, 1, 1, "", "transform_input_spec"], [192, 1, 1, "", "transform_observation_spec"], [192, 1, 1, "", "transform_output_spec"], [192, 1, 1, "", "transform_reward_spec"], [192, 1, 1, "", "transform_state_spec"], [192, 1, 1, "", "type"], [192, 1, 1, "", "xpu"], [192, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMEnv": [[193, 2, 1, "", "action_key"], [193, 2, 1, "", "action_keys"], [193, 2, 1, "", "action_spec"], [193, 2, 1, "", "action_spec_unbatched"], [193, 1, 1, "", "add_module"], [193, 1, 1, "", "add_truncated_keys"], [193, 1, 1, "", "all_actions"], [193, 1, 1, "", "any_done"], [193, 1, 1, "", "append_transform"], [193, 1, 1, "", "apply"], [193, 1, 1, "", "auto_specs_"], [193, 2, 1, "", "batch_dims"], [193, 2, 1, "", "batch_locked"], [193, 2, 1, "", "batch_size"], [193, 1, 1, "", "bfloat16"], [193, 1, 1, "", "buffers"], [193, 1, 1, "", "cardinality"], [193, 1, 1, "", "check_env_specs"], [193, 1, 1, "", "children"], [193, 2, 1, "", "collector"], [193, 1, 1, "", "compile"], [193, 1, 1, "", "cpu"], [193, 1, 1, "", "cuda"], [193, 2, 1, "", "done_key"], [193, 2, 1, "", "done_keys"], [193, 2, 1, "", "done_keys_groups"], [193, 2, 1, "", "done_spec"], [193, 2, 1, "", "done_spec_unbatched"], [193, 1, 1, "", "double"], [193, 1, 1, "", "empty_cache"], [193, 1, 1, "", "eval"], [193, 1, 1, "", "extra_repr"], [193, 1, 1, "", "fake_tensordict"], [193, 1, 1, "", "float"], [193, 1, 1, "", "forward"], [193, 1, 1, "id0", "from_dataloader"], [193, 2, 1, "", "full_action_spec"], [193, 2, 1, "", "full_action_spec_unbatched"], [193, 2, 1, "", "full_done_spec"], [193, 2, 1, "", "full_done_spec_unbatched"], [193, 2, 1, "", "full_observation_spec_unbatched"], [193, 2, 1, "", "full_reward_spec"], [193, 2, 1, "", "full_reward_spec_unbatched"], [193, 2, 1, "", "full_state_spec"], [193, 2, 1, "", "full_state_spec_unbatched"], [193, 1, 1, "", "get_buffer"], [193, 1, 1, "", "get_extra_state"], [193, 1, 1, "", "get_parameter"], [193, 1, 1, "", "get_submodule"], [193, 1, 1, "", "half"], [193, 2, 1, "", "input_spec"], [193, 2, 1, "", "input_spec_unbatched"], [193, 1, 1, "", "ipu"], [193, 2, 1, "", "is_spec_locked"], [193, 1, 1, "", "load_state_dict"], [193, 1, 1, "", "maybe_reset"], [193, 1, 1, "", "modules"], [193, 1, 1, "", "mtia"], [193, 1, 1, "", "named_buffers"], [193, 1, 1, "", "named_children"], [193, 1, 1, "", "named_modules"], [193, 1, 1, "", "named_parameters"], [193, 2, 1, "", "observation_keys"], [193, 2, 1, "", "observation_spec"], [193, 2, 1, "", "observation_spec_unbatched"], [193, 2, 1, "", "output_spec"], [193, 2, 1, "", "output_spec_unbatched"], [193, 1, 1, "", "parameters"], [193, 1, 1, "", "rand_action"], [193, 1, 1, "", "rand_step"], [193, 1, 1, "", "register_backward_hook"], [193, 1, 1, "", "register_buffer"], [193, 1, 1, "", "register_collector"], [193, 1, 1, "", "register_forward_hook"], [193, 1, 1, "", "register_forward_pre_hook"], [193, 1, 1, "", "register_full_backward_hook"], [193, 1, 1, "", "register_full_backward_pre_hook"], [193, 1, 1, "", "register_gym"], [193, 1, 1, "", "register_load_state_dict_post_hook"], [193, 1, 1, "", "register_load_state_dict_pre_hook"], [193, 1, 1, "", "register_module"], [193, 1, 1, "", "register_parameter"], [193, 1, 1, "", "register_state_dict_post_hook"], [193, 1, 1, "", "register_state_dict_pre_hook"], [193, 1, 1, "", "requires_grad_"], [193, 1, 1, "", "reset"], [193, 2, 1, "", "reset_keys"], [193, 2, 1, "", "reward_key"], [193, 2, 1, "", "reward_keys"], [193, 2, 1, "", "reward_spec"], [193, 2, 1, "", "reward_spec_unbatched"], [193, 1, 1, "", "rollout"], [193, 1, 1, "", "set_extra_state"], [193, 1, 1, "", "set_seed"], [193, 1, 1, "", "set_spec_lock_"], [193, 1, 1, "", "set_submodule"], [193, 2, 1, "", "shape"], [193, 1, 1, "", "share_memory"], [193, 2, 1, "", "specs"], [193, 1, 1, "", "state_dict"], [193, 2, 1, "", "state_keys"], [193, 2, 1, "", "state_spec"], [193, 2, 1, "", "state_spec_unbatched"], [193, 1, 1, "", "step"], [193, 1, 1, "", "step_and_maybe_reset"], [193, 1, 1, "", "step_mdp"], [193, 1, 1, "", "to"], [193, 1, 1, "", "to_empty"], [193, 1, 1, "", "train"], [193, 1, 1, "", "type"], [193, 1, 1, "", "xpu"], [193, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.LLMHashingEnv": [[194, 2, 1, "", "action_key"], [194, 2, 1, "", "action_keys"], [194, 2, 1, "", "action_spec"], [194, 2, 1, "", "action_spec_unbatched"], [194, 1, 1, "", "add_module"], [194, 1, 1, "", "add_truncated_keys"], [194, 1, 1, "", "all_actions"], [194, 1, 1, "", "any_done"], [194, 1, 1, "", "append_transform"], [194, 1, 1, "", "apply"], [194, 1, 1, "", "auto_specs_"], [194, 2, 1, "", "batch_dims"], [194, 2, 1, "", "batch_locked"], [194, 2, 1, "", "batch_size"], [194, 1, 1, "", "bfloat16"], [194, 1, 1, "", "buffers"], [194, 1, 1, "", "cardinality"], [194, 1, 1, "", "check_env_specs"], [194, 1, 1, "", "children"], [194, 2, 1, "", "collector"], [194, 1, 1, "", "compile"], [194, 1, 1, "", "cpu"], [194, 1, 1, "", "cuda"], [194, 2, 1, "", "done_key"], [194, 2, 1, "", "done_keys"], [194, 2, 1, "", "done_keys_groups"], [194, 2, 1, "", "done_spec"], [194, 2, 1, "", "done_spec_unbatched"], [194, 1, 1, "", "double"], [194, 1, 1, "", "empty_cache"], [194, 1, 1, "", "eval"], [194, 1, 1, "", "extra_repr"], [194, 1, 1, "", "fake_tensordict"], [194, 1, 1, "", "float"], [194, 1, 1, "", "forward"], [194, 2, 1, "", "full_action_spec"], [194, 2, 1, "", "full_action_spec_unbatched"], [194, 2, 1, "", "full_done_spec"], [194, 2, 1, "", "full_done_spec_unbatched"], [194, 2, 1, "", "full_observation_spec_unbatched"], [194, 2, 1, "", "full_reward_spec"], [194, 2, 1, "", "full_reward_spec_unbatched"], [194, 2, 1, "", "full_state_spec"], [194, 2, 1, "", "full_state_spec_unbatched"], [194, 1, 1, "", "get_buffer"], [194, 1, 1, "", "get_extra_state"], [194, 1, 1, "", "get_parameter"], [194, 1, 1, "", "get_submodule"], [194, 1, 1, "", "half"], [194, 2, 1, "", "input_spec"], [194, 2, 1, "", "input_spec_unbatched"], [194, 1, 1, "", "ipu"], [194, 2, 1, "", "is_spec_locked"], [194, 1, 1, "", "load_state_dict"], [194, 1, 1, "", "make_tensordict"], [194, 1, 1, "", "maybe_reset"], [194, 1, 1, "", "modules"], [194, 1, 1, "", "mtia"], [194, 1, 1, "", "named_buffers"], [194, 1, 1, "", "named_children"], [194, 1, 1, "", "named_modules"], [194, 1, 1, "", "named_parameters"], [194, 2, 1, "", "observation_keys"], [194, 2, 1, "", "observation_spec"], [194, 2, 1, "", "observation_spec_unbatched"], [194, 2, 1, "", "output_spec"], [194, 2, 1, "", "output_spec_unbatched"], [194, 1, 1, "", "parameters"], [194, 1, 1, "", "rand_action"], [194, 1, 1, "", "rand_step"], [194, 1, 1, "", "register_backward_hook"], [194, 1, 1, "", "register_buffer"], [194, 1, 1, "", "register_collector"], [194, 1, 1, "", "register_forward_hook"], [194, 1, 1, "", "register_forward_pre_hook"], [194, 1, 1, "", "register_full_backward_hook"], [194, 1, 1, "", "register_full_backward_pre_hook"], [194, 1, 1, "", "register_gym"], [194, 1, 1, "", "register_load_state_dict_post_hook"], [194, 1, 1, "", "register_load_state_dict_pre_hook"], [194, 1, 1, "", "register_module"], [194, 1, 1, "", "register_parameter"], [194, 1, 1, "", "register_state_dict_post_hook"], [194, 1, 1, "", "register_state_dict_pre_hook"], [194, 1, 1, "", "requires_grad_"], [194, 1, 1, "", "reset"], [194, 2, 1, "", "reset_keys"], [194, 2, 1, "", "reward_key"], [194, 2, 1, "", "reward_keys"], [194, 2, 1, "", "reward_spec"], [194, 2, 1, "", "reward_spec_unbatched"], [194, 1, 1, "", "rollout"], [194, 1, 1, "", "set_extra_state"], [194, 1, 1, "", "set_seed"], [194, 1, 1, "", "set_spec_lock_"], [194, 1, 1, "", "set_submodule"], [194, 2, 1, "", "shape"], [194, 1, 1, "", "share_memory"], [194, 2, 1, "", "specs"], [194, 1, 1, "", "state_dict"], [194, 2, 1, "", "state_keys"], [194, 2, 1, "", "state_spec"], [194, 2, 1, "", "state_spec_unbatched"], [194, 1, 1, "", "step"], [194, 1, 1, "", "step_and_maybe_reset"], [194, 1, 1, "", "step_mdp"], [194, 1, 1, "", "to"], [194, 1, 1, "", "to_empty"], [194, 1, 1, "", "train"], [194, 1, 1, "", "type"], [194, 1, 1, "", "xpu"], [194, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.MLGymWrapper": [[195, 2, 1, "", "action_key"], [195, 2, 1, "", "action_keys"], [195, 2, 1, "", "action_spec"], [195, 2, 1, "", "action_spec_unbatched"], [195, 1, 1, "", "add_module"], [195, 1, 1, "", "add_truncated_keys"], [195, 1, 1, "", "all_actions"], [195, 1, 1, "", "any_done"], [195, 1, 1, "", "append_transform"], [195, 1, 1, "", "apply"], [195, 1, 1, "", "auto_register_info_dict"], [195, 1, 1, "", "auto_specs_"], [195, 2, 1, "", "batch_dims"], [195, 2, 1, "", "batch_locked"], [195, 2, 1, "", "batch_size"], [195, 1, 1, "", "bfloat16"], [195, 1, 1, "", "buffers"], [195, 1, 1, "", "cardinality"], [195, 1, 1, "", "check_env_specs"], [195, 1, 1, "", "children"], [195, 1, 1, "", "close"], [195, 2, 1, "", "collector"], [195, 1, 1, "", "compile"], [195, 1, 1, "", "cpu"], [195, 1, 1, "", "cuda"], [195, 2, 1, "", "done_key"], [195, 2, 1, "", "done_keys"], [195, 2, 1, "", "done_keys_groups"], [195, 2, 1, "", "done_spec"], [195, 2, 1, "", "done_spec_unbatched"], [195, 1, 1, "", "double"], [195, 1, 1, "", "empty_cache"], [195, 1, 1, "", "eval"], [195, 1, 1, "", "extra_repr"], [195, 1, 1, "", "fake_tensordict"], [195, 1, 1, "", "fast_encoding"], [195, 1, 1, "", "float"], [195, 1, 1, "", "forward"], [195, 2, 1, "", "full_action_spec"], [195, 2, 1, "", "full_action_spec_unbatched"], [195, 2, 1, "", "full_done_spec"], [195, 2, 1, "", "full_done_spec_unbatched"], [195, 2, 1, "", "full_observation_spec_unbatched"], [195, 2, 1, "", "full_reward_spec"], [195, 2, 1, "", "full_reward_spec_unbatched"], [195, 2, 1, "", "full_state_spec"], [195, 2, 1, "", "full_state_spec_unbatched"], [195, 1, 1, "", "get_buffer"], [195, 1, 1, "", "get_extra_state"], [195, 1, 1, "", "get_library_name"], [195, 1, 1, "", "get_parameter"], [195, 1, 1, "", "get_submodule"], [195, 1, 1, "", "half"], [195, 2, 1, "", "input_spec"], [195, 2, 1, "", "input_spec_unbatched"], [195, 1, 1, "", "ipu"], [195, 2, 1, "", "is_spec_locked"], [195, 1, 1, "", "load_state_dict"], [195, 1, 1, "", "maybe_reset"], [195, 1, 1, "", "modules"], [195, 1, 1, "", "mtia"], [195, 1, 1, "", "named_buffers"], [195, 1, 1, "", "named_children"], [195, 1, 1, "", "named_modules"], [195, 1, 1, "", "named_parameters"], [195, 2, 1, "", "observation_keys"], [195, 2, 1, "", "observation_spec"], [195, 2, 1, "", "observation_spec_unbatched"], [195, 2, 1, "", "output_spec"], [195, 2, 1, "", "output_spec_unbatched"], [195, 1, 1, "", "parameters"], [195, 1, 1, "", "rand_action"], [195, 1, 1, "", "rand_step"], [195, 1, 1, "", "read_action"], [195, 1, 1, "", "read_done"], [195, 1, 1, "", "read_obs"], [195, 1, 1, "", "read_reward"], [195, 1, 1, "", "register_backward_hook"], [195, 1, 1, "", "register_buffer"], [195, 1, 1, "", "register_collector"], [195, 1, 1, "", "register_forward_hook"], [195, 1, 1, "", "register_forward_pre_hook"], [195, 1, 1, "", "register_full_backward_hook"], [195, 1, 1, "", "register_full_backward_pre_hook"], [195, 1, 1, "", "register_gym"], [195, 1, 1, "", "register_load_state_dict_post_hook"], [195, 1, 1, "", "register_load_state_dict_pre_hook"], [195, 1, 1, "", "register_module"], [195, 1, 1, "", "register_parameter"], [195, 1, 1, "", "register_state_dict_post_hook"], [195, 1, 1, "", "register_state_dict_pre_hook"], [195, 1, 1, "", "requires_grad_"], [195, 1, 1, "", "reset"], [195, 2, 1, "", "reset_keys"], [195, 2, 1, "", "reward_key"], [195, 2, 1, "", "reward_keys"], [195, 2, 1, "", "reward_spec"], [195, 2, 1, "", "reward_spec_unbatched"], [195, 1, 1, "", "rollout"], [195, 1, 1, "", "set_extra_state"], [195, 1, 1, "", "set_info_dict_reader"], [195, 1, 1, "", "set_seed"], [195, 1, 1, "", "set_spec_lock_"], [195, 1, 1, "", "set_submodule"], [195, 2, 1, "", "shape"], [195, 1, 1, "", "share_memory"], [195, 2, 1, "", "specs"], [195, 1, 1, "", "state_dict"], [195, 2, 1, "", "state_keys"], [195, 2, 1, "", "state_spec"], [195, 2, 1, "", "state_spec_unbatched"], [195, 1, 1, "", "step"], [195, 1, 1, "", "step_and_maybe_reset"], [195, 1, 1, "", "step_mdp"], [195, 1, 1, "", "to"], [195, 1, 1, "", "to_empty"], [195, 1, 1, "", "train"], [195, 1, 1, "", "type"], [195, 1, 1, "", "xpu"], [195, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms": [[198, 0, 1, "", "AddThinkingPrompt"], [199, 0, 1, "", "BrowserTransform"], [200, 0, 1, "", "DataLoadingPrimer"], [201, 0, 1, "", "KLComputation"], [202, 0, 1, "", "KLRewardTransform"], [203, 0, 1, "", "MCPToolTransform"], [204, 0, 1, "", "PolicyVersion"], [205, 0, 1, "", "PythonInterpreter"], [206, 0, 1, "", "RetrieveKL"], [207, 0, 1, "", "RetrieveLogProb"], [208, 0, 1, "", "TemplateTransform"], [209, 0, 1, "", "Tokenizer"], [210, 0, 1, "", "as_nested_tensor"], [211, 0, 1, "", "as_padded_tensor"]], "torchrl.envs.llm.transforms.AddThinkingPrompt": [[198, 1, 1, "", "add_module"], [198, 1, 1, "", "apply"], [198, 1, 1, "", "bfloat16"], [198, 1, 1, "", "buffers"], [198, 1, 1, "", "children"], [198, 1, 1, "", "close"], [198, 2, 1, "", "collector"], [198, 1, 1, "", "compile"], [198, 2, 1, "", "container"], [198, 1, 1, "", "cpu"], [198, 1, 1, "", "cuda"], [198, 1, 1, "", "double"], [198, 1, 1, "", "eval"], [198, 1, 1, "", "extra_repr"], [198, 1, 1, "", "float"], [198, 1, 1, "", "forward"], [198, 1, 1, "", "get_buffer"], [198, 1, 1, "", "get_extra_state"], [198, 1, 1, "", "get_parameter"], [198, 1, 1, "", "get_submodule"], [198, 1, 1, "", "half"], [198, 1, 1, "", "init"], [198, 1, 1, "", "inv"], [198, 1, 1, "", "ipu"], [198, 1, 1, "", "load_state_dict"], [198, 1, 1, "", "modules"], [198, 1, 1, "", "mtia"], [198, 1, 1, "", "named_buffers"], [198, 1, 1, "", "named_children"], [198, 1, 1, "", "named_modules"], [198, 1, 1, "", "named_parameters"], [198, 1, 1, "", "parameters"], [198, 2, 1, "", "parent"], [198, 1, 1, "", "register_backward_hook"], [198, 1, 1, "", "register_buffer"], [198, 1, 1, "", "register_forward_hook"], [198, 1, 1, "", "register_forward_pre_hook"], [198, 1, 1, "", "register_full_backward_hook"], [198, 1, 1, "", "register_full_backward_pre_hook"], [198, 1, 1, "", "register_load_state_dict_post_hook"], [198, 1, 1, "", "register_load_state_dict_pre_hook"], [198, 1, 1, "", "register_module"], [198, 1, 1, "", "register_parameter"], [198, 1, 1, "", "register_state_dict_post_hook"], [198, 1, 1, "", "register_state_dict_pre_hook"], [198, 1, 1, "", "requires_grad_"], [198, 1, 1, "", "set_extra_state"], [198, 1, 1, "", "set_submodule"], [198, 1, 1, "", "share_memory"], [198, 1, 1, "", "state_dict"], [198, 1, 1, "", "to"], [198, 1, 1, "", "to_empty"], [198, 1, 1, "", "train"], [198, 1, 1, "", "transform_action_spec"], [198, 1, 1, "", "transform_done_spec"], [198, 1, 1, "", "transform_env_batch_size"], [198, 1, 1, "", "transform_env_device"], [198, 1, 1, "", "transform_input_spec"], [198, 1, 1, "", "transform_observation_spec"], [198, 1, 1, "", "transform_output_spec"], [198, 1, 1, "", "transform_reward_spec"], [198, 1, 1, "", "transform_state_spec"], [198, 1, 1, "", "type"], [198, 1, 1, "", "xpu"], [198, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.BrowserTransform": [[199, 1, 1, "", "add_module"], [199, 1, 1, "", "apply"], [199, 1, 1, "", "bfloat16"], [199, 1, 1, "", "buffers"], [199, 1, 1, "", "children"], [199, 1, 1, "", "clone"], [199, 1, 1, "", "close"], [199, 2, 1, "", "collector"], [199, 1, 1, "", "compile"], [199, 2, 1, "", "container"], [199, 1, 1, "", "cpu"], [199, 1, 1, "", "cuda"], [199, 1, 1, "", "double"], [199, 1, 1, "", "eval"], [199, 1, 1, "", "extra_repr"], [199, 1, 1, "", "float"], [199, 1, 1, "", "forward"], [199, 1, 1, "", "get_buffer"], [199, 1, 1, "", "get_extra_state"], [199, 1, 1, "", "get_parameter"], [199, 1, 1, "", "get_submodule"], [199, 1, 1, "", "half"], [199, 1, 1, "", "init"], [199, 1, 1, "", "inv"], [199, 1, 1, "", "ipu"], [199, 1, 1, "", "load_state_dict"], [199, 1, 1, "", "modules"], [199, 1, 1, "", "mtia"], [199, 1, 1, "", "named_buffers"], [199, 1, 1, "", "named_children"], [199, 1, 1, "", "named_modules"], [199, 1, 1, "", "named_parameters"], [199, 1, 1, "", "parameters"], [199, 2, 1, "", "parent"], [199, 1, 1, "", "register_backward_hook"], [199, 1, 1, "", "register_buffer"], [199, 1, 1, "", "register_forward_hook"], [199, 1, 1, "", "register_forward_pre_hook"], [199, 1, 1, "", "register_full_backward_hook"], [199, 1, 1, "", "register_full_backward_pre_hook"], [199, 1, 1, "", "register_load_state_dict_post_hook"], [199, 1, 1, "", "register_load_state_dict_pre_hook"], [199, 1, 1, "", "register_module"], [199, 1, 1, "", "register_parameter"], [199, 1, 1, "", "register_state_dict_post_hook"], [199, 1, 1, "", "register_state_dict_pre_hook"], [199, 1, 1, "", "requires_grad_"], [199, 1, 1, "", "set_extra_state"], [199, 1, 1, "", "set_submodule"], [199, 1, 1, "", "share_memory"], [199, 1, 1, "", "state_dict"], [199, 1, 1, "", "to"], [199, 1, 1, "", "to_empty"], [199, 1, 1, "", "train"], [199, 1, 1, "", "transform_action_spec"], [199, 1, 1, "", "transform_done_spec"], [199, 1, 1, "", "transform_env_batch_size"], [199, 1, 1, "", "transform_env_device"], [199, 1, 1, "", "transform_input_spec"], [199, 1, 1, "", "transform_observation_spec"], [199, 1, 1, "", "transform_output_spec"], [199, 1, 1, "", "transform_reward_spec"], [199, 1, 1, "", "transform_state_spec"], [199, 1, 1, "", "type"], [199, 1, 1, "", "xpu"], [199, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.DataLoadingPrimer": [[200, 1, 1, "", "add_module"], [200, 1, 1, "", "apply"], [200, 1, 1, "", "bfloat16"], [200, 1, 1, "", "buffers"], [200, 1, 1, "", "children"], [200, 1, 1, "", "close"], [200, 2, 1, "", "collector"], [200, 1, 1, "", "compile"], [200, 2, 1, "", "container"], [200, 1, 1, "", "cpu"], [200, 1, 1, "", "cuda"], [200, 1, 1, "", "double"], [200, 1, 1, "", "eval"], [200, 1, 1, "", "extra_repr"], [200, 1, 1, "", "float"], [200, 1, 1, "", "forward"], [200, 1, 1, "", "get_buffer"], [200, 1, 1, "", "get_extra_state"], [200, 1, 1, "", "get_parameter"], [200, 1, 1, "", "get_submodule"], [200, 1, 1, "", "half"], [200, 1, 1, "", "init"], [200, 1, 1, "", "inv"], [200, 1, 1, "", "ipu"], [200, 1, 1, "", "load_state_dict"], [200, 1, 1, "", "modules"], [200, 1, 1, "", "mtia"], [200, 1, 1, "", "named_buffers"], [200, 1, 1, "", "named_children"], [200, 1, 1, "", "named_modules"], [200, 1, 1, "", "named_parameters"], [200, 1, 1, "", "parameters"], [200, 2, 1, "", "parent"], [200, 1, 1, "", "register_backward_hook"], [200, 1, 1, "", "register_buffer"], [200, 1, 1, "", "register_forward_hook"], [200, 1, 1, "", "register_forward_pre_hook"], [200, 1, 1, "", "register_full_backward_hook"], [200, 1, 1, "", "register_full_backward_pre_hook"], [200, 1, 1, "", "register_load_state_dict_post_hook"], [200, 1, 1, "", "register_load_state_dict_pre_hook"], [200, 1, 1, "", "register_module"], [200, 1, 1, "", "register_parameter"], [200, 1, 1, "", "register_state_dict_post_hook"], [200, 1, 1, "", "register_state_dict_pre_hook"], [200, 1, 1, "", "requires_grad_"], [200, 1, 1, "", "reset_dataloader"], [200, 1, 1, "", "set_extra_state"], [200, 1, 1, "", "set_submodule"], [200, 1, 1, "", "share_memory"], [200, 1, 1, "", "state_dict"], [200, 1, 1, "", "to"], [200, 1, 1, "", "to_empty"], [200, 1, 1, "", "train"], [200, 1, 1, "", "transform_action_spec"], [200, 1, 1, "", "transform_done_spec"], [200, 1, 1, "", "transform_env_batch_size"], [200, 1, 1, "", "transform_env_device"], [200, 1, 1, "", "transform_input_spec"], [200, 1, 1, "", "transform_observation_spec"], [200, 1, 1, "", "transform_output_spec"], [200, 1, 1, "", "transform_reward_spec"], [200, 1, 1, "", "transform_state_spec"], [200, 1, 1, "", "type"], [200, 1, 1, "", "xpu"], [200, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLComputation": [[201, 1, 1, "", "add_module"], [201, 1, 1, "", "apply"], [201, 1, 1, "", "bfloat16"], [201, 1, 1, "", "buffers"], [201, 1, 1, "", "children"], [201, 1, 1, "", "close"], [201, 2, 1, "", "collector"], [201, 1, 1, "", "compile"], [201, 2, 1, "", "container"], [201, 1, 1, "", "cpu"], [201, 1, 1, "", "cuda"], [201, 1, 1, "", "double"], [201, 1, 1, "", "eval"], [201, 1, 1, "", "extra_repr"], [201, 1, 1, "", "float"], [201, 1, 1, "", "forward"], [201, 1, 1, "", "get_buffer"], [201, 1, 1, "", "get_extra_state"], [201, 1, 1, "", "get_parameter"], [201, 1, 1, "", "get_submodule"], [201, 1, 1, "", "half"], [201, 1, 1, "", "init"], [201, 1, 1, "", "inv"], [201, 1, 1, "", "ipu"], [201, 1, 1, "", "load_state_dict"], [201, 1, 1, "", "modules"], [201, 1, 1, "", "mtia"], [201, 1, 1, "", "named_buffers"], [201, 1, 1, "", "named_children"], [201, 1, 1, "", "named_modules"], [201, 1, 1, "", "named_parameters"], [201, 1, 1, "", "parameters"], [201, 2, 1, "", "parent"], [201, 1, 1, "", "register_backward_hook"], [201, 1, 1, "", "register_buffer"], [201, 1, 1, "", "register_forward_hook"], [201, 1, 1, "", "register_forward_pre_hook"], [201, 1, 1, "", "register_full_backward_hook"], [201, 1, 1, "", "register_full_backward_pre_hook"], [201, 1, 1, "", "register_load_state_dict_post_hook"], [201, 1, 1, "", "register_load_state_dict_pre_hook"], [201, 1, 1, "", "register_module"], [201, 1, 1, "", "register_parameter"], [201, 1, 1, "", "register_state_dict_post_hook"], [201, 1, 1, "", "register_state_dict_pre_hook"], [201, 1, 1, "", "requires_grad_"], [201, 1, 1, "", "set_extra_state"], [201, 1, 1, "", "set_submodule"], [201, 1, 1, "", "share_memory"], [201, 1, 1, "", "state_dict"], [201, 1, 1, "", "to"], [201, 1, 1, "", "to_empty"], [201, 1, 1, "", "train"], [201, 1, 1, "", "transform_action_spec"], [201, 1, 1, "", "transform_done_spec"], [201, 1, 1, "", "transform_env_batch_size"], [201, 1, 1, "", "transform_env_device"], [201, 1, 1, "", "transform_input_spec"], [201, 1, 1, "", "transform_observation_spec"], [201, 1, 1, "", "transform_output_spec"], [201, 1, 1, "", "transform_reward_spec"], [201, 1, 1, "", "transform_state_spec"], [201, 1, 1, "", "type"], [201, 1, 1, "", "xpu"], [201, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.KLRewardTransform": [[202, 1, 1, "", "add_module"], [202, 1, 1, "", "apply"], [202, 1, 1, "", "bfloat16"], [202, 1, 1, "", "buffers"], [202, 1, 1, "", "children"], [202, 1, 1, "", "close"], [202, 2, 1, "", "collector"], [202, 1, 1, "", "compile"], [202, 2, 1, "", "container"], [202, 1, 1, "", "cpu"], [202, 1, 1, "", "cuda"], [202, 1, 1, "", "double"], [202, 1, 1, "", "eval"], [202, 1, 1, "", "extra_repr"], [202, 1, 1, "", "float"], [202, 1, 1, "", "forward"], [202, 1, 1, "", "get_buffer"], [202, 1, 1, "", "get_extra_state"], [202, 1, 1, "", "get_parameter"], [202, 1, 1, "", "get_submodule"], [202, 1, 1, "", "half"], [202, 1, 1, "", "init"], [202, 1, 1, "", "inv"], [202, 1, 1, "", "ipu"], [202, 1, 1, "", "load_state_dict"], [202, 1, 1, "", "modules"], [202, 1, 1, "", "mtia"], [202, 1, 1, "", "named_buffers"], [202, 1, 1, "", "named_children"], [202, 1, 1, "", "named_modules"], [202, 1, 1, "", "named_parameters"], [202, 1, 1, "", "parameters"], [202, 2, 1, "", "parent"], [202, 1, 1, "", "register_backward_hook"], [202, 1, 1, "", "register_buffer"], [202, 1, 1, "", "register_forward_hook"], [202, 1, 1, "", "register_forward_pre_hook"], [202, 1, 1, "", "register_full_backward_hook"], [202, 1, 1, "", "register_full_backward_pre_hook"], [202, 1, 1, "", "register_load_state_dict_post_hook"], [202, 1, 1, "", "register_load_state_dict_pre_hook"], [202, 1, 1, "", "register_module"], [202, 1, 1, "", "register_parameter"], [202, 1, 1, "", "register_state_dict_post_hook"], [202, 1, 1, "", "register_state_dict_pre_hook"], [202, 1, 1, "", "requires_grad_"], [202, 1, 1, "", "set_extra_state"], [202, 1, 1, "", "set_submodule"], [202, 1, 1, "", "share_memory"], [202, 1, 1, "", "state_dict"], [202, 1, 1, "", "to"], [202, 1, 1, "", "to_empty"], [202, 1, 1, "", "train"], [202, 1, 1, "", "transform_action_spec"], [202, 1, 1, "", "transform_done_spec"], [202, 1, 1, "", "transform_env_batch_size"], [202, 1, 1, "", "transform_env_device"], [202, 1, 1, "", "transform_input_spec"], [202, 1, 1, "", "transform_observation_spec"], [202, 1, 1, "", "transform_output_spec"], [202, 1, 1, "", "transform_reward_spec"], [202, 1, 1, "", "transform_state_spec"], [202, 1, 1, "", "type"], [202, 1, 1, "", "xpu"], [202, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.MCPToolTransform": [[203, 1, 1, "", "add_module"], [203, 1, 1, "", "apply"], [203, 1, 1, "", "bfloat16"], [203, 1, 1, "", "buffers"], [203, 1, 1, "", "children"], [203, 1, 1, "", "close"], [203, 2, 1, "", "collector"], [203, 1, 1, "", "compile"], [203, 2, 1, "", "container"], [203, 1, 1, "", "cpu"], [203, 1, 1, "", "cuda"], [203, 1, 1, "", "double"], [203, 1, 1, "", "eval"], [203, 1, 1, "", "extra_repr"], [203, 1, 1, "", "float"], [203, 1, 1, "", "forward"], [203, 1, 1, "", "get_buffer"], [203, 1, 1, "", "get_extra_state"], [203, 1, 1, "", "get_parameter"], [203, 1, 1, "", "get_submodule"], [203, 1, 1, "", "half"], [203, 1, 1, "", "init"], [203, 1, 1, "", "inv"], [203, 1, 1, "", "ipu"], [203, 1, 1, "", "load_state_dict"], [203, 1, 1, "", "modules"], [203, 1, 1, "", "mtia"], [203, 1, 1, "", "named_buffers"], [203, 1, 1, "", "named_children"], [203, 1, 1, "", "named_modules"], [203, 1, 1, "", "named_parameters"], [203, 1, 1, "", "parameters"], [203, 2, 1, "", "parent"], [203, 1, 1, "", "register_backward_hook"], [203, 1, 1, "", "register_buffer"], [203, 1, 1, "", "register_forward_hook"], [203, 1, 1, "", "register_forward_pre_hook"], [203, 1, 1, "", "register_full_backward_hook"], [203, 1, 1, "", "register_full_backward_pre_hook"], [203, 1, 1, "", "register_load_state_dict_post_hook"], [203, 1, 1, "", "register_load_state_dict_pre_hook"], [203, 1, 1, "", "register_module"], [203, 1, 1, "", "register_parameter"], [203, 1, 1, "", "register_state_dict_post_hook"], [203, 1, 1, "", "register_state_dict_pre_hook"], [203, 1, 1, "", "requires_grad_"], [203, 1, 1, "", "set_extra_state"], [203, 1, 1, "", "set_submodule"], [203, 1, 1, "", "share_memory"], [203, 1, 1, "", "state_dict"], [203, 1, 1, "", "to"], [203, 1, 1, "", "to_empty"], [203, 1, 1, "", "train"], [203, 1, 1, "", "transform_action_spec"], [203, 1, 1, "", "transform_done_spec"], [203, 1, 1, "", "transform_env_batch_size"], [203, 1, 1, "", "transform_env_device"], [203, 1, 1, "", "transform_input_spec"], [203, 1, 1, "", "transform_observation_spec"], [203, 1, 1, "", "transform_output_spec"], [203, 1, 1, "", "transform_reward_spec"], [203, 1, 1, "", "transform_state_spec"], [203, 1, 1, "", "type"], [203, 1, 1, "", "xpu"], [203, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PolicyVersion": [[204, 1, 1, "", "add_module"], [204, 1, 1, "", "apply"], [204, 1, 1, "", "bfloat16"], [204, 1, 1, "", "buffers"], [204, 1, 1, "", "children"], [204, 1, 1, "", "close"], [204, 2, 1, "", "collector"], [204, 1, 1, "", "compile"], [204, 2, 1, "", "container"], [204, 1, 1, "", "cpu"], [204, 1, 1, "", "cuda"], [204, 1, 1, "", "double"], [204, 1, 1, "", "eval"], [204, 1, 1, "", "extra_repr"], [204, 1, 1, "", "float"], [204, 1, 1, "", "forward"], [204, 1, 1, "", "get_buffer"], [204, 1, 1, "", "get_extra_state"], [204, 1, 1, "", "get_parameter"], [204, 1, 1, "", "get_submodule"], [204, 1, 1, "", "half"], [204, 1, 1, "", "increment_version"], [204, 1, 1, "", "init"], [204, 1, 1, "", "inv"], [204, 1, 1, "", "ipu"], [204, 1, 1, "", "load_state_dict"], [204, 1, 1, "", "modules"], [204, 1, 1, "", "mtia"], [204, 1, 1, "", "named_buffers"], [204, 1, 1, "", "named_children"], [204, 1, 1, "", "named_modules"], [204, 1, 1, "", "named_parameters"], [204, 1, 1, "", "parameters"], [204, 2, 1, "", "parent"], [204, 1, 1, "", "register_backward_hook"], [204, 1, 1, "", "register_buffer"], [204, 1, 1, "", "register_forward_hook"], [204, 1, 1, "", "register_forward_pre_hook"], [204, 1, 1, "", "register_full_backward_hook"], [204, 1, 1, "", "register_full_backward_pre_hook"], [204, 1, 1, "", "register_load_state_dict_post_hook"], [204, 1, 1, "", "register_load_state_dict_pre_hook"], [204, 1, 1, "", "register_module"], [204, 1, 1, "", "register_parameter"], [204, 1, 1, "", "register_state_dict_post_hook"], [204, 1, 1, "", "register_state_dict_pre_hook"], [204, 1, 1, "", "requires_grad_"], [204, 1, 1, "", "set_extra_state"], [204, 1, 1, "", "set_submodule"], [204, 1, 1, "", "share_memory"], [204, 1, 1, "", "state_dict"], [204, 1, 1, "", "to"], [204, 1, 1, "", "to_empty"], [204, 1, 1, "", "train"], [204, 1, 1, "", "transform_action_spec"], [204, 1, 1, "", "transform_done_spec"], [204, 1, 1, "", "transform_env_batch_size"], [204, 1, 1, "", "transform_env_device"], [204, 1, 1, "", "transform_input_spec"], [204, 1, 1, "", "transform_observation_spec"], [204, 1, 1, "", "transform_output_spec"], [204, 1, 1, "", "transform_reward_spec"], [204, 1, 1, "", "transform_state_spec"], [204, 1, 1, "", "type"], [204, 2, 1, "", "version"], [204, 1, 1, "", "xpu"], [204, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.PythonInterpreter": [[205, 1, 1, "", "add_module"], [205, 1, 1, "", "apply"], [205, 1, 1, "", "bfloat16"], [205, 1, 1, "", "buffers"], [205, 1, 1, "", "children"], [205, 1, 1, "", "clone"], [205, 1, 1, "", "close"], [205, 2, 1, "", "collector"], [205, 1, 1, "", "compile"], [205, 2, 1, "", "container"], [205, 1, 1, "", "cpu"], [205, 1, 1, "", "cuda"], [205, 1, 1, "", "double"], [205, 1, 1, "", "eval"], [205, 1, 1, "", "extra_repr"], [205, 1, 1, "", "float"], [205, 1, 1, "", "forward"], [205, 1, 1, "", "get_buffer"], [205, 1, 1, "", "get_extra_state"], [205, 1, 1, "", "get_parameter"], [205, 1, 1, "", "get_submodule"], [205, 1, 1, "", "half"], [205, 1, 1, "", "init"], [205, 1, 1, "", "inv"], [205, 1, 1, "", "ipu"], [205, 1, 1, "", "load_state_dict"], [205, 1, 1, "", "modules"], [205, 1, 1, "", "mtia"], [205, 1, 1, "", "named_buffers"], [205, 1, 1, "", "named_children"], [205, 1, 1, "", "named_modules"], [205, 1, 1, "", "named_parameters"], [205, 1, 1, "", "parameters"], [205, 2, 1, "", "parent"], [205, 1, 1, "", "register_backward_hook"], [205, 1, 1, "", "register_buffer"], [205, 1, 1, "", "register_forward_hook"], [205, 1, 1, "", "register_forward_pre_hook"], [205, 1, 1, "", "register_full_backward_hook"], [205, 1, 1, "", "register_full_backward_pre_hook"], [205, 1, 1, "", "register_load_state_dict_post_hook"], [205, 1, 1, "", "register_load_state_dict_pre_hook"], [205, 1, 1, "", "register_module"], [205, 1, 1, "", "register_parameter"], [205, 1, 1, "", "register_state_dict_post_hook"], [205, 1, 1, "", "register_state_dict_pre_hook"], [205, 1, 1, "", "requires_grad_"], [205, 1, 1, "", "set_extra_state"], [205, 1, 1, "", "set_submodule"], [205, 1, 1, "", "share_memory"], [205, 1, 1, "", "state_dict"], [205, 1, 1, "", "to"], [205, 1, 1, "", "to_empty"], [205, 1, 1, "", "train"], [205, 1, 1, "", "transform_action_spec"], [205, 1, 1, "", "transform_done_spec"], [205, 1, 1, "", "transform_env_batch_size"], [205, 1, 1, "", "transform_env_device"], [205, 1, 1, "", "transform_input_spec"], [205, 1, 1, "", "transform_observation_spec"], [205, 1, 1, "", "transform_output_spec"], [205, 1, 1, "", "transform_reward_spec"], [205, 1, 1, "", "transform_state_spec"], [205, 1, 1, "", "type"], [205, 1, 1, "", "xpu"], [205, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveKL": [[206, 1, 1, "", "add_module"], [206, 1, 1, "", "append"], [206, 1, 1, "", "apply"], [206, 1, 1, "", "bfloat16"], [206, 1, 1, "", "buffers"], [206, 1, 1, "", "children"], [206, 1, 1, "", "close"], [206, 2, 1, "", "collector"], [206, 1, 1, "", "compile"], [206, 2, 1, "", "container"], [206, 1, 1, "", "cpu"], [206, 1, 1, "", "cuda"], [206, 1, 1, "", "double"], [206, 1, 1, "", "eval"], [206, 1, 1, "", "extra_repr"], [206, 1, 1, "", "float"], [206, 1, 1, "", "forward"], [206, 1, 1, "", "get_buffer"], [206, 1, 1, "", "get_extra_state"], [206, 1, 1, "", "get_parameter"], [206, 1, 1, "", "get_submodule"], [206, 1, 1, "", "half"], [206, 1, 1, "", "init"], [206, 1, 1, "", "insert"], [206, 1, 1, "", "inv"], [206, 1, 1, "", "ipu"], [206, 1, 1, "", "load_state_dict"], [206, 1, 1, "", "modules"], [206, 1, 1, "", "mtia"], [206, 1, 1, "", "named_buffers"], [206, 1, 1, "", "named_children"], [206, 1, 1, "", "named_modules"], [206, 1, 1, "", "named_parameters"], [206, 1, 1, "", "parameters"], [206, 2, 1, "", "parent"], [206, 1, 1, "", "pop"], [206, 1, 1, "", "register_backward_hook"], [206, 1, 1, "", "register_buffer"], [206, 1, 1, "", "register_forward_hook"], [206, 1, 1, "", "register_forward_pre_hook"], [206, 1, 1, "", "register_full_backward_hook"], [206, 1, 1, "", "register_full_backward_pre_hook"], [206, 1, 1, "", "register_load_state_dict_post_hook"], [206, 1, 1, "", "register_load_state_dict_pre_hook"], [206, 1, 1, "", "register_module"], [206, 1, 1, "", "register_parameter"], [206, 1, 1, "", "register_state_dict_post_hook"], [206, 1, 1, "", "register_state_dict_pre_hook"], [206, 1, 1, "", "requires_grad_"], [206, 1, 1, "", "set_extra_state"], [206, 1, 1, "", "set_submodule"], [206, 1, 1, "", "share_memory"], [206, 1, 1, "", "state_dict"], [206, 1, 1, "", "to"], [206, 1, 1, "", "to_empty"], [206, 1, 1, "", "train"], [206, 1, 1, "", "transform_action_spec"], [206, 1, 1, "", "transform_done_spec"], [206, 1, 1, "", "transform_env_batch_size"], [206, 1, 1, "", "transform_env_device"], [206, 1, 1, "", "transform_input_spec"], [206, 1, 1, "", "transform_observation_spec"], [206, 1, 1, "", "transform_output_spec"], [206, 1, 1, "", "transform_reward_spec"], [206, 1, 1, "", "transform_state_spec"], [206, 1, 1, "", "type"], [206, 1, 1, "", "xpu"], [206, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.RetrieveLogProb": [[207, 1, 1, "", "add_module"], [207, 1, 1, "", "apply"], [207, 1, 1, "", "bfloat16"], [207, 1, 1, "", "buffers"], [207, 1, 1, "", "children"], [207, 1, 1, "", "close"], [207, 2, 1, "", "collector"], [207, 1, 1, "", "compile"], [207, 2, 1, "", "container"], [207, 1, 1, "", "cpu"], [207, 1, 1, "", "cuda"], [207, 1, 1, "", "double"], [207, 1, 1, "", "eval"], [207, 1, 1, "", "extra_repr"], [207, 1, 1, "", "float"], [207, 1, 1, "", "forward"], [207, 1, 1, "", "get_buffer"], [207, 1, 1, "", "get_extra_state"], [207, 1, 1, "", "get_parameter"], [207, 1, 1, "", "get_submodule"], [207, 1, 1, "", "half"], [207, 1, 1, "", "init"], [207, 1, 1, "", "inv"], [207, 1, 1, "", "ipu"], [207, 1, 1, "", "load_state_dict"], [207, 1, 1, "", "modules"], [207, 1, 1, "", "mtia"], [207, 1, 1, "", "named_buffers"], [207, 1, 1, "", "named_children"], [207, 1, 1, "", "named_modules"], [207, 1, 1, "", "named_parameters"], [207, 1, 1, "", "parameters"], [207, 2, 1, "", "parent"], [207, 1, 1, "", "register_backward_hook"], [207, 1, 1, "", "register_buffer"], [207, 1, 1, "", "register_forward_hook"], [207, 1, 1, "", "register_forward_pre_hook"], [207, 1, 1, "", "register_full_backward_hook"], [207, 1, 1, "", "register_full_backward_pre_hook"], [207, 1, 1, "", "register_load_state_dict_post_hook"], [207, 1, 1, "", "register_load_state_dict_pre_hook"], [207, 1, 1, "", "register_module"], [207, 1, 1, "", "register_parameter"], [207, 1, 1, "", "register_state_dict_post_hook"], [207, 1, 1, "", "register_state_dict_pre_hook"], [207, 1, 1, "", "requires_grad_"], [207, 1, 1, "", "set_extra_state"], [207, 1, 1, "", "set_submodule"], [207, 1, 1, "", "share_memory"], [207, 1, 1, "", "state_dict"], [207, 1, 1, "", "to"], [207, 1, 1, "", "to_empty"], [207, 1, 1, "", "train"], [207, 1, 1, "", "transform_action_spec"], [207, 1, 1, "", "transform_done_spec"], [207, 1, 1, "", "transform_env_batch_size"], [207, 1, 1, "", "transform_env_device"], [207, 1, 1, "", "transform_input_spec"], [207, 1, 1, "", "transform_observation_spec"], [207, 1, 1, "", "transform_output_spec"], [207, 1, 1, "", "transform_reward_spec"], [207, 1, 1, "", "transform_state_spec"], [207, 1, 1, "", "type"], [207, 1, 1, "", "xpu"], [207, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.TemplateTransform": [[208, 1, 1, "", "add_module"], [208, 1, 1, "", "apply"], [208, 1, 1, "", "bfloat16"], [208, 1, 1, "", "buffers"], [208, 1, 1, "", "children"], [208, 1, 1, "", "close"], [208, 2, 1, "", "collector"], [208, 1, 1, "", "compile"], [208, 2, 1, "", "container"], [208, 1, 1, "", "cpu"], [208, 1, 1, "", "cuda"], [208, 1, 1, "", "double"], [208, 1, 1, "", "eval"], [208, 1, 1, "", "extra_repr"], [208, 1, 1, "", "float"], [208, 1, 1, "", "forward"], [208, 1, 1, "", "get_buffer"], [208, 1, 1, "", "get_extra_state"], [208, 1, 1, "", "get_parameter"], [208, 1, 1, "", "get_submodule"], [208, 1, 1, "", "half"], [208, 1, 1, "", "init"], [208, 1, 1, "", "inv"], [208, 1, 1, "", "ipu"], [208, 1, 1, "", "load_state_dict"], [208, 1, 1, "", "modules"], [208, 1, 1, "", "mtia"], [208, 1, 1, "", "named_buffers"], [208, 1, 1, "", "named_children"], [208, 1, 1, "", "named_modules"], [208, 1, 1, "", "named_parameters"], [208, 1, 1, "", "parameters"], [208, 2, 1, "", "parent"], [208, 1, 1, "", "register_backward_hook"], [208, 1, 1, "", "register_buffer"], [208, 1, 1, "", "register_forward_hook"], [208, 1, 1, "", "register_forward_pre_hook"], [208, 1, 1, "", "register_full_backward_hook"], [208, 1, 1, "", "register_full_backward_pre_hook"], [208, 1, 1, "", "register_load_state_dict_post_hook"], [208, 1, 1, "", "register_load_state_dict_pre_hook"], [208, 1, 1, "", "register_module"], [208, 1, 1, "", "register_parameter"], [208, 1, 1, "", "register_state_dict_post_hook"], [208, 1, 1, "", "register_state_dict_pre_hook"], [208, 1, 1, "", "requires_grad_"], [208, 1, 1, "", "set_extra_state"], [208, 1, 1, "", "set_submodule"], [208, 1, 1, "", "share_memory"], [208, 1, 1, "", "state_dict"], [208, 1, 1, "", "to"], [208, 1, 1, "", "to_empty"], [208, 1, 1, "", "train"], [208, 1, 1, "", "transform_action_spec"], [208, 1, 1, "", "transform_done_spec"], [208, 1, 1, "", "transform_env_batch_size"], [208, 1, 1, "", "transform_env_device"], [208, 1, 1, "", "transform_input_spec"], [208, 1, 1, "", "transform_observation_spec"], [208, 1, 1, "", "transform_output_spec"], [208, 1, 1, "", "transform_reward_spec"], [208, 1, 1, "", "transform_state_spec"], [208, 1, 1, "", "type"], [208, 1, 1, "", "xpu"], [208, 1, 1, "", "zero_grad"]], "torchrl.envs.llm.transforms.Tokenizer": [[209, 1, 1, "", "add_module"], [209, 1, 1, "", "apply"], [209, 1, 1, "", "bfloat16"], [209, 1, 1, "", "buffers"], [209, 1, 1, "", "children"], [209, 1, 1, "", "close"], [209, 2, 1, "", "collector"], [209, 1, 1, "", "compile"], [209, 2, 1, "", "container"], [209, 1, 1, "", "cpu"], [209, 1, 1, "", "cuda"], [209, 1, 1, "", "double"], [209, 1, 1, "", "eval"], [209, 1, 1, "", "extra_repr"], [209, 1, 1, "", "float"], [209, 1, 1, "", "forward"], [209, 1, 1, "", "get_buffer"], [209, 1, 1, "", "get_extra_state"], [209, 1, 1, "", "get_parameter"], [209, 1, 1, "", "get_submodule"], [209, 1, 1, "", "half"], [209, 1, 1, "", "init"], [209, 1, 1, "", "inv"], [209, 1, 1, "", "ipu"], [209, 1, 1, "", "load_state_dict"], [209, 1, 1, "", "modules"], [209, 1, 1, "", "mtia"], [209, 1, 1, "", "named_buffers"], [209, 1, 1, "", "named_children"], [209, 1, 1, "", "named_modules"], [209, 1, 1, "", "named_parameters"], [209, 1, 1, "", "parameters"], [209, 2, 1, "", "parent"], [209, 1, 1, "", "register_backward_hook"], [209, 1, 1, "", "register_buffer"], [209, 1, 1, "", "register_forward_hook"], [209, 1, 1, "", "register_forward_pre_hook"], [209, 1, 1, "", "register_full_backward_hook"], [209, 1, 1, "", "register_full_backward_pre_hook"], [209, 1, 1, "", "register_load_state_dict_post_hook"], [209, 1, 1, "", "register_load_state_dict_pre_hook"], [209, 1, 1, "", "register_module"], [209, 1, 1, "", "register_parameter"], [209, 1, 1, "", "register_state_dict_post_hook"], [209, 1, 1, "", "register_state_dict_pre_hook"], [209, 1, 1, "", "requires_grad_"], [209, 1, 1, "", "set_extra_state"], [209, 1, 1, "", "set_submodule"], [209, 1, 1, "", "share_memory"], [209, 1, 1, "", "state_dict"], [209, 1, 1, "", "to"], [209, 1, 1, "", "to_empty"], [209, 1, 1, "", "train"], [209, 1, 1, "", "transform_action_spec"], [209, 1, 1, "", "transform_done_spec"], [209, 1, 1, "", "transform_env_batch_size"], [209, 1, 1, "", "transform_env_device"], [209, 1, 1, "", "transform_input_spec"], [209, 1, 1, "", "transform_observation_spec"], [209, 1, 1, "", "transform_output_spec"], [209, 1, 1, "", "transform_reward_spec"], [209, 1, 1, "", "transform_state_spec"], [209, 1, 1, "", "type"], [209, 1, 1, "", "xpu"], [209, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[213, 3, 1, "", "DreamerDecoder"], [214, 3, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[220, 0, 1, "", "ActionDiscretizer"], [221, 0, 1, "", "ActionMask"], [222, 0, 1, "", "AutoResetEnv"], [223, 0, 1, "", "AutoResetTransform"], [224, 0, 1, "", "BatchSizeTransform"], [225, 0, 1, "", "BinarizeReward"], [226, 0, 1, "", "BurnInTransform"], [227, 0, 1, "", "CatFrames"], [228, 0, 1, "", "CatTensors"], [229, 0, 1, "", "CenterCrop"], [230, 0, 1, "", "ClipTransform"], [231, 0, 1, "", "Compose"], [232, 0, 1, "", "ConditionalPolicySwitch"], [233, 0, 1, "", "ConditionalSkip"], [234, 0, 1, "", "Crop"], [235, 0, 1, "", "DTypeCastTransform"], [236, 0, 1, "", "DeviceCastTransform"], [237, 0, 1, "", "DiscreteActionProjection"], [238, 0, 1, "", "DoubleToFloat"], [239, 0, 1, "", "EndOfLifeTransform"], [240, 0, 1, "", "ExcludeTransform"], [241, 0, 1, "", "FiniteTensorDictCheck"], [242, 0, 1, "", "FlattenObservation"], [243, 0, 1, "", "FrameSkipTransform"], [244, 0, 1, "", "GrayScale"], [245, 0, 1, "", "Hash"], [246, 0, 1, "", "InitTracker"], [247, 0, 1, "", "KLRewardTransform"], [248, 0, 1, "", "LineariseRewards"], [249, 0, 1, "", "MultiAction"], [250, 0, 1, "", "NoopResetEnv"], [251, 0, 1, "", "ObservationNorm"], [252, 0, 1, "", "ObservationTransform"], [253, 0, 1, "", "PermuteTransform"], [254, 0, 1, "", "PinMemoryTransform"], [255, 0, 1, "", "R3MTransform"], [256, 0, 1, "", "RandomCropTensorDict"], [257, 0, 1, "", "RemoveEmptySpecs"], [258, 0, 1, "", "RenameTransform"], [259, 0, 1, "", "Resize"], [260, 0, 1, "", "Reward2GoTransform"], [261, 0, 1, "", "RewardClipping"], [262, 0, 1, "", "RewardScaling"], [263, 0, 1, "", "RewardSum"], [264, 0, 1, "", "SelectTransform"], [265, 0, 1, "", "SignTransform"], [266, 0, 1, "", "SqueezeTransform"], [267, 0, 1, "", "Stack"], [268, 0, 1, "", "StepCounter"], [269, 0, 1, "", "TargetReturn"], [270, 0, 1, "", "TensorDictPrimer"], [271, 0, 1, "", "TimeMaxPool"], [272, 0, 1, "", "Timer"], [273, 0, 1, "", "ToTensorImage"], [274, 0, 1, "", "Tokenizer"], [275, 0, 1, "", "TrajCounter"], [276, 0, 1, "", "Transform"], [277, 0, 1, "", "TransformedEnv"], [278, 0, 1, "", "UnaryTransform"], [279, 0, 1, "", "UnsqueezeTransform"], [280, 0, 1, "", "VC1Transform"], [281, 0, 1, "", "VIPRewardTransform"], [282, 0, 1, "", "VIPTransform"], [283, 0, 1, "", "VecGymEnvTransform"], [284, 0, 1, "", "VecNorm"], [285, 0, 1, "", "VecNormV2"], [286, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionDiscretizer": [[220, 0, 1, "", "SamplingStrategy"], [220, 1, 1, "", "inv"], [220, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.ActionMask": [[221, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[222, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[223, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "transform_env_batch_size"], [224, 1, 1, "", "transform_input_spec"], [224, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[225, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[226, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_rb_transform_and_sampler"], [227, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[229, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[230, 1, 1, "", "transform_observation_spec"], [230, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[231, 1, 1, "", "append"], [231, 1, 1, "", "close"], [231, 1, 1, "", "forward"], [231, 1, 1, "", "init"], [231, 1, 1, "", "insert"], [231, 1, 1, "", "pop"], [231, 1, 1, "", "to"], [231, 1, 1, "", "transform_action_spec"], [231, 1, 1, "", "transform_env_batch_size"], [231, 1, 1, "", "transform_env_device"], [231, 1, 1, "", "transform_input_spec"], [231, 1, 1, "", "transform_observation_spec"], [231, 1, 1, "", "transform_output_spec"], [231, 1, 1, "", "transform_reward_spec"], [231, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.ConditionalPolicySwitch": [[232, 1, 1, "", "forward"]], "torchrl.envs.transforms.ConditionalSkip": [[233, 1, 1, "", "forward"]], "torchrl.envs.transforms.Crop": [[234, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "transform_input_spec"], [235, 1, 1, "", "transform_observation_spec"], [235, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "transform_action_spec"], [236, 1, 1, "", "transform_done_spec"], [236, 1, 1, "", "transform_env_device"], [236, 1, 1, "", "transform_input_spec"], [236, 1, 1, "", "transform_observation_spec"], [236, 1, 1, "", "transform_output_spec"], [236, 1, 1, "", "transform_reward_spec"], [236, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[237, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "register_keys"], [239, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[241, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[243, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[244, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Hash": [[245, 1, 1, "", "get_input_from_hash"], [245, 1, 1, "", "reproducible_hash"], [245, 1, 1, "", "state_dict"]], "torchrl.envs.transforms.InitTracker": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.LineariseRewards": [[248, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.MultiAction": [[249, 1, 1, "", "transform_input_spec"], [249, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[251, 1, 1, "", "init_stats"], [251, 1, 1, "", "transform_action_spec"], [251, 1, 1, "", "transform_observation_spec"], [251, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.PermuteTransform": [[253, 1, 1, "", "transform_input_spec"], [253, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[254, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[255, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[256, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "transform_input_spec"], [257, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "transform_input_spec"], [258, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[259, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[260, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[261, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[262, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "transform_input_spec"], [263, 1, 1, "", "transform_observation_spec"], [263, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[265, 1, 1, "", "transform_observation_spec"], [265, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Stack": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "transform_done_spec"], [267, 1, 1, "", "transform_input_spec"], [267, 1, 1, "", "transform_observation_spec"], [267, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "transform_input_spec"], [268, 1, 1, "", "transform_observation_spec"], [268, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "transform_input_spec"], [269, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "to"], [270, 1, 1, "", "transform_input_spec"], [270, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Timer": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[273, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Tokenizer": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "transform_done_spec"], [274, 1, 1, "", "transform_input_spec"], [274, 1, 1, "", "transform_observation_spec"], [274, 1, 1, "", "transform_output_spec"], [274, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TrajCounter": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "load_state_dict"], [275, 1, 1, "", "state_dict"], [275, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[276, 1, 1, "", "clone"], [276, 1, 1, "", "close"], [276, 2, 1, "", "collector"], [276, 2, 1, "", "container"], [276, 1, 1, "", "forward"], [276, 1, 1, "", "init"], [276, 1, 1, "", "inv"], [276, 2, 1, "", "parent"], [276, 1, 1, "", "reset_parent"], [276, 1, 1, "", "set_container"], [276, 1, 1, "", "to"], [276, 1, 1, "", "transform_action_spec"], [276, 1, 1, "", "transform_done_spec"], [276, 1, 1, "", "transform_env_batch_size"], [276, 1, 1, "", "transform_env_device"], [276, 1, 1, "", "transform_input_spec"], [276, 1, 1, "", "transform_observation_spec"], [276, 1, 1, "", "transform_output_spec"], [276, 1, 1, "", "transform_reward_spec"], [276, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.TransformedEnv": [[277, 1, 1, "", "add_truncated_keys"], [277, 1, 1, "", "append_transform"], [277, 2, 1, "", "batch_locked"], [277, 2, 1, "", "batch_size"], [277, 1, 1, "", "empty_cache"], [277, 1, 1, "", "eval"], [277, 2, 1, "", "input_spec"], [277, 1, 1, "", "insert_transform"], [277, 1, 1, "", "load_state_dict"], [277, 2, 1, "", "output_spec"], [277, 1, 1, "", "rand_action"], [277, 1, 1, "", "set_missing_tolerance"], [277, 1, 1, "", "set_seed"], [277, 1, 1, "", "state_dict"], [277, 1, 1, "", "to"], [277, 1, 1, "", "train"]], "torchrl.envs.transforms.UnaryTransform": [[278, 1, 1, "", "transform_action_spec"], [278, 1, 1, "", "transform_done_spec"], [278, 1, 1, "", "transform_input_spec"], [278, 1, 1, "", "transform_observation_spec"], [278, 1, 1, "", "transform_output_spec"], [278, 1, 1, "", "transform_reward_spec"], [278, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.UnsqueezeTransform": [[279, 1, 1, "", "transform_action_spec"], [279, 1, 1, "", "transform_observation_spec"], [279, 1, 1, "", "transform_reward_spec"], [279, 1, 1, "", "transform_state_spec"]], "torchrl.envs.transforms.VC1Transform": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "make_noload_model"], [280, 1, 1, "", "to"], [280, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[282, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[284, 1, 1, "", "build_td_for_shared_vecnorm"], [284, 1, 1, "", "forward"], [284, 1, 1, "", "freeze"], [284, 1, 1, "", "frozen_copy"], [284, 1, 1, "", "get_extra_state"], [284, 2, 1, "", "loc"], [284, 2, 1, "", "scale"], [284, 1, 1, "", "set_extra_state"], [284, 2, 1, "", "standard_normal"], [284, 1, 1, "", "to_observation_norm"], [284, 1, 1, "", "transform_observation_spec"], [284, 1, 1, "", "unfreeze"]], "torchrl.envs.transforms.VecNormV2": [[285, 1, 1, "", "clone"], [285, 1, 1, "id0", "freeze"], [285, 1, 1, "id1", "frozen_copy"], [285, 1, 1, "id2", "get_extra_state"], [285, 2, 1, "id3", "loc"], [285, 2, 1, "id4", "scale"], [285, 1, 1, "id5", "set_extra_state"], [285, 2, 1, "id6", "standard_normal"], [285, 1, 1, "", "to_observation_norm"], [285, 1, 1, "id7", "transform_observation_spec"], [285, 1, 1, "id8", "transform_output_spec"], [285, 1, 1, "id9", "transform_reward_spec"], [285, 1, 1, "id10", "unfreeze"]], "torchrl.envs.transforms.rb_transforms": [[287, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[287, 1, 1, "", "add_module"], [287, 1, 1, "", "apply"], [287, 1, 1, "", "bfloat16"], [287, 1, 1, "", "buffers"], [287, 1, 1, "", "children"], [287, 1, 1, "", "close"], [287, 2, 1, "", "collector"], [287, 1, 1, "", "compile"], [287, 2, 1, "", "container"], [287, 1, 1, "", "cpu"], [287, 1, 1, "", "cuda"], [287, 1, 1, "", "double"], [287, 1, 1, "", "eval"], [287, 1, 1, "", "extra_repr"], [287, 1, 1, "", "float"], [287, 1, 1, "", "forward"], [287, 1, 1, "", "get_buffer"], [287, 1, 1, "", "get_extra_state"], [287, 1, 1, "", "get_parameter"], [287, 1, 1, "", "get_submodule"], [287, 1, 1, "", "half"], [287, 1, 1, "", "init"], [287, 1, 1, "", "inv"], [287, 1, 1, "", "ipu"], [287, 1, 1, "", "load_state_dict"], [287, 1, 1, "", "modules"], [287, 1, 1, "", "mtia"], [287, 2, 1, "", "n_steps"], [287, 1, 1, "", "named_buffers"], [287, 1, 1, "", "named_children"], [287, 1, 1, "", "named_modules"], [287, 1, 1, "", "named_parameters"], [287, 1, 1, "", "parameters"], [287, 2, 1, "", "parent"], [287, 1, 1, "", "register_backward_hook"], [287, 1, 1, "", "register_buffer"], [287, 1, 1, "", "register_forward_hook"], [287, 1, 1, "", "register_forward_pre_hook"], [287, 1, 1, "", "register_full_backward_hook"], [287, 1, 1, "", "register_full_backward_pre_hook"], [287, 1, 1, "", "register_load_state_dict_post_hook"], [287, 1, 1, "", "register_load_state_dict_pre_hook"], [287, 1, 1, "", "register_module"], [287, 1, 1, "", "register_parameter"], [287, 1, 1, "", "register_state_dict_post_hook"], [287, 1, 1, "", "register_state_dict_pre_hook"], [287, 1, 1, "", "requires_grad_"], [287, 1, 1, "", "set_extra_state"], [287, 1, 1, "", "set_submodule"], [287, 1, 1, "", "share_memory"], [287, 1, 1, "", "state_dict"], [287, 1, 1, "", "to"], [287, 1, 1, "", "to_empty"], [287, 1, 1, "", "train"], [287, 1, 1, "", "transform_action_spec"], [287, 1, 1, "", "transform_done_spec"], [287, 1, 1, "", "transform_env_batch_size"], [287, 1, 1, "", "transform_env_device"], [287, 1, 1, "", "transform_input_spec"], [287, 1, 1, "", "transform_observation_spec"], [287, 1, 1, "", "transform_output_spec"], [287, 1, 1, "", "transform_reward_spec"], [287, 1, 1, "", "transform_state_spec"], [287, 1, 1, "", "type"], [287, 1, 1, "", "xpu"], [287, 1, 1, "", "zero_grad"]], "torchrl.implement_for": [[288, 1, 1, "", "get_class_that_defined_method"], [288, 1, 1, "", "import_module"], [288, 1, 1, "", "module_set"], [288, 1, 1, "", "reset"]], "torchrl.modules": [[289, 0, 1, "", "AdditiveGaussianModule"], [290, 0, 1, "", "BatchRenorm1d"], [291, 0, 1, "", "CEMPlanner"], [292, 0, 1, "", "ConsistentDropout"], [293, 0, 1, "", "ConsistentDropoutModule"], [294, 0, 1, "", "Conv3dNet"], [295, 0, 1, "", "ConvNet"], [296, 0, 1, "", "DTActor"], [297, 0, 1, "", "DdpgCnnActor"], [298, 0, 1, "", "DdpgCnnQNet"], [299, 0, 1, "", "DdpgMlpActor"], [300, 0, 1, "", "DdpgMlpQNet"], [301, 0, 1, "", "DecisionTransformer"], [302, 0, 1, "", "Delta"], [303, 0, 1, "", "DistributionalDQNnet"], [304, 0, 1, "", "DistributionalQValueHook"], [305, 0, 1, "", "DreamerActor"], [306, 0, 1, "", "DuelingCnnDQNet"], [307, 0, 1, "", "EGreedyModule"], [308, 0, 1, "", "GRU"], [309, 0, 1, "", "GRUCell"], [310, 0, 1, "", "GRUModule"], [311, 0, 1, "", "IndependentNormal"], [312, 0, 1, "", "LLMMaskedCategorical"], [313, 0, 1, "", "LSTM"], [314, 0, 1, "", "LSTMCell"], [315, 0, 1, "", "LSTMModule"], [316, 0, 1, "", "MLP"], [317, 0, 1, "", "MPCPlannerBase"], [318, 0, 1, "", "MPPIPlanner"], [319, 0, 1, "", "MaskedCategorical"], [320, 0, 1, "", "MaskedOneHotCategorical"], [321, 0, 1, "", "MultiAgentConvNet"], [322, 0, 1, "", "MultiAgentMLP"], [323, 0, 1, "", "MultiAgentNetBase"], [324, 0, 1, "", "NoisyLazyLinear"], [325, 0, 1, "", "NoisyLinear"], [326, 0, 1, "", "ObsDecoder"], [327, 0, 1, "", "ObsEncoder"], [328, 0, 1, "", "OneHotCategorical"], [329, 0, 1, "", "OneHotOrdinal"], [330, 0, 1, "", "OnlineDTActor"], [331, 0, 1, "", "Ordinal"], [332, 0, 1, "", "OrnsteinUhlenbeckProcessModule"], [333, 0, 1, "", "QMixer"], [334, 0, 1, "", "QValueHook"], [335, 0, 1, "", "RSSMPosterior"], [336, 0, 1, "", "RSSMPrior"], [337, 0, 1, "", "Squeeze2dLayer"], [338, 0, 1, "", "SqueezeLayer"], [339, 0, 1, "", "TanhDelta"], [340, 0, 1, "", "TanhNormal"], [341, 0, 1, "", "TruncatedNormal"], [342, 0, 1, "", "VDNMixer"], [343, 0, 1, "", "VmapModule"], [356, 0, 1, "", "recurrent_mode"], [357, 0, 1, "", "reset_noise"], [358, 0, 1, "", "set_recurrent_mode"]], "torchrl.modules.AdditiveGaussianModule": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "step"]], "torchrl.modules.BatchRenorm1d": [[290, 1, 1, "", "forward"]], "torchrl.modules.CEMPlanner": [[291, 1, 1, "", "planning"]], "torchrl.modules.ConsistentDropout": [[292, 1, 1, "", "forward"]], "torchrl.modules.ConsistentDropoutModule": [[293, 1, 1, "", "forward"], [293, 1, 1, "", "make_tensordict_primer"]], "torchrl.modules.Conv3dNet": [[294, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[295, 1, 1, "", "default_atari_dqn"], [295, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[296, 1, 1, "", "default_config"], [296, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[297, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[298, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[299, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[300, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[301, 0, 1, "", "DTConfig"], [301, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[302, 1, 1, "", "expand"], [302, 1, 1, "", "log_prob"], [302, 2, 1, "", "mean"], [302, 2, 1, "", "mode"], [302, 1, 1, "", "rsample"], [302, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[303, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[305, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[306, 1, 1, "", "forward"]], "torchrl.modules.EGreedyModule": [[307, 1, 1, "", "forward"], [307, 1, 1, "", "step"]], "torchrl.modules.GRU": [[308, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[309, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[310, 1, 1, "", "forward"], [310, 1, 1, "", "make_cudnn_based"], [310, 1, 1, "", "make_python_based"], [310, 1, 1, "id0", "make_tensordict_primer"], [310, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[311, 2, 1, "", "mode"]], "torchrl.modules.LLMMaskedCategorical": [[312, 1, 1, "", "clear_cache"], [312, 1, 1, "", "entropy"], [312, 1, 1, "", "log_prob"], [312, 2, 1, "", "logits"], [312, 2, 1, "", "mask"], [312, 2, 1, "", "masked_dist"], [312, 2, 1, "", "masked_logits"], [312, 2, 1, "", "mode"], [312, 2, 1, "", "position_level_masking"], [312, 2, 1, "", "probs"], [312, 1, 1, "", "rsample"], [312, 1, 1, "", "sample"]], "torchrl.modules.LSTM": [[313, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[314, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[315, 1, 1, "", "forward"], [315, 1, 1, "", "make_cudnn_based"], [315, 1, 1, "", "make_python_based"], [315, 1, 1, "id0", "make_tensordict_primer"], [315, 1, 1, "", "set_recurrent_mode"]], "torchrl.modules.MLP": [[316, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[317, 1, 1, "", "forward"], [317, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[318, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[319, 1, 1, "", "entropy"], [319, 1, 1, "", "log_prob"], [319, 2, 1, "", "padding_value"], [319, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[320, 1, 1, "", "log_prob"], [320, 2, 1, "", "mode"], [320, 1, 1, "", "rsample"], [320, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentNetBase": [[323, 1, 1, "", "forward"], [323, 1, 1, "", "from_stateful_net"], [323, 1, 1, "", "get_stateful_net"], [323, 1, 1, "", "reset_parameters"]], "torchrl.modules.NoisyLazyLinear": [[324, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[326, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[327, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[328, 1, 1, "", "entropy"], [328, 1, 1, "", "log_prob"], [328, 2, 1, "", "mode"], [328, 1, 1, "", "rsample"], [328, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[330, 1, 1, "", "default_config"], [330, 1, 1, "", "forward"]], "torchrl.modules.OrnsteinUhlenbeckProcessModule": [[332, 1, 1, "", "forward"], [332, 1, 1, "", "step"]], "torchrl.modules.QMixer": [[333, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[335, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[336, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[338, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[339, 2, 1, "", "mean"], [339, 2, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[340, 1, 1, "", "get_mode"], [340, 2, 1, "", "mean"], [340, 2, 1, "", "mode"], [340, 2, 1, "", "support"]], "torchrl.modules.TruncatedNormal": [[341, 1, 1, "", "log_prob"], [341, 2, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[342, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[343, 1, 1, "", "forward"]], "torchrl.modules.llm": [[344, 0, 1, "", "ChatHistory"], [345, 0, 1, "", "LLMOnDevice"], [346, 0, 1, "", "LLMWrapperBase"], [347, 0, 1, "", "LogProbs"], [348, 0, 1, "", "Masks"], [349, 0, 1, "", "Text"], [350, 0, 1, "", "Tokens"], [351, 0, 1, "", "TransformersWrapper"], [352, 0, 1, "", "make_vllm_worker"], [353, 0, 1, "", "stateless_init_process_group"], [354, 0, 1, "", "vLLMWorker"], [355, 0, 1, "", "vLLMWrapper"]], "torchrl.modules.llm.ChatHistory": [[344, 1, 1, "", "default_spec"], [344, 2, 1, "", "device"], [344, 1, 1, "", "dumps"], [344, 1, 1, "", "fields"], [344, 1, 1, "", "from_tensordict"], [344, 1, 1, "", "get"], [344, 1, 1, "", "load"], [344, 1, 1, "", "load_"], [344, 1, 1, "", "load_memmap"], [344, 1, 1, "", "load_state_dict"], [344, 1, 1, "", "memmap"], [344, 1, 1, "", "memmap_"], [344, 1, 1, "", "memmap_like"], [344, 1, 1, "", "memmap_refresh_"], [344, 1, 1, "", "save"], [344, 1, 1, "", "set"], [344, 1, 1, "", "state_dict"], [344, 1, 1, "", "to_tensordict"], [344, 1, 1, "", "unbind"]], "torchrl.modules.llm.LLMWrapperBase": [[346, 1, 1, "", "add_module"], [346, 1, 1, "", "apply"], [346, 1, 1, "", "bfloat16"], [346, 1, 1, "", "buffers"], [346, 1, 1, "", "children"], [346, 2, 1, "", "collector"], [346, 1, 1, "", "compile"], [346, 1, 1, "", "cpu"], [346, 1, 1, "", "cuda"], [346, 1, 1, "", "double"], [346, 1, 1, "", "eval"], [346, 1, 1, "", "extra_repr"], [346, 1, 1, "", "float"], [346, 1, 1, "", "forward"], [346, 1, 1, "", "get_buffer"], [346, 1, 1, "", "get_dist"], [346, 1, 1, "", "get_extra_state"], [346, 1, 1, "", "get_new_version"], [346, 1, 1, "", "get_parameter"], [346, 1, 1, "", "get_submodule"], [346, 1, 1, "", "half"], [346, 1, 1, "", "ipu"], [346, 1, 1, "", "is_tdmodule_compatible"], [346, 1, 1, "", "load_state_dict"], [346, 1, 1, "", "modules"], [346, 1, 1, "", "mtia"], [346, 1, 1, "", "named_buffers"], [346, 1, 1, "", "named_children"], [346, 1, 1, "", "named_modules"], [346, 1, 1, "", "named_parameters"], [346, 1, 1, "", "parameters"], [346, 1, 1, "", "register_backward_hook"], [346, 1, 1, "", "register_buffer"], [346, 1, 1, "", "register_collector"], [346, 1, 1, "", "register_forward_hook"], [346, 1, 1, "", "register_forward_pre_hook"], [346, 1, 1, "", "register_full_backward_hook"], [346, 1, 1, "", "register_full_backward_pre_hook"], [346, 1, 1, "", "register_load_state_dict_post_hook"], [346, 1, 1, "", "register_load_state_dict_pre_hook"], [346, 1, 1, "", "register_module"], [346, 1, 1, "", "register_parameter"], [346, 1, 1, "", "register_state_dict_post_hook"], [346, 1, 1, "", "register_state_dict_pre_hook"], [346, 1, 1, "", "requires_grad_"], [346, 1, 1, "", "reset_out_keys"], [346, 1, 1, "", "reset_parameters_recursive"], [346, 1, 1, "", "select_out_keys"], [346, 1, 1, "", "set_extra_state"], [346, 1, 1, "", "set_submodule"], [346, 1, 1, "", "share_memory"], [346, 1, 1, "", "state_dict"], [346, 1, 1, "", "to"], [346, 1, 1, "", "to_empty"], [346, 1, 1, "", "train"], [346, 1, 1, "", "type"], [346, 1, 1, "", "xpu"], [346, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.LogProbs": [[347, 1, 1, "", "default_spec"], [347, 2, 1, "", "device"], [347, 1, 1, "", "dumps"], [347, 1, 1, "", "fields"], [347, 1, 1, "", "from_tensordict"], [347, 1, 1, "", "get"], [347, 1, 1, "", "load"], [347, 1, 1, "", "load_"], [347, 1, 1, "", "load_memmap"], [347, 1, 1, "", "load_state_dict"], [347, 1, 1, "", "memmap"], [347, 1, 1, "", "memmap_"], [347, 1, 1, "", "memmap_like"], [347, 1, 1, "", "memmap_refresh_"], [347, 1, 1, "", "save"], [347, 1, 1, "", "set"], [347, 1, 1, "", "state_dict"], [347, 1, 1, "", "to_tensordict"], [347, 1, 1, "", "unbind"]], "torchrl.modules.llm.Masks": [[348, 1, 1, "", "default_spec"], [348, 2, 1, "", "device"], [348, 1, 1, "", "dumps"], [348, 1, 1, "", "fields"], [348, 1, 1, "", "from_tensordict"], [348, 1, 1, "", "get"], [348, 1, 1, "", "load"], [348, 1, 1, "", "load_"], [348, 1, 1, "", "load_memmap"], [348, 1, 1, "", "load_state_dict"], [348, 1, 1, "", "memmap"], [348, 1, 1, "", "memmap_"], [348, 1, 1, "", "memmap_like"], [348, 1, 1, "", "memmap_refresh_"], [348, 1, 1, "", "save"], [348, 1, 1, "", "set"], [348, 1, 1, "", "state_dict"], [348, 1, 1, "", "to_tensordict"], [348, 1, 1, "", "unbind"]], "torchrl.modules.llm.Text": [[349, 1, 1, "", "default_spec"], [349, 2, 1, "", "device"], [349, 1, 1, "", "dumps"], [349, 1, 1, "", "fields"], [349, 1, 1, "", "from_tensordict"], [349, 1, 1, "", "get"], [349, 1, 1, "", "load"], [349, 1, 1, "", "load_"], [349, 1, 1, "", "load_memmap"], [349, 1, 1, "", "load_state_dict"], [349, 1, 1, "", "memmap"], [349, 1, 1, "", "memmap_"], [349, 1, 1, "", "memmap_like"], [349, 1, 1, "", "memmap_refresh_"], [349, 1, 1, "", "save"], [349, 1, 1, "", "set"], [349, 1, 1, "", "state_dict"], [349, 1, 1, "", "to_tensordict"], [349, 1, 1, "", "unbind"]], "torchrl.modules.llm.Tokens": [[350, 1, 1, "", "default_spec"], [350, 2, 1, "", "device"], [350, 1, 1, "", "dumps"], [350, 1, 1, "", "fields"], [350, 1, 1, "", "from_tensordict"], [350, 1, 1, "", "get"], [350, 1, 1, "", "load"], [350, 1, 1, "", "load_"], [350, 1, 1, "", "load_memmap"], [350, 1, 1, "", "load_state_dict"], [350, 1, 1, "", "memmap"], [350, 1, 1, "", "memmap_"], [350, 1, 1, "", "memmap_like"], [350, 1, 1, "", "memmap_refresh_"], [350, 1, 1, "", "save"], [350, 1, 1, "", "set"], [350, 1, 1, "", "state_dict"], [350, 1, 1, "", "to_tensordict"], [350, 1, 1, "", "unbind"]], "torchrl.modules.llm.TransformersWrapper": [[351, 1, 1, "", "add_module"], [351, 1, 1, "", "apply"], [351, 1, 1, "", "bfloat16"], [351, 1, 1, "", "buffers"], [351, 1, 1, "", "children"], [351, 2, 1, "", "collector"], [351, 1, 1, "", "compile"], [351, 1, 1, "", "cpu"], [351, 1, 1, "", "cuda"], [351, 1, 1, "", "double"], [351, 1, 1, "", "eval"], [351, 1, 1, "", "extra_repr"], [351, 1, 1, "", "float"], [351, 1, 1, "", "forward"], [351, 1, 1, "", "get_buffer"], [351, 1, 1, "", "get_dist"], [351, 1, 1, "", "get_extra_state"], [351, 1, 1, "", "get_new_version"], [351, 1, 1, "", "get_parameter"], [351, 1, 1, "", "get_submodule"], [351, 1, 1, "", "half"], [351, 1, 1, "", "ipu"], [351, 1, 1, "", "is_tdmodule_compatible"], [351, 1, 1, "", "load_state_dict"], [351, 1, 1, "", "modules"], [351, 1, 1, "", "mtia"], [351, 1, 1, "", "named_buffers"], [351, 1, 1, "", "named_children"], [351, 1, 1, "", "named_modules"], [351, 1, 1, "", "named_parameters"], [351, 1, 1, "", "parameters"], [351, 1, 1, "", "register_backward_hook"], [351, 1, 1, "", "register_buffer"], [351, 1, 1, "", "register_collector"], [351, 1, 1, "", "register_forward_hook"], [351, 1, 1, "", "register_forward_pre_hook"], [351, 1, 1, "", "register_full_backward_hook"], [351, 1, 1, "", "register_full_backward_pre_hook"], [351, 1, 1, "", "register_load_state_dict_post_hook"], [351, 1, 1, "", "register_load_state_dict_pre_hook"], [351, 1, 1, "", "register_module"], [351, 1, 1, "", "register_parameter"], [351, 1, 1, "", "register_state_dict_post_hook"], [351, 1, 1, "", "register_state_dict_pre_hook"], [351, 1, 1, "", "requires_grad_"], [351, 1, 1, "", "reset_out_keys"], [351, 1, 1, "", "reset_parameters_recursive"], [351, 1, 1, "", "select_out_keys"], [351, 1, 1, "", "set_extra_state"], [351, 1, 1, "", "set_submodule"], [351, 1, 1, "", "share_memory"], [351, 1, 1, "", "state_dict"], [351, 1, 1, "", "to"], [351, 1, 1, "", "to_empty"], [351, 1, 1, "", "train"], [351, 1, 1, "", "type"], [351, 1, 1, "", "xpu"], [351, 1, 1, "", "zero_grad"]], "torchrl.modules.llm.vLLMWorker": [[354, 1, 1, "", "check_weights_changed"]], "torchrl.modules.llm.vLLMWrapper": [[355, 1, 1, "", "add_module"], [355, 1, 1, "", "apply"], [355, 1, 1, "", "bfloat16"], [355, 1, 1, "", "buffers"], [355, 1, 1, "", "children"], [355, 2, 1, "", "collector"], [355, 1, 1, "", "compile"], [355, 1, 1, "", "cpu"], [355, 1, 1, "", "cuda"], [355, 1, 1, "", "double"], [355, 1, 1, "", "eval"], [355, 1, 1, "", "extra_repr"], [355, 1, 1, "", "float"], [355, 1, 1, "", "forward"], [355, 1, 1, "", "get_buffer"], [355, 1, 1, "", "get_dist"], [355, 1, 1, "", "get_dist_with_prompt_mask"], [355, 1, 1, "", "get_extra_state"], [355, 1, 1, "", "get_new_version"], [355, 1, 1, "", "get_parameter"], [355, 1, 1, "", "get_submodule"], [355, 1, 1, "", "half"], [355, 1, 1, "", "ipu"], [355, 1, 1, "", "is_tdmodule_compatible"], [355, 1, 1, "", "load_state_dict"], [355, 1, 1, "", "modules"], [355, 1, 1, "", "mtia"], [355, 1, 1, "", "named_buffers"], [355, 1, 1, "", "named_children"], [355, 1, 1, "", "named_modules"], [355, 1, 1, "", "named_parameters"], [355, 1, 1, "", "parameters"], [355, 1, 1, "", "register_backward_hook"], [355, 1, 1, "", "register_buffer"], [355, 1, 1, "", "register_collector"], [355, 1, 1, "", "register_forward_hook"], [355, 1, 1, "", "register_forward_pre_hook"], [355, 1, 1, "", "register_full_backward_hook"], [355, 1, 1, "", "register_full_backward_pre_hook"], [355, 1, 1, "", "register_load_state_dict_post_hook"], [355, 1, 1, "", "register_load_state_dict_pre_hook"], [355, 1, 1, "", "register_module"], [355, 1, 1, "", "register_parameter"], [355, 1, 1, "", "register_state_dict_post_hook"], [355, 1, 1, "", "register_state_dict_pre_hook"], [355, 1, 1, "", "requires_grad_"], [355, 1, 1, "", "reset_out_keys"], [355, 1, 1, "", "reset_parameters_recursive"], [355, 1, 1, "", "select_out_keys"], [355, 1, 1, "", "set_extra_state"], [355, 1, 1, "", "set_submodule"], [355, 1, 1, "", "share_memory"], [355, 1, 1, "", "state_dict"], [355, 1, 1, "", "to"], [355, 1, 1, "", "to_empty"], [355, 1, 1, "", "train"], [355, 1, 1, "", "type"], [355, 1, 1, "", "xpu"], [355, 1, 1, "", "zero_grad"]], "torchrl.modules.tensordict_module": [[359, 0, 1, "", "Actor"], [360, 0, 1, "", "ActorCriticOperator"], [361, 0, 1, "", "ActorCriticWrapper"], [362, 0, 1, "", "ActorValueOperator"], [363, 0, 1, "", "DecisionTransformerInferenceWrapper"], [364, 0, 1, "", "DistributionalQValueActor"], [365, 0, 1, "", "DistributionalQValueModule"], [366, 0, 1, "", "LMHeadActorValueOperator"], [367, 0, 1, "", "MultiStepActorWrapper"], [368, 0, 1, "", "ProbabilisticActor"], [369, 0, 1, "", "QValueActor"], [370, 0, 1, "", "QValueModule"], [371, 0, 1, "", "SafeModule"], [372, 0, 1, "", "SafeProbabilisticModule"], [373, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [374, 0, 1, "", "SafeSequential"], [375, 0, 1, "", "TanhModule"], [376, 0, 1, "", "ValueOperator"], [377, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[360, 1, 1, "", "get_critic_operator"], [360, 1, 1, "", "get_policy_head"], [360, 1, 1, "", "get_value_head"], [360, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[361, 1, 1, "", "get_policy_head"], [361, 1, 1, "", "get_policy_operator"], [361, 1, 1, "", "get_value_head"], [361, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[362, 1, 1, "", "get_policy_head"], [362, 1, 1, "", "get_policy_operator"], [362, 1, 1, "", "get_value_head"], [362, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[363, 1, 1, "", "forward"], [363, 1, 1, "", "mask_context"], [363, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[365, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[367, 1, 1, "", "forward"], [367, 2, 1, "", "init_key"]], "torchrl.modules.tensordict_module.QValueModule": [[370, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[371, 1, 1, "", "random"], [371, 1, 1, "", "random_sample"], [371, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[372, 1, 1, "", "random"], [372, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[375, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[377, 1, 1, "", "get_reward_operator"], [377, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[378, 0, 1, "", "biased_softplus"], [379, 0, 1, "", "get_primers_from_module"], [380, 0, 1, "", "inv_softplus"], [381, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[378, 1, 1, "", "forward"]], "torchrl.objectives": [[382, 0, 1, "", "A2CLoss"], [383, 0, 1, "", "CQLLoss"], [384, 0, 1, "", "ClipPPOLoss"], [385, 0, 1, "", "CrossQLoss"], [386, 0, 1, "", "DDPGLoss"], [387, 0, 1, "", "DQNLoss"], [388, 0, 1, "", "DTLoss"], [389, 0, 1, "", "DiscreteCQLLoss"], [390, 0, 1, "", "DiscreteIQLLoss"], [391, 0, 1, "", "DiscreteSACLoss"], [392, 0, 1, "", "DistributionalDQNLoss"], [393, 0, 1, "", "DreamerActorLoss"], [394, 0, 1, "", "DreamerModelLoss"], [395, 0, 1, "", "DreamerValueLoss"], [396, 0, 1, "", "GAILLoss"], [397, 0, 1, "", "HardUpdate"], [398, 0, 1, "", "IQLLoss"], [399, 0, 1, "", "KLPENPPOLoss"], [400, 0, 1, "", "LossModule"], [401, 0, 1, "", "OnlineDTLoss"], [402, 0, 1, "", "PPOLoss"], [403, 0, 1, "", "REDQLoss"], [404, 0, 1, "", "ReinforceLoss"], [405, 0, 1, "", "SACLoss"], [406, 0, 1, "", "SoftUpdate"], [407, 0, 1, "", "TD3BCLoss"], [408, 0, 1, "", "TD3Loss"], [409, 0, 1, "", "ValueEstimators"], [410, 0, 1, "", "default_value_kwargs"], [411, 0, 1, "", "distance_loss"], [412, 0, 1, "", "group_optimizers"], [413, 0, 1, "", "hold_out_net"], [414, 0, 1, "", "hold_out_params"], [421, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[382, 4, 1, "", "default_keys"], [382, 1, 1, "", "forward"], [382, 2, 1, "", "functional"], [382, 1, 1, "", "loss_critic"], [382, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[383, 4, 1, "", "default_keys"], [383, 1, 1, "", "forward"], [383, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[384, 1, 1, "", "forward"]], "torchrl.objectives.CrossQLoss": [[385, 1, 1, "", "actor_loss"], [385, 1, 1, "", "alpha_loss"], [385, 4, 1, "", "default_keys"], [385, 1, 1, "", "forward"], [385, 1, 1, "", "load_state_dict"], [385, 1, 1, "", "make_value_estimator"], [385, 1, 1, "", "maybe_init_target_entropy"], [385, 1, 1, "", "qvalue_loss"], [385, 1, 1, "", "set_keys"], [385, 1, 1, "", "state_dict"], [385, 2, 1, "", "target_entropy_buffer"]], "torchrl.objectives.DDPGLoss": [[386, 4, 1, "", "default_keys"], [386, 1, 1, "", "forward"], [386, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[387, 4, 1, "", "default_keys"], [387, 1, 1, "", "forward"], [387, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[388, 4, 1, "", "default_keys"], [388, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[389, 4, 1, "", "default_keys"], [389, 1, 1, "", "forward"], [389, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[390, 4, 1, "", "default_keys"], [390, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[391, 1, 1, "", "actor_loss"], [391, 1, 1, "", "alpha_loss"], [391, 4, 1, "", "default_keys"], [391, 1, 1, "", "forward"], [391, 1, 1, "", "make_value_estimator"], [391, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.DistributionalDQNLoss": [[392, 4, 1, "", "default_keys"], [392, 1, 1, "", "forward"], [392, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[393, 4, 1, "", "default_keys"], [393, 1, 1, "", "forward"], [393, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[394, 4, 1, "", "default_keys"], [394, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[395, 4, 1, "", "default_keys"], [395, 1, 1, "", "forward"]], "torchrl.objectives.GAILLoss": [[396, 4, 1, "", "default_keys"], [396, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[398, 4, 1, "", "default_keys"], [398, 1, 1, "", "forward"], [398, 1, 1, "", "loss_value_diff"], [398, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[399, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[400, 1, 1, "", "convert_to_functional"], [400, 1, 1, "", "forward"], [400, 1, 1, "", "from_stateful_net"], [400, 2, 1, "", "functional"], [400, 1, 1, "", "get_stateful_net"], [400, 1, 1, "", "make_value_estimator"], [400, 1, 1, "", "named_parameters"], [400, 1, 1, "", "parameters"], [400, 1, 1, "", "reset_parameters_recursive"], [400, 1, 1, "", "set_keys"], [400, 2, 1, "", "value_estimator"], [400, 2, 1, "", "vmap_randomness"]], "torchrl.objectives.OnlineDTLoss": [[401, 4, 1, "", "default_keys"], [401, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[402, 4, 1, "", "default_keys"], [402, 1, 1, "", "forward"], [402, 2, 1, "", "functional"], [402, 1, 1, "", "loss_critic"], [402, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[403, 4, 1, "", "default_keys"], [403, 1, 1, "", "forward"], [403, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[404, 4, 1, "", "default_keys"], [404, 1, 1, "", "forward"], [404, 2, 1, "", "functional"], [404, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[405, 1, 1, "", "actor_loss"], [405, 1, 1, "", "alpha_loss"], [405, 4, 1, "", "default_keys"], [405, 1, 1, "", "forward"], [405, 1, 1, "", "load_state_dict"], [405, 1, 1, "", "make_value_estimator"], [405, 1, 1, "", "qvalue_loss"], [405, 1, 1, "", "state_dict"], [405, 1, 1, "", "value_loss"]], "torchrl.objectives.TD3BCLoss": [[407, 1, 1, "", "actor_loss"], [407, 4, 1, "", "default_keys"], [407, 1, 1, "", "forward"], [407, 1, 1, "", "make_value_estimator"], [407, 1, 1, "", "qvalue_loss"]], "torchrl.objectives.TD3Loss": [[408, 4, 1, "", "default_keys"], [408, 1, 1, "", "forward"], [408, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.llm": [[415, 0, 1, "", "GRPOLoss"], [416, 0, 1, "", "GRPOLossOutput"], [417, 0, 1, "", "MCAdvantage"], [418, 0, 1, "", "SFTLoss"], [419, 0, 1, "", "SFTLossOutput"]], "torchrl.objectives.llm.GRPOLoss": [[415, 1, 1, "", "add_module"], [415, 1, 1, "", "apply"], [415, 1, 1, "", "bfloat16"], [415, 1, 1, "", "buffers"], [415, 1, 1, "", "children"], [415, 1, 1, "", "compile"], [415, 1, 1, "", "convert_to_functional"], [415, 1, 1, "", "cpu"], [415, 1, 1, "", "cuda"], [415, 4, 1, "", "default_keys"], [415, 1, 1, "", "double"], [415, 1, 1, "", "eval"], [415, 1, 1, "", "extra_repr"], [415, 1, 1, "", "float"], [415, 1, 1, "", "forward"], [415, 1, 1, "", "from_stateful_net"], [415, 2, 1, "", "functional"], [415, 1, 1, "", "get_buffer"], [415, 1, 1, "", "get_extra_state"], [415, 1, 1, "", "get_parameter"], [415, 1, 1, "", "get_stateful_net"], [415, 1, 1, "", "get_submodule"], [415, 1, 1, "", "half"], [415, 1, 1, "", "ipu"], [415, 1, 1, "", "is_tdmodule_compatible"], [415, 1, 1, "", "load_state_dict"], [415, 1, 1, "", "loss_critic"], [415, 1, 1, "", "make_value_estimator"], [415, 1, 1, "", "modules"], [415, 1, 1, "", "mtia"], [415, 1, 1, "", "named_buffers"], [415, 1, 1, "", "named_children"], [415, 1, 1, "", "named_modules"], [415, 1, 1, "", "named_parameters"], [415, 1, 1, "", "parameters"], [415, 1, 1, "", "register_backward_hook"], [415, 1, 1, "", "register_buffer"], [415, 1, 1, "", "register_forward_hook"], [415, 1, 1, "", "register_forward_pre_hook"], [415, 1, 1, "", "register_full_backward_hook"], [415, 1, 1, "", "register_full_backward_pre_hook"], [415, 1, 1, "", "register_load_state_dict_post_hook"], [415, 1, 1, "", "register_load_state_dict_pre_hook"], [415, 1, 1, "", "register_module"], [415, 1, 1, "", "register_parameter"], [415, 1, 1, "", "register_state_dict_post_hook"], [415, 1, 1, "", "register_state_dict_pre_hook"], [415, 1, 1, "", "requires_grad_"], [415, 1, 1, "", "reset_out_keys"], [415, 1, 1, "", "reset_parameters_recursive"], [415, 1, 1, "", "select_out_keys"], [415, 1, 1, "", "set_extra_state"], [415, 1, 1, "", "set_keys"], [415, 1, 1, "", "set_submodule"], [415, 1, 1, "", "share_memory"], [415, 1, 1, "", "state_dict"], [415, 1, 1, "", "to"], [415, 1, 1, "", "to_empty"], [415, 1, 1, "", "train"], [415, 1, 1, "", "type"], [415, 2, 1, "", "value_estimator"], [415, 2, 1, "", "vmap_randomness"], [415, 1, 1, "", "xpu"], [415, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.GRPOLossOutput": [[416, 2, 1, "", "device"], [416, 1, 1, "", "dumps"], [416, 1, 1, "", "fields"], [416, 1, 1, "", "from_tensordict"], [416, 1, 1, "", "get"], [416, 1, 1, "", "load"], [416, 1, 1, "", "load_"], [416, 1, 1, "", "load_memmap"], [416, 1, 1, "", "load_state_dict"], [416, 1, 1, "", "memmap"], [416, 1, 1, "", "memmap_"], [416, 1, 1, "", "memmap_like"], [416, 1, 1, "", "memmap_refresh_"], [416, 1, 1, "", "save"], [416, 1, 1, "", "set"], [416, 1, 1, "", "state_dict"], [416, 1, 1, "", "to_tensordict"], [416, 1, 1, "", "unbind"]], "torchrl.objectives.llm.MCAdvantage": [[417, 1, 1, "", "add_module"], [417, 1, 1, "", "apply"], [417, 1, 1, "", "bfloat16"], [417, 1, 1, "", "buffers"], [417, 1, 1, "", "children"], [417, 1, 1, "", "close"], [417, 2, 1, "", "collector"], [417, 1, 1, "", "compile"], [417, 2, 1, "", "container"], [417, 1, 1, "", "cpu"], [417, 1, 1, "", "cuda"], [417, 1, 1, "", "double"], [417, 1, 1, "", "eval"], [417, 1, 1, "", "extra_repr"], [417, 1, 1, "", "float"], [417, 1, 1, "", "forward"], [417, 1, 1, "", "get_buffer"], [417, 1, 1, "", "get_extra_state"], [417, 1, 1, "", "get_parameter"], [417, 1, 1, "", "get_submodule"], [417, 1, 1, "", "half"], [417, 1, 1, "", "init"], [417, 1, 1, "", "inv"], [417, 1, 1, "", "ipu"], [417, 1, 1, "", "load_state_dict"], [417, 1, 1, "", "modules"], [417, 1, 1, "", "mtia"], [417, 1, 1, "", "named_buffers"], [417, 1, 1, "", "named_children"], [417, 1, 1, "", "named_modules"], [417, 1, 1, "", "named_parameters"], [417, 1, 1, "", "parameters"], [417, 2, 1, "", "parent"], [417, 1, 1, "", "register_backward_hook"], [417, 1, 1, "", "register_buffer"], [417, 1, 1, "", "register_forward_hook"], [417, 1, 1, "", "register_forward_pre_hook"], [417, 1, 1, "", "register_full_backward_hook"], [417, 1, 1, "", "register_full_backward_pre_hook"], [417, 1, 1, "", "register_load_state_dict_post_hook"], [417, 1, 1, "", "register_load_state_dict_pre_hook"], [417, 1, 1, "", "register_module"], [417, 1, 1, "", "register_parameter"], [417, 1, 1, "", "register_state_dict_post_hook"], [417, 1, 1, "", "register_state_dict_pre_hook"], [417, 1, 1, "", "requires_grad_"], [417, 1, 1, "", "set_extra_state"], [417, 1, 1, "", "set_submodule"], [417, 1, 1, "", "share_memory"], [417, 1, 1, "", "state_dict"], [417, 1, 1, "", "to"], [417, 1, 1, "", "to_empty"], [417, 1, 1, "", "train"], [417, 1, 1, "", "transform_action_spec"], [417, 1, 1, "", "transform_done_spec"], [417, 1, 1, "", "transform_env_batch_size"], [417, 1, 1, "", "transform_env_device"], [417, 1, 1, "", "transform_input_spec"], [417, 1, 1, "", "transform_observation_spec"], [417, 1, 1, "", "transform_output_spec"], [417, 1, 1, "", "transform_reward_spec"], [417, 1, 1, "", "transform_state_spec"], [417, 1, 1, "", "type"], [417, 1, 1, "", "xpu"], [417, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLoss": [[418, 1, 1, "", "add_module"], [418, 1, 1, "", "apply"], [418, 1, 1, "", "bfloat16"], [418, 1, 1, "", "buffers"], [418, 1, 1, "", "children"], [418, 1, 1, "", "compile"], [418, 1, 1, "", "convert_to_functional"], [418, 1, 1, "", "cpu"], [418, 1, 1, "", "cuda"], [418, 4, 1, "", "default_keys"], [418, 1, 1, "", "double"], [418, 1, 1, "", "eval"], [418, 1, 1, "", "extra_repr"], [418, 1, 1, "", "float"], [418, 1, 1, "", "forward"], [418, 1, 1, "", "from_stateful_net"], [418, 2, 1, "", "functional"], [418, 1, 1, "", "get_buffer"], [418, 1, 1, "", "get_extra_state"], [418, 1, 1, "", "get_parameter"], [418, 1, 1, "", "get_stateful_net"], [418, 1, 1, "", "get_submodule"], [418, 1, 1, "", "half"], [418, 1, 1, "", "ipu"], [418, 1, 1, "", "is_tdmodule_compatible"], [418, 1, 1, "", "load_state_dict"], [418, 1, 1, "", "make_value_estimator"], [418, 1, 1, "", "modules"], [418, 1, 1, "", "mtia"], [418, 1, 1, "", "named_buffers"], [418, 1, 1, "", "named_children"], [418, 1, 1, "", "named_modules"], [418, 1, 1, "", "named_parameters"], [418, 1, 1, "", "parameters"], [418, 1, 1, "", "register_backward_hook"], [418, 1, 1, "", "register_buffer"], [418, 1, 1, "", "register_forward_hook"], [418, 1, 1, "", "register_forward_pre_hook"], [418, 1, 1, "", "register_full_backward_hook"], [418, 1, 1, "", "register_full_backward_pre_hook"], [418, 1, 1, "", "register_load_state_dict_post_hook"], [418, 1, 1, "", "register_load_state_dict_pre_hook"], [418, 1, 1, "", "register_module"], [418, 1, 1, "", "register_parameter"], [418, 1, 1, "", "register_state_dict_post_hook"], [418, 1, 1, "", "register_state_dict_pre_hook"], [418, 1, 1, "", "requires_grad_"], [418, 1, 1, "", "reset_out_keys"], [418, 1, 1, "", "reset_parameters_recursive"], [418, 1, 1, "", "select_out_keys"], [418, 1, 1, "", "set_extra_state"], [418, 1, 1, "", "set_keys"], [418, 1, 1, "", "set_submodule"], [418, 1, 1, "", "share_memory"], [418, 1, 1, "", "state_dict"], [418, 1, 1, "", "to"], [418, 1, 1, "", "to_empty"], [418, 1, 1, "", "train"], [418, 1, 1, "", "type"], [418, 2, 1, "", "value_estimator"], [418, 2, 1, "", "vmap_randomness"], [418, 1, 1, "", "xpu"], [418, 1, 1, "", "zero_grad"]], "torchrl.objectives.llm.SFTLossOutput": [[419, 2, 1, "", "device"], [419, 1, 1, "", "dumps"], [419, 1, 1, "", "fields"], [419, 1, 1, "", "from_tensordict"], [419, 1, 1, "", "get"], [419, 1, 1, "", "load"], [419, 1, 1, "", "load_"], [419, 1, 1, "", "load_memmap"], [419, 1, 1, "", "load_state_dict"], [419, 1, 1, "", "memmap"], [419, 1, 1, "", "memmap_"], [419, 1, 1, "", "memmap_like"], [419, 1, 1, "", "memmap_refresh_"], [419, 1, 1, "", "save"], [419, 1, 1, "", "set"], [419, 1, 1, "", "state_dict"], [419, 1, 1, "", "to_tensordict"], [419, 1, 1, "", "unbind"]], "torchrl.objectives.multiagent": [[420, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[420, 4, 1, "", "default_keys"], [420, 1, 1, "", "forward"], [420, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[422, 0, 1, "", "GAE"], [423, 0, 1, "", "TD0Estimator"], [424, 0, 1, "", "TD1Estimator"], [425, 0, 1, "", "TDLambdaEstimator"], [426, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[422, 1, 1, "", "forward"], [422, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[423, 1, 1, "", "forward"], [423, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[424, 1, 1, "", "forward"], [424, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[425, 1, 1, "", "forward"], [425, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[426, 4, 1, "", "default_keys"], [426, 1, 1, "", "forward"], [426, 1, 1, "", "set_keys"], [426, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[427, 0, 1, "", "generalized_advantage_estimate"], [428, 0, 1, "", "reward2go"], [429, 0, 1, "", "td0_advantage_estimate"], [430, 0, 1, "", "td0_return_estimate"], [431, 0, 1, "", "td1_advantage_estimate"], [432, 0, 1, "", "td1_return_estimate"], [433, 0, 1, "", "td_lambda_advantage_estimate"], [434, 0, 1, "", "td_lambda_return_estimate"], [435, 0, 1, "", "vec_generalized_advantage_estimate"], [436, 0, 1, "", "vec_td1_advantage_estimate"], [437, 0, 1, "", "vec_td1_return_estimate"], [438, 0, 1, "", "vec_td_lambda_advantage_estimate"], [439, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[440, 3, 1, "", "PixelRenderTransform"], [441, 3, 1, "", "TensorDictRecorder"], [442, 3, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[443, 3, 1, "", "Logger"], [445, 3, 1, "", "generate_exp_name"], [446, 3, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[444, 3, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[447, 3, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[448, 3, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[449, 3, 1, "", "WandbLogger"]], "torchrl.trainers": [[451, 0, 1, "", "BatchSubSampler"], [452, 0, 1, "", "ClearCudaCache"], [453, 0, 1, "", "CountFramesLog"], [454, 0, 1, "", "LogScalar"], [455, 0, 1, "", "LogValidationReward"], [456, 0, 1, "", "OptimizerHook"], [457, 0, 1, "", "ReplayBufferTrainer"], [458, 0, 1, "", "RewardNormalizer"], [459, 0, 1, "", "SelectKeys"], [460, 0, 1, "", "Trainer"], [461, 0, 1, "", "TrainerHookBase"], [462, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[451, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[452, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[453, 1, 1, "", "register"]], "torchrl.trainers.LogScalar": [[454, 1, 1, "", "register"]], "torchrl.trainers.LogValidationReward": [[455, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[456, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[457, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[458, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[459, 1, 1, "", "register"]], "torchrl.trainers.Trainer": [[460, 1, 1, "", "load_from_file"]], "torchrl.trainers.TrainerHookBase": [[461, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[462, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[463, 3, 1, "", "correct_for_frame_skip"], [464, 3, 1, "", "get_stats_random_rollout"], [465, 3, 1, "", "make_collector_offpolicy"], [466, 3, 1, "", "make_collector_onpolicy"], [467, 3, 1, "", "make_dqn_loss"], [468, 3, 1, "", "make_replay_buffer"], [469, 3, 1, "", "make_target_updater"], [470, 3, 1, "", "make_trainer"], [471, 3, 1, "", "parallel_env_constructor"], [472, 3, 1, "", "sync_async_collector"], [473, 3, 1, "", "sync_sync_collector"], [474, 3, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 479, 480, 481, 482, 484, 485, 486, 488, 490, 496, 497, 499, 500, 501, 505, 506], "instal": [0, 6, 7, 496, 505], "get": [0, 489, 490, 491, 492, 493, 494], "start": [0, 489, 490, 491, 492, 493, 494, 496], "tutori": [0, 486, 499, 500], "basic": [0, 496, 503], "intermedi": [0, 8], "advanc": 0, "refer": [0, 476], "knowledg": [0, 477], "base": [0, 2, 7, 477, 478, 488], "indic": 0, "tabl": 0, "collector": [1, 478, 484, 485, 486, 487, 492, 494, 499, 500, 505], "packag": [1, 2, 3, 479, 480, 481, 482], "batch": [1, 3, 484, 501, 503], "size": [1, 3, 484, 503], "polici": [1, 2, 4, 478, 480, 484, 486, 487, 488, 490, 494, 498, 499, 500, 501], "copi": 1, "weight": 1, "synchron": 1, "distribut": [1, 479], "environ": [1, 3, 4, 6, 7, 478, 484, 485, 486, 487, 489, 494, 496, 497, 498, 499, 500, 501, 505, 506], "send": 1, "receiv": 1, "model": [1, 2, 4, 478, 479, 484, 485, 487, 488, 491, 502, 505], "weightupdat": 1, "extend": 1, "updat": [1, 484], "class": [1, 3, 478, 501, 505], "replai": [1, 2, 3, 484, 485, 486, 487, 492, 494, 499, 500, 503, 505], "buffer": [1, 2, 3, 484, 485, 486, 487, 492, 494, 499, 500, 503, 505], "interoper": 1, "run": [1, 488, 489, 506], "asynchron": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 478, 484, 485, 486, 492, 494, 499, 500, 505], "helper": [1, 3, 496], "function": [1, 4, 478, 480, 485, 486, 491, 499, 500, 505], "compos": [2, 231], "support": [2, 478], "type": 2, "choos": 2, "storag": [2, 124, 484, 492, 503], "sampl": [2, 503], "index": 2, "compress": 2, "memori": 2, "effici": 2, "share": 2, "across": 2, "process": 2, "store": [2, 485, 503], "trajectori": [2, 503], "checkpoint": [2, 481], "episod": [2, 4], "format": 2, "ted": [2, 489], "The": [2, 484], "rational": 2, "behind": 2, "structur": [2, 478, 497, 503], "A": [2, 485, 503], "note": 2, "singleton": [2, 4], "dimens": 2, "flatten": 2, "reduc": 2, "consumpt": 2, "dimension": [2, 4], "tensordict": [2, 479, 503, 505], "special": [2, 490, 505], "case": 2, "footnot": 2, "multi": [2, 3, 479, 480, 498, 499, 500], "agent": [2, 3, 4, 479, 480, 499, 500], "present": 2, "rnn": 2, "transform": [2, 3, 276, 478, 484, 486, 489, 497, 499, 500, 501, 503, 505, 506], "step": [2, 3, 484, 486, 489, 492, 496, 499, 500, 503, 506], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 83], "numer": 2, "subclass": [2, 3], "categor": [2, 39], "tree": [2, 85], "forest": 2, "tensordictmap": [2, 78], "mctsforest": [2, 51], "larg": 2, "languag": 2, "reinforc": [2, 480, 486, 499, 500], "learn": [2, 4, 479, 486, 499, 500], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 478, 479, 480, 481, 499], "env": [3, 501, 505, 506], "spec": [3, 501, 506], "lock": 3, "method": [3, 484], "partial": 3, "reset": [3, 501, 506], "vector": [3, 505], "async": [3, 505], "exampl": [3, 11, 478, 485, 497, 503], "custom": [3, 11, 478, 501, 503], "nativ": 3, "auto": 3, "dynam": [3, 4, 503], "forward": [3, 4, 484], "invers": [3, 478], "understand": 3, "kei": 3, "tensor": [3, 503], "expos": 3, "outsid": 3, "world": 3, "design": [3, 478, 494], "your": [3, 4, 6, 478, 484, 488, 494, 501], "own": [3, 494], "tip": 3, "us": [3, 4, 6, 9, 480, 487, 502, 503, 505], "clone": [3, 7], "mask": [3, 348, 478], "action": [3, 4, 480, 487, 501], "record": [3, 481, 484, 493], "video": [3, 11, 493], "domain": [3, 479], "specif": [3, 478, 479, 498], "librari": [3, 505], "thing": [4, 484, 501], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 489, 491, 497, 505], "gener": [4, 11, 479], "have": 4, "you": 4, "valid": [4, 497], "algorithm": [4, 479], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 484, 485, 491, 494], "return": [4, 480], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 505], "drastic": 4, "reward": [4, 478], "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": [4, 478], "l2": 4, "magnitud": 4, "task": [4, 478, 498], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 484, 485, 486], "standard": 4, "explor": [4, 479, 484, 485, 490, 497], "valu": [4, 479, 480, 484, 486, 487, 490], "loss": [4, 484, 485, 486, 487, 494, 499, 500], "earli": 4, "train": [4, 8, 480, 484, 486, 487, 488, 491, 494, 499, 500, 501], "roughli": 4, "uniformli": 4, "random": [4, 480, 499, 500], "intrins": 4, "decai": 4, "progress": 4, "remain": 4, "constant": [4, 485], "increas": 4, "an": [4, 486, 487, 489, 501], "can": 4, "low": 4, "also": 4, "offlin": 4, "observ": [4, 484], "space": 4, "effect": [4, 501], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7, 488], "gym": [5, 505, 506], "openai": 5, "version": [5, 7, 10, 478], "habitat": 6, "lab": 6, "set": [6, 11], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 484], "render": [7, 11, 494, 499, 500, 506], "all": 7, "new": 7, "bindindg": 7, "2": [7, 496, 497], "1": [7, 496, 497], "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 484, 497], "pytorch": [8, 9, 10, 488], "error": [8, 497], "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 501], "workaround": 10, "customis": 11, "tweak": 11, "principl": 11, "auto_unwrap_transformed_env": 12, "datacollectorbas": 13, "multiprocessedweightupdat": 14, "multisyncdatacollector": 15, "multiasyncdatacollector": 16, "rayweightupdat": 17, "syncdatacollector": 18, "vanillaweightupdat": 19, "weightupdaterbas": 20, "asyncdatacollector": 21, "distributeddatacollector": 22, "distributedsyncdatacollector": 23, "distributedweightupdat": 24, "rpcdatacollector": 25, "rpcweightupdat": 26, "raycollector": 27, "submitit_delayed_launch": 28, "llmcollector": 29, "rayllmcollector": 30, "vllmupdat": 31, "split_trajectori": 32, "adaptiveklcontrol": 33, "binari": [34, 488], "binarydiscretetensorspec": 35, "binarytodecim": 36, "bound": 37, "boundedtensorspec": 38, "composit": 40, "compositespec": 41, "constantklcontrol": 42, "densifyreward": 43, "discretetensorspec": 44, "flat2t": 45, "h5combin": 46, "h5split": 47, "hashtoint": 48, "lazystackedcompositespec": 49, "lazystackedtensorspec": 50, "multicategor": 52, "multidiscretetensorspec": 53, "multionehot": 54, "multionehotdiscretetensorspec": 55, "multistep": 56, "nested2t": 57, "nontensor": 58, "nontensorspec": 59, "onehot": 60, "onehotdiscretetensorspec": 61, "pairwisedataset": 62, "prioritizedreplaybuff": 63, "promptdata": 64, "prompttensordicttoken": 65, "querymodul": 66, "randomprojectionhash": 67, "rayreplaybuff": 68, "remotetensordictreplaybuff": 69, "replaybuff": 70, "rewarddata": 71, "rolloutfrommodel": 72, "siphash": 73, "stack": [74, 267], "stackedcomposit": 75, "ted2flat": 76, "ted2nest": 77, "tensordictprioritizedreplaybuff": 79, "tensordictreplaybuff": 80, "tensordicttoken": 81, "tensormap": 82, "tokenizeddatasetload": 84, "unbound": 86, "unboundedcontinu": 87, "unboundedcontinuoustensorspec": 88, "unboundeddiscret": 89, "unboundeddiscretetensorspec": 90, "check_no_exclusive_kei": 91, "consolidate_spec": 92, "contains_lazy_spec": 93, "create_infinite_iter": 94, "ataridqnexperiencereplai": 95, "basedatasetexperiencereplai": 96, "d4rlexperiencereplai": 97, "minariexperiencereplai": 98, "get_dataload": 99, "contentbas": 100, "histori": [101, 478, 497], "topkrewardselector": 102, "compressedliststorag": 103, "compressedliststoragecheckpoint": 104, "flatstoragecheckpoint": 105, "h5storagecheckpoint": 106, "immutabledatasetwrit": 107, "lazymemmapstorag": 108, "lazystackstorag": 109, "lazytensorstorag": 110, "liststorag": 111, "liststoragecheckpoint": 112, "nestedstoragecheckpoint": 113, "prioritizedsampl": 114, "prioritizedslicesampl": 115, "randomsampl": 116, "replaybufferensembl": 117, "roundrobinwrit": 118, "sampler": 119, "samplerensembl": 120, "samplerwithoutreplac": 121, "slicesampl": 122, "slicesamplerwithoutreplac": 123, "storagecheckpointerbas": 125, "storageensembl": 126, "storageensemblecheckpoint": 127, "tensordictmaxvaluewrit": 128, "tensordictroundrobinwrit": 129, "tensorstorag": 130, "tensorstoragecheckpoint": 131, "writer": 132, "writerensembl": 133, "asyncenvpool": 134, "braxenv": 135, "braxwrapp": 136, "chessenv": 137, "dmcontrolenv": 138, "dmcontrolwrapp": 139, "envbas": [140, 501], "envcreat": 141, "envmetadata": 142, "gymenv": 143, "gymlikeenv": 144, "gymwrapp": 145, "habitatenv": 146, "isaacgymenv": 147, "isaacgymwrapp": 148, "isaaclabwrapp": 149, "jumanjienv": 150, "jumanjiwrapp": 151, "llmhashingenv": [152, 194], "mogymenv": 153, "mogymwrapp": 154, "marlgroupmaptyp": 155, "meltingpotenv": 156, "meltingpotwrapp": 157, "modelbasedenvbas": 158, "multithreadedenv": 159, "multithreadedenvwrapp": 160, "openmlenv": 161, "openspielenv": 162, "openspielwrapp": 163, "parallelenv": 164, "pendulumenv": 165, "pettingzooenv": 166, "pettingzoowrapp": 167, "processorasyncenvpool": 168, "randompolici": 169, "robohiveenv": 170, "smacv2env": 171, "smacv2wrapp": 172, "serialenv": 173, "threadingasyncenvpool": 174, "tictactoeenv": 175, "unitymlagentsenv": 176, "unitymlagentswrapp": 177, "vmasenv": 178, "vmaswrapp": 179, "check_env_spec": 180, "check_marl_group": 181, "exploration_typ": 182, "get_available_librari": 183, "gym_backend": 184, "chatenv": [185, 478], "datasetchatenv": 186, "gsm8kenv": 187, "gsm8kpreparequest": 188, "gsm8krewardpars": 189, "ifevalenv": 190, "ifevalscoredata": 191, "ifevalscor": 192, "llmenv": 193, "mlgymwrapp": 195, "make_gsm8k_env": 196, "make_mlgym": 197, "addthinkingprompt": 198, "browsertransform": 199, "dataloadingprim": 200, "klcomput": 201, "klrewardtransform": [202, 247], "mcptooltransform": 203, "policyvers": 204, "pythoninterpret": 205, "retrievekl": 206, "retrievelogprob": 207, "templatetransform": 208, "token": [209, 274, 350, 478], "as_nested_tensor": 210, "as_padded_tensor": 211, "make_composite_from_td": 212, "dreamerdecod": 213, "dreamerenv": 214, "register_gym_spec_convers": 215, "set_exploration_typ": 216, "set_gym_backend": 217, "step_mdp": 218, "terminated_or_trunc": 219, "actiondiscret": 220, "actionmask": 221, "autoresetenv": 222, "autoresettransform": 223, "batchsizetransform": 224, "binarizereward": 225, "burnintransform": 226, "catfram": [227, 503], "cattensor": 228, "centercrop": 229, "cliptransform": 230, "conditionalpolicyswitch": 232, "conditionalskip": 233, "crop": 234, "dtypecasttransform": 235, "devicecasttransform": 236, "discreteactionproject": 237, "doubletofloat": 238, "endoflifetransform": 239, "excludetransform": 240, "finitetensordictcheck": 241, "flattenobserv": 242, "frameskiptransform": 243, "grayscal": 244, "hash": 245, "inittrack": 246, "linearisereward": 248, "multiact": 249, "noopresetenv": 250, "observationnorm": 251, "observationtransform": 252, "permutetransform": 253, "pinmemorytransform": 254, "r3mtransform": 255, "randomcroptensordict": 256, "removeemptyspec": 257, "renametransform": 258, "resiz": 259, "reward2gotransform": 260, "rewardclip": 261, "rewardsc": 262, "rewardsum": 263, "selecttransform": 264, "signtransform": 265, "squeezetransform": 266, "stepcount": 268, "targetreturn": 269, "tensordictprim": 270, "timemaxpool": 271, "timer": 272, "totensorimag": 273, "trajcount": 275, "transformedenv": 277, "unarytransform": 278, "unsqueezetransform": 279, "vc1transform": 280, "viprewardtransform": 281, "viptransform": 282, "vecgymenvtransform": 283, "vecnorm": [284, 506], "vecnormv2": 285, "gsdenois": 286, "multisteptransform": 287, "implement_for": 288, "additivegaussianmodul": 289, "batchrenorm1d": 290, "cemplann": 291, "consistentdropout": 292, "consistentdropoutmodul": 293, "conv3dnet": 294, "convnet": 295, "dtactor": 296, "ddpgcnnactor": 297, "ddpgcnnqnet": 298, "ddpgmlpactor": 299, "ddpgmlpqnet": 300, "decisiontransform": 301, "delta": 302, "distributionaldqnnet": 303, "distributionalqvaluehook": 304, "dreameractor": 305, "duelingcnndqnet": 306, "egreedymodul": 307, "gru": 308, "grucel": 309, "grumodul": 310, "independentnorm": 311, "llmmaskedcategor": 312, "lstm": [313, 487], "lstmcell": 314, "lstmmodul": 315, "mlp": [316, 487], "mpcplannerbas": 317, "mppiplann": 318, "maskedcategor": 319, "maskedonehotcategor": 320, "multiagentconvnet": 321, "multiagentmlp": 322, "multiagentnetbas": 323, "noisylazylinear": 324, "noisylinear": 325, "obsdecod": 326, "obsencod": 327, "onehotcategor": 328, "onehotordin": 329, "onlinedtactor": 330, "ordin": 331, "ornsteinuhlenbeckprocessmodul": 332, "qmixer": [333, 480], "qvaluehook": 334, "rssmposterior": 335, "rssmprior": 336, "squeeze2dlay": 337, "squeezelay": 338, "tanhdelta": 339, "tanhnorm": 340, "truncatednorm": 341, "vdnmixer": 342, "vmapmodul": 343, "chathistori": 344, "llmondevic": 345, "llmwrapperbas": 346, "logprob": 347, "text": [349, 497], "transformerswrapp": 351, "make_vllm_work": 352, "stateless_init_process_group": 353, "vllmworker": 354, "vllmwrapper": 355, "recurrent_mod": 356, "reset_nois": 357, "set_recurrent_mod": 358, "actor": [359, 479, 484, 490], "actorcriticoper": 360, "actorcriticwrapp": 361, "actorvalueoper": 362, "decisiontransformerinferencewrapp": 363, "distributionalqvalueactor": 364, "distributionalqvaluemodul": 365, "lmheadactorvalueoper": 366, "multistepactorwrapp": 367, "probabilisticactor": 368, "qvalueactor": [369, 479], "qvaluemodul": 370, "safemodul": [371, 479], "safeprobabilisticmodul": 372, "safeprobabilistictensordictsequenti": 373, "safesequenti": 374, "tanhmodul": 375, "valueoper": 376, "worldmodelwrapp": 377, "biased_softplu": 378, "get_primers_from_modul": 379, "inv_softplu": 380, "map": [381, 499], "a2closs": 382, "cqlloss": 383, "clipppoloss": 384, "crossqloss": 385, "ddpgloss": 386, "dqnloss": 387, "dtloss": 388, "discretecqlloss": 389, "discreteiqlloss": 390, "discretesacloss": 391, "distributionaldqnloss": 392, "dreameractorloss": 393, "dreamermodelloss": 394, "dreamervalueloss": 395, "gailloss": 396, "hardupd": 397, "iqlloss": 398, "klpenppoloss": 399, "lossmodul": [400, 484, 491], "onlinedtloss": 401, "ppoloss": 402, "redqloss": 403, "reinforceloss": 404, "sacloss": 405, "softupd": 406, "td3bcloss": 407, "td3loss": 408, "valueestim": 409, "default_value_kwarg": 410, "distance_loss": 411, "group_optim": 412, "hold_out_net": 413, "hold_out_param": 414, "grpoloss": 415, "grpolossoutput": 416, "mcadvantag": 417, "sftloss": 418, "sftlossoutput": 419, "qmixerloss": 420, "next_state_valu": 421, "gae": 422, "td0estim": 423, "td1estim": 424, "tdlambdaestim": 425, "valueestimatorbas": 426, "generalized_advantage_estim": 427, "reward2go": 428, "td0_advantage_estim": 429, "td0_return_estim": 430, "td1_advantage_estim": 431, "td1_return_estim": 432, "td_lambda_advantage_estim": 433, "td_lambda_return_estim": 434, "vec_generalized_advantage_estim": 435, "vec_td1_advantage_estim": 436, "vec_td1_return_estim": 437, "vec_td_lambda_advantage_estim": 438, "vec_td_lambda_return_estim": 439, "pixelrendertransform": 440, "tensordictrecord": 441, "videorecord": 442, "logger": [443, 481, 493, 494], "csvlogger": 444, "generate_exp_nam": 445, "get_logg": 446, "mlflowlogg": 447, "tensorboardlogg": 448, "wandblogg": 449, "set_auto_unwrap_transformed_env": 450, "batchsubsampl": 451, "clearcudacach": 452, "countframeslog": 453, "logscalar": 454, "logvalidationreward": 455, "optimizerhook": 456, "replaybuffertrain": 457, "rewardnorm": 458, "selectkei": 459, "trainer": [460, 481, 485], "trainerhookbas": 461, "updateweight": 462, "correct_for_frame_skip": 463, "get_stats_random_rollout": 464, "make_collector_offpolici": 465, "make_collector_onpolici": 466, "make_dqn_loss": 467, "make_replay_buff": 468, "make_target_updat": 469, "make_train": 470, "parallel_env_constructor": 471, "sync_async_collector": 472, "sync_sync_collector": 473, "transformed_env_constructor": 474, "readm": [475, 495], "tuto": [475, 495], "api": [476, 478], "contribut": [477, 505], "content": 477, "llm": [478, 496, 497], "interfac": 478, "famili": 478, "usag": 478, "ad": 478, "templat": 478, "llama": 478, "test": [478, 501], "assist": 478, "equival": 478, "pars": 478, "wrapper": [478, 479, 490, 497], "prompt": 478, "respons": 478, "pad": 478, "modul": [478, 479, 484, 487, 488, 490, 494, 505], "track": 478, "core": 478, "architectur": 478, "integr": [478, 497, 503], "object": [478, 480, 484, 491, 505], "grpo": 478, "sft": 478, "tensordictmodul": [479, 488, 490, 505], "probabilist": [479, 490], "q": [479, 485, 487, 490], "oper": 479, "join": 479, "hook": [479, 481, 485], "regular": 479, "planner": 479, "torch": 480, "vmap": [480, 505], "dqn": [480, 485, 487], "ddpg": [480, 484, 499], "sac": 480, "redq": 480, "crossq": 480, "iql": 480, "cql": 480, "gail": 480, "dt": 480, "td3": 480, "bc": 480, "ppo": [480, 486, 500], "head": 480, "a2c": 480, "dreamer": 480, "builder": 481, "_util": 482, "comput": [483, 485, 501, 504], "time": [483, 484, 504], "code": [484, 501], "overview": [484, 487], "setup": [484, 487, 496, 497], "__init__": 484, "estim": 484, "put": 484, "togeth": [484, 501], "call": 484, "parallel": [484, 498, 506], "execut": [484, 496, 498, 501], "stat": 484, "build": [484, 485, 494, 496, 503], "evalu": 484, "construct": 484, "target": [484, 485, 491], "network": [484, 485, 486, 487, 490, 499, 500], "experi": [484, 501], "result": [484, 486, 496, 499, 500], "conclus": [484, 485, 486, 487, 488, 496, 497, 499, 500, 501, 503], "next": [484, 486, 489, 492, 499, 500, 503], "deep": 485, "collect": [485, 486, 492], "paramet": [485, 486, 491], "hyperparamet": [485, 486, 499, 500], "regist": 485, "possibl": 485, "improv": 485, "defin": [486, 499, 500], "loop": [486, 487, 488, 494, 499, 500, 501], "recurr": [487, 488], "convolut": 487, "select": 487, "further": [487, 491], "read": 487, "export": 488, "introduct": [488, 505], "fast": 488, "recap": 488, "simpl": [488, 501], "stochast": 488, "aotinductor": 488, "free": 488, "c": 488, "onnx": 488, "rollout": [488, 489, 498, 499, 500, 501, 506], "creat": 489, "s": [490, 491], "output": 491, "consider": 491, "log": [493, 497], "first": 494, "tool": 496, "enabl": 496, "configur": 496, "3": [496, 497], "interact": 496, "4": [496, 497], "perform": 496, "search": 496, "5": [496, 497], "extract": 496, "vllm": 497, "input": 497, "mode": 497, "probabl": 497, "onli": 497, "tensorclass": [497, 503], "6": 497, "handl": 497, "7": 497, "divers": 498, "competit": 499, "group": 499, "critic": [499, 500], "pendulum": 501, "write": 501, "_step": 501, "simul": 501, "_reset": 501, "metadata": 501, "_spec": 501, "shape": 501, "seed": [501, 506], "wrap": 501, "our": 501, "pretrain": 502, "vanilla": 503, "other": 503, "pytre": 503, "iter": 503, "over": 503, "fix": 503, "priorit": 503, "save": 503, "raw": 503, "imag": 503, "more": 503, "complex": 503, "config": 505, "sequenc": 505, "program": 505, "ensembl": 505, "meta": 505, "sync": 505, "multiprocess": 505, "frame_skip": 506, "deepmind": 506, "control": 506, "devic": 506, "close": 506, "access": 506, "attribut": 506, "kwarg": 506}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})